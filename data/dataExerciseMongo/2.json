[{
  "_id": {
    "$oid": "634dba74e9b9821851ef9340"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "allizwel-all-izz-well",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ALL IZZ WELL",
  "content": "<div id=\"problem-body\">\n<p><strong>B&agrave;i to&aacute;n</strong></p>\n<p>Mr.ESP thường lẩm nhẩm \"ALL IZZ WELL\" bất cứ khi n&agrave;o anh ấy gặp bất kỳ rắc rối n&agrave;o. V&igrave; vậy, bạn b&egrave; của anh ấy v&agrave; những người xung quanh anh ấy đ&atilde; từng cười nhạo anh ấy. Nhưng Mr.ESP rất tin tưởng v&agrave;o niềm tin của m&igrave;nh. Anh ấy tin rằng cụm từ \"ALL IZZ WELL\" sẽ l&agrave;m cho mọi thứ tốt đẹp. B&acirc;y giờ nhiệm vụ của bạn l&agrave; bỏ qua c&acirc;u chuyện ở tr&ecirc;n v&agrave; t&igrave;m xem liệu c&oacute; một con đường n&agrave;o trong ma trận đ&atilde; cho tạo ra c&acirc;u &ldquo;ALL IZZ WELL&rdquo;.</p>\n<p>C&oacute; một đường dẫn từ bất kỳ &ocirc; n&agrave;o đến tất cả c&aacute;c &ocirc; l&acirc;n cận của n&oacute;. Một &ocirc; gần kề c&oacute; thể c&oacute; chung một cạnh hoặc một g&oacute;c.</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n t đại diện cho số lượng c&aacute;c trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp thử nghiệm bao gồm hai số nguy&ecirc;n R v&agrave; C đại diện cho số h&agrave;ng v&agrave; số cột trong ma trận.</li>\n</ul>\n<p><strong>Đầu ra</strong></p>\n<p>Đối với mỗi trường hợp kiểm tra, h&atilde;y in ra \"YES\" nếu c&oacute; một đường dẫn tạo th&agrave;nh c&acirc;u &ldquo;ALLIZZWELL&rdquo;. Nếu kh&ocirc;ng, in ra \"NO\". C&oacute; một d&ograve;ng mới sau mỗi trường hợp thử nghiệm trong đầu v&agrave;o.</p>\n<p><strong>Lưu &yacute;: H&atilde;y quan t&acirc;m đến trường hợp thử nghiệm thứ 4.</strong></p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$t \\leq 1000$</li>\n<li>$R \\leq 100$</li>\n<li>$C \\leq 100$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code> 5\n3 6\nAWE.QX\nLLL.EO\nIZZWLL\n\n1 10\nALLIZZWELL\n\n2 9\nA.L.Z.E..\n.L.I.W.L.\n\n3 3\nAEL\nLWZ\nLIZ\n\n1 10\nLLEWZZILLA</code></pre>\n<strong>Đầu ra</strong></div>\n<div>\n<pre class=\"language-markup\"><code>YES\nYES\nNO\nNO\nYES</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb6b7af3-2ddc-4db8-bf69-ed6be93a3e57",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ALLIZWEL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9341"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "alien-aliens-at-the-train",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Người ngoài hành tinh đi tàu",
  "content": "<p class=\"text-center\">Người ngo&agrave;i h&agrave;nh tinh đ&atilde; đến tr&aacute;i đất v&agrave; mọi thứ đều h&ograve;a hợp, hai chủng tộc c&oacute; thể chung sống với nhau. Tuy nhi&ecirc;n, một người ngo&agrave;i h&agrave;nh tinh kh&ocirc;ng muốn nh&igrave;n thấy con người tr&ecirc;n đường đến trường đại học, người ngo&agrave;i h&agrave;nh tinh phải sử dụng chuyến t&agrave;u như mọi người vẫn l&agrave;m. Nhưng c&ocirc; ấy c&oacute; thể chọn bất kỳ ga xe lửa n&agrave;o m&agrave; c&ocirc; ấy kh&ocirc;ng nh&igrave;n thấy nhiều hơn B con người, tuy nhi&ecirc;n, người ngo&agrave;i h&agrave;nh tinh muốn đi c&agrave;ng xa c&agrave;ng tốt với chuyến t&agrave;u. H&atilde;y gi&uacute;p người ngo&agrave;i h&agrave;nh tinh n&agrave;y.</p>\n<div id=\"problem-body\">\n<p><strong>Đầu v&agrave;o</strong></p>\n<p>Bạn sẽ nhận được một số nguy&ecirc;n T biểu thị số trường hợp thử nghiệm, sau đ&oacute;, d&ograve;ng tiếp theo sẽ chứa hai số nguy&ecirc;n At v&agrave; Bt, trong đ&oacute; At v&agrave; Bt l&agrave; số ga tr&ecirc;n t&agrave;u (1 &lt;= At &lt;= 100.000) v&agrave; số người m&agrave; người ngo&agrave;i h&agrave;nh tinh muốn nh&igrave;n thấy l&agrave; tối đa (1 &lt;= Bt &lt;= 10.000.000), sau đ&oacute;, một d&ograve;ng chứa c&aacute;c số nguy&ecirc;n At c&aacute;ch nhau một khoảng trắng sẽ biểu thị số người m&agrave; người ngo&agrave;i h&agrave;nh tinh c&oacute; thể t&igrave;m thấy trong trạm thứ At-i. (Mỗi trạm sẽ c&oacute; tối đa 100 người).</p>\n<p><strong>Đầu ra</strong></p>\n<p>Đầu ra của bạn phải bao gồm T cặp số biểu thị số người m&agrave; người ngo&agrave;i h&agrave;nh tinh sẽ nh&igrave;n thấy v&agrave; số trạm m&agrave; người ngo&agrave;i h&agrave;nh tinh sẽ đi qua tương ứng.</p>\n<p>V&iacute; dụ</p>\n<p><strong>Đầu v&agrave;o:</strong></p>\n<pre class=\"language-markup\"><code>1 5 100 20 15 30 80 100</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>65 3</code></pre>\n<p><strong>Ch&uacute; &yacute;:</strong></p>\n<p>Người ngo&agrave;i h&agrave;nh tinh đi t&agrave;u ở ga 1 (c&oacute; 20 người) v&agrave; đến ga 2, sau đ&oacute; l&agrave; ga 3, l&uacute;c n&agrave;y, c&ocirc; ấy đ&atilde; nh&igrave;n thấy 65 người, nếu c&ocirc; ấy quyết định đi đến ga 4 c&ocirc; ấy sẽ thấy 145 người&hellip; Sau đ&oacute; c&ocirc; ấy ra khỏi nh&agrave; ga.</p>\n<p>Tuy nhi&ecirc;n, người ngo&agrave;i h&agrave;nh tinh c&oacute; thể bắt đầu ở trạm 2 với 15 người, sau đ&oacute; tiếp tục đến trạm 4, khi đ&oacute;, c&ocirc; ấy sẽ thấy 125 người, nhưng, v&igrave; c&ocirc; ấy muốn nh&igrave;n thấy những người tối thiểu c&oacute; thể c&oacute; v&agrave; số người n&agrave;y vượt qu&aacute; những g&igrave; c&ocirc; ấy muốn xem, c&ocirc; quyết định chọn con đường từ ga 1 đến ga thứ 3.</p>\n<p>Người ngo&agrave;i h&agrave;nh tinh sẽ lu&ocirc;n di chuyển về ph&iacute;a trước (h&atilde;y nhớ, c&ocirc; ấy c&oacute; thể chọn bất kỳ trạm n&agrave;o l&agrave;m điểm bắt đầu), KH&Ocirc;NG BAO GIỜ l&ugrave;i lại ph&iacute;a sau, v&agrave; bạn n&ecirc;n chọn con đường tốt nhất thỏa m&atilde;n th&ocirc;ng số kỹ thuật đầu ra.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3c43f923-44ce-4684-a896-54be5250f94f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ALIEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9342"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "aggrcow-aggressive-cows",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Những chú bò tức giận",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Người n&ocirc;ng d&acirc;n John đ&atilde; x&acirc;y dựng nhiều chuồng mới, với N (2 &lt;= N &lt;= 100.000) chuồng. C&aacute;c chuồng nằm dọc theo một đường thẳng tại c&aacute;c vị tr&iacute; x1, ..., xN (0 &lt;= xi &lt;= 1.000.000.000).</p>\n<div id=\"problem-body\">\n<p>C con b&ograve; (2 &lt;= C &lt;= N) của anh ấy kh&ocirc;ng th&iacute;ch c&aacute;ch bố tr&iacute; chuồng n&agrave;y v&agrave; trở n&ecirc;n hung dữ với nhau sau khi được đưa v&agrave;o chuồng. Để tr&aacute;nh việc c&aacute;c con b&ograve; l&agrave;m tổn thương lẫn nhau, FJ muốn chỉ định c&aacute;c con b&ograve; v&agrave;o chuồng, sao cho khoảng c&aacute;ch tối thiểu giữa hai con c&agrave;ng lớn c&agrave;ng tốt. Vậy khoảng c&aacute;ch tối thiểu lớn nhất l&agrave; bao nhi&ecirc;u?</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li><em>t</em> &ndash; số lượng c&aacute;c trường hợp thử nghiệm</li>\n<li>D&ograve;ng 1: 2 gi&aacute; trị số nguy&ecirc;n N v&agrave; C c&aacute;ch nhau một khoảng trắng</li>\n<li>D&ograve;ng 2..N+1: D&ograve;ng i+1 chứa vị tr&iacute; số nguy&ecirc;n, xi</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm xuất ra một số nguy&ecirc;n, l&agrave; khoảng c&aacute;ch tối thiểu lớn nhất.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n5 3\n1\n2\n8\n4\n9</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n<p><strong>Chi tiết về đầu ra</strong></p>\n<p>FJ c&oacute; thể xếp 3 con b&ograve; của m&igrave;nh v&agrave;o chuồng ở c&aacute;c vị tr&iacute; 1, 4 v&agrave; 8, tạo ra khoảng c&aacute;ch tối thiểu l&agrave; 3 con.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ecface50-2e63-4e0b-b883-6e1174d01f92",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AGGRCOW_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9343"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "afs-trinh-tu-nhan-to-tuyet-voi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Dãy số tuyệt vời",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bhelu l&agrave; bạn c&ugrave;ng lớp của Bablu. Anh cảm thấy ghen tị với người bạn c&ugrave;ng lớp của m&igrave;nh v&agrave; quyết định thực hiện tạo tr&igrave;nh tự của ri&ecirc;ng m&igrave;nh. V&igrave; anh ấy kh&ocirc;ng c&oacute; nhiều tr&iacute; tưởng tượng, anh ấy đ&atilde; đưa ra định nghĩa gần như tương tự, chỉ tạo ra sự kh&aacute;c biệt trong f(n):</p>\n<div id=\"problem-body\">\n<ul>\n<li>a[0]=a[1]=0.</li>\n<li>Với n&gt;1, a[n]=a[n-1]+f(n), trong đ&oacute; f (n) l&agrave; tổng c&aacute;c số nguy&ecirc;n dương trong tập S sau đ&acirc;y.</li>\n<li>S = {x |&nbsp;x &lt;n v&agrave; n% x = 0}.</li>\n</ul>\n<p>B&acirc;y giờ, Bablu y&ecirc;u cầu anh ta tạo một m&atilde; để t&igrave;m f(n) v&igrave; anh ta đ&atilde; c&oacute; m&atilde; của d&atilde;y số của m&igrave;nh. V&igrave; vậy, Bhelu y&ecirc;u cầu sự gi&uacute;p đỡ của bạn v&igrave; anh ấy kh&ocirc;ng biết Lập tr&igrave;nh. Nhiệm vụ của bạn rất đơn giản, chỉ cần t&igrave;m một [n] cho một gi&aacute; trị cho trước của $n&lt;10^{6}.</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>Đoạn m&atilde; của bạn sẽ được kiểm tra cho nhiều trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o chứa T (&lt;= 100), số lượng trường hợp Kiểm tra.</li>\n<li>T d&ograve;ng tiếp theo chứa một số nguy&ecirc;n dương N. (1 &lt;N &lt;10 ^ 6).</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>D&ograve;ng đơn chứa [n] tức l&agrave; số thứ n của d&atilde;y cho mỗi trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o:</strong></p>\n<pre class=\"language-markup\"><code>3 3 4 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>2 5 6</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<pre class=\"language-markup\"><code>f(2) = 1{1}\nf(3) = 1{1}\nf(4) = 3{1, 2}\nf(5) = 1{1}</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/09fc8c39-5df2-4686-bac0-ab6eac7b48bf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AFS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9344"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ae1b-bang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sửa bàn",
  "content": "<p>Byteman l&agrave;m nghề thợ mộc. Anh ấy vừa nhận được một đơn đặt h&agrave;ng b&agrave;n gỗ th&ocirc;ng của s. Mặc d&ugrave; anh ta c&oacute; rất nhiều v&aacute;n gỗ th&ocirc;ng trong xưởng của m&igrave;nh, nhưng anh ta vừa hết ốc v&iacute;t. Do đ&oacute; anh ta cần đi bộ đến nh&agrave; kho v&agrave; mang về một số hộp c&oacute; đinh v&iacute;t. Số hộp tối thiểu m&agrave; người đ&oacute; cần mang l&agrave; bao nhi&ecirc;u để c&oacute; đủ đinh v&iacute;t l&agrave;m c&aacute;c b&agrave;n?</p>\n<div id=\"problem-body\">\n<h2>Đầu v&agrave;o</h2>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chuẩn chứa ba số nguy&ecirc;n n, k v&agrave; s (1 &le; n, k, s &le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch đơn. Ch&uacute;ng biểu thị số lượng hộp c&oacute; v&iacute;t trong kho của Byteman, số lượng v&iacute;t cần thiết để tạo ra một c&aacute;i b&agrave;n v&agrave; số lượng c&aacute;i b&agrave;n m&agrave; Byteman phải l&agrave;m, tương ứng. D&ograve;ng thứ hai chứa n (kh&ocirc;ng nhất thiết phải kh&aacute;c) số nguy&ecirc;n a<sub>i</sub> (1 &le; a<sub>i</sub>&nbsp;&le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch đơn, sao cho a&nbsp;<sub>i</sub> l&agrave; số ốc v&iacute;t trong hộp thứ&nbsp;i&nbsp;trong kho.</p>\n<h2>Đầu ra</h2>\n<p>D&ograve;ng đầu ti&ecirc;n v&agrave; duy nhất của đầu ra ti&ecirc;u chuẩn phải chứa một số nguy&ecirc;n - số hộp tối thiểu c&oacute; v&iacute;t m&agrave; Byteman cần mang từ kho của m&igrave;nh để l&agrave;m bảng.&nbsp;Bạn c&oacute; thể cho rằng Byteman c&oacute; đủ ốc v&iacute;t trong kho để l&agrave;m tất cả c&aacute;c bảng.</p>\n<h2>V&iacute; dụ</h2>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5 6 3\n3 9 5 7 3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n<p><strong>Giải th&iacute;ch v&iacute; dụ.&nbsp;</strong>Để l&agrave;m ba chiếc b&agrave;n, mỗi chiếc cần s&aacute;u con ốc v&iacute;t, Byteman phải mang ba chiếc hộp c&oacute; ốc v&iacute;t từ nh&agrave; kho.&nbsp;Đ&acirc;y c&oacute; thể l&agrave; những c&aacute;i c&oacute; chứa 3, 7 v&agrave; 9 v&iacute;t hoặc những c&aacute;i c&oacute; 9, 5 v&agrave; 7 v&iacute;t.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6f75411d-67b4-4557-94a0-4d3942aced61",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AE1B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9345"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "adfruits-advanced-fruits",
  "tags": [],
  "level": "EXPERT",
  "title": "Sáng tạo tên cho các loại trái cây",
  "content": "<p>C&ocirc;ng ty \"Tr&aacute;i c&acirc;y thế kỷ 21\" đ&atilde; chuy&ecirc;n tạo ra c&aacute;c loại tr&aacute;i c&acirc;y mới bằng c&aacute;ch chuyển gen từ tr&aacute;i c&acirc;y n&agrave;y v&agrave;o bộ gen của tr&aacute;i c&acirc;y kh&aacute;c. Hầu hết c&aacute;c phương ph&aacute;p n&agrave;y kh&ocirc;ng hiệu quả, nhưng đ&ocirc;i khi, trong một số trường hợp hiếm hoi, một loại tr&aacute;i c&acirc;y mới xuất hiện c&oacute; vị giống như hỗn hợp giữa cả hai loại tr&aacute;i c&acirc;y.</p>\n<div id=\"problem-body\">\n<p>Một chủ đề thảo luận lớn trong c&ocirc;ng ty l&agrave; \"C&aacute;c c&acirc;y s&aacute;ng tạo mới n&ecirc;n được gọi như thế n&agrave;o?\" Tất nhi&ecirc;n, một hỗn hợp giữa t&aacute;o v&agrave; l&ecirc; c&oacute; thể được gọi l&agrave; apple-pear, nhưng điều n&agrave;y nghe c&oacute; vẻ kh&ocirc;ng th&uacute; vị cho lắm. Cuối c&ugrave;ng, &ocirc;ng chủ quyết định sử dụng chuỗi ngắn nhất chứa cả t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y ban đầu l&agrave;m chuỗi con l&agrave;m t&ecirc;n mới. V&iacute; dụ: \"applear\" chứa \"apple\" v&agrave; \"pear\" (APPLEar v&agrave; apPlEAR) v&agrave; kh&ocirc;ng c&oacute; chuỗi n&agrave;o ngắn hơn c&oacute; c&ugrave;ng thuộc t&iacute;nh. V&iacute; dụ, sự kết hợp giữa cranberry v&agrave; boysenberry sẽ được gọi l&agrave; \"boysecranberry\" or a \"craboysenberry\".</p>\n<p>C&ocirc;ng việc của bạn l&agrave; viết một chương tr&igrave;nh t&iacute;nh to&aacute;n một c&aacute;i t&ecirc;n ngắn nhất cho tổ hợp của hai loại quả đ&atilde; cho. Thuật to&aacute;n của bạn phải hiệu quả, nếu kh&ocirc;ng, n&oacute; kh&ocirc;ng chắc sẽ thực thi trong thời gian quy định đối với t&ecirc;n của c&aacute;c quả d&agrave;i.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Mỗi d&ograve;ng của tệp đầu v&agrave;o chứa hai chuỗi k&yacute; tự biểu thị t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y được kết hợp. Tất cả c&aacute;c t&ecirc;n c&oacute; độ d&agrave;i tối đa l&agrave; 100 v&agrave; chỉ bao gồm c&aacute;c k&yacute; tự chữ c&aacute;i. Đầu v&agrave;o được kết th&uacute;c ở cuối tệp.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra t&ecirc;n ngắn nhất của quả kết quả tr&ecirc;n một d&ograve;ng. Nếu c&oacute; thể c&oacute; nhiều hơn một t&ecirc;n ngắn nhất, bất kỳ t&ecirc;n n&agrave;o cũng được chấp nhận.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>apple peach\nananas banana\npear peach</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>appleach\nbananas\npearch</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/42734f37-4ce9-4dfe-b178-344bc377e9f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADFRUITS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9346"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "benefact-nguoi-co-loi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Người có lợi",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một chương kh&aacute;c của bi&ecirc;n ni&ecirc;n sử th&agrave;nh phố của một thị trấn lớn kh&oacute; tin nổi tiếng (nếu bạn kh&ocirc;ng biết thị trấn n&agrave;y, bạn c&oacute; thể muốn giải quyết vấn đề CSTREET trước) kể cho ch&uacute;ng ta c&acirc;u chuyện sau:</p>\n<div id=\"problem-body\">\n<p>Ng&agrave;y xửa ng&agrave;y xưa, c&aacute;c c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được đ&atilde; quyết định bầu một thiếu t&aacute;.&nbsp;V&agrave;o thời điểm đ&oacute; đ&acirc;y l&agrave; một &yacute; tưởng rất mới v&agrave; c&aacute;c chiến dịch bầu cử ho&agrave;n to&agrave;n kh&ocirc;ng được biết đến.&nbsp;Nhưng tất nhi&ecirc;n một số c&ocirc;ng d&acirc;n muốn trở th&agrave;nh thiếu t&aacute; v&agrave; họ kh&ocirc;ng mất nhiều thời gian để ph&aacute;t hiện ra rằng những điều tốt đẹp hứa hẹn sẽ kh&ocirc;ng bao giờ trở th&agrave;nh hiện thực c&oacute; xu hướng hữu &iacute;ch trong t&igrave;nh huống như vậy.&nbsp;Một ứng cử vi&ecirc;n được bầu l&agrave;m thiếu t&aacute; l&agrave; Ivo đ&ocirc;i khi được gọi l&agrave; &acirc;n nh&acirc;n v&igrave; những m&oacute;n qu&agrave; gi&aacute; trị của &ocirc;ng cho những c&ocirc;ng d&acirc;n th&agrave;nh phố lớn kh&ocirc;ng thể tin được.</p>\n<p>Một ng&agrave;y trước ng&agrave;y bầu cử, Ivo, nh&agrave; hảo t&acirc;m đ&atilde; thực hiện một lời hứa với c&ocirc;ng d&acirc;n của thị trấn.&nbsp;Trong trường hợp chiến thắng trong cuộc bầu cử, anh ta sẽ đảm bảo rằng tr&ecirc;n một trong những con đường l&aacute;t đ&aacute;, đ&egrave;n đường của thị trấn sẽ được dựng l&ecirc;n v&agrave; anh ta sẽ trả số tiền đ&oacute; bằng tiền của m&igrave;nh.&nbsp;Tiết kiệm như những c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được, họ bầu anh ta v&agrave; một ng&agrave;y sau cuộc bầu cử, họ tr&igrave;nh b&agrave;y cho anh ta quyết định đường n&agrave;o n&ecirc;n c&oacute; đ&egrave;n đường.&nbsp;Tất nhi&ecirc;n họ kh&ocirc;ng chỉ chọn con phố d&agrave;i nhất trong số tất cả c&aacute;c con phố m&agrave; c&ograve;n đổi t&ecirc;n một số con phố để một con phố rất d&agrave;i trong thị trấn tồn tại.</p>\n<p>Bạn c&oacute; thể t&igrave;m thấy con phố n&agrave;y đ&atilde; c&oacute; bao l&acirc;u?&nbsp;Cụ thể hơn, t&igrave;nh h&igrave;nh như sau.&nbsp;Bạn được giới thiệu một danh s&aacute;ch tất cả c&aacute;c con đường l&aacute;t đ&aacute; trong thị trấn lớn kh&ocirc;ng thể tin được.&nbsp;Như bạn c&oacute; thể nhớ từ vấn đề CSTREET trong thị trấn, c&aacute;c đường phố được l&aacute;t theo c&aacute;ch m&agrave; giữa hai điểm quan t&acirc;m trong thị trấn tồn tại đ&uacute;ng một đường kết nối được l&aacute;t.&nbsp;Nhiệm vụ của bạn l&agrave; t&igrave;m khoảng c&aacute;ch xa nhất tồn tại giữa hai địa điểm tham quan bất kỳ trong th&agrave;nh phố.</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa số lượng testcase t.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi testcase chứa số địa điểm (2 &lt;= n &lt;= 50000) trong thị trấn.&nbsp;Mỗi đường phố được cho tại một d&ograve;ng bởi hai địa điểm (1 &lt;= a, b &lt;= n) v&agrave; chiều d&agrave;i của phố (0 &lt;= l &lt;20000).</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi testcase, h&atilde;y xuất một d&ograve;ng chứa chiều d&agrave;i tối đa của con phố d&agrave;i nhất trong th&agrave;nh phố.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 6 1 2 3 2 3 4 2 6 2 6 4 6 6 5 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>12</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9a2a12ee-cbe1-4986-ac45-6c97a3846160",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BENEFACT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9347"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "addrev-them-so-dao-nguoc",
  "tags": [],
  "level": "EXPERT",
  "title": "Thêm số đảo ngược",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&aacute;c diễn vi&ecirc;n h&agrave;i cổ của Malidinesia th&iacute;ch phim h&agrave;i hơn bi kịch. Tiếc thay, hầu hết c&aacute;c vở tuồng cổ đều l&agrave; vở bi kịch. Do đ&oacute;, cố vấn kịch t&iacute;nh của ACM đ&atilde; quyết định chuyển một số bi kịch th&agrave;nh phim h&agrave;i. R&otilde; r&agrave;ng, c&ocirc;ng việc n&agrave;y l&agrave; rất kh&oacute; v&igrave; &yacute; thức cơ bản của vở kịch phải được giữ nguy&ecirc;n vẹn, mặc d&ugrave; tất cả mọi thứ đều thay đổi theo hướng đối lập của ch&uacute;ng. V&iacute; dụ c&aacute;c con số: nếu bất kỳ con số n&agrave;o xuất hiện trong bi kịch, n&oacute; phải được chuyển sang dạng đảo ngược của n&oacute; trước khi được chấp nhận v&agrave;o vở h&agrave;i kịch.</p>\n<div id=\"problem-body\">\n<p>Số đảo ngược l&agrave; số được viết bằng chữ số Ả Rập nhưng thứ tự c&aacute;c chữ số bị đảo ngược.&nbsp;Chữ số đầu ti&ecirc;n trở th&agrave;nh chữ số cuối c&ugrave;ng v&agrave; ngược lại.&nbsp;V&iacute; dụ, nếu anh h&ugrave;ng ch&iacute;nh c&oacute; 1245 quả d&acirc;u t&acirc;y trong thảm kịch, anh ta c&oacute; 5421 quả d&acirc;u t&acirc;y trong số đ&oacute; b&acirc;y giờ.&nbsp;Lưu &yacute; rằng tất cả c&aacute;c số 0 ở đầu đều bị bỏ qua.&nbsp;Điều đ&oacute; c&oacute; nghĩa l&agrave; nếu số kết th&uacute;c bằng số 0, số 0 sẽ bị mất bằng c&aacute;ch đảo ngược (v&iacute; dụ: 1200 cho 21).&nbsp;Cũng lưu &yacute; rằng số đảo ngược kh&ocirc;ng bao giờ c&oacute; bất kỳ số kh&ocirc;ng ở cuối.</p>\n<p>ACM cần t&iacute;nh to&aacute;n với c&aacute;c số đảo ngược.&nbsp;Nhiệm vụ của bạn l&agrave; cộng hai số đảo ngược v&agrave; xuất ra tổng đảo ngược của ch&uacute;ng.&nbsp;Tất nhi&ecirc;n, kết quả kh&ocirc;ng phải l&agrave; duy nhất v&igrave; bất kỳ số cụ thể n&agrave;o cũng l&agrave; dạng đảo ngược của một số số (v&iacute; dụ: 21 c&oacute; thể l&agrave; 12, 120 hoặc 1200 trước khi đảo ngược).&nbsp;V&igrave; vậy, ch&uacute;ng ta phải giả định rằng kh&ocirc;ng c&oacute; số 0 n&agrave;o bị mất khi đảo ngược (v&iacute; dụ: giả sử rằng số ban đầu l&agrave; 12).</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o bao gồm&nbsp;<var>N</var>&nbsp;trường hợp (bằng khoảng 10000).&nbsp;D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chỉ chứa dương t&iacute;nh số nguy&ecirc;n&nbsp;<var>N</var>&nbsp;.&nbsp;Sau đ&oacute;, theo d&otilde;i c&aacute;c trường hợp.&nbsp;Mỗi trường hợp bao gồm đ&uacute;ng một d&ograve;ng với hai số nguy&ecirc;n dương c&aacute;ch nhau bởi dấu c&aacute;ch.&nbsp;Đ&acirc;y l&agrave; những số đảo ngược m&agrave; bạn phải th&ecirc;m v&agrave;o.</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi trường hợp, in ch&iacute;nh x&aacute;c một d&ograve;ng chỉ chứa một số nguy&ecirc;n - tổng đảo ngược của hai số đảo ngược.&nbsp;Bỏ qua bất kỳ số kh&ocirc;ng ở đầu trong kết quả đầu ra.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n24 1\n4358 754\n305 794</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>34 1998 1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5e2690fb-e57f-4b51-b8e1-1fef02bd414b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADDREV_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9348"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "acpc10a-whats-next",
  "tags": [],
  "level": "EXPERT",
  "title": "Cấp số cộng hay cấp số nhân?",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Theo Wikipedia, một cấp số cộng (AP) l&agrave; một d&atilde;y số sao cho hiệu của hai phần tử li&ecirc;n tiếp bất kỳ của d&atilde;y l&agrave; một hằng số. V&iacute; dụ: d&atilde;y 3, 5, 7, 9, 11, 13 ,. . . l&agrave; một cấp số cộng với hiệu chung l&agrave; 2. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số cộng c&oacute; hiệu chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<p>On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer.</p>\n<p>Mặt kh&aacute;c, cấp số nh&acirc;n (GP) l&agrave; một d&atilde;y số, trong đ&oacute;, mỗi số hạng đứng sau số hạng đầu ti&ecirc;n được t&igrave;m bằng c&aacute;ch nh&acirc;n số hạng trước với một số kh&aacute;c 0 cố định được gọi l&agrave; tỷ số chung. V&iacute; dụ, d&atilde;y số 2, 6, 18, 54 ,. . . l&agrave; một cấp số nh&acirc;n với tỉ số chung l&agrave; 3. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số nh&acirc;n c&oacute; tỉ số chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<div id=\"problem-body\">\n<p>Với ba phần tử li&ecirc;n tiếp của một d&atilde;y, bạn cần x&aacute;c định kiểu loại của d&atilde;y số v&agrave; phần tử kế tiếp tiếp theo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một hoặc nhiều trường hợp thử nghiệm. Mỗi trường hợp được chỉ định tr&ecirc;n một d&ograve;ng c&oacute; ba số nguy&ecirc;n (&minus;10, 000 &lt;a1, a2, a3 &lt;10, 000) trong đ&oacute; a1, a2 v&agrave; a3 l&agrave; kh&aacute;c nhau. Trường hợp cuối c&ugrave;ng được theo sau bởi một d&ograve;ng c&oacute; ba số 0.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất với dạng như sau: XX v</p>\n<p>Trong đ&oacute; XX l&agrave; cấp số cộng hoặc cấp số nh&acirc;n t&ugrave;y thuộc v&agrave;o d&atilde;y số đ&atilde; cho. v l&agrave; phần tử tiếp theo của d&atilde;y đ&atilde; cho. Tất cả c&aacute;c trường hợp đầu v&agrave;o được đảm bảo l&agrave; một cấp số cộng hoặc cấp số nh&acirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 7 10\n2 6 18\n0 0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>AP 13\nGP 54</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cf8a887e-7008-4448-9844-8fad900a6aac",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACPC10A_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9349"
  },
  "memoryLimit": 2,
  "source": 2,
  "timeLimit": 2,
  "scores": 50,
  "slug": "acode-alphacode",
  "tags": [],
  "level": "EXPERT",
  "title": "Bảng mã Alpha",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Alice v&agrave; Bob cần gửi tin nhắn b&iacute; mật cho nhau v&agrave; đang thảo luận về c&aacute;ch m&atilde; h&oacute;a tin nhắn của họ:</p>\n<div id=\"problem-body\">\n<blockquote>\n<p>Alice: &ldquo;H&atilde;y chỉ sử dụng một m&atilde; rất đơn giản: Ch&uacute;ng ta sẽ g&aacute;n cho&lsquo; A &rsquo; l&agrave; m&atilde; 1,&lsquo; B &rsquo;sẽ l&agrave; 2 v&agrave; cứ tiếp tục cho đến&lsquo; Z &rsquo;được g&aacute;n l&agrave; 26.&rdquo;</p>\n<p>Bob: &ldquo;Đ&oacute; l&agrave; một đoạn m&atilde; sai lầm, Alice. Giả sử t&ocirc;i gửi cho bạn từ &lsquo;BEAN&rsquo; được m&atilde; h&oacute;a l&agrave; 25114. Bạn c&oacute; thể giải m&atilde; từ đ&oacute; theo nhiều c&aacute;ch kh&aacute;c nhau! &rdquo;</p>\n<p>Alice: &ldquo;Chắc chắn l&agrave; bạn c&oacute; thể, nhưng bạn sẽ nhận được những từ n&agrave;o? Ngo&agrave;i &lsquo;BEAN&rsquo;, bạn sẽ nhận được &lsquo;BEAAD&rsquo;, &lsquo;YAAD&rsquo;, &lsquo;YAN&rsquo;, &lsquo;YKD&rsquo; v&agrave; &lsquo;BEKD&rsquo;. T&ocirc;i nghĩ rằng bạn sẽ c&oacute; thể t&igrave;m ra lời giải m&atilde; ch&iacute;nh x&aacute;c. V&agrave; tại sao bạn lại gửi cho t&ocirc;i từ &lsquo;BEAN&rsquo;? &rdquo;</p>\n<p>Bob: &ldquo;Được rồi, c&oacute; thể đ&oacute; l&agrave; một v&iacute; dụ sai, nhưng t&ocirc;i c&aacute; với bạn rằng nếu bạn c&oacute; một chuỗi d&agrave;i 5000 th&igrave; sẽ c&oacute; rất nhiều c&aacute;ch giải m&atilde; kh&aacute;c nhau v&agrave; với nhiều giải m&atilde; đ&oacute;, bạn sẽ t&igrave;m thấy &iacute;t nhất hai giải m&atilde; kh&aacute;c nhau c&oacute; &yacute; nghĩa&rdquo;.</p>\n<p>Alice: \"C&oacute; bao nhi&ecirc;u c&aacute;ch giải m&atilde; kh&aacute;c nhau?\"</p>\n<p>Bob: \"Jillions!\"</p>\n</blockquote>\n<p>V&igrave; một số l&yacute; do, Alice vẫn kh&ocirc;ng cảm thấy thuyết phục bởi lập luận của Bob, v&igrave; vậy c&ocirc; ấy y&ecirc;u cầu một chương tr&igrave;nh sẽ x&aacute;c định số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho một chuỗi k&yacute; tự nhất định bằng c&aacute;ch sử dụng m&atilde; của c&ocirc; ấy.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm nhiều tập hợp đầu v&agrave;o. Mỗi tập hợp sẽ bao gồm một d&ograve;ng tối đa l&agrave; 5000 chữ số đại diện cho một c&aacute;ch m&atilde; h&oacute;a hợp lệ (v&iacute; dụ: kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o bắt đầu bằng số 0). Sẽ kh&ocirc;ng c&oacute; khoảng trắng giữa c&aacute;c chữ số. D&ograve;ng đầu v&agrave;o l&agrave; '0' sẽ kết th&uacute;c đầu v&agrave;o v&agrave; kh&ocirc;ng được xử l&yacute;.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập hợp đầu v&agrave;o, in ra số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho chuỗi k&yacute; tự đầu v&agrave;o. Tất cả c&aacute;c c&acirc;u trả lời sẽ nằm trong phạm vi của một số nguy&ecirc;n c&oacute; dấu 64 bit.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>25114\n1111111111\n3333333333\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n89\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7cdd566d-2bce-4767-abd3-7646fc194e66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACODE _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 20,
  "slug": "abcpath-abc-path",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Đường dẫn ABC",
  "content": "<p>Bạn sẽ được cung cấp một ma trận 2 chiều gồm c&aacute;c chữ c&aacute;i. T&igrave;m độ d&agrave;i của con đường d&agrave;i nhất của c&aacute;c chữ c&aacute;i li&ecirc;n tiếp, bắt đầu từ 'A'. C&aacute;c đường dẫn c&oacute; thể chuyển từ một chữ c&aacute;i trong ma trận sang bất kỳ chữ c&aacute;i n&agrave;o liền kề (theo chiều ngang, chiều dọc hoặc đường ch&eacute;o). V&iacute; dụ: Trong ma trận sau, c&oacute; một số đường dẫn từ 'A' đến 'D', nhưng kh&ocirc;ng c&oacute; đường n&agrave;o từ 'A' đến 'E':</p>\n<div id=\"problem-body\">\n<div><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"ABC\" src=\"https://www.spoj.com/content/simes:ABCPATH-1.png\" alt=\"ABC\" width=\"162\" height=\"108\" /></div>\n<p>Một đường thỏa m&atilde;n b&agrave;i to&aacute;n tr&ecirc;n l&agrave;:</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"ABC path\" src=\"https://www.spoj.com/content/simes:ABCPATH-2.png\" alt=\"path\" width=\"163\" height=\"108\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Each test case will start with a line contains two integers H, W the height and width of the grid respectively 1 &lt;= H, W &lt;= 50. Then H lines follow each of W uppercase letters only. Input terminates with H = 0 and W = 0.</p>\n<p>Mỗi trường hợp thử nghiệm sẽ bắt đầu bằng một d&ograve;ng chứa hai gi&aacute; trị số nguy&ecirc;n H, W, chiều cao v&agrave; chiều rộng của ma trận theo thứ tự lần lượt. Tiếp theo l&agrave; H d&ograve;ng nối theo sau mỗi W chữ c&aacute;i viết hoa. Đầu v&agrave;o kết th&uacute;c với H = 0 v&agrave; W = 0.</p>\n<h3><strong> Điều kiện</strong></h3>\n<ul>\n<li>$1 \\leq H$</li>\n<li>$W \\leq 50$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Chỉ in ra 1 d&ograve;ng đối với mỗi trường hợp thử nghiệm</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 3\nABE\nCFG\nBDH\nABC\n0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a421efb1-0784-4681-8b30-eae6117b6058",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABCPATHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 50,
  "slug": "1ae00-rectangles",
  "tags": [],
  "level": "EXPERT",
  "title": "Tạo ra các hình chữ nhật",
  "content": "<p id=\"đề-b&agrave;i\"><strong>B&agrave;i to&aacute;n</strong></p>\n<p>Th&aacute;i c&oacute; N h&igrave;nh vu&ocirc;ng với k&iacute;ch thước 1. Hỏi c&oacute; bao nhi&ecirc;u dạng h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể&nbsp;tạo ra từ những h&igrave;nh vu&ocirc;ng n&agrave;y?</p>\n<p>Biết rằng, 2 h&igrave;nh chữ nhật được xem l&agrave; kh&aacute;c nhau nếu ch&uacute;ng kh&ocirc;ng thể quay hay dịch chuyển để trở th&agrave;nh h&igrave;nh c&ograve;n lại. Trong qu&aacute; tr&igrave;nh x&acirc;y dựng l&ecirc;n h&igrave;nh chữ nhật, Th&aacute;i kh&ocirc;ng thể l&agrave;m thay đổi h&igrave;nh&nbsp;dạng của c&aacute;c h&igrave;nh vu&ocirc;ng v&agrave; cũng kh&ocirc;ng thể đặt ch&uacute;ng l&ecirc;n tr&ecirc;n những h&igrave;nh c&ograve;n lại.</p>\n<p id=\"đầu-v&agrave;o\"><strong>Định dạng đầu v&agrave;o</strong></p>\n<ul>\n<li>Gồm chỉ một d&ograve;ng chứa một số nguy&ecirc;n N, với $1 \\leq N \\leq 10000$.</li>\n</ul>\n<p id=\"đầu-ra\"><strong>Định dạng đầu ra</strong></p>\n<ul>\n<li>In ra chỉ một d&ograve;ng chứa một số nguy&ecirc;n l&agrave; những h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể tạo ra.</li>\n</ul>\n<p id=\"v&iacute;-dụ\"><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Với N = 6 h&igrave;nh vu&ocirc;ng, ta c&oacute; thể tạo ra h&igrave;nh chữ nhật bằng c&aacute;ch lần lượt x&eacute;t c&aacute;c h&igrave;nh chữ nhật với chiều cao bằng 1 hoặc 2 như h&igrave;nh dưới đ&acirc;y.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://thuattoan.phamvanlam.com/static/b0e61ff7e847af9628e9918575efd81a/ff7a3/spoj-com-thuat-toan-bai-1AE00-Rectangles-thuattoan-phamvanlam-com.png\" alt=\"spoj-com-thuat-toan-bai-1ae00-rectangles-thuattoan-phamvanlam-com\" /></p>\n<p>Do đ&oacute;, kết quả l&agrave; 8 h&igrave;nh chữ nhật.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d292bd31-dae8-4d5d-85e2-7edc7d092c7f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "1AE00_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934c"
  },
  "memoryLimit": 2,
  "source": 2,
  "timeLimit": 2,
  "scores": 50,
  "slug": "aba12c-mua-tao",
  "tags": [],
  "level": "EXPERT",
  "title": "Mua táo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">B&agrave;i to&aacute;n mua t&aacute;o</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<div id=\"problem-body\">\n<p>Harish đ&atilde; đến một si&ecirc;u thị để mua đ&uacute;ng 'k' kg t&aacute;o cho 'n' người bạn của m&igrave;nh.&nbsp;Si&ecirc;u thị thực sự kỳ lạ.&nbsp;Gi&aacute; của c&aacute;c mặt h&agrave;ng rất kh&aacute;c nhau.&nbsp;Anh v&agrave;o mục T&aacute;o v&agrave; hỏi về gi&aacute; cả.&nbsp;Người b&aacute;n h&agrave;ng đưa cho anh một tấm thẻ ghi gi&aacute; t&aacute;o kh&ocirc;ng t&iacute;nh theo kg.&nbsp;T&aacute;o được đ&oacute;ng th&agrave;nh từng b&igrave;a, mỗi b&igrave;a chứa 'x' kg t&aacute;o, x&gt; 0 v&agrave; 'x' l&agrave; một số nguy&ecirc;n.&nbsp;Một g&oacute;i 'x' kg sẽ được định gi&aacute; bằng rupee 'y'.&nbsp;V&igrave; vậy, tấm bảng chứa một bảng c&oacute; mục nhập 'y' biểu thị gi&aacute; của một g&oacute;i 'x' kg.&nbsp;Nếu 'y' l&agrave; -1 c&oacute; nghĩa l&agrave; g&oacute;i tương ứng kh&ocirc;ng c&oacute; sẵn.&nbsp;B&acirc;y giờ v&igrave; t&aacute;o chỉ c&oacute; sẵn trong c&aacute;c g&oacute;i, anh ấy quyết định mua &iacute;t nhất 'n' g&oacute;i cho 'n' bạn của m&igrave;nh, tức l&agrave; anh ấy sẽ kh&ocirc;ng mua nhiều hơn n g&oacute;i t&aacute;o.</p>\n<p>Harish rất th&iacute;ch bạn b&egrave; của m&igrave;nh v&agrave; v&igrave; vậy anh ấy kh&ocirc;ng muốn l&agrave;m bạn b&egrave; thất vọng.&nbsp;V&igrave; vậy, b&acirc;y giờ, anh ấy sẽ cho bạn biết anh ấy c&oacute; bao nhi&ecirc;u người bạn v&agrave; bạn phải cho anh ấy biết số tiền tối thiểu anh ấy phải chi cho bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o sẽ chứa số lượng trường hợp thử nghiệm, C.</li>\n<li>Mỗi trường hợp thử nghiệm sẽ chứa hai d&ograve;ng.</li>\n<li>D&ograve;ng đầu ti&ecirc;n ghi N v&agrave; K, số bạn b&egrave; m&agrave; anh ta c&oacute; v&agrave; số lượng t&aacute;o t&iacute;nh theo ki-l&ocirc;-gam m&agrave; anh ta n&ecirc;n mua.</li>\n<li>D&ograve;ng thứ hai chứa K số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, trong đ&oacute; số nguy&ecirc;n thứ i chỉ định gi&aacute; của g&oacute;i t&aacute;o 'i'kg.&nbsp;Gi&aacute; trị -1 biểu thị rằng g&oacute;i tương ứng kh&ocirc;ng khả dụng.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số nguy&ecirc;n N sao cho $0 &lt; N \\leq 100$</li>\n<li>Số nguy&ecirc;n K sao cho $0 &lt; K \\leq 100$</li>\n<li>Gi&aacute; cả M sao cho $0 &lt; M \\leq 1000$</li>\n</ul>\n<p><strong>Đầu ra</strong></p>\n<p>Đầu ra cho mỗi trường hợp thử nghiệm phải l&agrave; một d&ograve;ng duy nhất chứa số tiền tối thiểu m&agrave; anh ta phải chi cho bạn b&egrave; của m&igrave;nh.&nbsp;In -1 nếu anh ta kh&ocirc;ng thể thỏa m&atilde;n bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 5\n-1 -1 4 5 -1\n5 5\n1 2 3 4 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>-1 5</code></pre>\n<p><strong>Giải th&iacute;ch c&aacute;c trường hợp kiểm thử:</strong></p>\n<ol>\n<li>V&igrave; cửa h&agrave;ng chỉ c&oacute; g&oacute;i 3 v&agrave; 4kg n&ecirc;n anh ta sẽ kh&ocirc;ng thể l&agrave;m h&agrave;i l&ograve;ng bạn b&egrave; v&igrave; anh ta sẽ kh&ocirc;ng thể mua đ&uacute;ng 5kg t&aacute;o.</li>\n<li>Anh ta c&oacute; thể mua năm g&oacute;i 1kg v&igrave; anh ta phải mua 5 kg. V&igrave; vậy, số tiền tối thiểu anh ta n&ecirc;n chi l&agrave; 5.</li>\n</ol>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e278b83-5562-4a82-938a-b7ecfd4847ad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABA12C _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "test-life-the-universe-and-everything",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vạn vật",
  "content": "<p>Chương tr&igrave;nh của bạn l&agrave; sử dụng phương ph&aacute;p Brute-force để t&igrave;m ra c&acirc;u trả lời cho sự sống, vũ trụ v&agrave; vạn vật. Ch&iacute;nh x&aacute;c hơn l&agrave; ... viết lại c&aacute;c số nhỏ từ đầu v&agrave;o đến đầu ra. Dừng xử l&yacute; đầu v&agrave;o sau khi đọc số 42. Tất cả c&aacute;c số ở đầu v&agrave;o l&agrave; số nguy&ecirc;n c&oacute; một hoặc hai chữ số.</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88\n42\n99</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88\n </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/67b4f09f-d10e-4107-9b66-f449be5fda6c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TEST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 20,
  "slug": "sumscalc-sums-to-calculate",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Tính các tổng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Cho một số nguy&ecirc;n n, nhiệm vụ của bạn l&agrave; t&iacute;nh c&aacute;c tổng sau:</p>\n<div id=\"problem-body\">\n<ul>\n<li>Tổng S của n số nguy&ecirc;n đầu ti&ecirc;n (bắt đầu từ 1)</li>\n<li>Tổng S<sub>even</sub><sup> </sup>&nbsp;của n số nguy&ecirc;n chẵn (bắt đầu từ 2)</li>\n<li>Tổng S<sub>odd</sub> của n số nguy&ecirc;n lẻ đầu ti&ecirc;n (bắt đầu từ 1)</li>\n<li>Tổng S<sub>squares</sub> của n gi&aacute; trị b&igrave;nh phương của số nguy&ecirc;n đầu ti&ecirc;n (1, 4, 9, ...)</li>\n<li>Tổng S<sub>cubes</sub> của n gi&aacute; trị mũ 3 của số nguy&ecirc;n đầu ti&ecirc;n (1, 8, 27, ...)</li>\n</ul>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p><span lang=\"EN-US\">D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n T biểu thị số lượng trường hợp thử nghiệm. Tiếp theo l&agrave; m&ocirc; tả của T c&aacute;c trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm được m&ocirc; tả trong một d&ograve;ng duy nhất chứa số nguy&ecirc;n &laquo;n&raquo; (1 &le; n&nbsp;&le; 10<sup>4</sup>).</span></p>\n<h3>Định dạng đầu ra</h3>\n<p><span lang=\"EN-US\">Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất chứa 5 số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch: <strong>S S<sub>even</sub>&nbsp;S<sub>odd</sub>&nbsp;S<sub>squares</sub>&nbsp;S<sub>cubes</sub></strong></span></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n4\n5\n6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>10 20 16 30 100\n15 30 25 55 225\n21 42 36 91 441</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/19f344d4-7979-4bd9-b6ba-c577bddeb933",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUMSCALC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef934f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "smpwow-wow",
  "tags": [],
  "level": "BEGINNER",
  "title": "Wow wow wow",
  "content": "<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Cho một số nguy&ecirc;n dương với điều kiện 0 &lt; <em>x</em>&nbsp;&lt; 50.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu ra</h3>\n<p>In ra một từ: <tt>Wo...ow</tt> (chữ c&aacute;i 'o' phải được lặp lại <em>x</em> lần).</p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Wow </code></pre>\n<pre>&nbsp;</pre>\n<h3>V&iacute; dụ 2</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Wooooooow</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/63503f4a-beb4-42a4-af30-d5c566613a6e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SMPWOW_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9350"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "testint-test-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tổng số tự nhiên",
  "content": "<p>Cho trước hai số tự nhi&ecirc;n (đều kh&ocirc;ng lớn hơn 200), mỗi số nằm tr&ecirc;n một d&ograve;ng ri&ecirc;ng, h&atilde;y in ra tổng của ch&uacute;ng.</p>\n<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Nhập v&agrave;o 2 số tự nhi&ecirc;n.</p>\n<h3><strong>Định dạng đầu ra</strong></h3>\n<p>In ra tổng của c&aacute;c số tự nhi&ecirc;n được nhập</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a13e4f07-591e-4e61-a5ce-c83d7eed5504",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TESTINT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9351"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "i-3-1-tim-số-lớn-nhất-trong-2-số",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tìm số lớn nhất trong 2 số",
  "content": "<p>Viết chương tr&igrave;nh nhập v&agrave;o 2 số nguy&ecirc;n a,b in ra số lớn nhất. V&iacute; dụ: Cho a=5, b=10, số lớn hơn sẽ l&agrave; b=10.</p>\n<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Một d&ograve;ng duy nhất gồm 2 số nguy&ecirc;n a v&agrave; b , được c&aacute;ch nhau bởi dấu c&aacute;ch</p>\n<h3><strong>Định dạng đầu ra</strong></h3>\n<p>Một d&ograve;ng duy nhất gồm 1 số kết quả</p>\n<h3><strong>V&iacute; dụ</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5 10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>10</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/51f1f508-b7ce-4d2a-b258-b0ba444a70fd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.3.1-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9352"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "smpsum-iterated-sums",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tính tổng lặp lại",
  "content": "<p>H&atilde;y t&iacute;nh tổng b&igrave;nh phương của c&aacute;c số đ&atilde; cho: a, a + 1, ..., b-1, b.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Hai số: a v&agrave; b c&aacute;ch nhau một khoảng trắng, trong đ&oacute; $1 \\leq a \\leq b \\leq 100$.</p>\n<h3>Định dạng đầu ra</h3>\n<p>T&iacute;nh tổng: <strong><em>a</em>*<em>a</em>&nbsp;+ (<em>a</em>+1)*(<em>a</em>+1) + ... + (<em>b</em>-1)*(<em>b</em>-1) +&nbsp;<em>b</em>*<em>b</em></strong></p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>30</code></pre>\n<h3><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> V&iacute; dụ 2</span></strong></h3>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o</span></strong></p>\n<pre class=\"language-markup\"><code>5 6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>61</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ad4ae630-7bd7-470c-898b-17576e7435c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SMPSUM-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9353"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "prionpri-prime-or-not-prime",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Xác định số nguyên tố",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Trong b&agrave;i to&aacute;n n&agrave;y, nhiệm vụ của bạn l&agrave; x&aacute;c định xem một số đ&atilde; cho l&agrave; số nguy&ecirc;n tố hay hợp số.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p><span lang=\"EN-US\">D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n T, biểu thị số lượng trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm bao gồm một d&ograve;ng duy nhất chứa một số nguy&ecirc;n &laquo; n &raquo; (2 &le; n &le; 10<sup>9</sup>)</span></p>\n<h3>Định dạng đầu ra</h3>\n<p><span lang=\"EN-US\">Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn sẽ in ra một d&ograve;ng duy nhất chứa &laquo;YES&raquo; (kh&ocirc;ng c&oacute; dấu ngoặc k&eacute;p v&agrave; khoảng trắng), nếu số nguy&ecirc;n đ&atilde; cho l&agrave; số nguy&ecirc;n tố hoặc &laquo;NO&raquo; (kh&ocirc;ng c&oacute; dấu ngoặc k&eacute;p v&agrave; khoảng trống) nếu số nguy&ecirc;n đ&atilde; cho l&agrave; hợp số.</span></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6\n16\n127\n256\n513\n2048\n5097</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>NO\nYES\nNO\nNO\nNO\nNO</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/60a50dbf-b4f9-4f95-a5c7-2650ed964039",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRIONPRI-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9354"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "divfact-divisors-of-factorial",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tìm tổng các số chia của giai thừa",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Cho một số, h&atilde;y t&igrave;m tổng số c&aacute;c ước số của giai thừa của số đ&oacute;. V&igrave; đ&aacute;p &aacute;n c&oacute; thể rất lớn, h&atilde;y in ra l&agrave; modulo $10^{9} + 7$.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa T, số lượng trường hợp thử nghiệm.</li>\n<li>T d&ograve;ng sau, mỗi d&ograve;ng chứa số N.</li>\n</ul>\n<h3>Điều kiện</h3>\n<ul>\n<li>$1 \\leq T \\leq 500$</li>\n<li>$0 \\leq N \\leq 50000$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra T d&ograve;ng của kết quả đầu ra, mỗi d&ograve;ng chứa 1 đ&aacute;p &aacute;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n3\n4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n4\n8 </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5fa71025-7a3f-4f33-b71e-b2f0abb56a31",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DIVFACT-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9355"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "dau-vao-va-dau-rainput-and-output",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đầu vào và đầu ra(Input and Output)",
  "content": "<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Mục ti&ecirc;u </span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Trong b&agrave;i tập n&agrave;y, ch&uacute;ng ta thực h&agrave;nh đọc đầu v&agrave;o từ stdin v&agrave; in đầu ra sang stdout.</span></p>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Trong C ++, bạn c&oacute; thể đọc một m&atilde; th&ocirc;ng b&aacute;o đầu v&agrave;o được ph&acirc;n t&aacute;ch bằng khoảng trắng duy nhất bằng&nbsp;<a href=\"http://www.cplusplus.com/cin\">cin</a> v&agrave; in đầu ra ra stdout bằng <a href=\"http://www.cplusplus.com/printf\">cout</a>. V&iacute; dụ: giả sử ch&uacute;ng ta khai b&aacute;o c&aacute;c biến sau:</span></p>\n<pre><span class=\"n\">string</span> <span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">;</span></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">v&agrave; ch&uacute;ng ta muốn sử dụng cin để đọc đầu v&agrave;o \"High 5\" từ stdin.Ta c&oacute; thể thực hiện việc n&agrave;y với đoạn m&atilde; sau:</span></p>\n<pre><span class=\"n\">cin</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">s</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">n</span><span class=\"p\">;</span></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Đọc từ đầu ti&ecirc;n(\"High\") từ stdin v&agrave; lưu dưới</span><span class=\"Y2IQFc\" lang=\"vi\"> dạng chuỗi $s$, sau đ&oacute; đọc từ thứ hai (\"5\") từ stdin v&agrave; lưu n&oacute; dưới dạng số nguy&ecirc;n $n$. Nếu muốn in c&aacute;c gi&aacute; trị n&agrave;y ra stdout, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, ta viết đoạn m&atilde; sau:</span></p>\n<pre><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">s</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\" \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">n</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Đoạn m&atilde; n&agrave;y in nội dung của chuỗi $s$, một khoảng trắng ($\" \"$), sau đ&oacute; l&agrave; số nguy&ecirc;n $n$. Ta kết th&uacute;c d&ograve;ng đầu ra bằng một d&ograve;ng mới sử dụng endl. Điều n&agrave;y dẫn đến kết quả sau:</span></p>\n<pre><code>High 5</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Y&ecirc;u cầu đặt ra</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Đọc $3$ số từ stdin v&agrave; in tổng của ch&uacute;ng ta stdout.</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu v&agrave;o</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Một d&ograve;ng chứa 3 số nguy&ecirc;n c&aacute;ch nhau: $a, b,$ and $c$</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">R&agrave;ng buộc</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">$1 \\leq a, b, c \\leq 1000$</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu ra</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">In tổng 3 số nguy&ecirc;n tr&ecirc;n một d&ograve;ng</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">V&iacute; dụ</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu v&agrave;o</span></strong></p>\n<pre><code>1 2 7</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu ra</span></strong></p>\n<pre><code>10</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b178c87e-8536-4639-a913-f1de405a18fa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Input and Output.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9356"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "cac-kieu-du-lieu-co-banbasic-data-types",
  "tags": [],
  "level": "BEGINNER",
  "title": "Các kiểu dữ liệu cơ bản(Basic Data Types)",
  "content": "<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Một số kiểu dữ liệu C ++, m&atilde; định dạng v&agrave; độ rộng bit phổ biến nhất của ch&uacute;ng như sau:</span></p>\n<ul>\n<li><em>Int (\"%d\"):</em>&nbsp;32 Bit integer</li>\n<li><em>Long (\"%ld\"):</em>&nbsp;64 bit integer</li>\n<li><em>Char (\"%c\"):</em>&nbsp;Character type</li>\n<li><em>Float (\"%f\"):</em>&nbsp;32 bit real value</li>\n<li><em>Double (\"%lf\"):</em>&nbsp;64 bit real value</li>\n</ul>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Đọc </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Để đọc một kiểu dữ liệu, h&atilde;y sử dụng c&uacute; ph&aacute;p sau:</span></p>\n<pre><code>scanf(\"`format_specifier`\", &amp;val)</code></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">V&iacute; dụ, để đọc một k&yacute; tự được theo sau bởi một dấu k&eacute;p:</span></p>\n<pre><code>char ch;\ndouble d;\nscanf(\"%c %lf\", &amp;ch, &amp;d);</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">For the moment, we can ignore the spacing between format specifiers.</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">In</span></strong></p>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Để in một kiểu dữ liệu, h&atilde;y sử dụng c&uacute; ph&aacute;p sau:</span></p>\n<pre><code>printf(\"`format_specifier`\", val)</code></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">V&iacute; dụ, để in một k&yacute; tự theo sau bởi một dấu k&eacute;p:</span></p>\n<pre><code>char ch = 'd';\ndouble d = 234.432;\nprintf(\"%c %lf\", ch, d);</code></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\"><strong>Lưu &yacute;</strong>: Bạn cũng c&oacute; thể sử dụng cin v&agrave; cout thay v&igrave; scanf v&agrave; printf; tuy nhi&ecirc;n, nếu bạn đang lấy một triệu số l&agrave;m đầu v&agrave;o v&agrave; in một triệu d&ograve;ng, th&igrave; việc sử dụng scanf v&agrave; printf sẽ nhanh hơn. </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu v&agrave;o </span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Đầu v&agrave;o bao gồm c&aacute;c gi&aacute; trị được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch sau: int, long, char, float v&agrave; double, tương ứng. </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu ra </span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">In từng phần tử tr&ecirc;n một d&ograve;ng mới theo c&ugrave;ng thứ tự m&agrave; n&oacute; đ&atilde; được nhận l&agrave;m đầu v&agrave;o. Lưu &yacute; rằng gi&aacute; trị dấu phẩy phải ch&iacute;nh x&aacute;c đến 3 chữ số thập ph&acirc;n v&agrave; nh&acirc;n đ&ocirc;i đến 9 chữ số thập ph&acirc;n.</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">V&iacute; dụ</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu v&agrave;o</span></strong></p>\n<pre><code>3 12345678912345 a 334.23 14049.30493</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu ra</span></strong></p>\n<pre><code>3\n12345678912345\na\n334.230\n14049.304930000</code></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3d59098b-28af-4c0e-9d81-441a2f40ada2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Basic Data Types.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9357"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "cau-dieu-kien-conditional-statements",
  "tags": [],
  "level": "BEGINNER",
  "title": "Câu điều kiện (Conditional Statements)",
  "content": "<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">if v&agrave; else l&agrave; hai trong số c&aacute;c c&acirc;u điều kiện được sử dụng thường xuy&ecirc;n nhất trong C / C ++ v&agrave; ch&uacute;ng cho ph&eacute;p bạn thực hiện kh&ocirc;ng hoặc một c&acirc;u lệnh điều kiện trong số nhiều c&acirc;u lệnh điều kiện phụ thuộc như vậy. Ta sử dụng ch&uacute;ng theo những c&aacute;ch sau:</span></p>\n<p><span class=\"Y2IQFc\" lang=\"vi\">1.if: Điều n&agrave;y thực thi phần th&acirc;n của m&atilde; trong ngoặc bắt đầu bằng c&acirc;u lệnh 1 $(statement1)$ nếu điều kiện đ&aacute;nh gi&aacute; $(condition)$ l&agrave; true.</span></p>\n<pre><code>if (condition) {\n    statement1;\n    ...\n}</code></pre>\n<p><span class=\"Y2IQFc\" lang=\"vi\">2.</span><span class=\"Y2IQFc\" lang=\"vi\">if - else: Điều n&agrave;y thực thi phần th&acirc;n của m&atilde; trong ngoặc bắt đầu bằng c&acirc;u lệnh 1 nếu điều kiện đ&aacute;nh gi&aacute; l&agrave; true hoặc n&oacute; thực thi phần th&acirc;n của m&atilde; bắt đầu bằng c&acirc;u lệnh 2 nếu điều kiện cho gi&aacute; trị l&agrave; false. Lưu &yacute; rằng chỉ một trong c&aacute;c phần m&atilde; được đặt trong ngoặc đơn sẽ được thực thi.</span></p>\n<pre><code>if (condition) {\n    statement1;\n    ...\n}\nelse {\n    statement2;\n    ...\n}</code></pre>\n<p>3.<span class=\"Y2IQFc\" lang=\"vi\">if - else if - else: Trong cấu tr&uacute;c n&agrave;y, c&aacute;c c&acirc;u lệnh phụ thuộc được x&acirc;u chuỗi với nhau v&agrave; điều kiện cho mỗi c&acirc;u lệnh chỉ được kiểm tra nếu tất cả c&aacute;c điều kiện trước trong chuỗi được đ&aacute;nh gi&aacute; l&agrave; false. Khi một điều kiện được đ&aacute;nh gi&aacute; l&agrave; true, m&atilde; trong ngoặc vu&ocirc;ng được li&ecirc;n kết với c&acirc;u lệnh đ&oacute; sẽ được thực thi v&agrave; chương tr&igrave;nh sau đ&oacute; sẽ bỏ qua đến cuối chuỗi c&acirc;u lệnh v&agrave; tiếp tục thực thi. Nếu mỗi điều kiện trong chuỗi được đ&aacute;nh gi&aacute; l&agrave; false, th&igrave; phần nội dung của m&atilde; trong dấu ngoặc vu&ocirc;ng trong khối kh&aacute;c ở cuối sẽ được thực thi.</span></p>\n<pre><code>if(first condition) {\n    ...\n}\nelse if(second condition) {\n    ...\n}\n.\n.\n.\nelse if((n-1)'th condition) {\n    ....\n}\nelse {\n    ...\n}</code></pre>\n<p>Cho số nguy&ecirc;n dương $n$ như sau:</p>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Nếu $1 \\leq n \\leq 9$, h&atilde;y in từ tiếng Anh viết thường tương ứng với số (v&iacute; dụ:<code>one</code>cho 1, <code>two</code>&nbsp;cho 2, v.v.). </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Nếu $ n&gt; 9 $, in &nbsp;<code>Greater than 9</code>.</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu v&agrave;o</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Một số nguy&ecirc;n duy nhất, $n$</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">R&agrave;ng buộc</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">$1 \\leq n \\leq 10^{9}$</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Định dạng đầu ra</span></strong></p>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">Nếu $1 \\leq n \\leq 9$, th&igrave; in từ tiếng Anh viết thường tương ứng với số (v&iacute; dụ: <code>one</code> cho 1, <code>two</code> cho 2, v.v.); nếu kh&ocirc;ng, h&atilde;y in <code>Greater than 9</code>.&nbsp;</span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">V&iacute; dụ</span></strong></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu v&agrave;o</span></strong></p>\n<pre><span class=\"err\">5</span></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><strong><span class=\"Y2IQFc\" lang=\"vi\">Đầu ra</span></strong></p>\n<pre><span class=\"err\">five</span></pre>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\">&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/205ab5cb-63d7-4b15-aba2-e7dc0923b5e1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Conditional Statements.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9358"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "vong-lapfor-loop",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vòng lặp(For Loop)",
  "content": "<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">V&ograve;ng lặp for l&agrave; một c&acirc;u lệnh trong ng&ocirc;n ngữ lập tr&igrave;nh cho ph&eacute;p m&atilde; được thực thi nhiều lần. C&uacute; ph&aacute;p l&agrave;:<br /></span></p>\n<pre><code>for ( &lt;expression_1&gt; ; &lt;expression_2&gt; ; &lt;expression_3&gt; )\n    &lt;statement&gt;</code></pre>\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">biểu thức_1 $(expression_1)$ được sử dụng cho c&aacute;c biến số h&oacute;a thường được sử dụng để điều khiển cờ kết th&uacute;c cho v&ograve;ng lặp. </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">biểu thức_2 $(expression_2)$ được sử dụng để kiểm tra điều kiện kết th&uacute;c. Nếu điều n&agrave;y được đ&aacute;nh gi&aacute; l&agrave; false, th&igrave; v&ograve;ng lặp bị kết th&uacute;c. </span></p>\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Bản dịch\"><span class=\"Y2IQFc\" lang=\"vi\">biểu thức_3 $(expression_3)$ thường được sử dụng để cập nhật c&aacute;c cờ / biến.<br /></span><span class=\"Y2IQFc\" lang=\"vi\">V&ograve;ng lặp mẫu:</span></p>\n<pre><code>for(int i = 0; i &lt; 10; i++) {\n    ...\n}</code></pre>\n<p>Trong thử th&aacute;ch n&agrave;y, bạn sẽ sử dụng v&ograve;ng lặp for để tăng một biến trong một phạm vi.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Bạn được cho hai số nguy&ecirc;n dương $a$ v&agrave; $b$ ($a \\leq b$)</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi số nguy&ecirc;n $n$ trong khoảng bao gồm $[a, b]$ :<br />- Nếu $1 \\leq n \\leq 9$, in phần biểu diễn bằng tiếng Anh của n&oacute; ở dạng chữ thường. Đ&oacute; l&agrave; \"one\" cho 1, \"two\" cho 2 , v&agrave; như thế.<br />- Ngược lại, nếu $n&gt;9$ v&agrave; n&oacute; l&agrave; một số chẵn, sau đ&oacute; in \"even\".<br />- Ngược lại, nếu $n&gt;9$ v&agrave; n&oacute; l&agrave; một số lẻ, sau đ&oacute; in \"odd\".<br />Ghi ch&uacute;: $[a, b]=\\{x \\in \\mathbb{Z} \\mid a \\leq x \\leq b\\}=\\{a, a+1, \\ldots, b\\}$</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre><code>8\n11</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre><code>eight\nnine\neven\nodd</code></pre>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ed749fd6-ab58-4aeb-a8b8-2d0ba2bd42f5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "For Loop.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9359"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "chuc-nangfunctions",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chức năng(Functions)",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p><span>C&aacute;c h&agrave;m l&agrave; một loạt c&aacute;c c&acirc;u lệnh được d&aacute;n lại với nhau.&nbsp;Một h&agrave;m được cung cấp kh&ocirc;ng hoặc nhiều đối số v&agrave; n&oacute; thực thi c&aacute;c c&acirc;u lệnh tr&ecirc;n đ&oacute;.&nbsp;Dựa tr&ecirc;n kiểu trả về, hoặc kh&ocirc;ng trả về g&igrave; (void) hoặc một c&aacute;i g&igrave; đ&oacute;.</span><br /><br /><span>C&uacute; ph&aacute;p cho một h&agrave;m l&agrave;</span></p>\n<pre><code>return_type function_name(arg_type_1 arg_1, arg_type_2 arg_2, ...) {\n    ...\n    ...\n    ...\n    [if return_type is non void]\n        return something of type `return_type`;\n}\n</code></pre>\n<p><span>V&iacute; dụ, một h&agrave;m trả về tổng của bốn tham số c&oacute; thể được viết dưới dạng</span></p>\n<pre><code>int sum_of_four(int a, int b, int c, int d) {\n    int sum = 0;\n    sum += a;\n    sum += b;\n    sum += c;\n    sum += d;\n    return sum;\n}\n</code></pre>\n<hr />\n<p><span>Viết một h&agrave;m&nbsp;</span>int max_of_four (int a, int b, int c, int d)&nbsp;trả về tối đa bốn đối số m&agrave; n&oacute; nhận được.</p>\n<pre><code>+= : Add and assignment operator. It adds the right operand to the left operand and assigns the result to the left operand.\na += b is equivalent to a = a + b;\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong><span>Định dạng đầu v&agrave;o</span></strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p><span>Đầu v&agrave;o sẽ chứa bốn số nguy&ecirc;n -&nbsp;</span><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span><span> $a,b,c,d$ tr&ecirc;n mỗi d&ograve;ng.</span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong><span>Định dạng đầu ra</span></strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p><span>Trả về gi&aacute; trị lớn nhất trong bốn số nguy&ecirc;n.</span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong><span>Đầu v&agrave;o mẫu</span></strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\n4\n6\n5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong><span>Đầu ra mẫu</span></strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>6</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/86282f34-8810-43b1-8e82-c77d7ea34963",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Functions.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935a"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "pointer",
  "tags": [],
  "level": "BEGINNER",
  "title": "Pointer",
  "content": "<p>A&nbsp;<a href=\"http://en.wikipedia.org/wiki/Pointer_%28computer_programming%29\">pointer</a>&nbsp;in C++ is used to share a memory address among different contexts (primarily functions). They are used whenever a function needs to modify the content of a variable, but it does not have ownership.</p>\n<p>In order to access the memory address of a variable, $v a l$, prepend it with \\&amp; sign. For example, \\&amp;val returns the memory address of val.<br />This memory address is assigned to a pointer and can be shared among functions. For example, $i n t^{*} p=$ \\&amp;val assigns the memory address of val to pointer $p$. To access the content of the memory pointed to, prepend the variable name with a $\\star$. For example, $\\star p$ will return the value stored in $val$ and any modification to it will be performed on $val$.</p>\n<pre><code>void increment(int *v) {\n    (*v)++;\n}\n\nint main() {\n    int a;\n    scanf(\"%d\", &amp;a);\n    increment(&amp;a);\n    printf(\"%d\", a);\n    return 0;\n}  \n</code></pre>\n<p><strong>Function Description</strong></p>\n<p>Complete the&nbsp;update&nbsp;function in the editor below.</p>\n<p>update&nbsp;has the following parameters:</p>\n<ul>\n<li>int *a:&nbsp;an integer</li>\n<li>int *b:&nbsp;an integer</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p>The function is declared with a void return type, so there is no value to return. Modify the values in memory so that $a$ contains their sum and $b$ contains their absoluted difference.<br />$a^{\\prime}=a+b$<br />$b^{\\prime}=|a-b|$<br /><strong>Input Format</strong><br />Input will contain two integers, $a$ and $b_{r}$ separated by a newline.</p>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>4\n5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>9\n1\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n<p>$a^{\\prime}=4+5=9$<br />$b^{\\prime}=|4-5|=1$</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e2cf9aca-fb0b-432e-b622-0bfe91fe9173",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Pointer.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "gioi-thieu-mangarrays-introduction",
  "tags": [],
  "level": "BEGINNER",
  "title": "Giới thiệu mảng(Arrays Introduction)",
  "content": "<p>Mảng l&agrave; một loạt c&aacute;c phần tử c&ugrave;ng kiểu được đặt ở c&aacute;c vị tr&iacute; bộ nhớ liền nhau c&oacute; thể được tham chiếu ri&ecirc;ng lẻ bằng c&aacute;ch th&ecirc;m một chỉ mục v&agrave;o một m&atilde; định danh duy nhất.</p>\n<p>Đối với c&aacute;c mảng c&oacute; k&iacute;ch thước đ&atilde; biết,&nbsp;<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> trong trường hợp n&agrave;y l&agrave; $10$, h&atilde;y sử dụng khai b&aacute;o sau:</p>\n<pre><code>int arr[10]; //Declares an array named arr of size 10, i.e, you can \nstore 10 integers.</code></pre>\n<p><strong>Lưu &yacute;</strong>&nbsp;Kh&ocirc;ng giống như C, C ++ cho ph&eacute;p cấp ph&aacute;t động c&aacute;c mảng trong thời gian chạy m&agrave; kh&ocirc;ng cần c&aacute;c lệnh gọi đặc biệt như malloc ().&nbsp;Nếu như $n=10$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>,&nbsp;<code>int arr[n]</code>sẽ tạo một mảng c&oacute; kh&ocirc;ng gian cho $10$&nbsp;số nguy&ecirc;n.</p>\n<p>Truy cập c&aacute;c phần tử của một mảng:</p>\n<pre><code>Indexing in arrays starts from 0.So the first element is stored at \narr[0],the second element at arr[1] and so on through arr[9].</code></pre>\n<p>Bạn sẽ được cung cấp một mảng $N$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;số nguy&ecirc;n v&agrave; bạn phải in c&aacute;c số nguy&ecirc;n theo thứ tự ngược lại.</p>\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>,trong đ&oacute; $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> l&agrave; số lượng c&aacute;c số nguy&ecirc;n. D&ograve;ng tiếp theo chứa $N$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p><strong>R&agrave;ng buộc&nbsp;</strong></p>\n<p>$1&lt;=N&lt;=1000$</p>\n<p>$1&lt;=A[i]&lt;=10000$, trong đ&oacute; $A[i]$ l&agrave; số nguy&ecirc;n thứ $i^{t h}$ trong mảng.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In $N$&nbsp;số nguy&ecirc;n của mảng theo thứ tự ngược lại, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch tr&ecirc;n một d&ograve;ng.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Đầu v&agrave;o mẫu</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>4\n1 4 3 2\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra mẫu</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>2 3 4 1</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cf987568-25fa-467f-9675-4fa817be5df1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Arrays Introduction.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935c"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "mang-co-kich-thuoc-bien-doivariable-sized-arrays",
  "tags": [],
  "level": "BEGINNER",
  "title": "Mảng có kích thước biến đổi(Variable Sized Arrays)",
  "content": "<p>Consider an $n$-element array, $a$, where each index $i$ in the array contains a reference to an array of $k_{i}$ integers (where the value of $k_{i}$ varies from array to array). See the Explanation section below for a diagram.</p>\n<p>Given $a$ you must answer $q$ queries. Each query is in the format i $j$, where $i$ denotes an index in array $a$ and $j$ denotes an index in the array located at $a[i]$. For each query, find and print the value of element $j$ in the array at location $a[i]$ on a new line.</p>\n<p>Click&nbsp;<a href=\"http://www.cplusplus.com/reference/vector/vector/\">here</a> to know more about how to create variable sized arrays in $\\mathrm{C}++$.</p>\n<p><strong>Input Format</strong><br />The first line contains two space-separated integers denoting the respective values of $n$ (the number of variable-length arrays) and $q$ (the number of queries).<br />Each line $i$ of the $n$ subsequent lines contains a space-separated sequence in the format $k a[i]_{0} a[i]_{1} \\ldots a[i]_{k-1}$ describing the $k$ element array located at $a[i]$.</p>\n<p>Each of the $q$ subsequent lines contains two space-separated integers describing the respective values of $i$ (an index in array $a$ ) and $j$ (an index in the array referenced by $a[i])$ for a query.<br /><strong>Constraints</strong><br />- $1 \\leq n \\leq 10^{5}$<br />- $1 \\leq q \\leq 10^{5}$<br />- $1 \\leq k \\leq 3 \\cdot 10^{5}$<br />- $n \\leq \\sum k \\leq 3 \\cdot 10^{5}$<br />- $0 \\leq i&lt;n$<br />- $0 \\leq j&lt;k$<br />- All indices in this challenge are zero-based.<br />- All the given numbers are non negative and are not greater than $10^{6}$</p>\n<p><strong>Output Format</strong><br />For each pair of $\\boldsymbol{i}$ and $j$ values (i.e., for each query), print a single integer that denotes the element located at index $j$ of the array referenced by $a[i]$. There should be a total of $q$ lines of output.</p>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>2 2\n3 1 5 4\n5 1 2 8 9 3\n0 1\n1 3\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>5\n9\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>The diagram below depicts our assembled Sample Input:</p>\n<p><img style=\"width: 462px;\" src=\"../../public_files/e1b0d267-2dae-4aa5-b959-b877ff0bbdd8\" alt=\"1476906485-2c93045320-variable-length-arrays\" height=\"247\" /></p>\n<p>We perform the following $q=2$ queries:<br />1. Find the array located at index $i=0$, which corresponds to $a[0]=[1,5,4]$. We must print the value at index $j=1$ of this array which, as you can see, is 5 .<br />2. Find the array located at index $i=1$, which corresponds to $a[1]=[1,2,8,9,3] .$ We must print the value at index $j=3$ of this array which, as you can see, is 9 .</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/219930ac-5920-4ed5-8caa-8a29ce387f2e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Variable Sized Arrays.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935d"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "phan-tich-cu-phap-thuoc-tinhattribute-parser",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Phân tích cú pháp thuộc tính(Attribute Parser)",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>This challenge works with a custom-designed markup language&nbsp;HRML. In&nbsp;HRML, each element consists of a starting and ending tag, and there are attributes associated with each tag. Only starting tags can have attributes. We can call an attribute by referencing the tag, followed by a tilde, '<code>~</code>' and the name of the attribute. The tags may also be nested.</p>\n<p>The&nbsp;opening tags&nbsp;follow the format:</p>\n<p><code>&lt;tag-name attribute1-name = \"value1\" attribute2-name = \"value2\" ...&gt;</code></p>\n<p>The&nbsp;closing tags&nbsp;follow the format:</p>\n<p><code>&lt;/tag-name&gt;</code></p>\n<p>The attributes are referenced as:</p>\n<pre><code>tag1~value  \ntag1.tag2~name\n</code></pre>\n<p>Given the source code in HRML format consisting of $N$&nbsp;lines, answer&nbsp;<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>$Q$ queries. For each query, print the value of the attribute specified. Print \"Not Found!\"&nbsp;if the attribute does not exist.</p>\n<p><strong>Example</strong></p>\n<div class=\"highlight\">\n<pre>HRML listing\n&lt;tag1 value = \"value\"&gt;\n&lt;tag2 name = \"name\"&gt;\n&lt;tag3 another=\"another\" final=\"final\"&gt;\n&lt;/tag3&gt;\n&lt;/tag2&gt;\n&lt;/tag1&gt;\n\nQueries\ntag1~value\ntag1.tag2.tag3~name\ntag1.tag2~value\n</pre>\n</div>\n<p>Here, tag2 is nested within tag1, so attributes of tag2 are accessed as&nbsp;<code>tag1.tag2~&lt;attribute&gt;</code>. Results of the queries are:</p>\n<div class=\"highlight\">\n<pre>Query                 Value\ntag1~value            \"value\"\ntag1.tag2.tag3~name   \"Not Found!\"\ntag1.tag2.tag3~final  \"final\"\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n<p>The first line consists of two space separated integers, $N$ and $Q . N$, specifies the number of lines in the HRML source program. $Q$ specifies the number of queries.<br />The following $N$ lines consist of either an opening tag with zero or more attributes or a closing tag. There is a space after the tag-name, attribute-name, ' $=$ ' and value.There is no space after the last value. If there are no attributes there is no space after tag name.<br />$Q$ queries follow. Each query consists of string that references an attribute in the source program.More formally, each query is of the form $\\operatorname{tag}_{i_{1}} \\cdot \\operatorname{tag}_{i_{2}} . \\operatorname{tag}_{i_{3}} \\ldots$ ta $g_{i_{m}} \\sim$ attr $-$ name where $m&gt;=1$ and $\\operatorname{tag}_{i_{1}}, \\operatorname{tag}_{i_{2}} \\ldots \\operatorname{tag}_{i_{m}}$ are valid tags in the input.</p>\n<p><strong>Constraints</strong></p>\n<p>$$<br />\\begin{aligned}<br />&amp;1 \\leq N \\leq 20 \\\\<br />&amp;1 \\leq Q \\leq 20<br />\\end{aligned}<br />$$<br />Each line in the source program contains, at most, $200$ characters.<br />Every reference to the attributes in the $Q$ queries contains at most $200$ characters.</p>\n<p>All tag names are unique and the HRML source program is logically correct, i.e. valid nesting.<br />A tag can may have no attributes.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Print the value of the attribute for each query. Print \"<em>Not Found!</em>\" without quotes if the attribute does not exist.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>4 3\n&lt;tag1 value = \"HelloWorld\"&gt;\n&lt;tag2 name = \"Name1\"&gt;\n&lt;/tag2&gt;\n&lt;/tag1&gt;\ntag1.tag2~name\ntag1~name\ntag1~value\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Name1\nNot Found!\nHelloWorld</code></pre>\n</div>\n</div>\n</div>\n<p>&nbsp;</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e1b08769-e9f9-4dbd-b149-ab7a2543641c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Attribute Parser.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935e"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "stringstream",
  "tags": [],
  "level": "BEGINNER",
  "title": "StringStream",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>In this challenge, we work with&nbsp;<em>string streams</em>.</p>\n<p><em>stringstream</em>&nbsp;is a stream class to operate on strings. It implements input/output operations on memory (string) based streams.&nbsp;<em>stringstream</em>&nbsp;can be helpful in different type of parsing. The following operators/functions are commonly used here</p>\n<ul>\n<li><em>Operator &gt;&gt;</em>&nbsp;Extracts formatted data.</li>\n<li><em>Operator &lt;&lt;</em>&nbsp;Inserts formatted data.</li>\n<li><em>Method str()</em>&nbsp;Gets the contents of underlying string device object.</li>\n<li><em>Method str(string)</em>&nbsp;Sets the contents of underlying string device object.</li>\n</ul>\n<p>Its header file is&nbsp;<em>sstream</em>.</p>\n<p>One common use of this class is to parse comma-separated integers from a string (e.g., \"23,4,56\").</p>\n<pre><code>stringstream ss(\"23,4,56\");\nchar ch;\nint a, b, c;\nss &gt;&gt; a &gt;&gt; ch &gt;&gt; b &gt;&gt; ch &gt;&gt; c;  // a = 23, b = 4, c = 56\n</code></pre>\n<p>Here $ch$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is a storage area for the discarded commas.</p>\n<p>If the&nbsp;<code>&gt;&gt;</code>&nbsp;operator returns a value, that is a true value for a conditional. Failure to return a value is false.</p>\n<p>Given a string of comma delimited integers, return a vector of integers.</p>\n<p><strong>Function Description</strong></p>\n<p>Complete the&nbsp;<em>parseInts</em>&nbsp;function in the editor below.</p>\n<p><em>parseInts</em>&nbsp;has the following parameters:</p>\n<ul>\n<li><em>string str:</em>&nbsp;a string of comma separated integers</li>\n</ul>\n<p><strong>Returns</strong></p>\n<ul>\n<li><em>vector&lt;int&gt;:</em>&nbsp;a vector of the parsed integers.</li>\n</ul>\n<p><strong>Note</strong>&nbsp;You can learn to push elements onto a vector by solving the first problem in the STL chapter.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>There is one line of $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integers separated by commas.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p>The length of $str$ is less than $8 \\times 10^{5}$.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>23,4,56\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>23\n4\n56</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2ddbc275-0f77-4433-bffd-8bf59f99c107",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "StringStream.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef935f"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "strings",
  "tags": [],
  "level": "BEGINNER",
  "title": "Strings",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>C++ provides a nice alternative data type to manipulate strings, and the data type is conveniently called&nbsp;string. Some of its widely used features are the following:</p>\n<ul>\n<li>\n<p>Declaration:</p>\n<pre><code>string a = \"abc\";\n</code></pre>\n</li>\n<li>\n<p>Size:</p>\n<pre><code>int len = a.size();\n</code></pre>\n</li>\n<li>\n<p>Concatenate two strings:</p>\n<pre><code>string a = \"abc\";\nstring b = \"def\";\nstring c = a + b; // c = \"abcdef\".\n</code></pre>\n</li>\n<li>\n<p>Accessing $i^{t h}$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;element:</p>\n<pre><code>string s = \"abc\";\nchar   c0 = s[0];   // c0 = 'a'\nchar   c1 = s[1];   // c1 = 'b'\nchar   c2 = s[2];   // c2 = 'c'\n\ns[0] = 'z';         // s = \"zbc\"\n</code></pre>\n</li>\n</ul>\n<p>P.S.:&nbsp;We will use&nbsp;cin/cout&nbsp;to read/write a string.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n<p>You are given two strings, $a$ and $b$, separated by a new line. Each string will consist of lower case Latin characters ('a'-'z').<br /><strong>Output Format</strong><br />In the first line print two space-separated integers, representing the length of $a$ and $b$ respectively.</p>\n<p>In the second line print the string produced by concatenating $a$ and $b$ ( $a+b)$</p>\n<p>In the third line print two strings separated by a space, $a^{\\prime}$ and $b^{\\prime} \\cdot a^{\\prime}$ and $b^{\\prime}$ are the same as $a$ and $b$, respectively, except that their first characters are swapped.</p>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>abcd\nef\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>4 2\nabcdef\nebcd af\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n<p>$a=$ \"abcd\"<br />$b=$ \"ef\"<br />$|a|=4$<br />$|b|=2$<br />$a+b=\" a b c d e f^{\\prime \\prime}$<br />$a^{\\prime}=$ \"ebcd\"<br />$b^{\\prime}=\"$ \"af\"</p>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9d99978a-64cb-4c29-be2b-b49c1ec941cb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Strings.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9360"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "structs",
  "tags": [],
  "level": "BEGINNER",
  "title": "Structs",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p><em>struct</em>&nbsp;is a way to combine multiple fields to represent a composite data structure, which further lays the foundation for Object Oriented Programming. For example, we can store details related to a student in a struct consisting of his&nbsp;<em>age (int), first_name (string), last_name (string) and standard (int)</em>.<br /><br /><em>struct</em>&nbsp;can be represented as</p>\n<pre><code>struct NewType {\n    type1 value1;\n    type2 value2;\n    .\n    .\n    .\n    typeN valueN;\n};\n</code></pre>\n<p>You have to create a struct, named&nbsp;<em>Student</em>, representing the student's details, as mentioned above, and store the data of a student.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Input will consist of four lines.<br />The first line will contain an integer, representing&nbsp;<em>age</em>.<br />The second line will contain a string, consisting of lower-case Latin characters ('a'-'z'), representing the&nbsp;<em>first_name</em>&nbsp;of a student.<br />The third line will contain another string, consisting of lower-case Latin characters ('a'-'z'), representing the&nbsp;<em>last_name</em>&nbsp;of a student.<br />The fourth line will contain an integer, representing the&nbsp;<em>standard</em>&nbsp;of student.</p>\n<p><em>Note:</em>&nbsp;The number of characters in&nbsp;<em>first_name</em>&nbsp;and&nbsp;<em>last_name</em>&nbsp;will not exceed 50.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Output will be of a single line, consisting of&nbsp;<em>age</em>,&nbsp;<em>first_name</em>,&nbsp;<em>last_name</em>&nbsp;and&nbsp;<em>standard</em>, each separated by one white space.</p>\n<p><em>P.S.:</em>&nbsp;I/O will be handled by HackerRank.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>15\njohn\ncarmack\n10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>15 john carmack 10</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2141872e-6af4-449f-866e-a5b669cb5ea1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Structs.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9361"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "class",
  "tags": [],
  "level": "BEGINNER",
  "title": "Class",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Classes in C++ are user defined types declared with keyword class that has data and functions . Although classes and structures have the same type of functionality, there are some basic differences. The data members of a class are private by default and the members of a structure are public by default. Along with storing multiple data in a common block, it also assigns some functions (known as methods) to manipulate/access them. It serves as the building block of Object Oriented Programming.</p>\n<p>It also has access specifiers, which restrict the access of member elements. The primarily used ones are the following:</p>\n<ul>\n<li>public:&nbsp;Public members (variables, methods) can be accessed from anywhere the code is visible.</li>\n<li>private:&nbsp;Private members can be accessed only by other member functions, and it can not be accessed outside of class.</li>\n</ul>\n<p>Class can be represented in the form of</p>\n<pre><code>class ClassName {\n    access_specifier1:\n        type1 val1;\n        type2 val2;\n        ret_type1 method1(type_arg1 arg1, type_arg2 arg2,...)\n        ...\n    access_specifier2:\n        type3 val3;\n        type4 val4;\n        ret_type2 method2(type_arg3 arg3, type_arg4 arg4,...)\n        ...\n};\n</code></pre>\n<p>It's a common practice to make all variables private, and set/get them using public methods. For example:</p>\n<pre><code>class SampleClass {\n    private:\n        int val;\n    public:\n        void set(int a) {\n            val = a;\n        }\n        int get() {\n            return val;\n        }\n};\n</code></pre>\n<hr />\n<p>We can store details related to a student in a class consisting of his&nbsp;age (int), first_name (string), last_name (string) and standard (int).<br /><br />You have to create a class, named&nbsp;Student, representing the student's details, as mentioned above, and store the data of a student. Create setter and getter functions for each element; that is, the class should at least have following functions:</p>\n<ul>\n<li>get_age,&nbsp;set_age</li>\n<li>get_first_name,&nbsp;set_first_name</li>\n<li>get_last_name,&nbsp;set_last_name</li>\n<li>get_standard,&nbsp;set_standard</li>\n</ul>\n<p>Also, you have to create another method&nbsp;to_string()&nbsp;which returns the string consisting of the above elements, separated by a comma(,). You can refer to&nbsp;stringstream&nbsp;for this.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Input will consist of four lines.<br />The first line will contain an integer, representing the&nbsp;age. The second line will contain a string, consisting of lower-case Latin characters ('a'-'z'), representing the&nbsp;first_name&nbsp;of a student.<br />The third line will contain another string, consisting of lower-case Latin characters ('a'-'z'), representing the&nbsp;last_name&nbsp;of a student.<br />The fourth line will contain an integer, representing the&nbsp;standard&nbsp;of student.</p>\n<p>Note:&nbsp;The number of characters in&nbsp;first_name&nbsp;and&nbsp;last_name&nbsp;will not exceed 50.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The code provided by HackerRank will use your class members to set and then get the elements of the&nbsp;Student&nbsp;class.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>15\njohn\ncarmack\n10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>15\ncarmack, john\n10\n\n15,john,carmack,10</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8aa5b47a-db21-4878-aaca-a34189a10659",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Class.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9362"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "box-it",
  "tags": [],
  "level": "BEGINNER",
  "title": "Box It!",
  "content": "<p>Design a class named Box whose dimensions are integers and private to the class. The dimensions are labelled: length $l$, breadth $b$, and height $h$.<br />The default constructor of the class should initialize $l, b$, and $h$ to 0 . The parameterized constructor Box(int length, int breadth, int height) should initialize Box's $l, b$ and $h$ to length, breadth and height.</p>\n<p>The copy constructor $\\operatorname{Box}\\left(\\right.$ Box $B$ ) should set $l, b$ and $h$ to $B^{\\prime} s l, b$ and $h$ , respectively.<br />Apart from the above, the class should have 4 functions:<br />- int getLength() - Return box's length<br />- int getBreadth() - Return box's breadth<br />- int getHeight() - Return box's height<br />- long long CalculateVolume() - Return the volume of the box<br />Overload the operator $&lt;$ for the class Box. Box $A&lt;$ Box $B$ if:<br />1. $A . l&lt;B . l$<br />2. A. $b&lt;B . b$ and $A \\cdot l=B . l$<br />3. A. $h&lt;B . h$ and $A . b=B . b$ and $A . l==B . l$</p>\n<p>Overload operator $&lt;&lt;$ for the class Box().<br />If $B$ is an object of class Box:<br />cout $&lt;&lt;B$ should print $B . l, B . b$ and $B . h$ on a single line separated by spaces.<br />For example,</p>\n<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"n\">Box</span> <span class=\"n\">b1</span><span class=\"p\">;</span> <span class=\"c1\">// Should set b1.l = b1.b = b1.h = 0;</span>\n<span class=\"n\">Box</span> <span class=\"nf\">b2</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">);</span> <span class=\"c1\">// Should set b1.l = 2, b1.b = 3, b1.h = 4;</span>\n<span class=\"n\">b2</span><span class=\"p\">.</span><span class=\"n\">getLength</span><span class=\"p\">();</span>\t<span class=\"c1\">// Should return 2</span>\n<span class=\"n\">b2</span><span class=\"p\">.</span><span class=\"n\">getBreadth</span><span class=\"p\">();</span> <span class=\"c1\">// Should return 3</span>\n<span class=\"n\">b2</span><span class=\"p\">.</span><span class=\"n\">getheight</span><span class=\"p\">();</span>\t<span class=\"c1\">// Should return 4</span>\n<span class=\"n\">b2</span><span class=\"p\">.</span><span class=\"n\">CalculateVolume</span><span class=\"p\">();</span> <span class=\"c1\">// Should return 24</span>\n<span class=\"kt\">bool</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">b1</span> <span class=\"o\">&lt;</span> <span class=\"n\">b2</span><span class=\"p\">);</span>\t<span class=\"c1\">// Should return true based on the conditions given</span>\n<span class=\"n\">cout</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">b2</span><span class=\"p\">;</span> <span class=\"c1\">// Should print 2 3 4 in order.</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n<p>$$<br />0 \\leq l, b, h \\leq 10^{5}<br />$$<br />Two boxes being compared using the $&lt;$ operator will not have all three dimensions equal.</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2bed0880-25f1-4dde-b929-a98ce8d42796",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Box It!.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9363"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "inherited-code",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Inherited Code",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You inherited a piece of code that performs username validation for your company's website. The existing function works reasonably well, but it throws an exception when the username is too short. Upon review, you realize that nobody ever defined the exception.</p>\n<p>The inherited code is provided for you in the locked section of your editor. Complete the code so that, when an exception is thrown, it prints&nbsp;<code>Too short: n</code> (where $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is the length of the given username).</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer, $i$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of test cases.<br />Each of the $t$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> subsequent lines describes a test case as a single username string, $u$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n<p><span class=\"MathJax_SVG\">$$<br />\\begin{aligned}<br />&amp;1 \\leq t \\leq 1000 \\\\<br />&amp;1 \\leq|u| \\leq 100<br />\\end{aligned}<br />$$<br />The username consists only of uppercase and lowercase letters.</span></p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>You are not responsible for directly printing anything to stdout. If your code is correct, the locked stub code in your editor will print either&nbsp;<code>Valid</code>&nbsp;(if the username is valid),&nbsp;<code>Invalid</code>&nbsp;(if the username is invalid), or&nbsp;<code>Too short: n</code> (where $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is the length of the too-short username) on a new line for each test case.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\nPeter\nMe\nArxwwz\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Valid\nToo short: 2\nInvalid\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Username&nbsp;<code>Me</code> is too short because it only contains $2$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;characters, so your exception prints <code>Too short: 2</code><span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>.<br />All other validation is handled by the locked code in your editor.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/aa4cf5f6-b61b-424d-b99b-1f8e22a991e8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Inherited Code.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9364"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "exceptional-server",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Exceptional Server",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>In this challenge, you are required to handle error messages while working with small computational server that performs complex calculations.<br />It has a function that takes $2$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;large numbers as its input and returns a numeric result. Unfortunately, there are various exceptions that may occur during execution.</p>\n<p>Complete the code in your editor so that it prints appropriate error messages, should anything go wrong. The expected behavior is defined as follows:</p>\n<ul>\n<li>If the&nbsp;compute&nbsp;function runs fine with the given arguments, then print the result of the function call.</li>\n<li>If it fails to allocate the memory that it needs, print&nbsp;<code>Not enough memory</code>.</li>\n<li>If any other standard C++ exception occurs, print&nbsp;<code>Exception: S</code> where $S$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is the exception's error message.</li>\n<li>If any non-standard exception occurs, print&nbsp;<code>Other Exception</code>.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer, $T$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of test cases.<br />Each of the $T$ subsequent lines describes a test case as $2$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> space-separated integers, $A$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> and $B$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, respectively.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n<p>$1 \\leq T \\leq 10^{3}$<br />$0 \\leq A, B \\leq 2^{60}$</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For each test case, print a single line containing whichever message described in the&nbsp;Problem Statement&nbsp;above is appropriate. After all messages have been printed, the locked stub code in your editor prints the server load.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>2\n-8 5\n1435434255433 5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Exception: A is negative\nNot enough memory\n2\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;-8 is negative, hence 'Exception: A is negative' is thrown. Since the second input is too large, 'not enough memory' is displayed. 2<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is the server load.</p>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1a559972-dd8f-4d76-a1cf-7fab427144f3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Exceptional Server.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9365"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "virtual-functions",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Virtual Functions",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>This problem is to get you familiar with virtual functions. Create three classes&nbsp;Person, Professor&nbsp;and&nbsp;Student. The class&nbsp;Person&nbsp;should have data members name and age. The classes&nbsp;Professor&nbsp;and&nbsp;Student&nbsp;should inherit from the class&nbsp;Person.</p>\n<p>The class&nbsp;Professor&nbsp;should have two integer members:&nbsp;publications&nbsp;and cur_id. There will be two member functions:&nbsp;getdata&nbsp;and&nbsp;putdata. The function&nbsp;getdata&nbsp;should get the input from the user: the&nbsp;name, age&nbsp;and&nbsp;publications&nbsp;of the professor. The function&nbsp;putdata&nbsp;should print the&nbsp;name, age, publications&nbsp;and the cur_id of the professor.</p>\n<p>The class&nbsp;Student&nbsp;should have two data members:&nbsp;marks, which is an array of size $6$&nbsp;and cur_id. It has two member functions:&nbsp;getdata&nbsp;and&nbsp;putdata. The function&nbsp;getdata&nbsp;should get the input from the user: the&nbsp;name, age, and the&nbsp;marks of the student in $6$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;subjects. The function&nbsp;putdata&nbsp;should print the&nbsp;name, age,&nbsp;sum&nbsp;of the marks and the cur_id of the student.</p>\n<p>For each object being created of the&nbsp;Professor&nbsp;or the&nbsp;Student class, sequential id's should be assigned to them starting from $1$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p>Solve this problem using virtual functions, constructors and static variables. You can create more data members if you want.</p>\n<p><strong>Note:</strong>&nbsp;Expand the main function to look at how the input is being handled.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line of input contains the number of objects that are being created. If the first line of input for each object is $1$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, it means that the object being created is of the&nbsp;Professor&nbsp;class, you will have to input the&nbsp;name, age&nbsp;and&nbsp;publications&nbsp;of the professor.</p>\n<p>If the first line of input for each object is $2$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>, it means that the object is of the&nbsp;Student&nbsp;class, you will have to input the&nbsp;name, age&nbsp;and the&nbsp;marks of the student in $6$&nbsp;subjects.</p>\n<p><strong>Constraints</strong></p>\n<p>$1 \\leq$ len $_{\\text {name }} \\leq 100$, where len $_{\\text {name }}$ is the length of the name.</p>\n<p>$1 \\leq$ age $\\leq 80$<br />$1 \\leq$ publications $\\leq 1000$<br />$0 \\leq$ marks $\\leq 100$, where marks is the marks of the student in each subject.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>There are two types of output depending on the object.</p>\n<p>If the object is of type&nbsp;Professor, print the space separated&nbsp;name, age, publications&nbsp;and&nbsp;id&nbsp;on a new line.</p>\n<p>If the object is of the&nbsp;Student&nbsp;class, print the space separated&nbsp;name, age, the&nbsp;sum of the marks in $6$&nbsp;subjects and&nbsp;id&nbsp;on a new line.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>4\n1\nWalter 56 99\n2\nJesse 18 50 48 97 76 34 98\n2\nPinkman 22 10 12 0 18 45 50\n1\nWhite 58 87\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Walter 56 99 1\nJesse 18 403 1\nPinkman 22 135 2\nWhite 58 87 2</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/03264abc-cbf8-40e9-a95d-88bb33273422",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Virtual Functions.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9366"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 20,
  "slug": "abstract-classes-polymorphism",
  "tags": [],
  "level": "EXPERT",
  "title": "Abstract Classes - Polymorphism",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Abstract base classes in C++ can only be used as base classes. Thus, they are allowed to have virtual member functions without definitions.</p>\n<p>A cache is a component that stores data so future requests for that data can be served faster. The data stored in a cache might be the results of an earlier computation, or the duplicates of data stored elsewhere. A cache hit occurs when the requested data can be found in a cache, while a cache miss occurs when it cannot. Cache hits are served by reading data from the cache which is faster than recomputing a result or reading from a slower data store. Thus, the more requests that can be served from the cache, the faster the system performs.</p>\n<p>One of the popular cache replacement policies is: \"least recently used\" (LRU). It discards the least recently used items first.</p>\n<p>For example, if a cache with a capacity to store 5 keys has the following state(arranged from most recently used key to least recently used key) -</p>\n<pre><code>5 3 2 1 4\n</code></pre>\n<p>Now, If the next key comes as 1(which is a cache hit), then the cache state in the same order will be -</p>\n<pre><code>1 5 3 2 4\n</code></pre>\n<p>Now, If the next key comes as 6(which is a cache miss), then the cache state in the same order will be -</p>\n<pre><code>6 1 5 3 2\n</code></pre>\n<p>You can observe that 4 has been discarded because it was the least recently used key and since the capacity of cache is 5, it could not be retained in the cache any longer.</p>\n<p><strong>Given an abstract base class&nbsp;Cache&nbsp;with member variables and functions</strong>:</p>\n<p>mp&nbsp;- Map the key to the node in the linked list<br />cp&nbsp;- Capacity<br />tail&nbsp;- Double linked list tail pointer<br />head&nbsp;- Double linked list head pointer<br />set()&nbsp;- Set/insert the value of the key, if present, otherwise add the key as the most recently used key. If the cache has reached its capacity, it should replace the least recently used key with a new key.<br />get()&nbsp;- Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.</p>\n<p>You have to write a class&nbsp;LRUCache&nbsp;which extends the class&nbsp;Cache&nbsp;and uses the member functions and variables to implement an LRU cache.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n<p>&nbsp;</p>\n<p>First line of input will contain the $N$ number of lines containing get or set commands followed by the capacity $M$ of the cache. The following $N$ lines can either contain get or set commands.</p>\n<p>An input line starting with get will be followed by a key to be found in the cache. An input line starting with set will be followed by the key and value respectively to be inserted/replaced in the cache.<br />Constraints<br />$$<br />\\begin{aligned}<br />&amp;1&lt;=N&lt;=500000 \\\\<br />&amp;1&lt;=M&lt;=1000 \\\\<br />&amp;1&lt;=k e y&lt;=20 \\\\<br />&amp;1&lt;=\\text { value }&lt;=2000<br />\\end{aligned}<br />$$</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The code provided in the editor will use your derived class&nbsp;LRUCache&nbsp;to output the value whenever a get command is encountered.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3 1\nset 1 2\nget 1\nget 2\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>2\n-1\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Since, the capacity of the cache is 1, the first&nbsp;set&nbsp;results in setting up the key 1 with it's value 2. The first&nbsp;get&nbsp;results in a cache hit of key 1, so 2 is printed as the value for the first&nbsp;get. The second&nbsp;get&nbsp;is a cache miss, so -1 is printed.</p>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8908db8b-9853-4973-9ed6-61a864fdd934",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Abstract Classes - Polymorphism.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9367"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "vector-sort",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vector-Sort",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are given $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> integers.Sort the $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integers and print the sorted order.<br />Store the $N$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integers in a vector.Vectors are sequence containers representing arrays that can change in size.</p>\n<ul>\n<li>\n<p>Declaration:</p>\n<pre><code>vector&lt;int&gt;v; (creates an empty vector of integers)\n</code></pre>\n</li>\n<li>\n<p>Size:</p>\n<pre><code>int size=v.size();\n</code></pre>\n</li>\n<li>\n<p>Pushing an integer into a vector:</p>\n<pre><code>v.push_back(x);(where x is an integer.The size increases by 1 after this.)\n</code></pre>\n</li>\n<li>\n<p>Popping the last element from the vector:</p>\n<pre><code>v.pop_back(); (After this the size decreases by 1)\n</code></pre>\n</li>\n<li>\n<p>Sorting a vector:</p>\n<pre><code>sort(v.begin(),v.end()); (Will sort all the elements in the vector)\n</code></pre>\n</li>\n</ul>\n<p>To know more about vectors,&nbsp;<a href=\"http://www.cplusplus.com/reference/vector/vector/\">Click Here</a></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n<p>The first line of the input contains $N$ where $N$ is the number of integers. The next line contains $N$ integers.<br /><strong>Constraints</strong><br />$$<br />1&lt;=N&lt;=10^{5}<br />$$<br />$1&lt;=V_{i}&lt;=10^{9}$, where $V_{i}$ is the $i^{t h}$ integer in the vector.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Print the integers in the sorted order one by one in a single line followed by a space.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>5\n1 6 10 8 4\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>1 4 6 8 10</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7ae9731a-0427-4476-b531-ae2c5d25f7b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Vector-Sort.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9368"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "vector-erase",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vector-Erase",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are provided with a vector of $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> integers. Then, you are given $2$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> queries. For the first query, you are provided with $1$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> integer, which denotes a position in the vector. The value at this position in the vector needs to be erased. The next query consists of $2$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integers denoting a range of the positions in the vector. The elements which fall under that range should be removed. The second query is performed on the updated vector which we get after performing the first query.<br />The following are some useful vector functions:</p>\n<ul>\n<li>\n<p>erase(int position):</p>\n<pre><code>Removes the element present at position.  \nEx: v.erase(v.begin()+4); (erases the fifth element of the vector v)\n</code></pre>\n</li>\n<li>\n<p>erase(int start,int end):</p>\n<pre><code>Removes the elements in the range from start to end inclusive of the start and exclusive of the end.\nEx:v.erase(v.begin()+2,v.begin()+5);(erases all the elements from the third element to the fifth element.)\n</code></pre>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line of the input contains an integer $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>.The next line contains $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> space separated integers(1-based index).The third line contains a single integer $x$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>,denoting the position of an element that should be removed from the vector.The fourth line contains two integers $a$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> and $b$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span> denoting the range that should be erased from the vector inclusive of a and exclusive of b.</p>\n<p><strong>Constraints</strong><br /><span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span>$1 \\leq N \\leq 10^{5}$<br />$1 \\leq x \\leq N$<br />$1 \\leq a&lt;b \\leq N$<br /><span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Print the size of the vector in the first line and the elements of the vector after the two erase operations in the second line separated by space.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>6\n1 4 6 2 8 9\n2\n2 4\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\n1 8 9\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>The first query is to erase the 2nd element in the vector, which is 4. Then, modifed vector is {1 6 2 8 9}, we want to remove the range of 2~4, which means the 2nd and 3rd elements should be removed. Then 6 and 2 in the modified vector are removed and we finally get {1 8 9}</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4c729652-9b63-4f2f-8168-4ece68dac555",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Vector-Erase.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9369"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "lower-bound-stl",
  "tags": [],
  "level": "BEGINNER",
  "title": "Lower Bound-STL",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are given $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> integers in sorted order. Also, you are given $Q$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;queries. In each query, you will be given an integer and you have to tell whether that integer is present in the array. If so, you have to tell at which index it is present and if it is not present, you have to tell the index at which the smallest integer that is just greater than the given number is present.</p>\n<p>Lower bound is a function that can be used with a sorted vector. Learn how to use lower bound to solve this problem by&nbsp;<a href=\"http://www.cplusplus.com/reference/algorithm/lower_bound/\">clicking here</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line of the input contains the number of integers $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>. The next line contains $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> integers in sorted order. The next line contains $Q$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>, the number of queries. Then $Q$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> lines follow each containing a single integer $Y$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p>Note: If the same number is present multiple times, you have to print the first index at which it occurs. Also, the input is such that you always have an answer for each query.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">$1 \\leq N \\leq 10^{5}$<br />$1 \\leq X_{i} \\leq 10^{9}$, where $X_{i}$ is $i^{\\text {th }}$ element in the array.<br />$1 \\leq Q \\leq 10^{5}$<br />$1 \\leq Y \\leq 10^{9}$</div>\n<div class=\"hackdown-content\">\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For each query you have to print \"Yes\" (without the quotes) if the number is present and at which index(1-based) it is present separated by a space.</p>\n<p>If the number is not present you have to print \"No\" (without the quotes) followed by the index of the next smallest number just greater than that number.</p>\n<p>You have to output each query in a new line.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code> 8\n 1 1 2 2 6 9 9 15\n 4\n 1\n 4\n 9\n 15\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code> Yes 1\n No 5\n Yes 6\n Yes 8</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f76e74c4-d186-429a-9adf-df413400e01f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Lower Bound-STL.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936a"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "sets-stl",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sets-STL",
  "content": "<p>Sets are a part of the C++ STL. Sets are containers that store unique elements following a specific order. Here are some of the frequently used member functions of sets:</p>\n<ul>\n<li>\n<p>Declaration:</p>\n<pre><code>set&lt;int&gt;s; //Creates a set of integers.\n</code></pre>\n</li>\n<li>\n<p>Size:</p>\n<pre><code>int length=s.size(); //Gives the size of the set.\n</code></pre>\n</li>\n<li>\n<p>Insert:</p>\n<pre><code>s.insert(x); //Inserts an integer x into the set s.\n</code></pre>\n</li>\n<li>\n<p>Erasing an element:</p>\n<pre><code>s.erase(val); //Erases an integer val from the set s.\n</code></pre>\n</li>\n<li>\n<p>Finding an element:</p>\n<pre><code>set&lt;int&gt;::iterator itr=s.find(val); //Gives the iterator to the element val if it is found otherwise returns s.end() .\nEx: set&lt;int&gt;::iterator itr=s.find(100); //If 100 is not present then it==s.end().\n</code></pre>\n<p>To know more about sets&nbsp;<a href=\"http://www.cplusplus.com/reference/set/set/\">click Here</a>. Coming to the problem, you will be given $Q$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;queries. Each query is of one of the following three types:</p>\n$1 x$ : Add an element $x$ to the set.<br />$2 x:$ Delete an element $x$ from the set. (If the number $x$ is not present in the set, then do nothing).<br />$3 x$ : If the number $x$ is present in the set, then print \"Yes\"(without quotes) else print \"No\"(without quotes).</li>\n</ul>\n<p><strong>Input Format</strong><br />The first line of the input contains $Q$ where $Q$ is the number of queries. The next $Q$ lines contain 1 query each. Each query consists of two integers $y$ and $x$ where $y$ is the type of the query and $x$ is an integer.<br /><strong>Constraints</strong><br />$$<br />\\begin{aligned}<br />&amp;1&lt;=Q&lt;=10^{5} \\\\<br />&amp;1&lt;=y&lt;=3 \\\\<br />&amp;1&lt;=x&lt;=10^{9}<br />\\end{aligned}<br />$$</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For queries of type $3$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> print \"Yes\"(without quotes) if the number $x$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is present in the set and if the number is not present, then print \"No\"(without quotes).<br />Each query of type $3$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;should be printed in a new line.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>8\n1 9\n1 6\n1 10\n1 4\n3 6\n3 14\n2 6\n3 6\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Yes\nNo\nNo</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6a41292c-05ff-47b3-b9e5-9a17074583df",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Sets-STL.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "maps-stl",
  "tags": [],
  "level": "BEGINNER",
  "title": "Maps-STL",
  "content": "<p>Maps are a part of the C++ STL.Maps are associative containers that store elements formed by a combination of a key value and a mapped value, following a specific order.The mainly used member functions of maps are:</p>\n<ul>\n<li>\n<p>Map Template:</p>\n<pre><code>std::map &lt;key_type, data_type&gt;\n</code></pre>\n</li>\n<li>\n<p>Declaration:</p>\n<pre><code>map&lt;string,int&gt;m; //Creates a map m where key_type is of type string and data_type is of type int.\n</code></pre>\n</li>\n<li>\n<p>Size:</p>\n<pre><code>int length=m.size(); //Gives the size of the map.\n</code></pre>\n</li>\n<li>\n<p>Insert:</p>\n<pre><code>m.insert(make_pair(\"hello\",9)); //Here the pair is inserted into the map where the key is \"hello\" and the value associated with it is 9.\n</code></pre>\n</li>\n<li>\n<p>Erasing an element:</p>\n<pre><code>m.erase(val); //Erases the pair from the map where the key_type is val.\n</code></pre>\n</li>\n<li>\n<p>Finding an element:</p>\n<pre><code>map&lt;string,int&gt;::iterator itr=m.find(val); //Gives the iterator to the element val if it is found otherwise returns m.end() .\nEx: map&lt;string,int&gt;::iterator itr=m.find(\"Maps\"); //If Maps is not present as the key value then itr==m.end().\n</code></pre>\n</li>\n<li>\n<p>Accessing the value stored in the key:</p>\n<pre><code>To get the value stored of the key \"MAPS\" we can do m[\"MAPS\"] or we can get the iterator using the find function and then by itr-&gt;second we can access the value.\n</code></pre>\n</li>\n</ul>\n<p>To know more about maps&nbsp;<a href=\"http://www.cplusplus.com/reference/map/map/\">click Here</a>.</p>\n<p>You are appointed as the assistant to a teacher in a school and she is correcting the answer sheets of the students.Each student can have multiple answer sheets.So the teacher has $Q$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;queries:</p>\n<p>$1 X Y$ :Add the marks $Y$ to the student whose name is $X$.<br />$2 X$ : Erase the marks of the students whose name is $X$.<br />$3 X$ : Print the marks of the students whose name is $X$. (If $X$ didn't get any marks print $0 .$ )<br /><strong>Input Format</strong><br />The first line of the input contains $Q$ where $Q$ is the number of queries. The next $Q$ lines contain 1 query each. The first integer, type of each query is the type of the query.If query is of type $\\mathbf{1}$, it consists of one string and an integer $X$ and $Y$ where $X$ is the name of the student and $Y$ is the marks of the student.If query is of type 2 or 3 it consists of a single string $X$ where $X$ is the name of the student.<br /><strong>Constraints</strong><br />$$<br />\\begin{aligned}<br />&amp;1 \\leq Q \\leq 10^{5} \\\\<br />&amp;1 \\leq \\text { type } \\leq 3 \\\\<br />&amp;1 \\leq|X| \\leq 6 \\\\<br />&amp;1 \\leq Y \\leq 10^{3}<br />\\end{aligned}<br />$$</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For queries of type $3$&nbsp;print the marks of the given student.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>7\n1 Jesse 20\n1 Jess 12\n1 Jess 18\n3 Jess\n3 Jesse\n2 Jess\n3 Jess\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>30\n20\n0</code></pre>\n</div>\n</div>\n</div>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bc81d3d7-a25c-457a-a383-23495d6bf827",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Maps-STL.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936c"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "print-pretty-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Print Pretty",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Given a text file with many lines of numbers to format and print, for each row of $3$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;space-separated doubles, format and print the numbers using the specifications in the&nbsp;<em>Output Format</em>&nbsp;section below.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer, $T$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of test cases.<br />Each of the $T$ subsequent lines describes a test case as $3$ space-separated floating-point numbers: $A$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>, $B$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, and $C$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>, respectively.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$1 \\leq T \\leq 1000$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>Each number will fit into a double.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For each test case, print $3$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> lines containing the formatted $A$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>, $B$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, and $C$, respectively. Each $A$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>, $B$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, and $C$&nbsp;must be formatted as follows:</p>\n<ol>\n<li><span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span>$A$: Strip its decimal (i.e., truncate it) and print its hexadecimal representation (including the $0x$<span id=\"MathJax-Element-9-Frame\" class=\"MathJax_SVG\"></span>&nbsp;prefix) in lower case letters.</li>\n<li><span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span>$B$: Print it to a scale of <span id=\"MathJax-Element-11-Frame\" class=\"MathJax_SVG\"></span>$2$decimal places, preceded by a $+$<span id=\"MathJax-Element-12-Frame\" class=\"MathJax_SVG\"></span> or $-$<span id=\"MathJax-Element-13-Frame\" class=\"MathJax_SVG\"></span> sign (indicating if it's positive or negative), right justified, and left-padded with underscores so that the printed result is exactly $15$&nbsp;characters wide.</li>\n<li><span id=\"MathJax-Element-15-Frame\" class=\"MathJax_SVG\"></span>$C$: Print it to a scale of exactly nine decimal places, expressed in scientific notation using upper case.</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>1  \n100.345 2006.008 2331.41592653498\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>0x64             \n_______+2006.01  \n2.331415927E+03\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n<p>For the first line of output, $(100)_{10} \\rightarrow(64)_{16}$ (in reverse, $\\left.6 \\times 16^{1}+4 \\times 16^{0}=(100)_{10}\\right)$. </p>\n<p>The second and third lines of output are formatted as described in the Output Format section.</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8696d6ea-9e69-4626-996a-0d41936d09f6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Print Pretty.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936d"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "deque-stl",
  "tags": [],
  "level": "BEGINNER",
  "title": "Deque-STL",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Double ended queue or Deque(part of C++ STL) are sequence containers with dynamic sizes that can be expanded or contracted on both ends (either its front or its back). The member functions of deque that are mainly used are:</p>\n<ul>\n<li>\n<p><em>Deque Template:</em></p>\n<pre><code>std::deque&lt;value_type&gt;\n</code></pre>\n</li>\n<li>\n<p><em>Declaration:</em></p>\n<pre><code>deque&lt;int&gt; mydeque; //Creates a double ended queue of deque of int type\n</code></pre>\n</li>\n<li>\n<p><em>Size</em></p>\n<pre><code>int length = mydeque.size(); //Gives the size of the deque\n</code></pre>\n</li>\n<li>\n<p><em>Push</em></p>\n<pre><code>mydeque.push_back(1); //Pushes element at the end\nmydeque.push_front(2); //Pushes element at the beginning\n</code></pre>\n</li>\n<li>\n<p><em>Pop</em></p>\n<pre><code>mydeque.pop_back(); //Pops element from the end\nmydeque.pop_front(); //Pops element from the beginning\n</code></pre>\n</li>\n<li>\n<p><em>Empty</em></p>\n<pre><code>mydeque.empty() //Returns a boolean value which tells whether the deque is empty or not\n</code></pre>\n</li>\n</ul>\n<p>To know more about deque,&nbsp;<a href=\"http://www.cplusplus.com/reference/deque/deque/\">click here</a></p>\n<p>Given a set of arrays of size $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> and an integer $K$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>, you have to find the maximum integer for each and every contiguous subarray of size $N$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;for each of the given arrays.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>First line of input will contain the number of test cases&nbsp;<em>T</em>. For each test case, you will be given the size of array&nbsp;<em>N</em>&nbsp;and the size of subarray to be used&nbsp;<em>K</em>. This will be followed by the elements of the array&nbsp;<em>A<sub>i</sub></em>.</p>\n<p><strong>Constraints</strong></p>\n<p>$1&lt;=T&lt;=1000$</p>\n<p>$1&lt;=N&lt;=10000$</p>\n<p>$1&lt;=K&lt;=N$</p>\n<p>$1&lt;=A_{i}&lt;=10000$, where $A_{i}$ is the $i^{\\text {th }}$ element in the array $A .$</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>For each of the contiguous subarrays of size $K$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;of each array, you have to print the maximum integer.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>2\n5 2\n3 4 6 3 4\n7 4\n3 4 5 8 1 4 10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>4 6 6 4\n8 8 8 10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>For the first case, the contiguous subarrays of size 2 are {3,4},{4,6},{6,3} and {3,4}. The 4 maximum elements of subarray of size 2 are: 4 6 6 4.<br /><br />For the second case,the contiguous subarrays of size 4 are {3,4,5,8},{4,5,8,1},{5,8,1,4} and {8,1,4,10}. The 4 maximum element of subarray of size 4 are: 8 8 8 10.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c02f36db-f3bc-451d-95bb-8a44725376af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Deque-STL.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936e"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "inheritance-introduction",
  "tags": [],
  "level": "BEGINNER",
  "title": "Inheritance Introduction",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>One of the important topics of Object Oriented Programming is Inheritance. Inheritance allows us to define a class in terms of another class, which allows us in the reusability of the code.Check out the code below:</p>\n<pre><code>class Triangle{\n    public:\n        void triangle(){\n            cout&lt;&lt;\"I am a triangle\\n\";\n        }\n};\n</code></pre>\n<p>The class Triangle has a function called triangle(). Now we create a class derived from the base class Triangle called Isosceles.</p>\n<pre><code>class Isosceles : public Triangle{\n    public:\n        void isosceles(){\n            cout&lt;&lt;\"I am an isosceles triangle\\n\";\n        }\n};\n</code></pre>\n<p>Now we can create a derived class object and use it to access the functions of the base class.</p>\n<pre><code>int main(){\n    Isosceles isc;\n    isc.isosceles();\n    isc.triangle();\n    return 0;\n}\n</code></pre>\n<p>This code will print:</p>\n<pre><code>I am an isosceles triangle\nI am a triangle\n</code></pre>\n<p>Now write a function in Isosceles class such that the output is as given below.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>I am an isosceles triangle\nIn an isosceles triangle two sides are equal\nI am a triangle</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3d28020c-67e9-4b6f-bf8c-0ffba023ec40",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Inheritance Introduction.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef936f"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "hotel-prices",
  "tags": [],
  "level": "BEGINNER",
  "title": "Hotel Prices",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>In this challenge, the task is to debug the existing code to successfully execute all provided test files.</p>\n<hr />\n<p>The given code defines two classes&nbsp;<code>HotelRoom</code>&nbsp;and&nbsp;<code>HotelApartment</code>&nbsp;denoting respectively a standard hotel room and a hotel apartment. An instance of any of these classes has two parameters:&nbsp;<code>bedrooms</code>&nbsp;and&nbsp;<code>bathrooms</code>&nbsp;denoting respectively the number of bedrooms and the number of bathrooms in the room.</p>\n<p>The prices of a standard hotel room and hotel apartment are given as:</p>\n<ul>\n<li>Hotel Room: &nbsp;$50 \\cdot$ bedrooms $+100 \\cdot$ bathrooms.<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>.</li>\n<li>Hotel Apartment: The price of a standard room with the same number bedrooms and bathrooms plus $100$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>.</li>\n</ul>\n<p>For example, if a standard room costs $200$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>, then an apartment with the same number of bedrooms and bathrooms costs $300$.</p>\n<p>In hotel's codebase, there is a piece of code reading the list of rooms booked for today and calculates the total profit for the hotel. However, sometimes calculated profits are lower than they should be.</p>\n<p>Debug the existing&nbsp;<code>HotelRoom</code>&nbsp;and&nbsp;<code>HotelApartment</code>&nbsp;classes' implementations so that the existing code computing the total profit returns a correct profit.</p>\n<p>Your function will be tested against several cases by the locked template code.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The input is read by the provided locked code template.<br />In the first line, there is a single integer $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;denoting the number of rooms booked for today.<br />After that $n$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;lines follow. Each of these lines begins with a&nbsp;<code>room_type</code>&nbsp;which is either&nbsp;<code>standard</code>&nbsp;or&nbsp;<code>apartment</code>, and is followed by the number of bedrooms and the number of bathrooms in this room.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$1 \\leq n \\leq 100$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>There is at least $1$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> and at most $5$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;bedrooms in a room</li>\n<li>There is at least $1$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> and at most $5$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>&nbsp;bathrooms in a room</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The output is produced by the provided and locked code template. It calculates the total profit by iterating through the vector of all rooms read from the input.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">2</span>\n<span class=\"err\">standard 3 1</span>\n<span class=\"err\">apartment 1 1</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">500</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation 0</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>In the sample we have one standard room with $3$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> bedrooms and $1$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> bathroom, and one apartment with one $1$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> bedrooms and $1$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;bathroom. The price for the room is $3 \\cdot 50+100=250$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>. The price for the apartment is $50+100+100=250$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>. Thus the hotel profit is $250+250=500$<span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span>&nbsp;as the sum of prices of both rooms.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d365466a-125b-4b7d-be4d-8cb885c82fb4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Hotel Prices.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9370"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "rectangle-area",
  "tags": [],
  "level": "BEGINNER",
  "title": "Rectangle Area",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>In this challenge, you are required to compute the area of a rectangle using classes.</p>\n<p>Create two classes:</p>\n<p><strong>Rectangle</strong></p>\n<p>The&nbsp;Rectangle&nbsp;class should have two data fields-width&nbsp;and&nbsp;height&nbsp;of&nbsp;int&nbsp;types. The class should have&nbsp;display()&nbsp;method, to print the&nbsp;width&nbsp;and&nbsp;height&nbsp;of the rectangle separated by space.</p>\n<p><strong>RectangleArea</strong></p>\n<p>The&nbsp;RectangleArea&nbsp;class is derived from&nbsp;Rectangle&nbsp;class, i.e., it is the sub-class of&nbsp;Rectangle&nbsp;class. The class should have&nbsp;read_input()&nbsp;method, to read the values of&nbsp;width&nbsp;and&nbsp;height&nbsp;of the rectangle. The&nbsp;RectangleArea&nbsp;class should also overload the&nbsp;display()&nbsp;method to print the area (width $\\times$ height)<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;of the rectangle.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first and only line of input contains two space separated integers denoting the width and height of the rectangle.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$1 \\leq$ width, height $\\leq 100$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The output should consist of exactly two lines:<br />In the first line, print the&nbsp;width&nbsp;and&nbsp;height&nbsp;of the rectangle separated by space.<br />In the second line, print the&nbsp;area&nbsp;of the rectangle.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>10 5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>10 5\n50\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n<p>As, width $=10$ and height $=5$, so area $=$ width $\\times$ height $=50$</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e94b7174-5d4d-4eb5-af64-7ea2c282c68f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Rectangle Area.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9371"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "multi-level-inheritance",
  "tags": [],
  "level": "BEGINNER",
  "title": "Multi Level Inheritance",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>This challenge is an extension of a previous challenge named Inheritance-Introduction. We highly recommend solving Inheritance-Introduction before solving this problem.</p>\n<p>In the previous problem, we learned about inheritance and how can a derived class object use the member functions of the base class.</p>\n<p>In this challenge, we explore multi-level inheritance. Suppose, we have a class A which is the base class and we have a class B which is derived from class A and we have a class C which is derived from class B, we can access the functions of both class A and class B by creating an object for class C. Hence, this mechanism is called&nbsp;multi-level inheritance. (B inherits A and C inherits B.)</p>\n<p>Create a class called&nbsp;Equilateral&nbsp;which inherits from&nbsp;Isosceles&nbsp;and should have a function such that the output is as given below.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>I am an equilateral triangle\nI am an isosceles triangle\nI am a triangle</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3eb392bb-0e37-428f-ad3e-04e499c532f4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Multi Level Inheritance.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9372"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "overloading-ostream-operator",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Overloading Ostream Operator",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>The task is to overload the &lt;&lt; operator for Person class in such a way that for&nbsp;<code>p</code>&nbsp;being an instance of class Person the result of:</p>\n<div class=\"highlight\">\n<pre><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">p</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\" \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"o\">&lt;</span><span class=\"n\">some_string_value</span><span class=\"o\">&gt;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n</pre>\n</div>\n<p>produces the following output:</p>\n<div class=\"highlight\">\n<pre><span class=\"n\">first_name</span><span class=\"o\">=&lt;</span><span class=\"n\">first_name</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"n\">last_name</span><span class=\"o\">=&lt;</span><span class=\"n\">last_name</span><span class=\"o\">&gt;</span> <span class=\"o\">&lt;</span><span class=\"n\">some_string_value</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<p>where:</p>\n<ul>\n<li><code>&lt;first_name&gt;</code>&nbsp;is the value of&nbsp;<code>p</code>'s&nbsp;<code>first_name_</code></li>\n<li><code>&lt;last_name&gt;</code>&nbsp;is the value of&nbsp;<code>p</code>'s&nbsp;<code>last_name_</code></li>\n<li><code>&lt;some_string_value&gt;</code>&nbsp;is an arbitrary&nbsp;<code>std::string value</code></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The input is read by the provided locked code template. In the only line of the input there are 3 space-separated strings&nbsp;<code>first_name</code>,&nbsp;<code>last_name</code>,&nbsp;<code>event</code>. The values of&nbsp;<code>first_name</code>&nbsp;and&nbsp;<code>last_name</code>&nbsp;will be used to create an object&nbsp;<code>p</code>&nbsp;of type Person. The value of&nbsp;<code>event</code>&nbsp;will be used by the provided code to produce the output.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>Each word in the input contains only English letters and is no longer than 15 characters</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The output should be produced by the provided locked code template. This code will use the implementation of Person public methods and the overloaded&nbsp;<code>&lt;&lt;</code>&nbsp;operator to produce the output. Specifically, the output wiil be produced by the following code:</p>\n<div class=\"highlight\">\n<pre><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">p</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\" \"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">event</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">john doe registered</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">first_name=john,last_name=doe registered</span></pre>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d9e1c352-e63d-46d3-810a-bffc234d31a9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Overloading Ostream Operator.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9373"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "messages-order",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Messages Order",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>In real life applications and systems, a common component is a messaging system. Thea idea is that a sender sends messages to the recipient. The messages might be sent for example over the network. However, some network protocols don't guarantee to preserve the order of sent messages while they are received by the recipient. For example, if someone sends a text messages&nbsp;<code>hello</code>,&nbsp;<code>hi</code>&nbsp;and&nbsp;<code>what's up</code>, they might be received in the order&nbsp;<code>what's up</code>,&nbsp;<code>hello</code>,&nbsp;<code>hi</code>. In many systems the expected behavior is to preserve the order, so the order of sent messages is the same as the order of received messages.</p>\n<p>In this problem, the task is to implement a software layer over the top of a network protocol sending messages in arbitrary order, in such a way that the sent messages are printed by the recipient in the order they were sent.</p>\n<p>In the template code below, there are implementations of classes&nbsp;<code>Recipient</code>&nbsp;and&nbsp;<code>Network</code>.</p>\n<p>Your task is to implement classes&nbsp;<code>Message</code>&nbsp;and&nbsp;<code>MessageFactory</code>&nbsp;according to the below specification:</p>\n<p>Class&nbsp;<code>Message</code>&nbsp;is required to store a text value of type&nbsp;<code>std::string</code>&nbsp;and provide a public getter&nbsp;<code>const string&amp; get_text()</code>&nbsp;which is expected to return this text value. Besides that, it should implement the&nbsp;<code>&lt;</code>&nbsp;operator that will be used in&nbsp;<code>fix_order()</code>&nbsp;method of the recipient to fix the order of received messages. Feel free to implement any other methods and class/instance variables. In particular, you can implement any additional constructors, but make sure that you provide an empty constructor, i.e. the one without arguments.</p>\n<p>Class&nbsp;<code>MessageFactory</code>&nbsp;is required to have an empty constructor, and implement a method&nbsp;<code>Message create_message(const string&amp; text)</code>&nbsp;that is expected to return a&nbsp;<code>Message</code>&nbsp;object storing the value of&nbsp;<code>text</code>&nbsp;argument. Feel free to implement any other methods and class/instance variables of this class.</p>\n<p>The locked code template will act as follows. First, it creates objects&nbsp;<code>message_factory</code>&nbsp;and&nbsp;<code>recipient</code>. These objects are of types&nbsp;<code>MessageFactory</code>&nbsp;and&nbsp;<code>Recipient</code>&nbsp;respectively. Then, it reads messages from the standard input, and then it will use the provided&nbsp;<code>Network</code>&nbsp;class to simulate sending the messages to the&nbsp;<code>recipient</code>. The&nbsp;<code>Network</code>&nbsp;class randomly shuffles the passes messages and then it passes them to the&nbsp;<code>recipient</code>&nbsp;using&nbsp;<code>recipient.receive(const Message&amp;)</code>&nbsp;method. After all messages are delivered, the recipient uses its own method&nbsp;<code>print_messages</code>&nbsp;to print all the received messages to the standard output, and just before doing that, it uses its own&nbsp;<code>fix_order</code>&nbsp;method to fix the order of retrieved messages. For that purpose, it uses&nbsp;<code>std::sort()</code>&nbsp;algorithm to sort the&nbsp;<code>std::vector</code>&nbsp;of received messages and this is the reason your&nbsp;<code>Message</code>&nbsp;class implementation has to provide the&nbsp;<code>&lt;</code>&nbsp;operator.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The input is read by the provided locked code template. It contains several lines of text messages in the order that they will be sent over the network.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>There will be at most $10$&nbsp;lines in the input.</li>\n<li>Each line will contain at most $20$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;characters</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The output should be produced by the provided locked code template and it is produced as described in details in the statement. The expected order of printed messages is the same as the one in the input.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">Alex</span>\n<span class=\"err\">Hello Monique!</span>\n<span class=\"err\">What'up?</span>\n<span class=\"err\">Not much :(</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output 0</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre><span class=\"err\">Alex</span>\n<span class=\"err\">Hello Monique!</span>\n<span class=\"err\">What'up?</span>\n<span class=\"err\">Not much :(</span></pre>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2c694235-237a-4a26-891a-01e0e89259fe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Messages Order.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9374"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 20,
  "slug": "magic-spells",
  "tags": [],
  "level": "EXPERT",
  "title": "Magic Spells",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>While playing a video game, you are battling a powerful dark wizard. He casts his spells from a distance, giving you only a few seconds to react and conjure your counterspells. For a counterspell to be effective, you must first identify what kind of spell you are dealing with.</p>\n<p>The wizard uses scrolls to conjure his spells, and sometimes he uses some of his generic spells that restore his stamina. In that case, you will be able to extract the name of the scroll from the spell. Then you need to find out how similar this new spell is to the spell formulas written in your spell journal.</p>\n<p>Spend some time reviewing the locked code in your editor, and complete the body of the&nbsp;counterspell&nbsp;function.</p>\n<p>Check&nbsp;<a href=\"http://en.cppreference.com/w/cpp/language/dynamic_cast\">Dynamic cast</a>&nbsp;to get an idea of how to solve this challenge.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The wizard will read $t$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;scrolls, which are hidden from you.<br />Every time he casts a spell, it's passed as an argument to your&nbsp;counterspell&nbsp;function.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n<p>$$<br />\\begin{aligned}<br />&amp;1 \\leq t \\leq 100 \\\\<br />&amp;1 \\leq|s| \\leq 1000 \\text {, where } s \\text { is a scroll name. }<br />\\end{aligned}<br />$$<br />Each scroll name, $s$, consists of uppercase and lowercase letters.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>After identifying the given spell, print its name and power.<br />If it is a generic spell, find a subsequence of letters that are contained in both the spell name and your spell journal. Among all such subsequences, find and print the length of the longest one on a new line.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\nfire 5\nAquaVitae 999 AruTaVae\nfrost 7\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Fireball: 5\n6\nFrostbite: 7\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Fireball&nbsp;and&nbsp;Frostbite&nbsp;are common spell types.<br />AquaVitae&nbsp;is not, and when you compare it with&nbsp;AruTaVae&nbsp;in your spell journal, you get a sequence:&nbsp;AuaVae</p>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/efdcde1d-0657-444e-a178-c2a7c11879fb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Magic Spells.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9375"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "c-class-templates",
  "tags": [],
  "level": "BEGINNER",
  "title": "C++ Class Templates",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>A class template provides a specification for generating classes based on parameters.&nbsp;Class templates&nbsp;are generally used to implement containers. A class template is instantiated by passing a given set of types to it as template arguments. Here is an example of a class, MyTemplate, that can store one element of any type and that has just one member function&nbsp;divideBy2, which divides its value by 2.</p>\n<pre>template &lt;class T&gt;\nclass MyTemplate {\nT element;\npublic:\nMyTemplate (T arg) {element=arg;}\nT divideBy2 () {return element/2;}\n};\n</pre>\n<p>It is also possible to define a different implementation of a template for a specific type. This is called&nbsp;Template Specialization. For the template given above, we find that a different implementation for type&nbsp;char&nbsp;will be more useful, so we write a function&nbsp;printElement&nbsp;to print the&nbsp;char&nbsp;element:</p>\n<pre>// class template specialization:\ntemplate &lt;&gt;\nclass MyTemplate &lt;char&gt; {\nchar element;\npublic:\nMyTemplate (char arg) {element=arg;}\nchar printElement ()\n{\nreturn element;\n}\n};\n</pre>\n<p>You are given a main() function which takes a set of inputs. The type of input governs the kind of operation to be performed, i.e. concatenation for&nbsp;strings&nbsp;and addition for&nbsp;int&nbsp;or&nbsp;float. You need to write the class template&nbsp;AddElements&nbsp;which has a function&nbsp;add()&nbsp;for giving the sum of&nbsp;int&nbsp;or&nbsp;float&nbsp;elements. You also need to write a template specialization for the type&nbsp;string&nbsp;with a function&nbsp;concatenate()&nbsp;to concatenate the second string to the first string.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>. Input will consist of $n+1$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> lines where $n$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> is the number given in the first line of the input followed by $n$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;lines.</p>\n<p>Each of the next $n$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>&nbsp;line contains the type of the elements provided and depending on the type, either two strings or two integers or two floating point numbers will be given. The type will be one of&nbsp;int,&nbsp;float&nbsp;or&nbsp;string&nbsp;types only. Out of the following two elements, you have to concatenate or add the second element to the first element.</p>\n<p><strong>Constraints</strong></p>\n<p>$$<br />1 \\leq n \\leq 5 \\times 10^{5}<br />$$<br />$1.0 \\leq$ value $_{\\text {floct }} \\leq 10.0$, where value $_{\\text {float }}$ is any float value</p>\n<p>$1 \\leq$ value $_{\\text {int }} \\leq 10^{5}$, where value $_{\\text {int }}$ is any int value<br />$0 \\leq$ len $_{\\text {string }} \\leq 10$, where len $_{\\text {string }}$ is the length of any string</p>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p><strong>The time limit for this challenge is 4 seconds.</strong></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The code provided in the code editor will use your class template to add/append elements and give the output.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\nstring John Doe\nint 1 2\nfloat 4.0 1.5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>JohnDoe\n3\n5.5\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>\"Doe\" when appended with \"John\" gives \"JohnDoe\". 2 added to 1 gives 3, and 1.5 added to 4.0 gives 5.5.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9de38379-335c-43c5-b9df-ca24da577bea",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C++ Class Templates.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9376"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "preprocessor-solution",
  "tags": [],
  "level": "BEGINNER",
  "title": "Preprocessor Solution",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Preprocessor directives are lines included in the code preceded by a hash sign (#). These lines are directives for the preprocessor. The preprocessor examines the code before actual compilation of code begins and resolves all these directives before any code is actually generated by regular statements.</p>\n<pre><code>#define INF 10000000\nif( val == INF) {\n//Do something\n}\nAfter the preprocessor has replaced the directives, the code will be\nif( val == 10000000) { //Here INF is replaced by the value with which it's defined.\n//Do something\n}\n</code></pre>\n<p>You can also define function macros which have parameters.</p>\n<pre><code>#define add(a, b) a + b\nint x = add(a, b);\n\nThe second statement after the preprocessor has replaced the directives will be:\nint x = a + b;\n</code></pre>\n<p>To know more about preprocessor directives, you can go to this&nbsp;<a href=\"http://www.cplusplus.com/doc/tutorial/preprocessor/\">link</a></p>\n<p>You're spending your afternoon at a local school, teaching kids how to code. You give them a simple task: find the difference between the maximum and minimum values in an array of integers.</p>\n<p>After a few hours, they came up with some promising source code. Unfortunately, it doesn't compile! Since you don't want to discourage them, you decide to make their code work without modifying it by adding preprocessor macros.</p>\n<p>Review the locked stub code in your editor and add the preprocessor macros necessary to make the code work.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer, $N$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, denoting the size of the array.<br />The second line contains $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;space-separated integers, $x_{1}, x_{2}, \\ldots, x_{n}$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>, describing the elements in the array.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$1 \\leq N \\leq 10^{3}$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$-10^{8} \\leq x_{i} \\leq 10^{8}$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>You are not responsible for printing any output to stdout. Once the necessary preprocessor macros are written, the locked code in your editor will print a line that says $Result=Z$, where $Z$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is the difference between the maximum and minimum values in the array.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>5\n32 332 -23 -154 65\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>Result = 486\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>332-(-154) = 486</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cdc98cb8-defd-45ba-8c7e-5d03005903aa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Preprocessor Solution.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9377"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "operator-overloading",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Operator Overloading",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Classes define new types in C++. Types in C++ not only interact by means of constructions and assignments but also via operators. For example:</p>\n<pre><code>int a=2, b=1, c;\nc = b + a;\n</code></pre>\n<p>The result of variable&nbsp;<em>c</em>&nbsp;will be 3.<br />Similarly, classes can also perform operations using&nbsp;<a href=\"https://msdn.microsoft.com/en-us/library/5tk49fh2.aspx\">operator overloading</a>. Operators are overloaded by means of operator functions, which are regular functions with special names. Their name begins with the operator keyword followed by the operator sign that is overloaded. The syntax is:</p>\n<pre>type operator sign (parameters) { /*... body ...*/ }\n</pre>\n<p>You are given a main() function which takes a set of inputs to create two matrices and prints the result of their addition. You need to write the class&nbsp;<em>Matrix</em>&nbsp;which has a member&nbsp;<em>a</em>&nbsp;of type&nbsp;<em>vector&lt;vector&lt;int&gt; &gt;</em>. You also need to write a member function to overload the operator&nbsp;<strong>+</strong>. The function's job will be to add two objects of&nbsp;<em>Matrix</em>&nbsp;type and return the resultant&nbsp;<em>Matrix</em>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>First line will contain the number of test cases $T$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>. For each test case, there are three lines of input.</p>\n<p>The first line of each test case will contain two integers $N$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> and $M$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;which denote the number of the&nbsp;<em>rows</em>&nbsp;and&nbsp;<em>columns</em> respectively of the two matrices that will follow on the next two lines. These next two lines will each contain $N*M$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> elements describing the two matrices in row-wise format i.e. first $M$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span> elements belong to the first row,next $N$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>&nbsp;elements belong to the second row and so on.</p>\n<p><strong>Constraints</strong></p>\n<p>$$<br />\\begin{aligned}<br />&amp;1&lt;=T&lt;=1000 \\\\<br />&amp;1&lt;=N&lt;=100 \\\\<br />&amp;1&lt;=M&lt;=100<br />\\end{aligned}<br />$$<br />$1&lt;=A_{i, j}&lt;=10$, where $A_{i, j}$ is the element in the $i^{\\text {th }}$ row and $j^{\\text {th }}$ column of the matrix.</p>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The code provided in the editor will use your class $Matrix$&nbsp;and overloaded operator function to add the two matrices and give the output.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>1\n2 2\n2 2 2 2\n1 2 3 4\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>3 4 \n5 6\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>The sum of first matrix and the second matrix is the matrix given in the output.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fbd8b86e-a345-4190-ba6a-7a110cf3c7eb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Operator Overloading.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9378"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "overload-operators",
  "tags": [],
  "level": "BEGINNER",
  "title": "Overload Operators",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are given a class -&nbsp;Complex.</p>\n<pre><code>class Complex\n{\npublic:\n    int a,b;\n};\n</code></pre>\n<p>Operators are overloaded by means of operator functions, which are regular functions with special names. Their name begins with the operator keyword followed by the operator sign that is overloaded. The syntax is:</p>\n<pre><code>type operator sign (parameters) { /*... body ...*/ }\n</code></pre>\n<p>You need to overload operators&nbsp;<code>+</code>&nbsp;and&nbsp;<code>&lt;&lt;</code>&nbsp;for the&nbsp;Complex&nbsp;class.</p>\n<p>The operator&nbsp;<code>+</code>&nbsp;should add complex numbers according to the rules of complex addition:</p>\n<pre><code>(a+ib)+(c+id) = (a+c) + i(b+d)  \n</code></pre>\n<p>Overload the stream insertion operator&nbsp;<code>&lt;&lt;</code> to add \"$a+ib$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>\" to the stream:</p>\n<pre><code>cout&lt;&lt;c&lt;&lt;endl;\n</code></pre>\n<p>The above statement should print \"$a+ib$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>\" followed by a newline where $a=c.a$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;and $b=c.b$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The overloaded operator&nbsp;<code>+</code>&nbsp;should receive two complex numbers (<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> $a+ib$ and $c+id$ <span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>) as parameters. It must return a single complex number.</p>\n<p>The overloaded operator&nbsp;<code>&lt;&lt;</code> should add \"$a+ib$\" to the stream where $a$ is the real part and $b$&nbsp;is the imaginary part of the complex number which is then passed as a parameter to the overloaded operator.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>As per the problem statement, for the output, print \"$a+ib$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>\" followed by a newline $a=c.a$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;and $b=c.b$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3+i4\n5+i6\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>8+i10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Given output after performing required operations (overloading + operator) is&nbsp;8+i10.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a0a2be1b-b795-4172-9a17-271dcb51abd5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Overload Operators.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef9379"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "attending-workshops",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Attending Workshops",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>A student signed up for $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;workshops and wants to attend the maximum number of workshops where no two workshops overlap. You must do the following:</p>\n<p>Implement $2$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;<a href=\"http://www.cplusplus.com/doc/tutorial/structures/\">structures</a>:</p>\n<ol>\n<li>\n<p>struct Workshop&nbsp;having the following members:</p>\n<ul>\n<li>The workshop's start time.</li>\n<li>The workshop's duration.</li>\n<li>The workshop's end time.</li>\n</ul>\n</li>\n<li>\n<p>struct Available_Workshops&nbsp;having the following members:</p>\n<ul>\n<li>An integer, $n$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;(the number of workshops the student signed up for).</li>\n<li>An array of type&nbsp;Workshop array having size $n$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>.</li>\n</ul>\n</li>\n</ol>\n<p>Implement&nbsp;<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>&nbsp;<a href=\"http://www.cplusplus.com/doc/tutorial/functions/\">functions</a>:</p>\n<ol>\n<li>\n<p>Available_Workshops* initialize (int start_time[], int duration[], int n)<br />Creates an&nbsp;Available_Workshops object and initializes its elements using the elements in the $start_time[]$ and $duration[]$<span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span> parameters (both are of size $n$<span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span>). Here, $start_time[i]$ and $duration[i]$&nbsp;<span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span>&nbsp;are the respective start time and duration for the $i^{t h}$<span id=\"MathJax-Element-11-Frame\" class=\"MathJax_SVG\"></span>&nbsp;workshop. This function must return a pointer to an&nbsp;Available_Workshops&nbsp;object.</p>\n</li>\n<li>\n<p>int CalculateMaxWorkshops(Available_Workshops* ptr)<br />Returns the maximum number of workshops the student can attend&mdash;without overlap. The next workshop cannot be attended until the previous workshop ends.</p>\n</li>\n</ol>\n<p><strong>Note:</strong> An array of unknown size ($n$<span id=\"MathJax-Element-12-Frame\" class=\"MathJax_SVG\"></span>) should be declared as follows:</p>\n<pre><code>DataType* arrayName = new DataType[n];\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Input from stdin is handled by the locked code in the editor; you simply need to write your functions to meet the specifications of the problem statement above.</p>\n<p><strong>Constraints</strong></p>\n<ul>\n<li>$1 \\leq N \\leq 10^{5}$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$0 \\leq$ start_time $_{i} \\leq 10^{3}$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$0 \\leq$ duration $_{i} \\leq 10^{3}$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Output to stdout is handled for you.</p>\n<p>Your&nbsp;initialize&nbsp;function must return a pointer to an&nbsp;Available_Workshops&nbsp;object.<br />Your&nbsp;CalculateMaxWorkshops&nbsp;function must return maximum number of non-overlapping workshops the student can attend.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>6\n1 3 0 5 5 8\n1 1 6 2 4 1\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<p>CalculateMaxWorkshops should return $4$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>The first line denotes $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of workshops.<br />The next line contains $n$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;space-separated integers where the $i^{t h}$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integer is the $i^{t h}$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;workshop's start time.<br />The next line contains $n$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>&nbsp;space-separated integers where the $i^{t h}$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>&nbsp;integer is the $i^{t h}$<span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span>&nbsp;workshop's duration.</p>\n<p>The student can attend the workshops $0, 1, 3$<span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span> and $5$<span id=\"MathJax-Element-9-Frame\" class=\"MathJax_SVG\"></span> without overlap, so CalculateMaxWorkshops returns $4$<span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span> to main (which then prints $4$<span id=\"MathJax-Element-11-Frame\" class=\"MathJax_SVG\"></span>&nbsp;to stdout).</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/baa00248-3252-431f-8bd1-cdacd7f2db5d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Attending Workshops.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef937a"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 15,
  "slug": "c-class-template-specialization",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "C++ Class Template Specialization",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are given a&nbsp;main&nbsp;function which reads the enumeration values for two different types as input, then prints out the corresponding&nbsp;<a href=\"http://en.cppreference.com/w/cpp/language/enum\">enumeration</a>&nbsp;names. Write a class template that can provide the names of the enumeration values for both types. If the enumeration value is not valid, then print&nbsp;<code>unknown</code>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains $t$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of test cases.<br />Each of the $t$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> subsequent lines contains two space-separated integers. The first integer is a color value, $c$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>, and the second integer is a fruit value, $f$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$1 \\leq t \\leq 100$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$-2 \\times 10^{9} \\leq c \\leq 2 \\times 10^{9}$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$-2 \\times 10^{9} \\leq f \\leq 2 \\times 10^{9}$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>The locked stub code in your editor prints $t$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;lines containing the&nbsp;color&nbsp;name and the&nbsp;fruit&nbsp;name corresponding to the input enumeration index.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>2\n1 0\n3 3\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>green apple\nunknown unknown\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Since $t=2$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, there are two lines of output.</p>\n<ol>\n<li>The two input index values, $1$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> and $0$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>, correspond to&nbsp;green&nbsp;in the color enumeration and&nbsp;apple&nbsp;in the fruit enumeration. Thus, we print&nbsp;<code>green apple</code>.</li>\n<li>The two input values, $3$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> and $3$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, are outside of the range of our enums. Thus, we print&nbsp;<code>unknown unknown</code>.</li>\n</ol>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a4b53880-8586-449e-88a0-6ff64d1310d8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C++ Class Template Specialization.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef937b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 20,
  "slug": "c-variadics",
  "tags": [],
  "level": "EXPERT",
  "title": "C++ Variadics",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>A template parameter pack is a template parameter that accepts zero or more template arguments (non-types, types, or templates). To read more about parameter pack,&nbsp;<a href=\"http://en.cppreference.com/w/cpp/language/parameter_pack\">click here</a>.</p>\n<p>Create a template function named&nbsp;reversed_binary_value. It must take an arbitrary number of&nbsp;bool&nbsp;values as template parameters. These booleans represent binary digits in reverse order. Your function must return an integer corresponding to the binary value of the digits represented by the booleans. For example:&nbsp;reversed_binary_value&lt;0,0,1&gt;() should return $4$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains an integer, $t$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of test cases. Each of the $t$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> subsequent lines contains a test case. A test case is described as $2$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> space-separated integers, $x$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> and $y$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>, respectively.</p>\n<ul>\n<li><span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>$x$ is the value to compare against.</li>\n<li><span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span>$y$ represents the range to compare: $64 \\times y$<span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span> to $64 \\times y + 63$ <span id=\"MathJax-Element-9-Frame\" class=\"MathJax_SVG\"></span>.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Constraints</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$0 \\leq x \\leq 65535$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$0 \\leq y \\leq 1023$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>The number of template parameters passed to&nbsp;reversed_binary_value&nbsp;will be $\\leq 16$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Each line of output contains $64$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> binary characters (i.e., $0$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>'s and $1$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>'s). Each character represents one value in the range. The&nbsp;first&nbsp;character corresponds to the&nbsp;first&nbsp;value in the range. The&nbsp;last&nbsp;character corresponds to the&nbsp;last value in the range. The character is $1$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> if the value in the range matches $X$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>; otherwise, the character is $0$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>2\n65 1\n10 0\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>0100000000000000000000000000000000000000000000000000000000000000\n0000000000100000000000000000000000000000000000000000000000000000\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>The second character on the first line is a $1$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, because the second value in the range $64 . .127$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> is $65$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> and $x$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> is $65$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p>The eleventh character on the second line is a $1$, because the eleventh value in the range $0 . .63$ is $10$<span id=\"MathJax-Element-8-Frame\" class=\"MathJax_SVG\"></span> and $x$ is $10$<span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p>All other characters are zero, because the corresponding values in the range do not match $x$<span id=\"MathJax-Element-11-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/778e6858-18bc-43b1-905b-2b85ca0d73ce",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C++ Variadics.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef937c"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 20,
  "slug": "bit-array",
  "tags": [],
  "level": "EXPERT",
  "title": "Bit Array",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>You are given four integers: $N<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, S<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>, P<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>, Q$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>. You will use them in order to create the sequence $a$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>&nbsp;with the following pseudo-code.</p>\n<pre><code>a[0] = S (modulo 2^31)\nfor i = 1 to N-1\n    a[i] = a[i-1]*P+Q (modulo 2^31) \n</code></pre>\n<p>Your task is to calculate the number of distinct integers in the sequence $a$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Four space separated integers on a single line, $N<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, S<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>, P<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>,$ and $Q$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span>&nbsp;respectively.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>A single integer that denotes the number of distinct integers in the sequence $a$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p><strong>Constraints</strong></p>\n<p><span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>$1 \\leq N \\leq 10^{8}$<br />$0 \\leq S, P, Q&lt;2^{31}$</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre><code>3 1 1 1\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>3\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n<p>$a=[1,2,3]$</p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n<p>Hence, there are $3$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;different integers in the sequence.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f9f7838f-35a7-4a6d-aa4f-bb9dc8b6b051",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Bit Array.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba74e9b9821851ef937d"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "classes-and-objects",
  "tags": [],
  "level": "BEGINNER",
  "title": "Classes and Objects",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>A&nbsp;class&nbsp;defines a blueprint for an object. We use the same syntax to declare objects of a class as we use to declare variables of other basic types. For example:</p>\n<pre><code>Box box1;          // Declares variable box1 of type Box\nBox box2;          // Declare variable box2 of type Box\n</code></pre>\n<p>Kristen is a contender for valedictorian of her high school. She wants to know how many students (if any) have scored higher than her in the $5$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;exams given during this semester.</p>\n<p>Create a class named $Student$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;with the following specifications:</p>\n<ul>\n<li>An instance variable named $scores$ to hold a student's $5$&nbsp;exam scores.</li>\n<li>A&nbsp;void input() function that reads $5$<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span> integers and saves them to $scores$.</li>\n<li>An&nbsp;int calculateTotalScore()&nbsp;function that returns the sum of the student's scores.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Input Format</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Most of the input is handled for you by the locked code in the editor.</p>\n<p>In the&nbsp;<code>void Student::input()</code> function, you must read $5$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> scores from stdin and save them to your $scores$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;instance variable.</p>\n<p><strong>Constraints</strong><br /><span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>$1 \\leq n \\leq 100$<br />$0 \\leq$ examscore $\\leq 50$<br /><span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Output Format</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In the&nbsp;<code>int Student::calculateTotalScore()</code> function, you must return the student's total grade (the sum of the values in $scores$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>).</p>\n<p>The locked code in the editor will determine how many scores are larger than Kristen's and print that number to the console.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>Sample Input</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains $n$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of students in Kristen's class. The $n$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> subsequent lines contain each student's $5$<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>&nbsp;exam grades for this semester.</p>\n<pre><code>3\n30 40 45 10 10\n40 40 40 10 10\n50 20 30 10 10\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Sample Output</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre><code>1\n</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Explanation</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Kristen's grades are on the first line of grades. Only $1$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>&nbsp;student scored higher than her.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/271cb120-8faf-48b3-ab44-4cc69f0cfd25",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Classes and Objects.zip"
    }
  ]
}]