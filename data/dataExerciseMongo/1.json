[{
  "_id": {
    "$oid": "634dba61e9b9821851ef8fee"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "test",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Phép toán XOR",
  "content": "<p>Cho trước 2 gi&aacute; trị logic p v&agrave; q (0 hoặc 1), h&atilde;y t&iacute;nh ph&eacute;p t&iacute;nh p XOR q.</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>0</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f51f6888-a028-42c5-81c6-8d79e52c7307",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test14.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8fef"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "cộng-mảng",
  "tags": [],
  "level": "BEGINNER",
  "title": "Cộng mảng",
  "content": "<p>Coongj mnagr</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/sum-array-test-cases-zip",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "sum-array-test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "cpttrn2-character-patterns",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Các mẫu định dạng",
  "content": "<p>Sử dụng hai k&yacute; tự:. (dấu chấm) v&agrave; *(dấu hoa thị), h&atilde;y in ra một mẫu c&oacute; dạng khung nhất định.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Bạn được cung cấp t l&agrave; số trường hợp thử nghiệm v&agrave; đối với mỗi trường hợp thử nghiệm, c&oacute; 2 số nguy&ecirc;n dương: l l&agrave; số d&ograve;ng v&agrave; c l&agrave; số cột của mẫu.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra mẫu được y&ecirc;u cầu (vui l&ograve;ng xem v&iacute; dụ). Sử dụng một dấu ngắt d&ograve;ng giữa c&aacute;c mẫu li&ecirc;n tiếp.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n3 1\n4 4\n2 5</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>*\n*\n*\n\n****\n*..*\n*..*\n****\n\n*****\n*****</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2a052b06-37dc-4e12-9c3e-84798424fe2b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CPTTRN2-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "divfact-divisors-of-factorial",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tìm tổng các số chia của giai thừa",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Cho một số, h&atilde;y t&igrave;m tổng số c&aacute;c ước số của giai thừa của số đ&oacute;. V&igrave; đ&aacute;p &aacute;n c&oacute; thể rất lớn, h&atilde;y in ra l&agrave; modulo $10^{9} + 7$.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa T, số lượng trường hợp thử nghiệm.</li>\n<li>T d&ograve;ng sau, mỗi d&ograve;ng chứa số N.</li>\n</ul>\n<h3>Điều kiện</h3>\n<ul>\n<li>$1 \\leq T \\leq 500$</li>\n<li>$0 \\leq N \\leq 50000$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra T d&ograve;ng của kết quả đầu ra, mỗi d&ograve;ng chứa 1 đ&aacute;p &aacute;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n3\n4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n4\n8 </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5fa71025-7a3f-4f33-b71e-b2f0abb56a31",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DIVFACT-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "prionpri-prime-or-not-prime",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Xác định số nguyên tố",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Trong b&agrave;i to&aacute;n n&agrave;y, nhiệm vụ của bạn l&agrave; x&aacute;c định xem một số đ&atilde; cho l&agrave; số nguy&ecirc;n tố hay hợp số.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p><span lang=\"EN-US\">D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n T, biểu thị số lượng trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm bao gồm một d&ograve;ng duy nhất chứa một số nguy&ecirc;n &laquo; n &raquo; (2 &le; n &le; 10<sup>9</sup>)</span></p>\n<h3>Định dạng đầu ra</h3>\n<p><span lang=\"EN-US\">Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn sẽ in ra một d&ograve;ng duy nhất chứa &laquo;YES&raquo; (kh&ocirc;ng c&oacute; dấu ngoặc k&eacute;p v&agrave; khoảng trắng), nếu số nguy&ecirc;n đ&atilde; cho l&agrave; số nguy&ecirc;n tố hoặc &laquo;NO&raquo; (kh&ocirc;ng c&oacute; dấu ngoặc k&eacute;p v&agrave; khoảng trống) nếu số nguy&ecirc;n đ&atilde; cho l&agrave; hợp số.</span></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6\n16\n127\n256\n513\n2048\n5097</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>NO\nYES\nNO\nNO\nNO\nNO</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/60a50dbf-b4f9-4f95-a5c7-2650ed964039",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRIONPRI-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "smpsum-iterated-sums",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tính tổng lặp lại",
  "content": "<p>H&atilde;y t&iacute;nh tổng b&igrave;nh phương của c&aacute;c số đ&atilde; cho: a, a + 1, ..., b-1, b.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Hai số: a v&agrave; b c&aacute;ch nhau một khoảng trắng, trong đ&oacute; $1 \\leq a \\leq b \\leq 100$.</p>\n<h3>Định dạng đầu ra</h3>\n<p>T&iacute;nh tổng: <strong><em>a</em>*<em>a</em>&nbsp;+ (<em>a</em>+1)*(<em>a</em>+1) + ... + (<em>b</em>-1)*(<em>b</em>-1) +&nbsp;<em>b</em>*<em>b</em></strong></p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>30</code></pre>\n<h3><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> V&iacute; dụ 2</span></strong></h3>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o</span></strong></p>\n<pre class=\"language-markup\"><code>5 6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>61</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ad4ae630-7bd7-470c-898b-17576e7435c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SMPSUM-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 10,
  "slug": "i-3-1-tim-số-lớn-nhất-trong-2-số",
  "tags": [],
  "level": "ALL_SCOPES",
  "title": "Tìm số lớn nhất trong 2 số",
  "content": "<p>Viết chương tr&igrave;nh nhập v&agrave;o 2 số nguy&ecirc;n a,b in ra số lớn nhất. V&iacute; dụ: Cho a=5, b=10, số lớn hơn sẽ l&agrave; b=10.</p>\n<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Một d&ograve;ng duy nhất gồm 2 số nguy&ecirc;n a v&agrave; b , được c&aacute;ch nhau bởi dấu c&aacute;ch</p>\n<h3><strong>Định dạng đầu ra</strong></h3>\n<p>Một d&ograve;ng duy nhất gồm 1 số kết quả</p>\n<h3><strong>V&iacute; dụ</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5 10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>10</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/51f1f508-b7ce-4d2a-b258-b0ba444a70fd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.3.1-testcases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "testint-test-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tổng số tự nhiên",
  "content": "<p>Cho trước hai số tự nhi&ecirc;n (đều kh&ocirc;ng lớn hơn 200), mỗi số nằm tr&ecirc;n một d&ograve;ng ri&ecirc;ng, h&atilde;y in ra tổng của ch&uacute;ng.</p>\n<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Nhập v&agrave;o 2 số tự nhi&ecirc;n.</p>\n<h3><strong>Định dạng đầu ra</strong></h3>\n<p>In ra tổng của c&aacute;c số tự nhi&ecirc;n được nhập</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a13e4f07-591e-4e61-a5ce-c83d7eed5504",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TESTINT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "smpwow-wow",
  "tags": [],
  "level": "BEGINNER",
  "title": "Wow wow wow",
  "content": "<h3><strong>Định dạng đầu v&agrave;o</strong></h3>\n<p>Cho một số nguy&ecirc;n dương với điều kiện 0 &lt; <em>x</em>&nbsp;&lt; 50.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu ra</h3>\n<p>In ra một từ: <tt>Wo...ow</tt> (chữ c&aacute;i 'o' phải được lặp lại <em>x</em> lần).</p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Wow </code></pre>\n<pre>&nbsp;</pre>\n<h3>V&iacute; dụ 2</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Wooooooow</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/63503f4a-beb4-42a4-af30-d5c566613a6e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SMPWOW_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 20,
  "slug": "sumscalc-sums-to-calculate",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Tính các tổng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Cho một số nguy&ecirc;n n, nhiệm vụ của bạn l&agrave; t&iacute;nh c&aacute;c tổng sau:</p>\n<div id=\"problem-body\">\n<ul>\n<li>Tổng S của n số nguy&ecirc;n đầu ti&ecirc;n (bắt đầu từ 1)</li>\n<li>Tổng S<sub>even</sub><sup> </sup>&nbsp;của n số nguy&ecirc;n chẵn (bắt đầu từ 2)</li>\n<li>Tổng S<sub>odd</sub> của n số nguy&ecirc;n lẻ đầu ti&ecirc;n (bắt đầu từ 1)</li>\n<li>Tổng S<sub>squares</sub> của n gi&aacute; trị b&igrave;nh phương của số nguy&ecirc;n đầu ti&ecirc;n (1, 4, 9, ...)</li>\n<li>Tổng S<sub>cubes</sub> của n gi&aacute; trị mũ 3 của số nguy&ecirc;n đầu ti&ecirc;n (1, 8, 27, ...)</li>\n</ul>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p><span lang=\"EN-US\">D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n T biểu thị số lượng trường hợp thử nghiệm. Tiếp theo l&agrave; m&ocirc; tả của T c&aacute;c trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm được m&ocirc; tả trong một d&ograve;ng duy nhất chứa số nguy&ecirc;n &laquo;n&raquo; (1 &le; n&nbsp;&le; 10<sup>4</sup>).</span></p>\n<h3>Định dạng đầu ra</h3>\n<p><span lang=\"EN-US\">Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất chứa 5 số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch: <strong>S S<sub>even</sub>&nbsp;S<sub>odd</sub>&nbsp;S<sub>squares</sub>&nbsp;S<sub>cubes</sub></strong></span></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n4\n5\n6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>10 20 16 30 100\n15 30 25 55 225\n21 42 36 91 441</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/19f344d4-7979-4bd9-b6ba-c577bddeb933",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUMSCALC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "test-life-the-universe-and-everything",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vạn vật",
  "content": "<p>Chương tr&igrave;nh của bạn l&agrave; sử dụng phương ph&aacute;p Brute-force để t&igrave;m ra c&acirc;u trả lời cho sự sống, vũ trụ v&agrave; vạn vật. Ch&iacute;nh x&aacute;c hơn l&agrave; ... viết lại c&aacute;c số nhỏ từ đầu v&agrave;o đến đầu ra. Dừng xử l&yacute; đầu v&agrave;o sau khi đọc số 42. Tất cả c&aacute;c số ở đầu v&agrave;o l&agrave; số nguy&ecirc;n c&oacute; một hoặc hai chữ số.</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88\n42\n99</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88\n </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/67b4f09f-d10e-4107-9b66-f449be5fda6c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TEST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ff9"
  },
  "memoryLimit": 2,
  "source": 2,
  "timeLimit": 2,
  "scores": 50,
  "slug": "aba12c-mua-tao",
  "tags": [],
  "level": "EXPERT",
  "title": "Mua táo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">B&agrave;i to&aacute;n mua t&aacute;o</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<div id=\"problem-body\">\n<p>Harish đ&atilde; đến một si&ecirc;u thị để mua đ&uacute;ng 'k' kg t&aacute;o cho 'n' người bạn của m&igrave;nh.&nbsp;Si&ecirc;u thị thực sự kỳ lạ.&nbsp;Gi&aacute; của c&aacute;c mặt h&agrave;ng rất kh&aacute;c nhau.&nbsp;Anh v&agrave;o mục T&aacute;o v&agrave; hỏi về gi&aacute; cả.&nbsp;Người b&aacute;n h&agrave;ng đưa cho anh một tấm thẻ ghi gi&aacute; t&aacute;o kh&ocirc;ng t&iacute;nh theo kg.&nbsp;T&aacute;o được đ&oacute;ng th&agrave;nh từng b&igrave;a, mỗi b&igrave;a chứa 'x' kg t&aacute;o, x&gt; 0 v&agrave; 'x' l&agrave; một số nguy&ecirc;n.&nbsp;Một g&oacute;i 'x' kg sẽ được định gi&aacute; bằng rupee 'y'.&nbsp;V&igrave; vậy, tấm bảng chứa một bảng c&oacute; mục nhập 'y' biểu thị gi&aacute; của một g&oacute;i 'x' kg.&nbsp;Nếu 'y' l&agrave; -1 c&oacute; nghĩa l&agrave; g&oacute;i tương ứng kh&ocirc;ng c&oacute; sẵn.&nbsp;B&acirc;y giờ v&igrave; t&aacute;o chỉ c&oacute; sẵn trong c&aacute;c g&oacute;i, anh ấy quyết định mua &iacute;t nhất 'n' g&oacute;i cho 'n' bạn của m&igrave;nh, tức l&agrave; anh ấy sẽ kh&ocirc;ng mua nhiều hơn n g&oacute;i t&aacute;o.</p>\n<p>Harish rất th&iacute;ch bạn b&egrave; của m&igrave;nh v&agrave; v&igrave; vậy anh ấy kh&ocirc;ng muốn l&agrave;m bạn b&egrave; thất vọng.&nbsp;V&igrave; vậy, b&acirc;y giờ, anh ấy sẽ cho bạn biết anh ấy c&oacute; bao nhi&ecirc;u người bạn v&agrave; bạn phải cho anh ấy biết số tiền tối thiểu anh ấy phải chi cho bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o sẽ chứa số lượng trường hợp thử nghiệm, C.</li>\n<li>Mỗi trường hợp thử nghiệm sẽ chứa hai d&ograve;ng.</li>\n<li>D&ograve;ng đầu ti&ecirc;n ghi N v&agrave; K, số bạn b&egrave; m&agrave; anh ta c&oacute; v&agrave; số lượng t&aacute;o t&iacute;nh theo ki-l&ocirc;-gam m&agrave; anh ta n&ecirc;n mua.</li>\n<li>D&ograve;ng thứ hai chứa K số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, trong đ&oacute; số nguy&ecirc;n thứ i chỉ định gi&aacute; của g&oacute;i t&aacute;o 'i'kg.&nbsp;Gi&aacute; trị -1 biểu thị rằng g&oacute;i tương ứng kh&ocirc;ng khả dụng.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số nguy&ecirc;n N sao cho $0 &lt; N \\leq 100$</li>\n<li>Số nguy&ecirc;n K sao cho $0 &lt; K \\leq 100$</li>\n<li>Gi&aacute; cả M sao cho $0 &lt; M \\leq 1000$</li>\n</ul>\n<p><strong>Đầu ra</strong></p>\n<p>Đầu ra cho mỗi trường hợp thử nghiệm phải l&agrave; một d&ograve;ng duy nhất chứa số tiền tối thiểu m&agrave; anh ta phải chi cho bạn b&egrave; của m&igrave;nh.&nbsp;In -1 nếu anh ta kh&ocirc;ng thể thỏa m&atilde;n bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 5\n-1 -1 4 5 -1\n5 5\n1 2 3 4 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>-1 5</code></pre>\n<p><strong>Giải th&iacute;ch c&aacute;c trường hợp kiểm thử:</strong></p>\n<ol>\n<li>V&igrave; cửa h&agrave;ng chỉ c&oacute; g&oacute;i 3 v&agrave; 4kg n&ecirc;n anh ta sẽ kh&ocirc;ng thể l&agrave;m h&agrave;i l&ograve;ng bạn b&egrave; v&igrave; anh ta sẽ kh&ocirc;ng thể mua đ&uacute;ng 5kg t&aacute;o.</li>\n<li>Anh ta c&oacute; thể mua năm g&oacute;i 1kg v&igrave; anh ta phải mua 5 kg. V&igrave; vậy, số tiền tối thiểu anh ta n&ecirc;n chi l&agrave; 5.</li>\n</ol>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e278b83-5562-4a82-938a-b7ecfd4847ad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABA12C _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ffa"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 50,
  "slug": "1ae00-rectangles",
  "tags": [],
  "level": "EXPERT",
  "title": "Tạo ra các hình chữ nhật",
  "content": "<p id=\"đề-b&agrave;i\"><strong>B&agrave;i to&aacute;n</strong></p>\n<p>Th&aacute;i c&oacute; N h&igrave;nh vu&ocirc;ng với k&iacute;ch thước 1. Hỏi c&oacute; bao nhi&ecirc;u dạng h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể&nbsp;tạo ra từ những h&igrave;nh vu&ocirc;ng n&agrave;y?</p>\n<p>Biết rằng, 2 h&igrave;nh chữ nhật được xem l&agrave; kh&aacute;c nhau nếu ch&uacute;ng kh&ocirc;ng thể quay hay dịch chuyển để trở th&agrave;nh h&igrave;nh c&ograve;n lại. Trong qu&aacute; tr&igrave;nh x&acirc;y dựng l&ecirc;n h&igrave;nh chữ nhật, Th&aacute;i kh&ocirc;ng thể l&agrave;m thay đổi h&igrave;nh&nbsp;dạng của c&aacute;c h&igrave;nh vu&ocirc;ng v&agrave; cũng kh&ocirc;ng thể đặt ch&uacute;ng l&ecirc;n tr&ecirc;n những h&igrave;nh c&ograve;n lại.</p>\n<p id=\"đầu-v&agrave;o\"><strong>Định dạng đầu v&agrave;o</strong></p>\n<ul>\n<li>Gồm chỉ một d&ograve;ng chứa một số nguy&ecirc;n N, với $1 \\leq N \\leq 10000$.</li>\n</ul>\n<p id=\"đầu-ra\"><strong>Định dạng đầu ra</strong></p>\n<ul>\n<li>In ra chỉ một d&ograve;ng chứa một số nguy&ecirc;n l&agrave; những h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể tạo ra.</li>\n</ul>\n<p id=\"v&iacute;-dụ\"><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Với N = 6 h&igrave;nh vu&ocirc;ng, ta c&oacute; thể tạo ra h&igrave;nh chữ nhật bằng c&aacute;ch lần lượt x&eacute;t c&aacute;c h&igrave;nh chữ nhật với chiều cao bằng 1 hoặc 2 như h&igrave;nh dưới đ&acirc;y.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://thuattoan.phamvanlam.com/static/b0e61ff7e847af9628e9918575efd81a/ff7a3/spoj-com-thuat-toan-bai-1AE00-Rectangles-thuattoan-phamvanlam-com.png\" alt=\"spoj-com-thuat-toan-bai-1ae00-rectangles-thuattoan-phamvanlam-com\" /></p>\n<p>Do đ&oacute;, kết quả l&agrave; 8 h&igrave;nh chữ nhật.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d292bd31-dae8-4d5d-85e2-7edc7d092c7f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "1AE00_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ffb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 20,
  "slug": "abcpath-abc-path",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Đường dẫn ABC",
  "content": "<p>Bạn sẽ được cung cấp một ma trận 2 chiều gồm c&aacute;c chữ c&aacute;i. T&igrave;m độ d&agrave;i của con đường d&agrave;i nhất của c&aacute;c chữ c&aacute;i li&ecirc;n tiếp, bắt đầu từ 'A'. C&aacute;c đường dẫn c&oacute; thể chuyển từ một chữ c&aacute;i trong ma trận sang bất kỳ chữ c&aacute;i n&agrave;o liền kề (theo chiều ngang, chiều dọc hoặc đường ch&eacute;o). V&iacute; dụ: Trong ma trận sau, c&oacute; một số đường dẫn từ 'A' đến 'D', nhưng kh&ocirc;ng c&oacute; đường n&agrave;o từ 'A' đến 'E':</p>\n<div id=\"problem-body\">\n<div><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"ABC\" src=\"https://www.spoj.com/content/simes:ABCPATH-1.png\" alt=\"ABC\" width=\"162\" height=\"108\" /></div>\n<p>Một đường thỏa m&atilde;n b&agrave;i to&aacute;n tr&ecirc;n l&agrave;:</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"ABC path\" src=\"https://www.spoj.com/content/simes:ABCPATH-2.png\" alt=\"path\" width=\"163\" height=\"108\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Each test case will start with a line contains two integers H, W the height and width of the grid respectively 1 &lt;= H, W &lt;= 50. Then H lines follow each of W uppercase letters only. Input terminates with H = 0 and W = 0.</p>\n<p>Mỗi trường hợp thử nghiệm sẽ bắt đầu bằng một d&ograve;ng chứa hai gi&aacute; trị số nguy&ecirc;n H, W, chiều cao v&agrave; chiều rộng của ma trận theo thứ tự lần lượt. Tiếp theo l&agrave; H d&ograve;ng nối theo sau mỗi W chữ c&aacute;i viết hoa. Đầu v&agrave;o kết th&uacute;c với H = 0 v&agrave; W = 0.</p>\n<h3><strong> Điều kiện</strong></h3>\n<ul>\n<li>$1 \\leq H$</li>\n<li>$W \\leq 50$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Chỉ in ra 1 d&ograve;ng đối với mỗi trường hợp thử nghiệm</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 3\nABE\nCFG\nBDH\nABC\n0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a421efb1-0784-4681-8b30-eae6117b6058",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABCPATHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ffc"
  },
  "memoryLimit": 2,
  "source": 2,
  "timeLimit": 2,
  "scores": 50,
  "slug": "acode-alphacode",
  "tags": [],
  "level": "EXPERT",
  "title": "Bảng mã Alpha",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Alice v&agrave; Bob cần gửi tin nhắn b&iacute; mật cho nhau v&agrave; đang thảo luận về c&aacute;ch m&atilde; h&oacute;a tin nhắn của họ:</p>\n<div id=\"problem-body\">\n<blockquote>\n<p>Alice: &ldquo;H&atilde;y chỉ sử dụng một m&atilde; rất đơn giản: Ch&uacute;ng ta sẽ g&aacute;n cho&lsquo; A &rsquo; l&agrave; m&atilde; 1,&lsquo; B &rsquo;sẽ l&agrave; 2 v&agrave; cứ tiếp tục cho đến&lsquo; Z &rsquo;được g&aacute;n l&agrave; 26.&rdquo;</p>\n<p>Bob: &ldquo;Đ&oacute; l&agrave; một đoạn m&atilde; sai lầm, Alice. Giả sử t&ocirc;i gửi cho bạn từ &lsquo;BEAN&rsquo; được m&atilde; h&oacute;a l&agrave; 25114. Bạn c&oacute; thể giải m&atilde; từ đ&oacute; theo nhiều c&aacute;ch kh&aacute;c nhau! &rdquo;</p>\n<p>Alice: &ldquo;Chắc chắn l&agrave; bạn c&oacute; thể, nhưng bạn sẽ nhận được những từ n&agrave;o? Ngo&agrave;i &lsquo;BEAN&rsquo;, bạn sẽ nhận được &lsquo;BEAAD&rsquo;, &lsquo;YAAD&rsquo;, &lsquo;YAN&rsquo;, &lsquo;YKD&rsquo; v&agrave; &lsquo;BEKD&rsquo;. T&ocirc;i nghĩ rằng bạn sẽ c&oacute; thể t&igrave;m ra lời giải m&atilde; ch&iacute;nh x&aacute;c. V&agrave; tại sao bạn lại gửi cho t&ocirc;i từ &lsquo;BEAN&rsquo;? &rdquo;</p>\n<p>Bob: &ldquo;Được rồi, c&oacute; thể đ&oacute; l&agrave; một v&iacute; dụ sai, nhưng t&ocirc;i c&aacute; với bạn rằng nếu bạn c&oacute; một chuỗi d&agrave;i 5000 th&igrave; sẽ c&oacute; rất nhiều c&aacute;ch giải m&atilde; kh&aacute;c nhau v&agrave; với nhiều giải m&atilde; đ&oacute;, bạn sẽ t&igrave;m thấy &iacute;t nhất hai giải m&atilde; kh&aacute;c nhau c&oacute; &yacute; nghĩa&rdquo;.</p>\n<p>Alice: \"C&oacute; bao nhi&ecirc;u c&aacute;ch giải m&atilde; kh&aacute;c nhau?\"</p>\n<p>Bob: \"Jillions!\"</p>\n</blockquote>\n<p>V&igrave; một số l&yacute; do, Alice vẫn kh&ocirc;ng cảm thấy thuyết phục bởi lập luận của Bob, v&igrave; vậy c&ocirc; ấy y&ecirc;u cầu một chương tr&igrave;nh sẽ x&aacute;c định số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho một chuỗi k&yacute; tự nhất định bằng c&aacute;ch sử dụng m&atilde; của c&ocirc; ấy.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm nhiều tập hợp đầu v&agrave;o. Mỗi tập hợp sẽ bao gồm một d&ograve;ng tối đa l&agrave; 5000 chữ số đại diện cho một c&aacute;ch m&atilde; h&oacute;a hợp lệ (v&iacute; dụ: kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o bắt đầu bằng số 0). Sẽ kh&ocirc;ng c&oacute; khoảng trắng giữa c&aacute;c chữ số. D&ograve;ng đầu v&agrave;o l&agrave; '0' sẽ kết th&uacute;c đầu v&agrave;o v&agrave; kh&ocirc;ng được xử l&yacute;.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập hợp đầu v&agrave;o, in ra số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho chuỗi k&yacute; tự đầu v&agrave;o. Tất cả c&aacute;c c&acirc;u trả lời sẽ nằm trong phạm vi của một số nguy&ecirc;n c&oacute; dấu 64 bit.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>25114\n1111111111\n3333333333\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n89\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7cdd566d-2bce-4767-abd3-7646fc194e66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACODE _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ffd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "acpc10a-whats-next",
  "tags": [],
  "level": "EXPERT",
  "title": "Cấp số cộng hay cấp số nhân?",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Theo Wikipedia, một cấp số cộng (AP) l&agrave; một d&atilde;y số sao cho hiệu của hai phần tử li&ecirc;n tiếp bất kỳ của d&atilde;y l&agrave; một hằng số. V&iacute; dụ: d&atilde;y 3, 5, 7, 9, 11, 13 ,. . . l&agrave; một cấp số cộng với hiệu chung l&agrave; 2. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số cộng c&oacute; hiệu chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<p>On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer.</p>\n<p>Mặt kh&aacute;c, cấp số nh&acirc;n (GP) l&agrave; một d&atilde;y số, trong đ&oacute;, mỗi số hạng đứng sau số hạng đầu ti&ecirc;n được t&igrave;m bằng c&aacute;ch nh&acirc;n số hạng trước với một số kh&aacute;c 0 cố định được gọi l&agrave; tỷ số chung. V&iacute; dụ, d&atilde;y số 2, 6, 18, 54 ,. . . l&agrave; một cấp số nh&acirc;n với tỉ số chung l&agrave; 3. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số nh&acirc;n c&oacute; tỉ số chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<div id=\"problem-body\">\n<p>Với ba phần tử li&ecirc;n tiếp của một d&atilde;y, bạn cần x&aacute;c định kiểu loại của d&atilde;y số v&agrave; phần tử kế tiếp tiếp theo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một hoặc nhiều trường hợp thử nghiệm. Mỗi trường hợp được chỉ định tr&ecirc;n một d&ograve;ng c&oacute; ba số nguy&ecirc;n (&minus;10, 000 &lt;a1, a2, a3 &lt;10, 000) trong đ&oacute; a1, a2 v&agrave; a3 l&agrave; kh&aacute;c nhau. Trường hợp cuối c&ugrave;ng được theo sau bởi một d&ograve;ng c&oacute; ba số 0.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất với dạng như sau: XX v</p>\n<p>Trong đ&oacute; XX l&agrave; cấp số cộng hoặc cấp số nh&acirc;n t&ugrave;y thuộc v&agrave;o d&atilde;y số đ&atilde; cho. v l&agrave; phần tử tiếp theo của d&atilde;y đ&atilde; cho. Tất cả c&aacute;c trường hợp đầu v&agrave;o được đảm bảo l&agrave; một cấp số cộng hoặc cấp số nh&acirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 7 10\n2 6 18\n0 0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>AP 13\nGP 54</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cf8a887e-7008-4448-9844-8fad900a6aac",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACPC10A_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8ffe"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "addrev-them-so-dao-nguoc",
  "tags": [],
  "level": "EXPERT",
  "title": "Thêm số đảo ngược",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&aacute;c diễn vi&ecirc;n h&agrave;i cổ của Malidinesia th&iacute;ch phim h&agrave;i hơn bi kịch. Tiếc thay, hầu hết c&aacute;c vở tuồng cổ đều l&agrave; vở bi kịch. Do đ&oacute;, cố vấn kịch t&iacute;nh của ACM đ&atilde; quyết định chuyển một số bi kịch th&agrave;nh phim h&agrave;i. R&otilde; r&agrave;ng, c&ocirc;ng việc n&agrave;y l&agrave; rất kh&oacute; v&igrave; &yacute; thức cơ bản của vở kịch phải được giữ nguy&ecirc;n vẹn, mặc d&ugrave; tất cả mọi thứ đều thay đổi theo hướng đối lập của ch&uacute;ng. V&iacute; dụ c&aacute;c con số: nếu bất kỳ con số n&agrave;o xuất hiện trong bi kịch, n&oacute; phải được chuyển sang dạng đảo ngược của n&oacute; trước khi được chấp nhận v&agrave;o vở h&agrave;i kịch.</p>\n<div id=\"problem-body\">\n<p>Số đảo ngược l&agrave; số được viết bằng chữ số Ả Rập nhưng thứ tự c&aacute;c chữ số bị đảo ngược.&nbsp;Chữ số đầu ti&ecirc;n trở th&agrave;nh chữ số cuối c&ugrave;ng v&agrave; ngược lại.&nbsp;V&iacute; dụ, nếu anh h&ugrave;ng ch&iacute;nh c&oacute; 1245 quả d&acirc;u t&acirc;y trong thảm kịch, anh ta c&oacute; 5421 quả d&acirc;u t&acirc;y trong số đ&oacute; b&acirc;y giờ.&nbsp;Lưu &yacute; rằng tất cả c&aacute;c số 0 ở đầu đều bị bỏ qua.&nbsp;Điều đ&oacute; c&oacute; nghĩa l&agrave; nếu số kết th&uacute;c bằng số 0, số 0 sẽ bị mất bằng c&aacute;ch đảo ngược (v&iacute; dụ: 1200 cho 21).&nbsp;Cũng lưu &yacute; rằng số đảo ngược kh&ocirc;ng bao giờ c&oacute; bất kỳ số kh&ocirc;ng ở cuối.</p>\n<p>ACM cần t&iacute;nh to&aacute;n với c&aacute;c số đảo ngược.&nbsp;Nhiệm vụ của bạn l&agrave; cộng hai số đảo ngược v&agrave; xuất ra tổng đảo ngược của ch&uacute;ng.&nbsp;Tất nhi&ecirc;n, kết quả kh&ocirc;ng phải l&agrave; duy nhất v&igrave; bất kỳ số cụ thể n&agrave;o cũng l&agrave; dạng đảo ngược của một số số (v&iacute; dụ: 21 c&oacute; thể l&agrave; 12, 120 hoặc 1200 trước khi đảo ngược).&nbsp;V&igrave; vậy, ch&uacute;ng ta phải giả định rằng kh&ocirc;ng c&oacute; số 0 n&agrave;o bị mất khi đảo ngược (v&iacute; dụ: giả sử rằng số ban đầu l&agrave; 12).</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o bao gồm&nbsp;<var>N</var>&nbsp;trường hợp (bằng khoảng 10000).&nbsp;D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chỉ chứa dương t&iacute;nh số nguy&ecirc;n&nbsp;<var>N</var>&nbsp;.&nbsp;Sau đ&oacute;, theo d&otilde;i c&aacute;c trường hợp.&nbsp;Mỗi trường hợp bao gồm đ&uacute;ng một d&ograve;ng với hai số nguy&ecirc;n dương c&aacute;ch nhau bởi dấu c&aacute;ch.&nbsp;Đ&acirc;y l&agrave; những số đảo ngược m&agrave; bạn phải th&ecirc;m v&agrave;o.</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi trường hợp, in ch&iacute;nh x&aacute;c một d&ograve;ng chỉ chứa một số nguy&ecirc;n - tổng đảo ngược của hai số đảo ngược.&nbsp;Bỏ qua bất kỳ số kh&ocirc;ng ở đầu trong kết quả đầu ra.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n24 1\n4358 754\n305 794</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>34 1998 1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5e2690fb-e57f-4b51-b8e1-1fef02bd414b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADDREV_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef8fff"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "adfruits-advanced-fruits",
  "tags": [],
  "level": "EXPERT",
  "title": "Sáng tạo tên cho các loại trái cây",
  "content": "<p>C&ocirc;ng ty \"Tr&aacute;i c&acirc;y thế kỷ 21\" đ&atilde; chuy&ecirc;n tạo ra c&aacute;c loại tr&aacute;i c&acirc;y mới bằng c&aacute;ch chuyển gen từ tr&aacute;i c&acirc;y n&agrave;y v&agrave;o bộ gen của tr&aacute;i c&acirc;y kh&aacute;c. Hầu hết c&aacute;c phương ph&aacute;p n&agrave;y kh&ocirc;ng hiệu quả, nhưng đ&ocirc;i khi, trong một số trường hợp hiếm hoi, một loại tr&aacute;i c&acirc;y mới xuất hiện c&oacute; vị giống như hỗn hợp giữa cả hai loại tr&aacute;i c&acirc;y.</p>\n<div id=\"problem-body\">\n<p>Một chủ đề thảo luận lớn trong c&ocirc;ng ty l&agrave; \"C&aacute;c c&acirc;y s&aacute;ng tạo mới n&ecirc;n được gọi như thế n&agrave;o?\" Tất nhi&ecirc;n, một hỗn hợp giữa t&aacute;o v&agrave; l&ecirc; c&oacute; thể được gọi l&agrave; apple-pear, nhưng điều n&agrave;y nghe c&oacute; vẻ kh&ocirc;ng th&uacute; vị cho lắm. Cuối c&ugrave;ng, &ocirc;ng chủ quyết định sử dụng chuỗi ngắn nhất chứa cả t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y ban đầu l&agrave;m chuỗi con l&agrave;m t&ecirc;n mới. V&iacute; dụ: \"applear\" chứa \"apple\" v&agrave; \"pear\" (APPLEar v&agrave; apPlEAR) v&agrave; kh&ocirc;ng c&oacute; chuỗi n&agrave;o ngắn hơn c&oacute; c&ugrave;ng thuộc t&iacute;nh. V&iacute; dụ, sự kết hợp giữa cranberry v&agrave; boysenberry sẽ được gọi l&agrave; \"boysecranberry\" or a \"craboysenberry\".</p>\n<p>C&ocirc;ng việc của bạn l&agrave; viết một chương tr&igrave;nh t&iacute;nh to&aacute;n một c&aacute;i t&ecirc;n ngắn nhất cho tổ hợp của hai loại quả đ&atilde; cho. Thuật to&aacute;n của bạn phải hiệu quả, nếu kh&ocirc;ng, n&oacute; kh&ocirc;ng chắc sẽ thực thi trong thời gian quy định đối với t&ecirc;n của c&aacute;c quả d&agrave;i.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Mỗi d&ograve;ng của tệp đầu v&agrave;o chứa hai chuỗi k&yacute; tự biểu thị t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y được kết hợp. Tất cả c&aacute;c t&ecirc;n c&oacute; độ d&agrave;i tối đa l&agrave; 100 v&agrave; chỉ bao gồm c&aacute;c k&yacute; tự chữ c&aacute;i. Đầu v&agrave;o được kết th&uacute;c ở cuối tệp.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra t&ecirc;n ngắn nhất của quả kết quả tr&ecirc;n một d&ograve;ng. Nếu c&oacute; thể c&oacute; nhiều hơn một t&ecirc;n ngắn nhất, bất kỳ t&ecirc;n n&agrave;o cũng được chấp nhận.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>apple peach\nananas banana\npear peach</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>appleach\nbananas\npearch</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/42734f37-4ce9-4dfe-b178-344bc377e9f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADFRUITS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9000"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ae1b-bang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sửa bàn",
  "content": "<p>Byteman l&agrave;m nghề thợ mộc. Anh ấy vừa nhận được một đơn đặt h&agrave;ng b&agrave;n gỗ th&ocirc;ng của s. Mặc d&ugrave; anh ta c&oacute; rất nhiều v&aacute;n gỗ th&ocirc;ng trong xưởng của m&igrave;nh, nhưng anh ta vừa hết ốc v&iacute;t. Do đ&oacute; anh ta cần đi bộ đến nh&agrave; kho v&agrave; mang về một số hộp c&oacute; đinh v&iacute;t. Số hộp tối thiểu m&agrave; người đ&oacute; cần mang l&agrave; bao nhi&ecirc;u để c&oacute; đủ đinh v&iacute;t l&agrave;m c&aacute;c b&agrave;n?</p>\n<div id=\"problem-body\">\n<h2>Đầu v&agrave;o</h2>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chuẩn chứa ba số nguy&ecirc;n n, k v&agrave; s (1 &le; n, k, s &le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch đơn. Ch&uacute;ng biểu thị số lượng hộp c&oacute; v&iacute;t trong kho của Byteman, số lượng v&iacute;t cần thiết để tạo ra một c&aacute;i b&agrave;n v&agrave; số lượng c&aacute;i b&agrave;n m&agrave; Byteman phải l&agrave;m, tương ứng. D&ograve;ng thứ hai chứa n (kh&ocirc;ng nhất thiết phải kh&aacute;c) số nguy&ecirc;n a<sub>i</sub> (1 &le; a<sub>i</sub>&nbsp;&le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch đơn, sao cho a&nbsp;<sub>i</sub> l&agrave; số ốc v&iacute;t trong hộp thứ&nbsp;i&nbsp;trong kho.</p>\n<h2>Đầu ra</h2>\n<p>D&ograve;ng đầu ti&ecirc;n v&agrave; duy nhất của đầu ra ti&ecirc;u chuẩn phải chứa một số nguy&ecirc;n - số hộp tối thiểu c&oacute; v&iacute;t m&agrave; Byteman cần mang từ kho của m&igrave;nh để l&agrave;m bảng.&nbsp;Bạn c&oacute; thể cho rằng Byteman c&oacute; đủ ốc v&iacute;t trong kho để l&agrave;m tất cả c&aacute;c bảng.</p>\n<h2>V&iacute; dụ</h2>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5 6 3\n3 9 5 7 3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n<p><strong>Giải th&iacute;ch v&iacute; dụ.&nbsp;</strong>Để l&agrave;m ba chiếc b&agrave;n, mỗi chiếc cần s&aacute;u con ốc v&iacute;t, Byteman phải mang ba chiếc hộp c&oacute; ốc v&iacute;t từ nh&agrave; kho.&nbsp;Đ&acirc;y c&oacute; thể l&agrave; những c&aacute;i c&oacute; chứa 3, 7 v&agrave; 9 v&iacute;t hoặc những c&aacute;i c&oacute; 9, 5 v&agrave; 7 v&iacute;t.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6f75411d-67b4-4557-94a0-4d3942aced61",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AE1B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9001"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "afs-trinh-tu-nhan-to-tuyet-voi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Dãy số tuyệt vời",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bhelu l&agrave; bạn c&ugrave;ng lớp của Bablu. Anh cảm thấy ghen tị với người bạn c&ugrave;ng lớp của m&igrave;nh v&agrave; quyết định thực hiện tạo tr&igrave;nh tự của ri&ecirc;ng m&igrave;nh. V&igrave; anh ấy kh&ocirc;ng c&oacute; nhiều tr&iacute; tưởng tượng, anh ấy đ&atilde; đưa ra định nghĩa gần như tương tự, chỉ tạo ra sự kh&aacute;c biệt trong f(n):</p>\n<div id=\"problem-body\">\n<ul>\n<li>a[0]=a[1]=0.</li>\n<li>Với n&gt;1, a[n]=a[n-1]+f(n), trong đ&oacute; f (n) l&agrave; tổng c&aacute;c số nguy&ecirc;n dương trong tập S sau đ&acirc;y.</li>\n<li>S = {x |&nbsp;x &lt;n v&agrave; n% x = 0}.</li>\n</ul>\n<p>B&acirc;y giờ, Bablu y&ecirc;u cầu anh ta tạo một m&atilde; để t&igrave;m f(n) v&igrave; anh ta đ&atilde; c&oacute; m&atilde; của d&atilde;y số của m&igrave;nh. V&igrave; vậy, Bhelu y&ecirc;u cầu sự gi&uacute;p đỡ của bạn v&igrave; anh ấy kh&ocirc;ng biết Lập tr&igrave;nh. Nhiệm vụ của bạn rất đơn giản, chỉ cần t&igrave;m một [n] cho một gi&aacute; trị cho trước của $n&lt;10^{6}.</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>Đoạn m&atilde; của bạn sẽ được kiểm tra cho nhiều trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o chứa T (&lt;= 100), số lượng trường hợp Kiểm tra.</li>\n<li>T d&ograve;ng tiếp theo chứa một số nguy&ecirc;n dương N. (1 &lt;N &lt;10 ^ 6).</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>D&ograve;ng đơn chứa [n] tức l&agrave; số thứ n của d&atilde;y cho mỗi trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o:</strong></p>\n<pre class=\"language-markup\"><code>3 3 4 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>2 5 6</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<pre class=\"language-markup\"><code>f(2) = 1{1}\nf(3) = 1{1}\nf(4) = 3{1, 2}\nf(5) = 1{1}</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/09fc8c39-5df2-4686-bac0-ab6eac7b48bf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AFS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9002"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "aggrcow-aggressive-cows",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Những chú bò tức giận",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Người n&ocirc;ng d&acirc;n John đ&atilde; x&acirc;y dựng nhiều chuồng mới, với N (2 &lt;= N &lt;= 100.000) chuồng. C&aacute;c chuồng nằm dọc theo một đường thẳng tại c&aacute;c vị tr&iacute; x1, ..., xN (0 &lt;= xi &lt;= 1.000.000.000).</p>\n<div id=\"problem-body\">\n<p>C con b&ograve; (2 &lt;= C &lt;= N) của anh ấy kh&ocirc;ng th&iacute;ch c&aacute;ch bố tr&iacute; chuồng n&agrave;y v&agrave; trở n&ecirc;n hung dữ với nhau sau khi được đưa v&agrave;o chuồng. Để tr&aacute;nh việc c&aacute;c con b&ograve; l&agrave;m tổn thương lẫn nhau, FJ muốn chỉ định c&aacute;c con b&ograve; v&agrave;o chuồng, sao cho khoảng c&aacute;ch tối thiểu giữa hai con c&agrave;ng lớn c&agrave;ng tốt. Vậy khoảng c&aacute;ch tối thiểu lớn nhất l&agrave; bao nhi&ecirc;u?</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li><em>t</em> &ndash; số lượng c&aacute;c trường hợp thử nghiệm</li>\n<li>D&ograve;ng 1: 2 gi&aacute; trị số nguy&ecirc;n N v&agrave; C c&aacute;ch nhau một khoảng trắng</li>\n<li>D&ograve;ng 2..N+1: D&ograve;ng i+1 chứa vị tr&iacute; số nguy&ecirc;n, xi</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm xuất ra một số nguy&ecirc;n, l&agrave; khoảng c&aacute;ch tối thiểu lớn nhất.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n5 3\n1\n2\n8\n4\n9</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n<p><strong>Chi tiết về đầu ra</strong></p>\n<p>FJ c&oacute; thể xếp 3 con b&ograve; của m&igrave;nh v&agrave;o chuồng ở c&aacute;c vị tr&iacute; 1, 4 v&agrave; 8, tạo ra khoảng c&aacute;ch tối thiểu l&agrave; 3 con.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ecface50-2e63-4e0b-b883-6e1174d01f92",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AGGRCOW_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9003"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "alien-aliens-at-the-train",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Người ngoài hành tinh đi tàu",
  "content": "<p class=\"text-center\">Người ngo&agrave;i h&agrave;nh tinh đ&atilde; đến tr&aacute;i đất v&agrave; mọi thứ đều h&ograve;a hợp, hai chủng tộc c&oacute; thể chung sống với nhau. Tuy nhi&ecirc;n, một người ngo&agrave;i h&agrave;nh tinh kh&ocirc;ng muốn nh&igrave;n thấy con người tr&ecirc;n đường đến trường đại học, người ngo&agrave;i h&agrave;nh tinh phải sử dụng chuyến t&agrave;u như mọi người vẫn l&agrave;m. Nhưng c&ocirc; ấy c&oacute; thể chọn bất kỳ ga xe lửa n&agrave;o m&agrave; c&ocirc; ấy kh&ocirc;ng nh&igrave;n thấy nhiều hơn B con người, tuy nhi&ecirc;n, người ngo&agrave;i h&agrave;nh tinh muốn đi c&agrave;ng xa c&agrave;ng tốt với chuyến t&agrave;u. H&atilde;y gi&uacute;p người ngo&agrave;i h&agrave;nh tinh n&agrave;y.</p>\n<div id=\"problem-body\">\n<p><strong>Đầu v&agrave;o</strong></p>\n<p>Bạn sẽ nhận được một số nguy&ecirc;n T biểu thị số trường hợp thử nghiệm, sau đ&oacute;, d&ograve;ng tiếp theo sẽ chứa hai số nguy&ecirc;n At v&agrave; Bt, trong đ&oacute; At v&agrave; Bt l&agrave; số ga tr&ecirc;n t&agrave;u (1 &lt;= At &lt;= 100.000) v&agrave; số người m&agrave; người ngo&agrave;i h&agrave;nh tinh muốn nh&igrave;n thấy l&agrave; tối đa (1 &lt;= Bt &lt;= 10.000.000), sau đ&oacute;, một d&ograve;ng chứa c&aacute;c số nguy&ecirc;n At c&aacute;ch nhau một khoảng trắng sẽ biểu thị số người m&agrave; người ngo&agrave;i h&agrave;nh tinh c&oacute; thể t&igrave;m thấy trong trạm thứ At-i. (Mỗi trạm sẽ c&oacute; tối đa 100 người).</p>\n<p><strong>Đầu ra</strong></p>\n<p>Đầu ra của bạn phải bao gồm T cặp số biểu thị số người m&agrave; người ngo&agrave;i h&agrave;nh tinh sẽ nh&igrave;n thấy v&agrave; số trạm m&agrave; người ngo&agrave;i h&agrave;nh tinh sẽ đi qua tương ứng.</p>\n<p>V&iacute; dụ</p>\n<p><strong>Đầu v&agrave;o:</strong></p>\n<pre class=\"language-markup\"><code>1 5 100 20 15 30 80 100</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>65 3</code></pre>\n<p><strong>Ch&uacute; &yacute;:</strong></p>\n<p>Người ngo&agrave;i h&agrave;nh tinh đi t&agrave;u ở ga 1 (c&oacute; 20 người) v&agrave; đến ga 2, sau đ&oacute; l&agrave; ga 3, l&uacute;c n&agrave;y, c&ocirc; ấy đ&atilde; nh&igrave;n thấy 65 người, nếu c&ocirc; ấy quyết định đi đến ga 4 c&ocirc; ấy sẽ thấy 145 người&hellip; Sau đ&oacute; c&ocirc; ấy ra khỏi nh&agrave; ga.</p>\n<p>Tuy nhi&ecirc;n, người ngo&agrave;i h&agrave;nh tinh c&oacute; thể bắt đầu ở trạm 2 với 15 người, sau đ&oacute; tiếp tục đến trạm 4, khi đ&oacute;, c&ocirc; ấy sẽ thấy 125 người, nhưng, v&igrave; c&ocirc; ấy muốn nh&igrave;n thấy những người tối thiểu c&oacute; thể c&oacute; v&agrave; số người n&agrave;y vượt qu&aacute; những g&igrave; c&ocirc; ấy muốn xem, c&ocirc; quyết định chọn con đường từ ga 1 đến ga thứ 3.</p>\n<p>Người ngo&agrave;i h&agrave;nh tinh sẽ lu&ocirc;n di chuyển về ph&iacute;a trước (h&atilde;y nhớ, c&ocirc; ấy c&oacute; thể chọn bất kỳ trạm n&agrave;o l&agrave;m điểm bắt đầu), KH&Ocirc;NG BAO GIỜ l&ugrave;i lại ph&iacute;a sau, v&agrave; bạn n&ecirc;n chọn con đường tốt nhất thỏa m&atilde;n th&ocirc;ng số kỹ thuật đầu ra.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3c43f923-44ce-4684-a896-54be5250f94f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ALIEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9004"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "allizwel-all-izz-well",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ALL IZZ WELL",
  "content": "<div id=\"problem-body\">\n<p><strong>B&agrave;i to&aacute;n</strong></p>\n<p>Mr.ESP thường lẩm nhẩm \"ALL IZZ WELL\" bất cứ khi n&agrave;o anh ấy gặp bất kỳ rắc rối n&agrave;o. V&igrave; vậy, bạn b&egrave; của anh ấy v&agrave; những người xung quanh anh ấy đ&atilde; từng cười nhạo anh ấy. Nhưng Mr.ESP rất tin tưởng v&agrave;o niềm tin của m&igrave;nh. Anh ấy tin rằng cụm từ \"ALL IZZ WELL\" sẽ l&agrave;m cho mọi thứ tốt đẹp. B&acirc;y giờ nhiệm vụ của bạn l&agrave; bỏ qua c&acirc;u chuyện ở tr&ecirc;n v&agrave; t&igrave;m xem liệu c&oacute; một con đường n&agrave;o trong ma trận đ&atilde; cho tạo ra c&acirc;u &ldquo;ALL IZZ WELL&rdquo;.</p>\n<p>C&oacute; một đường dẫn từ bất kỳ &ocirc; n&agrave;o đến tất cả c&aacute;c &ocirc; l&acirc;n cận của n&oacute;. Một &ocirc; gần kề c&oacute; thể c&oacute; chung một cạnh hoặc một g&oacute;c.</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n t đại diện cho số lượng c&aacute;c trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp thử nghiệm bao gồm hai số nguy&ecirc;n R v&agrave; C đại diện cho số h&agrave;ng v&agrave; số cột trong ma trận.</li>\n</ul>\n<p><strong>Đầu ra</strong></p>\n<p>Đối với mỗi trường hợp kiểm tra, h&atilde;y in ra \"YES\" nếu c&oacute; một đường dẫn tạo th&agrave;nh c&acirc;u &ldquo;ALLIZZWELL&rdquo;. Nếu kh&ocirc;ng, in ra \"NO\". C&oacute; một d&ograve;ng mới sau mỗi trường hợp thử nghiệm trong đầu v&agrave;o.</p>\n<p><strong>Lưu &yacute;: H&atilde;y quan t&acirc;m đến trường hợp thử nghiệm thứ 4.</strong></p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$t \\leq 1000$</li>\n<li>$R \\leq 100$</li>\n<li>$C \\leq 100$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code> 5\n3 6\nAWE.QX\nLLL.EO\nIZZWLL\n\n1 10\nALLIZZWELL\n\n2 9\nA.L.Z.E..\n.L.I.W.L.\n\n3 3\nAEL\nLWZ\nLIZ\n\n1 10\nLLEWZZILLA</code></pre>\n<strong>Đầu ra</strong></div>\n<div>\n<pre class=\"language-markup\"><code>YES\nYES\nNO\nNO\nYES</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb6b7af3-2ddc-4db8-bf69-ed6be93a3e57",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ALLIZWEL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9005"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "amr10g-choi-giang-sinh",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Giáng sinh",
  "content": "<p>Lớp mẫu gi&aacute;o của con t&ocirc;i đang tổ chức một vở kịch Gi&aacute;ng sinh. C&aacute;c em nhỏ đều rất h&agrave;o hứng, nhưng gi&aacute;o vi&ecirc;n c&oacute; rất nhiều việc. C&ocirc; ấy phải sản xuất trang phục cho một cảnh quay với l&iacute;nh K. C&ocirc; ấy muốn mua tất cả c&aacute;c trang phục c&oacute; c&ugrave;ng k&iacute;ch cỡ, cho ph&eacute;p cha mẹ của bọn trẻ thực hiện một số thay đổi nhỏ về độ d&agrave;i sau n&agrave;y. V&igrave; vậy, c&ocirc; ấy đ&atilde; lấy tất cả c&aacute;c số đo chiều cao của bọn trẻ. Bạn c&oacute; thể gi&uacute;p c&ocirc; ấy chọn K từ lớp N của c&ocirc; ấy để đ&oacute;ng vai người l&iacute;nh, sao cho sự ch&ecirc;nh lệch chiều cao giữa người cao nhất v&agrave; thấp nhất trong nh&oacute;m được giảm tối thiểu v&agrave; việc thay thế sẽ dễ d&agrave;ng nhất? H&atilde;y cho c&ocirc; ấy biết sự kh&aacute;c biệt tối thiểu n&agrave;y l&agrave; bao nhi&ecirc;u.</p>\n<div id=\"problem-body\">\n<p><strong>Đầu v&agrave;o</strong></p>\n<p>D&ograve;ng đầu ti&ecirc;n chứa số lượng trường hợp thử nghiệm T. C&aacute;c trường hợp thử nghiệm tiếp theo mỗi d&ograve;ng chứa 2 d&ograve;ng.<br />&nbsp;<br />D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp thử nghiệm chứa 2 số nguy&ecirc;n N v&agrave; K.</p>\n<p>D&ograve;ng thứ hai chứa N số nguy&ecirc;n, biểu thị chiều cao của N đứa trẻ.</p>\n<p><strong>Đầu ra</strong></p>\n<p>Xuất ra T d&ograve;ng, mỗi d&ograve;ng chứa c&acirc;u trả lời được y&ecirc;u cầu cho test case tương ứng.<br />&nbsp;<br /><strong>Điều kiện</strong></p>\n<ul>\n<li>$T \\leq 30$</li>\n<li>$1 \\leq K \\leq N \\leq 20000$</li>\n<li>Chiều cao của trẻ height sao cho $1 \\leq height \\leq 1000000000$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n3 1\n2 5 4\n3 2\n5 2 4\n3 3\n2 5 4</code></pre>\n<strong>Đầu Ra</strong>\n<pre class=\"language-markup\"><code>0\n1\n3</code></pre>\n</div>\n<div><strong>GIẢI TH&Iacute;CH</strong></div>\n<ul>\n<li>Trong trường hợp thử nghiệm đầu ti&ecirc;n, gi&aacute;o vi&ecirc;n chỉ cần chọn 1 trẻ v&agrave; do đ&oacute; c&ocirc; c&oacute; thể chọn bất kỳ trẻ n&agrave;o v&igrave; ch&ecirc;nh lệch chiều cao sẽ l&agrave; 0.</li>\n<li>Trong trường hợp thử nghiệm thứ hai, gi&aacute;o vi&ecirc;n c&oacute; thể chọn trẻ c&oacute; chiều cao 4 v&agrave; 5.</li>\n<li>Trong trường hợp thử nghiệm thứ ba, gi&aacute;o vi&ecirc;n buộc phải chọn cả 3 đứa trẻ v&agrave; do đ&oacute; đ&aacute;p &aacute;n = 5-2 = 3</li>\n</ul>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d635e79d-5b37-4d18-9faf-48daf644a310",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AMR10G_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9006"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "anarc05b-the-double-helix",
  "tags": [],
  "level": "EXPERT",
  "title": "HeLiX nhân đôi",
  "content": "<p class=\"text-center\">2 d&atilde;y số nguy&ecirc;n tăng dần được đưa ra. Bất kỳ số nguy&ecirc;n chung n&agrave;o giữa hai d&atilde;y đều tạo th&agrave;nh c&aacute;c giao điểm. V&iacute; dụ về hai chuỗi sau m&agrave; c&aacute;c điểm giao nhau được in đậm:</p>\n<div id=\"problem-body\">\n<ul>\n<li>\n<p>Chuỗi đầu ti&ecirc;n = 3 5 <strong>7</strong>&nbsp;9 20&nbsp;<strong>25</strong>&nbsp;30 40&nbsp;<strong>55</strong>&nbsp;56&nbsp;<strong>57</strong>&nbsp;60 62</p>\n</li>\n<li>\n<p>Chuỗi thứ hai = 1 4 <strong>7</strong>&nbsp;11 14&nbsp;<strong>25</strong>&nbsp;44 47&nbsp;<strong>55&nbsp;</strong><strong>57</strong>&nbsp;100</p>\n</li>\n</ul>\n<p>Bạn c&oacute; thể duyệt qua hai chuỗi n&agrave;y theo c&aacute;ch sau:</p>\n<ol>\n<li>\n<p>Bạn c&oacute; thể bắt đầu ở phần đầu của bất kỳ tr&igrave;nh tự n&agrave;o trong hai tr&igrave;nh tự.&nbsp;B&acirc;y giờ h&atilde;y bắt đầu tiến về ph&iacute;a trước.</p>\n</li>\n<li>\n<p>Tại mỗi điểm giao nhau, bạn c&oacute; thể lựa chọn tiếp tục với c&ugrave;ng một tr&igrave;nh tự m&agrave; bạn hiện đang &aacute;p dụng hoặc chuyển sang tr&igrave;nh tự kh&aacute;c.</p>\n</li>\n</ol>\n<p>Mục ti&ecirc;u l&agrave; tạo ra một đường đi tạo ra tổng dữ liệu tối đa. Trong v&iacute; dụ tr&ecirc;n, tổng lớn nhất c&oacute; thể l&agrave; 450, l&agrave; kết quả của ph&eacute;p cộng 3, 5, 7, 9, 20, 25, 44, 47, 55, 56, 57, 60 v&agrave; 62</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<p>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một số trường hợp thử nghiệm.&nbsp;Mỗi trường hợp thử nghiệm sẽ được chỉ định tr&ecirc;n hai d&ograve;ng ri&ecirc;ng biệt.&nbsp;Mỗi d&ograve;ng biểu thị một tr&igrave;nh tự v&agrave; được chỉ định bằng c&aacute;ch sử dụng định dạng sau:</p>\n<pre class=\"language-markup\"><code>n v1 v2 ... vn</code></pre>\n<p>Trong đ&oacute; n l&agrave; độ d&agrave;i của d&atilde;y v&agrave; $v_{i}$ l&agrave; phần tử thứ i trong d&atilde;y đ&oacute;. Mỗi d&atilde;y sẽ c&oacute; &iacute;t nhất một phần tử nhưng kh&ocirc;ng qu&aacute; 10.000. Tất cả c&aacute;c phần tử nằm trong khoảng -10.000 đến 10.000 (bao gồm).</p>\n<p>D&ograve;ng cuối c&ugrave;ng của đầu v&agrave;o bao gồm một số 0 duy nhất, kh&ocirc;ng phải l&agrave; một phần của c&aacute;c trường hợp thử nghiệm.</p>\n<p><strong>Đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra tr&ecirc;n một d&ograve;ng ri&ecirc;ng biệt, tổng lớn nhất c&oacute; thể được tạo ra.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>13 3 5 7 9 20 25 30 40 55 56 57 60 62 11 1 4 7 11 14 25 44 47 55 57 100 4 -5 100 1000 1005 3-12 1000 1001 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>450 2100</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b4c76edf-8893-4f4c-b419-79b0996b724b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ANARC05B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9007"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "aps-amazing-prime-sequence",
  "tags": [],
  "level": "EXPERT",
  "title": "Chuỗi số kỳ diệu",
  "content": "<p id=\"problem-name\" class=\"text-center\">Bablu rất th&iacute;ch c&aacute;c chuỗi số v&agrave; c&aacute;c tập hợp... Sau khi nghi&ecirc;n cứu chuỗi Fibonacci ở lớp to&aacute;n học, anh ấy đ&atilde; rất ấn tượng v&agrave; anh ấy đ&atilde; thiết kế chuỗi số của ri&ecirc;ng m&igrave;nh như sau:</p>\n<pre class=\"language-markup\"><code>a[0] = a[1] = 0 </code></pre>\n<p>Với $n&gt;1$, $a[n] = a[n-1] + f(n)$, trong đ&oacute; f(n) l&agrave; hệ số nguy&ecirc;n tố nhỏ nhất của n. Anh ấy cũng rất th&iacute;ch lập tr&igrave;nh v&agrave; do đ&oacute; đ&atilde; thực hiện một chương tr&igrave;nh nhỏ để t&igrave;m a[n], nhưng v&igrave; anh ấy học lớp to&aacute;n n&ecirc;n anh ấy kh&ocirc;ng giỏi lập tr&igrave;nh cho lắm. V&igrave; vậy, anh ấy y&ecirc;u cầu bạn gi&uacute;p đỡ. Nhiệm vụ của bạn l&agrave; t&igrave;m a[n] cho d&atilde;y số tr&ecirc;n.</p>\n<h3>Đầu v&agrave;o</h3>\n<p>Đoạn m&atilde; của bạn sẽ được kiểm tra cho nhiều trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o chứa T sao cho $T \\leq 100$, số lượng trường hợp kiểm tra. T d&ograve;ng tiếp theo chứa một số N sao cho $1 &lt;N &lt;10^{7}$.</p>\n<h3>Đầu ra</h3>\n<p>Một d&ograve;ng chứa a[n], tức l&agrave; số thứ n của chuỗi cho mỗi trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-python\"><code>3 2 3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-python\"><code>2 5 7</code></pre>\n<p id=\"problem-body\"></p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a46aa58c-9915-4e92-890b-8f47020e449d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "APS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9008"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "army-army-strength",
  "tags": [],
  "level": "EXPERT",
  "title": "Đội quân kháng chiến",
  "content": "<p id=\"problem-name\" class=\"text-center\">Cuộc x&acirc;m lược tiếp theo của MechaGodzilla đang tr&ecirc;n đường đến Tr&aacute;i đất. V&agrave; một lần nữa, tr&aacute;i đất sẽ l&agrave; chiến trường cho một cuộc chiến. Đội qu&acirc;n của MechaGodzilla bao gồm nhiều qu&aacute;i vật ngo&agrave;i h&agrave;nh tinh, Space Godzilla, King Gidorah v&agrave; MechaGodzilla. Để ngăn chặn ch&uacute;ng v&agrave; bảo vệ Tr&aacute;i đất, Godzilla v&agrave; những người bạn đang chuẩn bị cho trận chiến.&nbsp;&nbsp;</p>\n<div id=\"problem-body\">\n<h3>B&agrave;i to&aacute;n đặt ra</h3>\n<p>Mỗi đội qu&acirc;n bao gồm nhiều qu&aacute;i vật kh&aacute;c nhau. Mỗi con qu&aacute;i vật c&oacute; một sức mạnh c&oacute; thể được m&ocirc; tả bằng một số nguy&ecirc;n dương. (Gi&aacute; trị c&agrave;ng lớn, qu&aacute;i vật c&agrave;ng mạnh) . Một cuộc chiến sẽ bao gồm nhiều trận chiến. Trong mỗi trận chiến, con yếu nhất trong số những con qu&aacute;i vật c&ograve;n sống sẽ bị giết. Nếu c&oacute; một số qu&aacute;i vật yếu nhất, nhưng tất cả ch&uacute;ng trong c&ugrave;ng một đội qu&acirc;n, một trong số ch&uacute;ng sẽ bị giết ngẫu nhi&ecirc;n. Nếu cả hai đội qu&acirc;n c&oacute; &iacute;t nhất một trong những qu&aacute;i vật yếu nhất, một qu&aacute;i vật yếu nhất ngẫu nhi&ecirc;n trong đội qu&acirc;n của MechaGodzilla sẽ bị giết.</p>\n<p>Chiến tranh kết th&uacute;c nếu trong một đội qu&acirc;n tất cả qu&aacute;i vật đều chết. Qu&acirc;n chết hết sẽ thua, qu&acirc;n c&ograve;n lại sẽ thắng. Bạn được cung cấp sức mạnh của tất cả những con qu&aacute;i vật. H&atilde;y t&igrave;m ra người chiến thắng trong cuộc chiến.</p>\n<h3>Đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o chứa một số nguy&ecirc;n T x&aacute;c định số lượng trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm được th&ecirc;m ở ph&iacute;a trước một d&ograve;ng trống. Mỗi trường hợp thử nghiệm bắt đầu bằng d&ograve;ng chứa hai số nguy&ecirc;n dương NG v&agrave; NM - số lượng qu&aacute;i vật trong qu&acirc;n đội của Godzilla v&agrave; của MechaGodzilla. Theo sau l&agrave; hai d&ograve;ng kh&aacute;c, d&ograve;ng đầu ti&ecirc;n chứa NG số nguy&ecirc;n dương - sức mạnh của những con qu&aacute;i vật trong đội qu&acirc;n của Godzilla. Tương tự, d&ograve;ng thứ hai chứa NM số nguy&ecirc;n dương - sức mạnh của những con qu&aacute;i vật trong đội qu&acirc;n của MechaGodzilla.</p>\n<h3>Đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, xuất một d&ograve;ng duy nhất với một chuỗi k&yacute; tự m&ocirc; tả kết quả của trận chiến. Nếu chắc chắn rằng đội qu&acirc;n của Godzilla thắng, h&atilde;y in ra&nbsp; chuỗi k&yacute; tự \"Godzilla\". Nếu chắc chắn rằng đội qu&acirc;n của MechaGodzilla thắng, h&atilde;y in ra chuỗi k&yacute; tự \"MechaGodzilla\". Nếu kh&ocirc;ng, in ra chuỗi k&yacute; tự \"uncertain\".</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n\n1 1\n1\n1\n\n3 2\n1 3 2\n5 5</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Godzilla\nMechaGodzilla</code></pre>\n<h3>Gợi &yacute;</h3>\n<p>Trong trường hợp thử nghiệm đầu ti&ecirc;n, chỉ c&oacute; hai con qu&aacute;i vật, v&agrave; ch&uacute;ng đều mạnh như nhau. Trong t&igrave;nh huống n&agrave;y, qu&aacute;i vật của MechaGodzilla bị giết v&agrave; chiến tranh kết th&uacute;c. Trong trường hợp thử nghiệm thứ hai, cuộc chiến sẽ bao gồm ba trận chiến, v&agrave; trong mỗi trận chiến, một trong những qu&aacute;i vật của Godzilla sẽ chết. Đối với tất cả c&aacute;c trường hợp thử nghiệm, int trong C / C ++ / Java hoặc longint trong Pascal l&agrave; đủ.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5ad7f168-dd2d-4a2a-b91a-e96a7a3d563a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ARMY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9009"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "benefact-nguoi-co-loi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Người có lợi",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một chương kh&aacute;c của bi&ecirc;n ni&ecirc;n sử th&agrave;nh phố của một thị trấn lớn kh&oacute; tin nổi tiếng (nếu bạn kh&ocirc;ng biết thị trấn n&agrave;y, bạn c&oacute; thể muốn giải quyết vấn đề CSTREET trước) kể cho ch&uacute;ng ta c&acirc;u chuyện sau:</p>\n<div id=\"problem-body\">\n<p>Ng&agrave;y xửa ng&agrave;y xưa, c&aacute;c c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được đ&atilde; quyết định bầu một thiếu t&aacute;.&nbsp;V&agrave;o thời điểm đ&oacute; đ&acirc;y l&agrave; một &yacute; tưởng rất mới v&agrave; c&aacute;c chiến dịch bầu cử ho&agrave;n to&agrave;n kh&ocirc;ng được biết đến.&nbsp;Nhưng tất nhi&ecirc;n một số c&ocirc;ng d&acirc;n muốn trở th&agrave;nh thiếu t&aacute; v&agrave; họ kh&ocirc;ng mất nhiều thời gian để ph&aacute;t hiện ra rằng những điều tốt đẹp hứa hẹn sẽ kh&ocirc;ng bao giờ trở th&agrave;nh hiện thực c&oacute; xu hướng hữu &iacute;ch trong t&igrave;nh huống như vậy.&nbsp;Một ứng cử vi&ecirc;n được bầu l&agrave;m thiếu t&aacute; l&agrave; Ivo đ&ocirc;i khi được gọi l&agrave; &acirc;n nh&acirc;n v&igrave; những m&oacute;n qu&agrave; gi&aacute; trị của &ocirc;ng cho những c&ocirc;ng d&acirc;n th&agrave;nh phố lớn kh&ocirc;ng thể tin được.</p>\n<p>Một ng&agrave;y trước ng&agrave;y bầu cử, Ivo, nh&agrave; hảo t&acirc;m đ&atilde; thực hiện một lời hứa với c&ocirc;ng d&acirc;n của thị trấn.&nbsp;Trong trường hợp chiến thắng trong cuộc bầu cử, anh ta sẽ đảm bảo rằng tr&ecirc;n một trong những con đường l&aacute;t đ&aacute;, đ&egrave;n đường của thị trấn sẽ được dựng l&ecirc;n v&agrave; anh ta sẽ trả số tiền đ&oacute; bằng tiền của m&igrave;nh.&nbsp;Tiết kiệm như những c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được, họ bầu anh ta v&agrave; một ng&agrave;y sau cuộc bầu cử, họ tr&igrave;nh b&agrave;y cho anh ta quyết định đường n&agrave;o n&ecirc;n c&oacute; đ&egrave;n đường.&nbsp;Tất nhi&ecirc;n họ kh&ocirc;ng chỉ chọn con phố d&agrave;i nhất trong số tất cả c&aacute;c con phố m&agrave; c&ograve;n đổi t&ecirc;n một số con phố để một con phố rất d&agrave;i trong thị trấn tồn tại.</p>\n<p>Bạn c&oacute; thể t&igrave;m thấy con phố n&agrave;y đ&atilde; c&oacute; bao l&acirc;u?&nbsp;Cụ thể hơn, t&igrave;nh h&igrave;nh như sau.&nbsp;Bạn được giới thiệu một danh s&aacute;ch tất cả c&aacute;c con đường l&aacute;t đ&aacute; trong thị trấn lớn kh&ocirc;ng thể tin được.&nbsp;Như bạn c&oacute; thể nhớ từ vấn đề CSTREET trong thị trấn, c&aacute;c đường phố được l&aacute;t theo c&aacute;ch m&agrave; giữa hai điểm quan t&acirc;m trong thị trấn tồn tại đ&uacute;ng một đường kết nối được l&aacute;t.&nbsp;Nhiệm vụ của bạn l&agrave; t&igrave;m khoảng c&aacute;ch xa nhất tồn tại giữa hai địa điểm tham quan bất kỳ trong th&agrave;nh phố.</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa số lượng testcase t.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi testcase chứa số địa điểm (2 &lt;= n &lt;= 50000) trong thị trấn.&nbsp;Mỗi đường phố được cho tại một d&ograve;ng bởi hai địa điểm (1 &lt;= a, b &lt;= n) v&agrave; chiều d&agrave;i của phố (0 &lt;= l &lt;20000).</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi testcase, h&atilde;y xuất một d&ograve;ng chứa chiều d&agrave;i tối đa của con phố d&agrave;i nhất trong th&agrave;nh phố.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 6 1 2 3 2 3 4 2 6 2 6 4 6 6 5 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>12</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9a2a12ee-cbe1-4986-ac45-6c97a3846160",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BENEFACT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bokam143sou-checking-cubes",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra số hình lập phương",
  "content": "<p>Cho một số nguy&ecirc;n N. T&igrave;m số c&aacute;ch c&oacute; thể để biểu diễn N dưới dạng tổng của năm h&igrave;nh lập phương.</p>\n<div id=\"problem-body\">\n<h3>Đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa gi&aacute; trị N.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$1 \\leq N \\leq 125000$</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>In ra kết quả</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>64</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/98447aa7-ec40-4a7b-a4b3-fbea4d2caf40",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BOKAM143SOU_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "books1-copying-books",
  "tags": [],
  "level": "EXPERT",
  "title": "Sao chép sách",
  "content": "<p>Trước khi ph&aacute;t minh ra in s&aacute;ch, rất kh&oacute; để tạo ra một bản sao của một cuốn s&aacute;ch. Tất cả c&aacute;c nội dung phải được viết lại bằng tay bởi những người được gọi l&agrave; người ghi ch&eacute;p. Người ghi ch&eacute;p đ&atilde; được tặng một cuốn s&aacute;ch v&agrave; sau v&agrave;i th&aacute;ng anh ta đ&atilde; ho&agrave;n th&agrave;nh bản sao của n&oacute;. Một trong những người ghi ch&eacute;p nổi tiếng nhất sống ở thế kỷ 15 v&agrave; t&ecirc;n của &ocirc;ng l&agrave; Xaverius Endricus Remius Ontius Xendrianus (Xerox). D&ugrave; sao th&igrave; c&ocirc;ng việc cũng rất kh&oacute; chịu v&agrave; nh&agrave;m ch&aacute;n. V&agrave; c&aacute;ch duy nhất để tăng tốc l&agrave; thu&ecirc; th&ecirc;m người ghi ch&eacute;p.</p>\n<div id=\"problem-body\">\n<p>Ng&agrave;y xửa ng&agrave;y xưa, c&oacute; một đo&agrave;n kịch muốn đ&oacute;ng những vở Antique Tragedies nổi tiếng. Kịch bản của những vở kịch n&agrave;y đ&atilde; được chia th&agrave;nh nhiều cuốn s&aacute;ch v&agrave; tất nhi&ecirc;n c&aacute;c diễn vi&ecirc;n cần th&ecirc;m nhiều bản sao của ch&uacute;ng. V&igrave; vậy, họ đ&atilde; thu&ecirc; nhiều người ghi ch&eacute;p để sao ch&eacute;p những cuốn s&aacute;ch n&agrave;y. H&atilde;y tưởng tượng bạn c&oacute; m cuốn s&aacute;ch (đ&aacute;nh số 1, 2 ... m) c&oacute; thể c&oacute; số trang kh&aacute;c nhau ($p_{1}, p_{2} ... p_{m}$) v&agrave; bạn muốn tạo một bản sao của mỗi cuốn s&aacute;ch đ&oacute;. Nhiệm vụ của bạn l&agrave; chia những cuốn s&aacute;ch n&agrave;y cho k người ghi ch&eacute;p, $k \\leq m$. Mỗi cuốn s&aacute;ch chỉ c&oacute; thể được giao cho một người ghi ch&eacute;p duy nhất v&agrave; mỗi người ghi ch&eacute;p phải nhận được một chuỗi c&aacute;c cuốn s&aacute;ch li&ecirc;n tục. Điều đ&oacute; c&oacute; nghĩa l&agrave;, tồn tại một d&atilde;y số li&ecirc;n tiếp tăng dần $0 = b_{0} &lt;b_{1} &lt;b_{2}, ... &lt;b_{k-1} \\leq b_{k} = m$ sao cho người ghi ch&eacute;p thứ i nhận được một chuỗi c&aacute;c cuốn s&aacute;ch c&oacute; c&aacute;c số từ $b_{i-1}+1 đến b_{i}$. Thời gian cần thiết để sao ch&eacute;p tất cả c&aacute;c cuốn s&aacute;ch được x&aacute;c định bởi người ghi ch&eacute;p được giao nhiều việc nhất. Do đ&oacute;, mục ti&ecirc;u của ch&uacute;ng ta l&agrave; giảm thiểu số trang tối đa được chỉ định cho một người ghi ch&eacute;p. Nhiệm vụ của bạn l&agrave; t&igrave;m ra phương &aacute;n giao việc tối ưu nhất.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bao gồm N trường hợp (khoảng 200). D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chỉ chứa số nguy&ecirc;n dương N. Sau đ&oacute; l&agrave; c&aacute;c trường hợp. Mỗi trường hợp bao gồm đ&uacute;ng hai d&ograve;ng. Ở d&ograve;ng thứ nhất c&oacute; hai số nguy&ecirc;n m v&agrave; k, $1 \\leq k \\leq m \\leq 500$. Ở d&ograve;ng thứ hai gồm c&aacute;c số nguy&ecirc;n $p_{1}, p_{2},...p_{m}$ c&aacute;ch nhau bởi dấu c&aacute;ch. Tất cả c&aacute;c gi&aacute; trị n&agrave;y đều l&agrave; c&aacute;c số dương v&agrave; nhỏ hơn 10000000.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp, in ra ch&iacute;nh x&aacute;c một d&ograve;ng. D&ograve;ng đ&oacute; phải chứa đầu v&agrave;o li&ecirc;n tiếp p1, p2, ... pm được chia th&agrave;nh đ&uacute;ng k phần sao cho tổng lớn nhất của một phần phải nhỏ nhất c&oacute; thể. H&atilde;y sử dụng k&yacute; tự gạch ch&eacute;o ('/') để t&aacute;ch c&aacute;c phần. Phải c&oacute; ch&iacute;nh x&aacute;c một k&yacute; tự khoảng trắng giữa hai số li&ecirc;n tiếp bất kỳ v&agrave; giữa số với dấu gạch ch&eacute;o.</p>\n<p>Nếu c&oacute; nhiều hơn một giải ph&aacute;p, h&atilde;y in ra một giải ph&aacute;p giảm thiểu c&ocirc;ng việc được giao cho người ghi ch&eacute;p đầu ti&ecirc;n, sau đ&oacute; cho người ghi ch&eacute;p thứ hai,... Nhưng mỗi người ghi ch&eacute;p phải được giao &iacute;t nhất một cuốn s&aacute;ch.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n9 3\n100 200 300 400 500 600 700 800 900\n5 4\n100 100 100 100 100</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>100 200 300 400 500 / 600 700 / 800 900\n100 / 100 / 100 / 100 100</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5790e4a3-67f3-4fb3-94d2-a668b6cb6b7e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BOOKS1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "broken-broken-keyboard",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bàn phím bị hỏng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>B&agrave;n ph&iacute;m của Bruce Force bị hỏng, chỉ c&ograve;n một số ph&iacute;m hoạt động được. Bruce đ&atilde; ph&aacute;t hiện ra rằng anh ta vẫn c&oacute; thể g&otilde; văn bản bằng c&aacute;ch chuyển sang m&agrave;n h&igrave;nh b&agrave;n ph&iacute;m bất cứ khi n&agrave;o anh ta cần nhập một chữ c&aacute;i n&agrave;o m&agrave; hiện tại kh&ocirc;ng được &aacute;nh xạ tới bất kỳ ph&iacute;m n&agrave;o trong số m ph&iacute;m c&ograve;n hoạt động của b&agrave;n ph&iacute;m.</p>\n<div id=\"problem-body\">\n<p>Bạn được cung cấp một văn bản m&agrave; Bruce muốn nhập v&agrave; anh ấy hỏi bạn liệu bạn c&oacute; thể cho anh ấy biết số k&yacute; tự li&ecirc;n tiếp tối đa trong văn bản c&oacute; thể được nhập m&agrave; kh&ocirc;ng cần phải chuyển sang m&agrave;n h&igrave;nh b&agrave;n ph&iacute;m hay kh&ocirc;ng. Để đơn giản, ch&uacute;ng ta sẽ giả định rằng mỗi ph&iacute;m của b&agrave;n ph&iacute;m sẽ được &aacute;nh xạ tới ch&iacute;nh x&aacute;c một k&yacute; tự v&agrave; kh&ocirc;ng thể nhập c&aacute;c k&yacute; tự kh&aacute;c bằng c&aacute;ch kết hợp c&aacute;c ph&iacute;m kh&aacute;c nhau. Điều n&agrave;y c&oacute; nghĩa l&agrave; Bruce muốn biết độ d&agrave;i của chuỗi con lớn nhất của văn bản bao gồm nhiều nhất m k&yacute; tự kh&aacute;c nhau.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o chứa một số trường hợp thử nghiệm, mỗi trường hợp thử nghiệm bao gồm hai d&ograve;ng. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp chứa số m (1 &le; m &le; 128), số n&agrave;y x&aacute;c định c&oacute; bao nhi&ecirc;u ph&iacute;m tr&ecirc;n b&agrave;n ph&iacute;m vẫn c&ograve;n hoạt động. D&ograve;ng thứ hai của mỗi trường hợp chứa văn bản m&agrave; Bruce muốn nhập. Bạn c&oacute; thể giả sử rằng độ d&agrave;i của văn bản n&agrave;y kh&ocirc;ng vượt qu&aacute; 1 triệu k&yacute; tự. Lưu &yacute; rằng đầu v&agrave;o c&oacute; thể chứa c&aacute;c k&yacute; tự khoảng trắng, c&aacute;c k&yacute; tự n&agrave;y sẽ được xử l&yacute; giống như bất kỳ k&yacute; tự n&agrave;o kh&aacute;c.</li>\n<li>Trường hợp thử nghiệm cuối c&ugrave;ng được theo sau bởi một d&ograve;ng chứa một số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp kiểm tra, in ra một d&ograve;ng c&oacute; độ d&agrave;i bằng chuỗi con lớn nhất của văn bản bao gồm nhiều nhất m k&yacute; tự kh&aacute;c nhau.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\nThis can't be solved by brute force.\n1\nMississippi\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>7\n2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/76740ed5-1cd0-415d-b045-d3739d644b53",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BROKEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "buglife-a-bugs-life",
  "tags": [],
  "level": "EXPERT",
  "title": "Thử nghiệm cuộc đời của con bọ",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Gi&aacute;o sư Hopper đang nghi&ecirc;n cứu về h&agrave;nh vi t&igrave;nh dục của một lo&agrave;i bọ hiếm. Gi&aacute;o sư giả định rằng ch&uacute;ng c&oacute; hai giới t&iacute;nh kh&aacute;c nhau v&agrave; ch&uacute;ng chỉ giao tiếp với những con bọ kh&aacute;c giới. Trong thử nghiệm của &ocirc;ng, mỗi con bọ v&agrave; c&aacute;ch giao tiếp của ch&uacute;ng rất dễ x&aacute;c định, bởi v&igrave; c&aacute;c con số được in tr&ecirc;n sau lưng của ch&uacute;ng.</p>\n<div id=\"problem-body\">\n<p>Cho trước một danh s&aacute;ch số lượng giao tiếp của con bọ, h&atilde;y x&aacute;c định xem thử nghiệm c&oacute; chứng minh đ&uacute;ng về giả định của gi&aacute;o sư về 2 con bọ c&oacute; c&ugrave;ng giới t&iacute;nh nhưng kh&ocirc;ng quan hệ hay nếu n&oacute; c&oacute; chứa một số giao tiếp của con bọ m&agrave; l&agrave;m thay đổi điều đ&oacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa số lượng trường hợp. Mỗi trường hợp bắt đầu bằng một d&ograve;ng cho biết số lượng con bọ (&iacute;t nhất l&agrave; một v&agrave; tối đa l&agrave; 2000) v&agrave; số lượng giao tiếp (l&ecirc;n đến 1,000,000) được ph&acirc;n t&aacute;ch bằng một khoảng trắng. Trong c&aacute;c d&ograve;ng tiếp theo, mỗi lần giao tiếp được cho dưới dạng hai gi&aacute; trị số của con bọ ri&ecirc;ng biệt, được ph&acirc;n t&aacute;ch nhau bởi một khoảng trắng. C&aacute;c con bọ được đ&aacute;nh số li&ecirc;n tục bắt đầu từ một.</p>\n<h3>Định dạng đầu ra</h3>\n<p>The output for every scenario is a line containing &ldquo;<tt>Scenario #i:</tt>&rdquo;, where i is the number of the scenario starting at 1, followed by one line saying either &ldquo;<tt>No suspicious bugs found!</tt>&rdquo; if the experiment is consistent with his assumption about the bugs&rsquo; sexual behavior, or &ldquo;<tt>Suspicious bugs found!</tt>&rdquo; if Professor Hopper&rsquo;s assumption is definitely wrong.</p>\n<p>Đầu ra cho mỗi trường hợp l&agrave; một d&ograve;ng c&oacute; chứa &ldquo;Scenario #i:&rdquo;, trong đ&oacute; i l&agrave; số của trường hợp bắt đầu từ 1, theo sau l&agrave; một d&ograve;ng cho biết \"No suspicious bugs found!\" nếu thử nghiệm tr&ugrave;ng khớp với giả định của gi&aacute;o sư về h&agrave;nh vi t&igrave;nh dục của con bọ hoặc \"Suspicious bugs found!\" nếu giả định của gi&aacute;o sư Hopper chắc chắn l&agrave; sai.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 3\n1 2\n2 3\n1 3\n4 2\n1 2\n3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Scenario #1:\nSuspicious bugs found!\nScenario #2:\nNo suspicious bugs found!</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/03018e4e-189b-40ac-91ab-ddb448802d8a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BUGLIFE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "bytesm2-philosophers-stone",
  "tags": [],
  "level": "EXPERT",
  "title": "Thu thập các viên đá",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một trong những căn ph&ograve;ng b&iacute; mật ở Hogwarts chứa đầy những vi&ecirc;n đ&aacute; của một triết gia. S&agrave;n của căn ph&ograve;ng được l&aacute;t bằng gạch vu&ocirc;ng c&oacute; k&iacute;ch thước h&times;w, trong đ&oacute;, h l&agrave; h&agrave;ng gạch ở ph&iacute;a trước (h&agrave;ng đầu ti&ecirc;n) đến v&agrave; h&agrave;ng ph&iacute;a sau (h&agrave;ng cuối c&ugrave;ng) v&agrave; w l&agrave; số cột chứa c&aacute;c &ocirc; gạch từ tr&aacute;i sang phải. Mỗi &ocirc; gạch c&oacute; từ 1 đến 100 vi&ecirc;n đ&aacute; tr&ecirc;n đ&oacute;. Harry phải lấy c&agrave;ng nhiều đ&aacute; triết gia c&agrave;ng tốt, với điều kiện sau:</p>\n<div id=\"problem-body\">\n<ul>\n<li>Anh ta bắt đầu bằng c&aacute;ch chọn bất kỳ &ocirc; n&agrave;o trong h&agrave;ng đầu ti&ecirc;n v&agrave; thu thập c&aacute;c vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc; đ&oacute;. Sau đ&oacute;, anh ta di chuyển đến một &ocirc; ở h&agrave;ng tiếp theo, thu thập c&aacute;c vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc;,.... cho đến khi đến h&agrave;ng cuối c&ugrave;ng.</li>\n<li>Khi anh ta di chuyển từ &ocirc; n&agrave;y sang &ocirc; ở h&agrave;ng tiếp theo, anh ta chỉ c&oacute; thể di chuyển đến &ocirc; ngay dưới n&oacute; hoặc theo đường ch&eacute;o tr&aacute;i hoặc phải.</li>\n</ul>\n<p>Cho trước c&aacute;c gi&aacute; trị của h v&agrave; w v&agrave; số lượng đ&aacute; của triết gia tr&ecirc;n mỗi &ocirc;, h&atilde;y viết một chương tr&igrave;nh để t&iacute;nh to&aacute;n số đ&aacute; của triết gia tối đa m&agrave; Harry c&oacute; thể lấy trong một lần đi từ h&agrave;ng đầu ti&ecirc;n đến h&agrave;ng cuối c&ugrave;ng.</p>\n</div>\n<div>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n T duy nhất, số lượng trường hợp thử nghiệm. Trong mỗi trường hợp thử nghiệm, d&ograve;ng đầu ti&ecirc;n c&oacute; hai số nguy&ecirc;n. Số nguy&ecirc;n đầu ti&ecirc;n h ($1 \\leq h \\leq 100$) l&agrave; số h&agrave;ng c&aacute;c &ocirc; gạch tr&ecirc;n s&agrave;n nh&agrave;. Số nguy&ecirc;n thứ hai w ($1 \\leq w \\leq 100$) l&agrave; số cột c&aacute;c &ocirc; gạch tr&ecirc;n s&agrave;n. Tiếp theo, c&oacute; h d&ograve;ng đầu v&agrave;o. D&ograve;ng thứ i trong số n&agrave;y, chỉ định số lượng đ&aacute; của triết gia, trong mỗi &ocirc; gạch của h&agrave;ng thứ i t&iacute;nh từ ph&iacute;a trước. Mỗi d&ograve;ng c&oacute; w số nguy&ecirc;n, trong đ&oacute; mỗi số nguy&ecirc;n m ($0 \\leq m \\leq 100$) l&agrave; số vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc; đ&oacute;. C&aacute;c số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng một k&yacute; tự khoảng trắng.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đầu ra phải bao gồm T d&ograve;ng, ($1 \\leq T \\leq 100$), mỗi d&ograve;ng cho mỗi trường hợp thử nghiệm. Mỗi d&ograve;ng bao gồm một số nguy&ecirc;n duy nhất, l&agrave; số lượng đ&aacute; triết gia tối đa m&agrave; Harry c&oacute; thể lấy được, trong một lần di chuyển từ h&agrave;ng đầu ti&ecirc;n đến h&agrave;ng cuối c&ugrave;ng cho trường hợp thử nghiệm tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n6 5\n3 1 7 4 2\n2 1 3 1 1\n1 2 2 1 8\n2 2 1 5 3\n2 1 4 4 4\n5 2 7 5 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>32\n//7+1+8+5+4+7=32</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6145a3c2-328d-4aef-b085-134db992fd5c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BYTESM2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef900f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "candy-candy-i",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bài toán chia kẹo",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Tuệ Nhi l&agrave; gi&aacute;o vi&ecirc;n năm đầu ti&ecirc;n của trường tiểu học. H&ocirc;m nay c&ocirc; ấy đ&atilde; đi du lịch với lớp. C&ocirc; lấy cho mỗi trẻ một g&oacute;i kẹo. Thật kh&ocirc;ng may, k&iacute;ch thước của c&aacute;c g&oacute;i kh&ocirc;ng giống nhau. Tuệ Nhi sợ rằng mỗi đứa trẻ sẽ muốn c&oacute; g&oacute;i kẹo lớn nhất v&agrave; điều n&agrave;y sẽ dẫn đến những cuộc c&atilde;i v&atilde; hoặc thậm ch&iacute; đ&aacute;nh nhau giữa c&aacute;c đứa trẻ. C&ocirc; ấy muốn tr&aacute;nh điều n&agrave;y. V&igrave; vậy, c&ocirc; đ&atilde; quyết định mở tất cả c&aacute;c g&oacute;i, đếm số kẹo trong mỗi g&oacute;i v&agrave; chuyển một số kẹo từ g&oacute;i lớn hơn sang g&oacute;i nhỏ hơn để mỗi g&oacute;i sẽ chứa số kẹo bằng nhau. C&acirc;u hỏi đặt ra l&agrave; c&ocirc; ấy phải di chuyển bao nhi&ecirc;u vi&ecirc;n kẹo.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Tệp đầu v&agrave;o bao gồm một số khối dữ liệu. Mỗi khối bắt đầu bằng số g&oacute;i kẹo N ($1 \\leq N \\leq 10000$) tiếp theo l&agrave; N số nguy&ecirc;n (mỗi số nhỏ hơn 1000) ở c&aacute;c d&ograve;ng ri&ecirc;ng biệt, cho biết số lượng kẹo trong mỗi g&oacute;i. Sau khối dữ liệu cuối c&ugrave;ng, c&oacute; số -1.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Tệp đầu ra phải chứa một d&ograve;ng với số lần chuyển c&aacute;c vi&ecirc;n kẹo nhỏ nhất cho mỗi khối dữ liệu. Một động t&aacute;c chuyển vi&ecirc;n kẹo bao gồm lấy một vi&ecirc;n kẹo từ một g&oacute;i v&agrave; đặt n&oacute; v&agrave;o một g&oacute;i kh&aacute;c. Nếu kh&ocirc;ng thể c&oacute; số kẹo giống nhau trong mỗi g&oacute;i, h&atilde;y in ra gi&aacute; trị l&agrave; -1.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n1\n1\n1\n1\n6\n2\n3\n4\n-1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4\n-1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/40b9e3b2-c9ea-499f-b471-c497fb6f0b27",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CANDY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9010"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "canton-count-on-cantor",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Phép đếm của Cantor",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một trong những chứng minh nổi tiếng của to&aacute;n học hiện đại l&agrave; chứng minh của Georg Cantor rằng tập hợp c&aacute;c số hữu tỉ l&agrave; c&oacute; thể đếm được. Chứng minh được thực hiện bằng c&aacute;ch sử dụng một ph&eacute;p liệt k&ecirc; r&otilde; r&agrave;ng c&aacute;c số hữu tỉ như thể hiện trong sơ đồ b&ecirc;n dưới.</p>\n<pre class=\"language-markup\"><code>1/1 1/2 1/3 1/4 1/5 ...\n2/1 2/2 2/3 2/4\n3/1 3/2 3/3\n4/1 4/2\n5/1</code></pre>\n<div id=\"problem-body\">\n<p>Trong sơ đồ tr&ecirc;n, số hạng đầu ti&ecirc;n l&agrave; 1/1, số hạng thứ hai l&agrave; 1/2, số hạng thứ ba l&agrave; 2/1, số hạng thứ tư l&agrave; 3/1, số hạng thứ năm l&agrave; 2/2,...</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bắt đầu bằng một d&ograve;ng chứa một số nguy&ecirc;n $t \\leq 20$, số lượng trường hợp thử nghiệm. Tiếp theo l&agrave; t trường hợp thử nghiệm. Sau đ&oacute;, n&oacute; chứa một số duy nhất tr&ecirc;n mỗi d&ograve;ng.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Bạn h&atilde;y viết một chương tr&igrave;nh đọc v&agrave;o một danh s&aacute;ch c&aacute;c số trong phạm vi từ 1 đến $10^{7}$ v&agrave; in ra cho mỗi số một số hạng tương ứng trong ph&eacute;p liệt k&ecirc; của Cantor như được cho b&ecirc;n dưới.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n3\n14\n7</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>TERM 3 IS 2/1\nTERM 14 IS 2/4\nTERM 7 IS 1/4</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/76f60528-e8f7-47c4-8ac3-d370a3b7cee0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CANTON_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9011"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cmexpr-complicated-expressions",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sắp xếp các biểu thức phức tạp",
  "content": "<p>Hoạt động quan trọng nhất của ACM l&agrave; mạng GSM. Với tư c&aacute;ch l&agrave; hệ thống điều h&agrave;nh điện thoại di động, ACM phải x&acirc;y dựng c&aacute;c trạm ph&aacute;t s&oacute;ng của ri&ecirc;ng m&igrave;nh. Điều rất quan trọng l&agrave; phải t&iacute;nh to&aacute;n ch&iacute;nh x&aacute;c hoạt động của s&oacute;ng điện từ. Thật kh&ocirc;ng may, dự đo&aacute;n về điện trường l&agrave; một c&ocirc;ng việc rất phức tạp v&agrave; c&aacute;c c&ocirc;ng thức m&ocirc; tả ch&uacute;ng rất d&agrave;i v&agrave; kh&oacute; đọc. V&iacute; dụ, phương tr&igrave;nh Maxwell m&ocirc; tả c&aacute;c định luật cơ bản của kỹ thuật điện thực sự rất kh&oacute;.</p>\n<div id=\"problem-body\">\n<p>ACM đ&atilde; thiết kế hệ thống m&aacute;y t&iacute;nh c&oacute; thể thực hiện một số ph&eacute;p t&iacute;nh to&aacute;n v&agrave; đưa ra kết quả dưới dạng biểu thức to&aacute;n học. Thật kh&ocirc;ng may, bằng c&aacute;ch tạo biểu thức trong một số bước, lu&ocirc;n c&oacute; một số dấu ngoặc đơn kh&ocirc;ng cần thiết b&ecirc;n trong biểu thức. Nhiệm vụ của bạn l&agrave; lấy c&aacute;c kết quả từng phần n&agrave;y v&agrave; l&agrave;m cho ch&uacute;ng tr&ocirc;ng dễ nh&igrave;n hơn bằng c&aacute;ch loại bỏ tất cả c&aacute;c dấu ngoặc đơn kh&ocirc;ng cần thiết.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>C&oacute; một số nguy&ecirc;n dương T tr&ecirc;n d&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o (khoảng 10000). N&oacute; l&agrave; số lượng biểu thức ph&iacute;a sau. Mỗi biểu thức chỉ bao gồm một d&ograve;ng duy nhất chứa c&aacute;c chữ c&aacute;i in thường, c&aacute;c to&aacute;n tử (+, -, *, /) v&agrave; dấu ngoặc đơn (( v&agrave; )). C&aacute;c chữ c&aacute;i l&agrave; c&aacute;c biến c&oacute; thể c&oacute; bất kỳ gi&aacute; trị n&agrave;o, c&aacute;c to&aacute;n tử v&agrave; dấu ngoặc đơn c&oacute; &yacute; nghĩa th&ocirc;ng thường. Ph&eacute;p nh&acirc;n v&agrave; ph&eacute;p chia c&oacute; mức độ ưu ti&ecirc;n cao hơn so với ph&eacute;p trừ v&agrave; ph&eacute;p cộng. Tất cả c&aacute;c ph&eacute;p to&aacute;n c&oacute; c&ugrave;ng mức độ ưu ti&ecirc;n được t&iacute;nh từ tr&aacute;i qua phải. Kh&ocirc;ng c&oacute; khoảng trắng b&ecirc;n trong c&aacute;c biểu thức. Kh&ocirc;ng c&oacute; d&ograve;ng đầu v&agrave;o n&agrave;o chứa nhiều hơn 250 k&yacute; tự.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In một d&ograve;ng duy nhất cho mọi biểu thức. D&ograve;ng đ&oacute; phải chứa c&ugrave;ng một biểu thức với c&aacute;c dấu ngoặc đơn kh&ocirc;ng cần thiết bị loại bỏ. Bạn phải loại bỏ c&agrave;ng nhiều dấu ngoặc đơn c&agrave;ng tốt m&agrave; kh&ocirc;ng l&agrave;m thay đổi ngữ nghĩa của biểu thức. Ngữ nghĩa của biểu thức được coi l&agrave; giống nhau nếu v&agrave; chỉ khi c&oacute; bất kỳ điều kiện n&agrave;o sau đ&acirc;y l&agrave; lu&ocirc;n đ&uacute;ng:</p>\n<div align=\"left\">\n<ul>\n<li>Thứ tự của c&aacute;c ph&eacute;p to&aacute;n l&agrave; như tr&ecirc;n. Điều đ&oacute; c&oacute; nghĩa l&agrave; \"(a+b)+c\" giống với \"a+b+c\", v&agrave; \"a+(b/c)\" giống với \"a+b/c\".</li>\n<li>Thứ tự của một số ph&eacute;p to&aacute;n được ho&aacute;n đổi nhưng kết quả kh&ocirc;ng thay đổi đối với ph&eacute;p cộng v&agrave; ph&eacute;p nh&acirc;n. Điều đ&oacute; c&oacute; nghĩa l&agrave; \"a+(b+c)\" v&agrave; \"(a+b)+c\" l&agrave; như nhau. Ch&uacute;ng ta cũng c&oacute; thể kết hợp ph&eacute;p cộng với ph&eacute;p trừ v&agrave; ph&eacute;p nh&acirc;n với ph&eacute;p chia, nếu ph&eacute;p trừ hoặc ph&eacute;p chia l&agrave; ph&eacute;p to&aacute;n thứ hai. V&iacute; dụ: \"a+(b-c)\" giống với \"a+b-c\".</li>\n</ul>\n</div>\n<p>Bạn kh&ocirc;ng thể sử dụng bất kỳ quy tắc n&agrave;o kh&aacute;c, cụ thể l&agrave; bạn kh&ocirc;ng thể ho&aacute;n đổi c&aacute;c to&aacute;n hạng tr&aacute;i v&agrave; phải v&agrave; bạn kh&ocirc;ng thể thay thế \"a-(b-c)\" bằng \"a-b+c\".</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>8\n(a+(b*c))\n((a+b)*c)\n(a*(b*c))\n(a*(b/c)*d)\n((a/(b/c))/d)\n((x))\n(a+b)-(c-d)-(e/f)\n(a+b)+(c-d)-(e+f)</code></pre>\n<p><strong>Đầu ra</strong><br /><tt></tt></p>\n<pre class=\"language-markup\"><code>a+b*c\n(a+b)*c\na*b*c\na*b/c*d\na/(b/c)/d\nx\na+b-(c-d)-e/f\na+b+c-d-(e+f)</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/89afa6e5-da50-419c-8dc5-084dae10b36d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CMEXPR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9012"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "codfury-megatron-va-con-thinh-no-cua-anh-ta",
  "tags": [],
  "level": "EXPERT",
  "title": "Megatron và cơn thịnh nộ",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Tức giận với thất bại của Decepticons sau một trận chiến d&agrave;i hơi với c&aacute;c Autobots, Megatron, trong cơn thịnh nộ của m&igrave;nh, đ&atilde; quyết định ti&ecirc;u diệt tất cả c&aacute;c h&agrave;nh tinh tr&ecirc;n đường trở về Cybertron từ Tr&aacute;i đất. C&oacute; nhiều h&agrave;nh tinh giữa Tr&aacute;i đất v&agrave; Cybertron, v&agrave; mỗi h&agrave;nh tinh c&oacute; một số Autobots để bảo vệ n&oacute; khỏi anh ta. V&igrave; Megatron c&ograve;n &iacute;t đạn, anh ta muốn chiến đấu với &iacute;t robot nhất c&oacute; thể (tr&ecirc;n thực tế, kh&ocirc;ng nhiều hơn \"M\" trong số ch&uacute;ng) tr&ecirc;n đường trở về.</p>\n<p>Bạn cần t&igrave;m số lượng h&agrave;nh tinh tối đa m&agrave; anh ta c&oacute; thể ph&aacute; hủy trong cuộc h&agrave;nh tr&igrave;nh của m&igrave;nh.</p>\n<div id=\"problem-body\">\n<div>LƯU &Yacute;: Megatron c&oacute; thể bắt đầu \"cuộc chiến hủy diệt\" của m&igrave;nh từ bất kỳ h&agrave;nh tinh n&agrave;o v&agrave; chỉ c&oacute; thể di chuyển đến h&agrave;nh tinh tiếp theo từ h&agrave;nh tinh m&agrave; anh ta hiện đang ở.</div>\n<p>Tức giận với thất bại của Decepticons sau một trận chiến d&agrave;i hơi với c&aacute;c Autobots, Megatron, trong cơn thịnh nộ của m&igrave;nh, đ&atilde; quyết định ti&ecirc;u diệt tất cả c&aacute;c h&agrave;nh tinh tr&ecirc;n đường trở về Cybertron từ Tr&aacute;i đất.&nbsp;C&oacute; nhiều h&agrave;nh tinh giữa Tr&aacute;i đất v&agrave; Cybertron, v&agrave; mỗi h&agrave;nh tinh c&oacute; một số Autobots để bảo vệ n&oacute; khỏi anh ta.&nbsp;V&igrave; Megatron c&ograve;n &iacute;t đạn, anh ta muốn chiến đấu với &iacute;t autobot nhất c&oacute; thể tr&ecirc;n đường trở về.</p>\n<p>Bạn cần t&igrave;m số lượng h&agrave;nh tinh tối đa m&agrave; anh ta c&oacute; thể ph&aacute; hủy trong cuộc h&agrave;nh tr&igrave;nh của m&igrave;nh.</p>\n<p>LƯU &Yacute;: Megatron c&oacute; thể bắt đầu \"cuộc chiến hủy diệt\" của m&igrave;nh từ bất kỳ h&agrave;nh tinh n&agrave;o v&agrave; chỉ c&oacute; thể di chuyển đến h&agrave;nh tinh tiếp theo từ h&agrave;nh tinh m&agrave; anh ta hiện đang ở.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Bạn sẽ nhận được một số nguy&ecirc;n \"T\" biểu thị số lượng trường hợp thử nghiệm.&nbsp;(T &lt;= 20)</p>\n<p>Sau đ&oacute;, d&ograve;ng tiếp theo sẽ chứa hai số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch kh&ocirc;ng &acirc;m \"P\" v&agrave; \"M\", trong đ&oacute; P l&agrave; số h&agrave;nh tinh tr&ecirc;n đường trở về của anh ta (P &lt;= 50000) v&agrave; M l&agrave; số Autobot tối đa m&agrave; Megatron c&oacute; thể thấy (M &lt;= 1000.000).</p>\n<p>Sau đ&oacute;, một d&ograve;ng chứa P số nguy&ecirc;n c&aacute;ch nhau bởi một khoảng trắng sẽ biểu thị số lượng Autobots c&oacute; mặt tr&ecirc;n mỗi h&agrave;nh tinh.&nbsp;(Đối với mỗi h&agrave;nh tinh sẽ c&oacute; kh&ocirc;ng qu&aacute; 1000 autobots).</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đầu ra của bạn phải bao gồm \"T\" c&aacute;c cặp số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, một cặp tr&ecirc;n mỗi d&ograve;ng, biểu thị số lượng Autobots Megatron sẽ chiến đấu v&agrave; số lượng h&agrave;nh tinh m&agrave; anh ta sẽ ph&aacute; hủy tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4 50\n20 5 23 45</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>48 3</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Megatron bắt đầu ở h&agrave;nh tinh 1 (với 20 Autobots) v&agrave; đi đến h&agrave;nh tinh 2, sau đ&oacute; l&agrave; h&agrave;nh tinh thứ 3,&nbsp; tại thời điểm n&agrave;y, anh ấy đ&atilde; nh&igrave;n thấy 48 Autobots, nếu anh ấy quyết định đến h&agrave;nh tinh 4, anh ấy sẽ thấy 93 Autobots&hellip; v&igrave; vậy anh ta dừng cuộc h&agrave;nh tr&igrave;nh của m&igrave;nh tại h&agrave;nh tinh thứ 3.</p>\n<p>Megatron, tuy nhi&ecirc;n, c&oacute; thể đ&atilde; bắt đầu ở h&agrave;nh tinh 2 với 5 Autobots, sau đ&oacute; tiếp tục đến h&agrave;nh tinh thứ 4, sau đ&oacute;, anh ấy sẽ thấy 73 Autobots, nhưng, v&igrave; anh ấy muốn thấy những Autobots tối thiểu nhất c&oacute; thể v&agrave; số lượng Autobots n&agrave;y vượt qu&aacute; những g&igrave; anh ta muốn thấy, anh ta quyết định chọn con đường từ h&agrave;nh tinh thứ 1 đến h&agrave;nh tinh thứ 3.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/55d4221a-1faf-441a-b670-76b695dc4d2e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CODFURY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9013"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "coins-bytelandian-gold-coins",
  "tags": [],
  "level": "EXPERT",
  "title": "Đổi đồng tiền xu Bytelandian",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Ở Byteland, họ c&oacute; một hệ thống tiền tệ rất lạ. Mỗi đồng xu v&agrave;ng Bytelandian c&oacute; một số nguy&ecirc;n được viết tr&ecirc;n đ&oacute;. Một đồng n c&oacute; thể được đổi trong ng&acirc;n h&agrave;ng th&agrave;nh ba đồng: n/2, n/3 v&agrave; n/4. Nhưng những con số n&agrave;y đều được l&agrave;m tr&ograve;n xuống (c&aacute;c ng&acirc;n h&agrave;ng phải c&oacute; l&atilde;i).</p>\n<div id=\"problem-body\">\n<p>Bạn cũng c&oacute; thể b&aacute;n tiền xu Bytelandian để đổi đ&ocirc; la Mỹ. Tỷ gi&aacute; hối đo&aacute;i l&agrave; 1:1. Nhưng bạn kh&ocirc;ng thể mua tiền xu Bytelandian. Bạn c&oacute; một đồng tiền v&agrave;ng. Số lượng đ&ocirc; la Mỹ tối đa bạn c&oacute; thể nhận được cho n&oacute; l&agrave; bao nhi&ecirc;u?</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đầu v&agrave;o sẽ chứa một số trường hợp thử nghiệm (kh&ocirc;ng qu&aacute; 10). Mỗi trường hợp l&agrave; một d&ograve;ng duy nhất với số n, $0 \\leq n \\leq 1,000,000,000$. Đ&oacute; l&agrave; số được viết tr&ecirc;n đồng xu của bạn.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất, chứa số đ&ocirc; la Mỹ tối đa m&agrave; bạn c&oacute; thể kiếm được.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>12\n2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>13\n2</code></pre>\n<p>Bạn c&oacute; thể thay đổi 12 th&agrave;nh 6, 4 v&agrave; 3, sau đ&oacute; đổi ch&uacute;ng th&agrave;nh \\$6 + \\$4 + \\$3 = \\$13. Nếu bạn thử đổi đồng xu 2 th&agrave;nh 3 đồng xu nhỏ hơn, bạn sẽ nhận được 1, 0 v&agrave; 0, v&agrave; sau đ&oacute; bạn c&oacute; thể nhận được kh&ocirc;ng qu&aacute; 1 đ&ocirc; la từ ch&uacute;ng. Tốt hơn l&agrave; chỉ cần đổi trực tiếp đồng xu 2 th&agrave;nh 2 đ&ocirc; la.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1b4007f4-9099-4742-a469-884e25f11f37",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COINS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9014"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "coins-bytelandian-gold-coins-1",
  "tags": [],
  "level": "EXPERT",
  "title": "Đồng xu Bytelandian",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Ở Byteland, mọi người sử dụng một hệ thống tiền tệ rất kỳ lạ. Mỗi đồng xu v&agrave;ng Bytelandian c&oacute; một số nguy&ecirc;n được viết tr&ecirc;n đ&oacute;. Một đồng n c&oacute; thể được đổi trong ng&acirc;n h&agrave;ng th&agrave;nh ba đồng: n/2, n/3 v&agrave; n/4. Nhưng những con số n&agrave;y đều được l&agrave;m tr&ograve;n xuống (c&aacute;c ng&acirc;n h&agrave;ng phải c&oacute; l&atilde;i). Bạn cũng c&oacute; thể b&aacute;n tiền xu Bytelandian để đổi đồng đ&ocirc; la Mỹ. Tỷ gi&aacute; hối đo&aacute;i l&agrave; 1:1. Nhưng bạn kh&ocirc;ng thể mua đồng tiền xu Bytelandian. Bạn c&oacute; một đồng tiền v&agrave;ng. Số lượng đ&ocirc; la Mỹ tối đa bạn c&oacute; thể nhận được l&agrave; bao nhi&ecirc;u?</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ chứa một số trường hợp thử nghiệm (kh&ocirc;ng qu&aacute; 10). Mỗi trường hợp thử nghiệm nằm tr&ecirc;n một d&ograve;ng với số n, $0 \\leq n \\leq 1,000,000,000$. Đ&oacute; l&agrave; số được viết tr&ecirc;n đồng xu của bạn.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất, chứa số tiền đ&ocirc; la Mỹ tối đa m&agrave; bạn c&oacute; thể kiếm được.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>12\n2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>13\n2</code></pre>\n<pre>&nbsp;</pre>\n<p>Bạn c&oacute; thể thay đổi 12 th&agrave;nh 6, 4 v&agrave; 3, sau đ&oacute; đổi ch&uacute;ng th&agrave;nh \\$6 + \\$4 + \\$3 = \\$13. Nếu bạn đổi đồng xu 2 th&agrave;nh 3 đồng xu nhỏ hơn, bạn sẽ nhận được l&agrave; 1, 0 v&agrave; 0, v&agrave; sau đ&oacute; bạn c&oacute; thể nhận được kh&ocirc;ng qu&aacute; 1 đ&ocirc; la. Tốt hơn l&agrave; chỉ n&ecirc;n đổi trực tiếp 2 đồng xu th&agrave;nh 2 đ&ocirc; la.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2382cc6c-06a5-4c2b-bac5-2414ed715983",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COINS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9015"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 40,
  "slug": "crypto2-the-bytelandian-cryptographer-act-ii",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Nhà mật mã người Bytelandian",
  "content": "<p>Nh&agrave; mật m&atilde; cuồng t&iacute;n người Bytelandian đ&atilde; m&atilde; h&oacute;a một c&aacute;ch ẩn &yacute; một số c&oacute; ba chữ số bằng c&aacute;ch trừ đi 1 từ n&oacute;. Lần n&agrave;y anh ấy đ&atilde; thực sự vượt qu&aacute; mức! Người l&iacute;nh, h&atilde;y đ&aacute;nh bại anh ta, v&igrave; vua Burger v&agrave; đất nước! H&atilde;y sử dụng Brainf ** k (kh&ocirc;ng cho ph&eacute;p sử dụng ng&ocirc;n ngữ kh&aacute;c).</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">Một số nguy&ecirc;n dương c&oacute; 3 chữ số được m&atilde; h&oacute;a.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Gi&aacute; trị được giải m&atilde;</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>699</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>700</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f560bee4-d385-43d3-b916-b2e48eb66f78",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CRYPTO2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9016"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 40,
  "slug": "ctain-containers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bài toán về các thùng chứa nước",
  "content": "<p>Ch&uacute;ng ta được cho n th&ugrave;ng chứa, trong đ&oacute; $1 \\leq n \\leq 4$. L&uacute;c đầu tất cả c&aacute;c th&ugrave;ng đều chứa đầy nước. Dung t&iacute;ch của th&ugrave;ng thứ i l&agrave; số tự nhi&ecirc;n $o_{i}$ thỏa m&atilde;n bất đẳng thức $1 \\leq o_{i} \\leq 49$. 3 thao t&aacute;c c&oacute; thể thực hiện bao gồm:</p>\n<div id=\"problem-body\">\n<ol type=\"1\">\n<li>Đổ to&agrave;n bộ nước của một th&ugrave;ng chứa n&agrave;y sang th&ugrave;ng chứa kh&aacute;c. Thao t&aacute;c n&agrave;y c&oacute; thể được thực hiện trừ khi c&oacute; qu&aacute; &iacute;t chỗ trống trong th&ugrave;ng thứ hai.</li>\n<li>Đổ đầy nước v&agrave;o một th&ugrave;ng chứa từ th&ugrave;ng kh&aacute;c.</li>\n<li>Đổ to&agrave;n bộ nước của một th&ugrave;ng chứa v&agrave;o cống.</li>\n</ol>\n<h3>Nhiệm vụ</h3>\n<p>H&atilde;y viết 1 chương tr&igrave;nh cho mỗi trường hợp như sau:</p>\n<ul type=\"disc\">\n<li>Đọc v&agrave;o số lượng th&ugrave;ng chứa n, dung t&iacute;ch của mỗi th&ugrave;ng v&agrave; lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong mỗi th&ugrave;ng.</li>\n<li>Kiểm tra xem c&oacute; tồn tại một loạt c&aacute;c thao t&aacute;c dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu hay kh&ocirc;ng v&agrave; nếu c&oacute;, chương tr&igrave;nh sẽ t&iacute;nh to&aacute;n số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống được y&ecirc;u cầu.</li>\n<li>Ghi ra kết quả. Kết quả phải l&agrave; số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu, hoặc một từ \"NO\" nếu kh&ocirc;ng c&oacute; chuỗi c&aacute;c thao t&aacute;c như vậy.</li>\n</ul>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Một số nguy&ecirc;n ở d&ograve;ng đầu ti&ecirc;n, cho biết số lượng trường hợp thử nghiệm, tiếp theo l&agrave; một d&ograve;ng trống. Sẽ c&oacute; kh&ocirc;ng qu&aacute; 20 trường hợp thử nghiệm.</p>\n<p>Đối với mỗi trường hợp thử nghiệm, tại d&ograve;ng đầu ti&ecirc;n, một số nguy&ecirc;n dương n được viết, $n \\leq 4$, đ&acirc;y l&agrave; số lượng th&ugrave;ng chứa. C&oacute; n số nguy&ecirc;n dương được viết ở d&ograve;ng thứ hai. Đ&acirc;y l&agrave; dung t&iacute;ch của c&aacute;c th&ugrave;ng chứa (số nguy&ecirc;n thứ i $o_{i}$ biểu thị dung t&iacute;ch nếu th&ugrave;ng chứa thứ i, $1 \\leq o_{i} \\leq 49$). Trong d&ograve;ng thứ ba c&oacute; n số được viết. Đ&acirc;y l&agrave; thể t&iacute;ch lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong c&aacute;c th&ugrave;ng chứa (số nguy&ecirc;n thứ i biểu thị khối lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong th&ugrave;ng chứa thứ i, $0 \\leq w_{i} \\leq o_{i}$). Tất cả c&aacute;c số nguy&ecirc;n ở d&ograve;ng thứ hai v&agrave; thứ ba được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p>C&aacute;c trường hợp thử nghiệm sẽ được ph&acirc;n t&aacute;ch bằng một d&ograve;ng trống duy nhất.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm: viết ra một số nguy&ecirc;n - số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu hoặc chỉ viết ra một từ \"NO\" nếu kh&ocirc;ng thể tới được t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu, chỉ thực hiện c&aacute;c thao t&aacute;c cho ph&eacute;p.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n\n3\n3 5 5\n0 0 4\n\n2\n20 25\n10 16</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\nNO</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4cb1aabf-91c1-4d56-bcdc-b1ffd86079a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTAIN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9017"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "cubefr-cube-free-numbers",
  "tags": [],
  "level": "EXPERT",
  "title": "Giá trị số không có thừa số lũy thừa bậc 3 (Cube free numbers)",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3 (Cube free numbers) l&agrave; một số kh&ocirc;ng c&oacute; ước số n&agrave;o l&agrave; một số lũy thừa bậc 3 (Số lũy thừa bậc 3 l&agrave; gi&aacute; trị mũ 3 của một số nguy&ecirc;n như $8=(2^{3}), 27=(3^{3})). V&igrave; vậy, c&aacute;c gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3&nbsp;l&agrave; 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18,... (Ch&uacute;ng ta sẽ coi 1 l&agrave; một gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3). 8, 16, 24, 27, 32,... kh&ocirc;ng phải l&agrave; gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3. V&igrave; vậy, vị tr&iacute; của số 1 trong số c&aacute;c gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3 l&agrave; 1, vị tr&iacute; của 2 l&agrave; 2, 3 l&agrave; 3 v&agrave; vị tr&iacute; của 10 l&agrave; 9. Cho trước một số dương, bạn h&atilde;y cho biết n&oacute; c&oacute; phải l&agrave; gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3&nbsp;hay kh&ocirc;ng v&agrave; nếu c&oacute; th&igrave; cho biết vị tr&iacute; của n&oacute; trong số c&aacute;c gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của trường hợp thử nghiệm sẽ l&agrave; số trường hợp thử nghiệm T ($1 \\leq T \\leq 100000$). Tiếp theo l&agrave; T d&ograve;ng. Tr&ecirc;n mỗi d&ograve;ng, bạn sẽ t&igrave;m thấy một số nguy&ecirc;n n ($1 \\leq n \\leq 1000000$).</p>\n<h3>Định dạng đầu ra</h3>\n<p>H&atilde;y in ra vị tr&iacute; của gi&aacute; trị số trong số c&aacute;c gi&aacute; trị số kh&ocirc;ng c&oacute; thừa số lũy thừa bậc 3.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>9</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92105154-4ee4-49c7-aafc-572594e6bbd3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CUBEFR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9018"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "dcepc501-save-thy-toys",
  "tags": [],
  "level": "EXPERT",
  "title": "Đồ chơi của Leonard",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Leonard rất th&iacute;ch mua những m&oacute;n đồ chơi khoa học viễn tưởng hiếm v&agrave; đắt tiền. Anh ta giữ bộ sưu tập của m&igrave;nh theo thứ tự tuần tự về ng&agrave;y m&agrave; đồ chơi được mua trong một chiếc tủ đặc biệt để c&ocirc; bạn c&ugrave;ng ph&ograve;ng Sheldon của anh kh&ocirc;ng bao giờ lấy đồ chơi của anh. Nhưng v&igrave; xui xẻo, Leonard một lần thua cược với Sheldon v&agrave; Sheldon y&ecirc;u cầu một phần đồ chơi của Leonard. V&igrave; kh&ocirc;ng muốn mất nhiều tiền n&ecirc;n Leonard quyết định một chiến lược để giảm mức thua xuống mức tối thiểu.</p>\n<div id=\"problem-body\">\n<p>Leonard, bắt đầu từ m&oacute;n đồ chơi đầu ti&ecirc;n trong tủ của m&igrave;nh sẽ chọn một số đồ chơi, giả sử \"x\" đồ chơi theo thứ tự. Sau đ&oacute; Sheldon sẽ chọn c&aacute;c đồ chơi \"x\" tiếp theo (Lưu &yacute; rằng Sheldon chọn c&aacute;c đồ chơi bằng số lượng đồ chơi được chọn bởi Leonard trừ khi c&aacute;c đồ chơi c&ograve;n lại nhỏ hơn \"x\". Trong trường hợp đ&oacute;, anh ta chọn tất cả c&aacute;c đồ chơi c&ograve;n lại). Việc n&agrave;y sẽ tiếp tục diễn ra cho đến khi kh&ocirc;ng c&ograve;n đồ chơi n&agrave;o trong tủ để Leonard chọn. Bạn được cung cấp một chuỗi c&aacute;c m&oacute;n đồ chơi với gi&aacute; cả của ch&uacute;ng. H&atilde;y gi&uacute;p Leonard tối đa h&oacute;a tổng gi&aacute; cả của tất cả m&oacute;n đồ chơi m&agrave; anh ấy chọn.</p>\n<p>Leonard trong mỗi lượt của m&igrave;nh chỉ c&oacute; thể chọn 1 hoặc 2 hoặc 3 đồ chơi (\"x\" được m&ocirc; tả ở tr&ecirc;n c&oacute; thể nhận gi&aacute; trị 1, 2 hoặc 3).</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chỉ định T, số lượng c&aacute;c trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp thử nghiệm chứa N ở d&ograve;ng đầu ti&ecirc;n. D&ograve;ng thứ hai chứa N số nguy&ecirc;n như đ&atilde; m&ocirc; tả ở tr&ecirc;n.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra 1 d&ograve;ng cho mỗi trường hợp thử nghiệm đưa ra gi&aacute; trị lớn nhất c&oacute; thể của tổng tất cả đồ chơi m&agrave; Leonard chọn.</p>\n<h3>Điều kiện</h3>\n<ul>\n<li>$1 \\leq T \\leq 10$</li>\n<li>$1 \\leq N \\leq 100000$</li>\n<li>Gi&aacute; cả của đồ chơi K sao cho $1 \\leq K \\leq 1000000$</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n4\n5 4 3 2\n6\n10 8 7 11 15 20</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>12\n53</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/687c0565-40f1-44cc-92b6-f7d9ea64ce96",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DCEPC501_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9019"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "diehard-die-hard",
  "tags": [],
  "level": "EXPERT",
  "title": "Cuộc sinh tử sống còn",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p><strong>B&agrave;i to&aacute;n:</strong></p>\n<div id=\"problem-body\">\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://www.spoj.com/content/min_25:diehard.png\" alt=\"\" width=\"346\" height=\"332\" /></p>\n<p>Ban đầu bạn c&oacute; lượng m&aacute;u 'H' v&agrave; lượng &aacute;o gi&aacute;p 'A'. Ngay lập tức, bạn c&oacute; thể sống ở bất kỳ nơi n&agrave;o trong ba nơi bao gồm lửa, nước v&agrave; kh&ocirc;ng kh&iacute;. Sau mỗi thời gian đơn vị, bạn phải thay đổi nơi ở của m&igrave;nh. V&iacute; dụ, nếu bạn đang sống trong lửa, bạn c&oacute; thể bước v&agrave;o nước hoặc kh&ocirc;ng kh&iacute;. Nếu bạn bước v&agrave;o kh&ocirc;ng kh&iacute;, m&aacute;u của bạn tăng 3 v&agrave; gi&aacute;p của bạn tăng 2. Nếu bạn bước xuống nước, m&aacute;u của bạn giảm 5 v&agrave; gi&aacute;p của bạn giảm 10. Nếu bạn bước v&agrave;o lửa, m&aacute;u của bạn giảm 20 v&agrave; gi&aacute;p của bạn tăng 5</p>\n<p>Nếu m&aacute;u hoặc &aacute;o gi&aacute;p của bạn nhỏ hơn hoặc bằng 0, bạn sẽ chết ngay lập tức T&igrave;m thời gian tối đa bạn c&oacute; thể sống s&oacute;t.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n t, số lượng c&aacute;c trường hợp thử nghiệm.&nbsp;Đối với mỗi trường hợp thử nghiệm sẽ c&oacute; hai số nguy&ecirc;n dương đại diện cho sức khỏe ban đầu H v&agrave; &aacute;o gi&aacute;p ban đầu A.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y t&igrave;m thời gian tối đa m&agrave; bạn c&oacute; thể tồn tại.</p>\n<p><strong>Lưu &yacute;:</strong>&nbsp;Bạn c&oacute; thể chọn bất kỳ nơi n&agrave;o trong 3 nơi trong lần di chuyển đầu ti&ecirc;n của m&igrave;nh.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$1 \\leq t \\leq 10$</li>\n<li>$1 \\leq H, A \\leq 1000$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2 10\n4 4\n20 8</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1\n5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1d290726-11c6-4694-aaa3-bbd0573ead4b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DIEHARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "easudoku-easy-sudoku",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sudoku",
  "content": "<p>C&aacute;c bạn h&atilde;y giải quyết b&agrave;i to&aacute;n sudoku 9x9 cổ điển.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chỉ chứa một số, l&agrave; số lượng trường hợp thử nghiệm (nhiều hơn 1 v&agrave; &iacute;t hơn 15). Sau đ&oacute;, c&aacute;c trường hợp thử nghiệm được đưa ra. Mỗi trường hợp trong số đ&oacute; được cho bởi 81 số (từ 0 đến 9) được ph&acirc;n t&aacute;ch bằng khoảng trắng duy nhất (d&ograve;ng mới sau mỗi số thứ 9). Số 0 c&oacute; nghĩa l&agrave; n&oacute; được giải quyết bởi chương tr&igrave;nh của bạn.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Trong trường hợp kh&ocirc;ng tồn tại lời giải, h&atilde;y in ra \"No solution\". Nếu tồn tại số 81 l&agrave; lời giải của b&agrave;i to&aacute;n sudoku, bạn phải viết tất cả 81 số đ&oacute; (ph&acirc;n t&aacute;ch như trong đầu v&agrave;o).</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n0 0 0 0 6 9 8 3 0\n9 8 0 0 0 0 0 7 6\n6 0 0 0 3 8 0 5 1\n2 0 5 0 8 1 0 9 0\n0 6 0 0 0 0 0 8 0\n0 9 0 3 7 0 6 0 2\n3 4 0 8 5 0 0 0 9\n7 2 0 0 0 0 0 6 8\n0 5 6 9 2 0 0 0 0\n\n0 0 0 0 6 9 8 3 0\n9 8 0 0 0 0 0 7 6\n6 0 0 0 3 8 0 5 1\n2 0 5 4 8 1 0 9 0\n0 6 0 0 0 0 0 8 0\n0 9 0 3 7 0 6 0 2\n3 4 0 8 5 0 0 0 9\n7 2 0 0 0 0 0 6 8\n0 5 6 9 2 0 0 0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5 1 2 7 6 9 8 3 4\n9 8 3 5 1 4 2 7 6\n6 7 4 2 3 8 9 5 1\n2 3 5 6 8 1 4 9 7\n1 6 7 4 9 2 3 8 5\n4 9 8 3 7 5 6 1 2\n3 4 1 8 5 6 7 2 9\n7 2 9 1 4 3 5 6 8\n8 5 6 9 2 7 1 4 3\nNo solution</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/230bc5a9-3154-453b-901b-9b5ccb487a33",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "EASUDOKU_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "elevtrbl-elevator-trouble",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán thang máy",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bạn đang tr&ecirc;n đường đến cuộc phỏng vấn xin việc đầu ti&ecirc;n với tư c&aacute;ch l&agrave; người kiểm tra chương tr&igrave;nh, v&agrave; bạn đ&atilde; đến muộn. Cuộc phỏng vấn diễn ra trong một t&ograve;a nh&agrave; chọc trời v&agrave; bạn hiện đang ở tầng s, v&agrave; bạn nh&igrave;n thấy thang m&aacute;y. Khi bước v&agrave;o thang m&aacute;y, bạn biết rằng n&oacute; chỉ c&oacute; hai n&uacute;t, được đ&aacute;nh dấu \"UP u\" v&agrave; \"DOWN d\". Bạn kết luận rằng n&uacute;t UP sẽ đưa l&ecirc;n tầng u (nếu kh&ocirc;ng c&oacute; đủ tầng, nhấn n&uacute;t UP sẽ kh&ocirc;ng l&agrave;m g&igrave; cả), trong khi n&uacute;t DOWN sẽ đưa bạn xuống tầng (hoặc kh&ocirc;ng nếu kh&ocirc;ng đủ tầng). Biết rằng cuộc phỏng vấn ở tầng g v&agrave; chỉ c&oacute; tầng f trong t&ograve;a nh&agrave;, bạn nhanh ch&oacute;ng quyết định viết một chương tr&igrave;nh cung cấp cho bạn số lần nhấn n&uacute;t m&agrave; bạn cần thực hiện. Nếu bạn kh&ocirc;ng thể đến đ&uacute;ng tầng, chương tr&igrave;nh của bạn sẽ tạm dừng với th&ocirc;ng b&aacute;o \"use stair\".</p>\n<p>Với đầu v&agrave;o f, s, g, u v&agrave; d (tầng, điểm xuất ph&aacute;t, tầng cần l&ecirc;n, đi l&ecirc;n, đi xuống), t&igrave;m chuỗi c&aacute;c lần nhấn n&uacute;t ngắn nhất m&agrave; bạn phải nhấn để đi từ s đến g, với một t&ograve;a nh&agrave; gồm c&aacute;c tầng, hoặc in ra \"use stairs\" nếu bạn kh&ocirc;ng thể đi từ s đến g bằng thang m&aacute;y.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm một d&ograve;ng, cụ thể l&agrave; f s g u d, trong đ&oacute; $1 \\leq s, g \\leq f \\leq 1,000,000$ v&agrave; $0 \\leq u, d \\leq 1,000,000$. C&aacute;c tầng được lập chỉ số, nếu c&oacute; 10 tầng, s v&agrave; g sẽ nằm trong khoảng [1:10].</p>\n<h3>Định dạng đầu ra</h3>\n<p>Bạn phải trả lời bằng số lần nhấn tối thiểu m&agrave; bạn phải thực hiện để đi từ s đến g, hoặc in ra \"use stair\" nếu kh&ocirc;ng thể.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 1 10 2 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>100 2 1 1 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>use the stairs</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/16d26274-ff75-4ee6-9a84-3c8aba875acc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ELEVTRBL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "facefrnd-friends-of-friends",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Danh sách bạn bè",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bob hầu như sử dụng một trang mạng x&atilde; hội mọi l&uacute;c. Anh ấy đang thắc mắc bạn b&egrave; của những người bạn trong trang mạng x&atilde; hội đ&oacute; l&agrave; g&igrave;? Nếu &ldquo;X&rdquo; l&agrave; bạn của anh ấy v&agrave; &ldquo;Y&rdquo; l&agrave; bạn của X nhưng &ldquo;Y&rdquo; kh&ocirc;ng phải l&agrave; bạn của anh ấy, th&igrave; &ldquo;Y&rdquo; được gọi l&agrave; bạn của bạn anh ấy. Bạn phải t&igrave;m xem Bob c&oacute; bao nhi&ecirc;u người bạn. (Mỗi người d&ugrave;ng trong trang mạng x&atilde; hội đ&oacute; c&oacute; một số ID gồm 4 chữ số duy nhất)</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n &ldquo;N&rdquo; ($1 \\leq N \\leq 100$), số lượng bạn b&egrave; trong hồ sơ của Bob. Tiếp theo đ&oacute; l&agrave; N d&ograve;ng.</li>\n<li>Số nguy&ecirc;n đầu ti&ecirc;n trong mỗi d&ograve;ng l&agrave; số ID của bạn Bob, sau đ&oacute; l&agrave; số nguy&ecirc;n &ldquo;M&rdquo; ($1 \\leq M \\leq 100$) l&agrave; số người trong danh s&aacute;ch bạn b&egrave; của anh ấy. Tiếp theo đ&oacute; l&agrave; M gi&aacute; trị số nguy&ecirc;n nằm trong d&ograve;ng đ&oacute;, biểu thị số ID của bạn b&egrave; trong danh s&aacute;ch bạn b&egrave; của anh ấy (kh&ocirc;ng bao gồm Bob).</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>H&atilde;y in ra một gi&aacute; trị số nguy&ecirc;n duy nhất biểu thị số lượng bạn của bạn b&egrave; của Bob</p>\n<h3><strong> V&iacute; dụ</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2334 5 1256 4323 7687 3244 5678\n1256 2 2334 7687\n4323 5 2334 5678 6547 9766 9543</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/576c2a69-9d0d-44f3-ae19-f9e26e8ff74f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FACEFRND_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fashion-fashion-shows",
  "tags": [],
  "level": "BEGINNER",
  "title": "Buổi biểu diễn thời trang",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một chương tr&igrave;nh thời trang đ&aacute;nh gi&aacute; người tham gia dựa theo mức độ nổi tiếng của họ. Hai buổi tr&igrave;nh diễn thời trang kh&aacute;c nhau đ&atilde; được tổ chức, một cho nam giới v&agrave; một cho nữ giới.</p>\n<div id=\"problem-body\">\n<p>B&acirc;y giờ kết quả của cả hai chương tr&igrave;nh thời trang đ&atilde; kết th&uacute;c. Những người tham gia của cả hai buổi tr&igrave;nh diễn thời trang đ&atilde; quyết định hẹn h&ograve; với nhau, nhưng như thường lệ, họ c&oacute; ch&uacute;t kh&oacute; khăn trong việc lựa chọn người bạn của m&igrave;nh. Hệ thống hẹn h&ograve; Maximum Match (MMDS) đ&atilde; gi&uacute;p họ v&agrave; kết hợp họ theo c&aacute;ch tối đa h&oacute;a mối quan hệ cho tất cả c&aacute;c cặp đ&ocirc;i.</p>\n<p>Nếu một người đ&agrave;n &ocirc;ng được đ&aacute;nh gi&aacute; ở mức độ nổi tiếng x v&agrave; một người phụ nữ ở mức độ nổi tiếng y, th&igrave; gi&aacute; trị của mối quan hệ về độ nổi tiếng l&agrave; $x \\times y$. Cả hai buổi biểu diễn thời trang đều c&oacute; N người tham gia. MMDS đ&atilde; ho&agrave;n th&agrave;nh c&ocirc;ng việc của m&igrave;nh v&agrave; c&ocirc;ng việc của bạn l&agrave; t&igrave;m tổng số mối quan hệ nổi tiếng cho tất cả c&aacute;c cặp m&agrave; MMDS đ&atilde; đề xuất.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o chứa một số nguy&ecirc;n t, số lượng c&aacute;c trường hợp thử nghiệm. Tiếp theo l&agrave; t c&aacute;c trường hợp thử nghiệm.</p>\n<p>Mỗi trường hợp thử nghiệm bao gồm 3 d&ograve;ng:</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n N ($1 \\leq N \\leq 1000$).</li>\n<li>D&ograve;ng thứ hai chứa N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch biểu thị mức độ nổi tiếng của nam giới.</li>\n<li>D&ograve;ng thứ 3 chứa N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch biểu thị mức độ nổi tiếng của nữ giới.</li>\n</ul>\n<p>Tất cả đ&aacute;nh gi&aacute; độ nổi tiếng đều dựa theo thang điểm từ 0 đến 10.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất chứa một số nguy&ecirc;n biểu thị tổng c&aacute;c mối quan hệ nổi tiếng cho tất cả c&aacute;c cặp m&agrave; MMDS đ&atilde; đề xuất.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n2\n1 1\n3 2\n3\n2 3 2\n1 3 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5\n15</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa17e4a8-fd1c-4a90-9420-3e081609e697",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FASHION_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "gcpc11f-diary",
  "tags": [],
  "level": "EXPERT",
  "title": "Nhật ký mã hóa",
  "content": "<p>Ng&agrave;y nay, những người muốn giao tiếp một c&aacute;ch an to&agrave;n sẽ phải sử dụng c&aacute;c thuật to&aacute;n m&atilde; h&oacute;a bất đối xứng như RSA. Tuy nhi&ecirc;n, anh trai t&ocirc;i sử dụng một phương ph&aacute;p m&atilde; h&oacute;a kh&aacute;c, đơn giản hơn cho c&aacute;c mục nhật k&yacute; của anh ấy. Anh ta sử dụng một hệ mật m&atilde; thay thế, trong đ&oacute; mỗi chữ c&aacute;i trong bản r&otilde; được thay thế bằng một chữ c&aacute;i kh&aacute;c trong bảng chữ c&aacute;i. Khoảng c&aacute;ch giữa k&yacute; tự bản r&otilde; v&agrave; k&yacute; tự m&atilde; h&oacute;a được cố định. Nếu ch&uacute;ng ta x&aacute;c định khoảng c&aacute;ch cố định d l&agrave; 5, A sẽ được thay thế bởi F, B l&agrave; G, C l&agrave; H, ..., Y l&agrave; D, Z l&agrave; E.</p>\n<div id=\"problem-body\">\n<p>Với khoảng c&aacute;ch d cố định v&agrave; đ&atilde; biết, việc giải m&atilde; sẽ đơn giản. Nhưng anh trai t&ocirc;i sử dụng khoảng c&aacute;ch ngẫu nhi&ecirc;n cho mỗi mục nhật k&yacute; của m&igrave;nh. Để giải m&atilde; nhật k&yacute; của anh ấy, t&ocirc;i phải đo&aacute;n khoảng c&aacute;ch d cho mỗi mục. V&igrave; vậy, t&ocirc;i sử dụng một hiện tượng nổi tiếng l&agrave; chữ E được sử dụng thường xuy&ecirc;n hơn trong c&aacute;c từ tiếng Anh hơn c&aacute;c chữ c&aacute;i kh&aacute;c. Bạn h&atilde;y viết một chương tr&igrave;nh t&iacute;nh to&aacute;n khoảng c&aacute;ch d dựa tr&ecirc;n thực tế l&agrave; k&yacute; tự được sử dụng nhiều nhất trong văn bản được m&atilde; h&oacute;a tương ứng với k&yacute; tự E trong bản r&otilde; kh&ocirc;ng?</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bao gồm một số trường hợp c sao cho 1 &le; c &le; 100. Mỗi trường hợp được đưa ra trong đ&uacute;ng một d&ograve;ng chứa một mục nhật k&yacute;. Mục nhật k&yacute; chỉ sử dụng chữ in hoa (A-Z) v&agrave; dấu c&aacute;ch. Mỗi mục nhật k&yacute; bao gồm nhiều nhất 1000 chữ c&aacute;i được m&atilde; h&oacute;a (bao gồm cả dấu c&aacute;ch).</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp, h&atilde;y in ra một d&ograve;ng chứa khoảng c&aacute;ch nhỏ nhất c&oacute; thể d (0 &le; d &le; 25) v&agrave; văn bản được giải m&atilde;. Nếu kh&ocirc;ng thể giải m&atilde; v&igrave; c&oacute; nhiều khoảng c&aacute;ch tu&acirc;n theo c&aacute;c quy tắc ở tr&ecirc;n, h&atilde;y in ra NOT POSSIBLE. Dấu c&aacute;ch kh&ocirc;ng được m&atilde; h&oacute;a.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4\nRD TQIJW GWTYMJWX INFWD JSYWNJX ZXJ F XNRUQJ JSHWDUYNTS YJHMSNVZJ\nTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK UVTIPGKZFE\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5 MY OLDER BROTHERS DIARY ENTRIES USE A SIMPLE ENCRYPTION TECHNIQUE\n10 JXU GKYSA RHEMD VEN ZKCFI ELUH JXU BQPO TEW\n17 GERMAN COLLEGIATE PROGRAMMING CONTEST DECRYPTION\nNOT POSSIBLE</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ed56011a-6e69-457f-949c-7e7fd738c866",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11F_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef901f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 100,
  "slug": "gcpc11j-time-to-live",
  "tags": [],
  "level": "EXPERT",
  "title": "Thời gian tồn tại của gói tin",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Như bạn c&oacute; thể biết, hầu hết c&aacute;c mạng m&aacute;y t&iacute;nh được tổ chức theo cấu tr&uacute;c c&acirc;y, mỗi m&aacute;y t&iacute;nh đều c&oacute; thể truy cập được bởi c&aacute;c m&aacute;y t&iacute;nh kh&aacute;c nhưng chỉ qua một đường dẫn duy nhất. Thời gian tồn tại (TTL) chỉ định sau bao nhi&ecirc;u bước nhảy m&agrave; một g&oacute;i mạng bị rớt nếu n&oacute; chưa đến đ&iacute;ch. Mục đ&iacute;ch của TTL l&agrave; để tr&aacute;nh c&aacute;c t&igrave;nh huống trong đ&oacute; một g&oacute;i di chuyển lặp lại qua mạng do lỗi trong bảng định tuyến.</p>\n<div id=\"problem-body\">\n<p>Việc bố tr&iacute; một bộ định tuyến kết nối mạng n&agrave;y với mạng kh&aacute;c l&agrave; tối ưu khi TTL cần thiết tối đa cho c&aacute;c g&oacute;i được gửi từ bộ định tuyến n&agrave;y đến bất kỳ m&aacute;y t&iacute;nh n&agrave;o kh&aacute;c trong c&ugrave;ng một mạng l&agrave; tối thiểu. Với một mạng được chỉ định ở tr&ecirc;n, bạn h&atilde;y t&iacute;nh to&aacute;n TTL cần thiết tối đa trong mạng n&agrave;y nếu bạn c&oacute; thể chọn m&aacute;y t&iacute;nh sẽ được sử dụng l&agrave;m bộ định tuyến.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>The first line of the input consists of the number of test cases&nbsp;<em>c</em>&nbsp;that follow (<em>1 &le; c &le; 100</em>). Each test case starts with a line specifying&nbsp;<em>N</em>, the number of computers in this network (<em>1 &lt; N &le; 10<sup>5</sup></em>). Computers are numbered from&nbsp;<em>0</em>&nbsp;to&nbsp;<em>N-1</em>. Then follow&nbsp;<em>N-1</em>&nbsp;lines, each specifying a network connection by two numbers&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;which means that computer&nbsp;<em>a</em>&nbsp;is connected to computer&nbsp;<em>b</em>&nbsp;and vice versa, of course (<em>0 &le; a,b &lt; N</em>).</p>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o bao gồm số lượng trường hợp thử nghiệm c&nbsp; sao cho 1 &le; c &le; 100. Mỗi trường hợp thử nghiệm bắt đầu bằng một d&ograve;ng chỉ định N, số lượng m&aacute;y t&iacute;nh trong mạng (1 &lt;N &le; 105). M&aacute;y t&iacute;nh được đ&aacute;nh số từ 0 đến N-1. Sau N-1 d&ograve;ng, mỗi d&ograve;ng chỉ định một kết nối mạng bằng hai số a v&agrave; b, c&oacute; nghĩa l&agrave; m&aacute;y t&iacute;nh a được kết nối với m&aacute;y t&iacute;nh b v&agrave; ngược lại (0 &le; a, b &lt;N).</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm trong đầu v&agrave;o, in ra một d&ograve;ng chứa TTL tối ưu như đ&atilde; chỉ định ở tr&ecirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n1 0\n5\n3 2\n2 1\n0 2\n2 4\n9\n3 1\n6 5\n3 4\n0 3\n8 1\n1 7\n1 6\n2 3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1\n2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e3cc317e-6fda-419b-9082-7c990f6ddd74",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11J_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9020"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ggd-mr-toothless-and-his-gcd-operation",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm ước chung lớn nhất",
  "content": "<p>Bạn được cho gi&aacute; trị N. Bạn phải t&igrave;m ra hai số a v&agrave; b sao cho ước ch&uacute;ng lớn nhất của a v&agrave; b, GCD(a, b) l&agrave; lớn nhất c&oacute; thể, trong đ&oacute; $1 \\leq a &lt; b \\leq N$.</p>\n<div id=\"problem-body\">\n<h3><strong> Định dạng đầu v&agrave;o</strong></h3>\n<ul>\n<li>Đầu v&agrave;o bắt đầu bằng số nguy&ecirc;n T ($\\leq 100$), biểu thị số lượng trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp chứa một số nguy&ecirc;n N ($2 \\leq N \\leq 10^{6}$).</li>\n</ul>\n<h3><strong>Định dạng đầu ra</strong></h3>\n<p>Đối với mỗi trường hợp, in ra số trường hợp v&agrave; sau đ&oacute; in ra a v&agrave; b. Nếu c&oacute; nhiều kết quả, h&atilde;y in ra kết quả m&agrave; a + b c&oacute; gi&aacute; trị lớn nhất.</p>\n<h3><strong>V&iacute; dụ</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Case 1: 1 2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/72befc1a-3c67-4bde-8abc-6776ea75feb8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GGD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9021"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "girlsnbs-girls-and-boys",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sắp xếp học sinh nam và học sinh nữ",
  "content": "<p>C&oacute; G số học sinh nữ v&agrave; B số học sinh nam trong một lớp sắp tốt nghiệp. Bạn cần phải sắp xếp số học sinh n&agrave;y v&agrave;o trong một h&agrave;ng duy nhất cho lễ tốt nghiệp. Để tạo ấn tượng tốt hơn về sự đa dạng, bạn n&ecirc;n tr&aacute;nh việc c&oacute; qu&aacute; nhiều b&eacute; g&aacute;i hoặc qu&aacute; nhiều b&eacute; trai ngồi liền nhau. Bạn đ&atilde; quyết định sắp xếp c&aacute;c học sinh để giảm thiểu việc sắp xếp giới t&iacute;nh. Sắp xếp giới t&iacute;nh l&agrave; số lượng tối đa học sinh c&ugrave;ng giới (tất cả c&aacute;c em g&aacute;i hoặc tất cả c&aacute;c em trai) xuất hiện li&ecirc;n tiếp. Cho G v&agrave; B, h&atilde;y t&iacute;nh c&aacute;ch sắp xếp giới t&iacute;nh tối thiểu trong số tất cả c&aacute;c c&aacute;ch sắp xếp c&oacute; thể.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Mỗi trường hợp thử nghiệm được m&ocirc; tả bằng c&aacute;ch sử dụng một d&ograve;ng duy nhất. D&ograve;ng n&agrave;y chứa hai số nguy&ecirc;n G v&agrave; B lần lượt thể hiện số học sinh nam v&agrave; nữ trong lớp (0 &le; G, B &le; 1000). Phần cuối của đầu v&agrave;o được biểu thị bằng một d&ograve;ng chứa số &minus;1 hai lần.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng với một số nguy&ecirc;n duy nhất đại diện cho việc sắp xếp giới t&iacute;nh tối thiểu m&agrave; sự sắp xếp G học sinh nữ v&agrave; B học sinh nam c&oacute; thể c&oacute;.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 10\n5 1\n0 1000\n-1 -1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n3\n1000</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/227db052-bf27-4673-94c1-48bcccb0ba5f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GIRLSNBS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9022"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "hangover-hangover",
  "tags": [],
  "level": "EXPERT",
  "title": "Lá bài ma thuật",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length. (We're assuming that the cards must be perpendicular to the table.) With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 <tt>+</tt>&nbsp;1/3&nbsp;<tt>=</tt>&nbsp;5/6 card lengths. In general you can make&nbsp;<em>n</em>&nbsp;cards overhang by 1/2&nbsp;<tt>+</tt>&nbsp;1/3&nbsp;<tt>+</tt>&nbsp;1/4&nbsp;<tt>+</tt>&nbsp;...&nbsp;<tt>+</tt>&nbsp;1/(<em>n</em>&nbsp;<tt>+</tt>&nbsp;1) card lengths, where the top card overhangs the second by 1/2, the second overhangs tha third by 1/3, the third overhangs the fourth by 1/4, etc., and the bottom card overhangs the table by 1/(<em>n</em>&nbsp;<tt>+</tt>&nbsp;1). This is illustrated in the figure below.</p>\n<p>Bạn c&oacute; thể l&agrave;m cho một chồng b&agrave;i nh&ocirc; ra khỏi mặt b&agrave;n bao xa? Nếu bạn c&oacute; một l&aacute; b&agrave;i, bạn c&oacute; thể tạo phần nh&ocirc; ra tối đa bằng nửa độ d&agrave;i của l&aacute; b&agrave;i. (Ch&uacute;ng ta giả định rằng c&aacute;c l&aacute; b&agrave;i phải vu&ocirc;ng g&oacute;c với mặt b&agrave;n.) Với hai l&aacute; b&agrave;i, bạn c&oacute; thể l&agrave;m cho l&aacute; b&agrave;i tr&ecirc;n c&ugrave;ng nh&ocirc; ra khỏi bề mặt l&aacute; b&agrave;i ph&aacute;i dưới l&agrave; một nửa độ d&agrave;i của l&aacute; b&agrave;i v&agrave; l&aacute; b&agrave;i dưới c&ugrave;ng nh&ocirc; ra mặt b&agrave;n bằng một phần ba độ d&agrave;i của l&aacute; b&agrave;i, tổng chiều d&agrave;i phần nh&ocirc; ra tối đa l&agrave; 1/2 + 1/3 = 5/6 độ d&agrave;i của l&aacute; b&agrave;i. Như vậy, bạn c&oacute; thể l&agrave;m cho n l&aacute; b&agrave;i nh&ocirc; ra bằng 1/2 + 1/3 + 1/4 + ... + 1 / (n + 1) độ d&agrave;i của l&aacute; b&agrave;i, trong đ&oacute; l&aacute; b&agrave;i tr&ecirc;n c&ugrave;ng nh&ocirc; ra 1/2, l&aacute; b&agrave;i thứ hai nh&ocirc; ra khỏi l&aacute; b&agrave;i thứ ba bằng 1/3, thứ ba nh&ocirc; ra khỏi l&aacute; thứ tư l&agrave; 1/4, v&agrave; cứ như vậy, l&aacute; b&agrave;i dưới c&ugrave;ng nh&ocirc; ra khỏi mặt b&agrave;n l&agrave; $\\frac{1}{(n + 1)}. Điều n&agrave;y được minh họa trong h&igrave;nh b&ecirc;n dưới.</p>\n<div id=\"problem-body\"><center><img src=\"https://www.spoj.com/content/wanderley:hangover.jpg\" /></center>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bao gồm một hoặc nhiều trường hợp thử nghiệm, tiếp theo l&agrave; một d&ograve;ng chứa số 0,00 b&aacute;o hiệu kết th&uacute;c của đầu v&agrave;o. Mỗi trường hợp thử nghiệm l&agrave; một d&ograve;ng duy nhất chứa một số thực dương c c&oacute; gi&aacute; trị nhỏ nhất l&agrave; 0,01 v&agrave; lớn nhất l&agrave; 5,20. c sẽ bao gồm đ&uacute;ng ba chữ số.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra số lượng l&aacute; b&agrave;i tối thiểu cần thiết để đạt được phần nh&ocirc; ra của độ d&agrave;i &iacute;t nhất c thẻ. Sử dụng định dạng đầu ra ch&iacute;nh x&aacute;c được hiển thị trong c&aacute;c v&iacute; dụ.</p>\n<h3><strong>V&iacute; dụ</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1.00\n3.71\n0.04\n5.19\n0.00</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3 card(s)\n61 card(s)\n1 card(s)\n273 card(s)</code></pre>\n<pre>&nbsp;</pre>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/23b99d7a-a81c-4028-92f9-5d3aabeaa1c6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "File.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9023"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "herding-herding",
  "tags": [],
  "level": "EXPERT",
  "title": "Bắt mèo",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một số con m&egrave;o hoang đ&atilde; được thả r&ocirc;ng trong th&agrave;nh phố, v&agrave; với tư c&aacute;ch l&agrave; người bắt m&egrave;o, bạn đ&atilde; được giao nhiệm vụ quan trọng l&agrave; phải bắt lại tất cả những con m&egrave;o n&agrave;y. Đ&acirc;y l&agrave; cơ hội l&yacute; tưởng để kiểm tra ph&aacute;t minh mới nhất của bạn, một c&aacute;i bẫy m&egrave;o đảm bảo sẽ bắt được mọi con m&egrave;o đi v&agrave;o một v&ugrave;ng nhỏ h&igrave;nh vu&ocirc;ng của th&agrave;nh phố.</p>\n<div id=\"problem-body\">\n<p>May mắn thay, bạn c&oacute; sự hỗ trợ của một trong những nh&agrave; t&acirc;m l&yacute; học về m&egrave;o h&agrave;ng đầu thế giới, người c&oacute; khả năng ti&ecirc;n đo&aacute;n tuyệt vời, cho trước một v&ugrave;ng nhỏ h&igrave;nh vu&ocirc;ng của th&agrave;nh phố. V&agrave; bạn vẫn kh&ocirc;ng biết tất cả những con m&egrave;o hiện đang ở đ&acirc;u.</p>\n<p>Để chứng minh hiệu quả chi ph&iacute; của phương ph&aacute;p của bạn cho th&agrave;nh phố, điều quan trọng l&agrave; phải giảm thiểu số lượng bẫy được sử dụng.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bắt đầu bằng một d&ograve;ng gồm hai số n v&agrave; m, c&aacute;ch nhau bởi dấu c&aacute;ch (1 &le; n, m &le; 1000). Th&agrave;nh phố sẽ l&agrave; một mạng lưới n x m gồm c&aacute;c v&ugrave;ng h&igrave;nh vu&ocirc;ng. N d&ograve;ng tiếp theo, mỗi d&ograve;ng sẽ bao gồm một chuỗi k&yacute; tự c&oacute; độ d&agrave;i m, bao gồm c&aacute;c chữ c&aacute;i 'N', 'E', 'S' hoặc 'W', đại diện cho ph&iacute;a bắc, đ&ocirc;ng, nam v&agrave; t&acirc;y, tương ứng. (K&yacute; tự đầu ti&ecirc;n của d&ograve;ng đầu ti&ecirc;n sẽ l&agrave; điểm cực T&acirc;y Bắc.). Hướng trong v&ugrave;ng h&igrave;nh vu&ocirc;ng l&agrave; hướng con m&egrave;o sẽ đi tới nếu ch&uacute;ng ở trong h&igrave;nh vu&ocirc;ng đ&oacute;. Nh&agrave; t&acirc;m l&yacute; học m&egrave;o đảm bảo với bạn rằng m&egrave;o sẽ kh&ocirc;ng muốn rời khỏi th&agrave;nh phố.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra số lượng bẫy tối thiểu cần thiết.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3 4\nSWWW\nSEWN\nEEEN</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb7b8242-afb1-4e74-a645-94b22c387fcd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HERDING_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9024"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "hotels-hotels-along-the-croatian-coast",
  "tags": [],
  "level": "EXPERT",
  "title": "Mua khách sạn",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&oacute; N kh&aacute;ch sạn dọc theo bờ biển Adriatic xinh đẹp. Mỗi kh&aacute;ch sạn c&oacute; gi&aacute; trị được t&iacute;nh bằng Euro. Sroljo đ&atilde; gi&agrave;nh được M Euro trong cuộc xổ số. B&acirc;y giờ anh ta muốn mua một chuỗi c&aacute;c kh&aacute;ch sạn li&ecirc;n tiếp, sao cho tổng gi&aacute; trị của c&aacute;c kh&aacute;ch sạn li&ecirc;n tiếp n&agrave;y c&agrave;ng lớn c&agrave;ng tốt, nhưng kh&ocirc;ng lớn hơn M.</p>\n<div id=\"problem-body\">\n<p>Nhiệm vụ của bạn l&agrave; t&iacute;nh được gi&aacute; trị tổng lớn nhất c&oacute; thể n&agrave;y.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Trong d&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o, c&oacute; c&aacute;c số nguy&ecirc;n l&agrave; N v&agrave; M ($1 \\leq N \\leq 300,000$, $1 \\leq M \\l 2^{31}$).</li>\n<li>Trong d&ograve;ng tiếp theo, c&oacute; N số tự nhi&ecirc;n nhỏ hơn $10^{6}$, đại diện cho c&aacute;c gi&aacute; trị của kh&aacute;ch sạn theo thứ tự nằm dọc theo bờ biển.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra gi&aacute; trị số được y&ecirc;u cầu (n&oacute; sẽ lớn hơn 0 trong tất cả dữ liệu thử nghiệm).</p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5 12\n2 1 3 4 5</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>12</code></pre>\n<h3>V&iacute; dụ 2</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 9\n7 3 5 6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a5b8fb70-5b3d-4c69-9ed1-5bd10ec71689",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HOTELS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9025"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "houses-nhung-ngoi-nha",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán về ngôi nhà",
  "content": "<div class=\"prob\">\n<p>Một c&ocirc;ng ty đầu tư x&acirc;y dựng một khu nh&agrave; gồm L căn nh&agrave; nằm cạnh nhau tr&ecirc;n một con đường. C&oacute; N người muốn mua nh&agrave; ở khu nh&agrave; n&agrave;y, biết rằng người thứ i muốn mua a<sub>i</sub>&nbsp;căn nh&agrave; v&agrave; mỗi người đều muốn mua những căn nh&agrave; nằm cạnh nhau. Do số căn nh&agrave; cần mua c&oacute; thể nhỏ hơn tổng số căn nh&agrave; (L) n&ecirc;n sẽ c&oacute; một số căn nh&agrave; chưa được b&aacute;n. Để đảm bảo mỹ quan của khu nh&agrave;, c&ocirc;ng ty sẽ lu&ocirc;n lu&ocirc;n b&aacute;n căn nh&agrave; đầu ti&ecirc;n (theo thứ tự từ tr&aacute;i sang phải).</p>\n<p>Biết y&ecirc;u cầu của những người mua, một c&aacute;ch b&aacute;n những căn nh&agrave; của c&ocirc;ng ty c&oacute; thể được biểu diễn bằng 1 d&atilde;y gồm L số. Trong đ&oacute; số thứ i bằng 0 nếu căn nh&agrave; thứ i chưa được b&aacute;n v&agrave; bằng k nếu căn nh&agrave; thứ i được b&aacute;n cho người thứ k.</p>\n<p>V&iacute; dụ: khi L=4, N=2, a<sub>1</sub>&nbsp;= 2, a<sub>2</sub>=1, d&atilde;y &ldquo;2 0 1 1&rdquo; thể hiện một c&aacute;ch b&aacute;n những căn nh&agrave; của c&ocirc;ng ty: căn nh&agrave; đầu ti&ecirc;n b&aacute;n cho người thứ 2, căn nh&agrave; thứ 3 v&agrave; thứ 4 b&aacute;n cho người đầu ti&ecirc;n v&agrave; căn nh&agrave; thứ 2 được để lại.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://vn.spoj.com/VO09/content/Houses.jpg\" /></p>\n<p>Y&ecirc;u cầu: H&atilde;y gi&uacute;p c&ocirc;ng ty liệt k&ecirc; c&aacute;c c&aacute;ch b&aacute;n những căn nh&agrave;. C&aacute;c c&aacute;ch b&aacute;n căn nh&agrave; được liệt k&ecirc; theo thứ tự từ điển của d&atilde;y số biểu diễn. Nếu số c&aacute;ch b&aacute;n căn nh&agrave; lớn hơn 1000, chỉ cần liệt k&ecirc; 1000 c&aacute;ch đầu ti&ecirc;n. (Biết rằng d&atilde;y a c&oacute; thứ tự từ điển đứng trước d&atilde;y b nếu v&agrave; chỉ nếu tồn tại chỉ số j, sao cho a<sub>i</sub>&nbsp;= b<sub>i</sub>&nbsp;với mọi i &lt; j v&agrave; a<sub>j</sub>&nbsp;&lt; b<sub>j</sub>).</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n: chứa 2 số nguy&ecirc;n L, N.</li>\n<li>D&ograve;ng thứ 2 chứa N số nguy&ecirc;n, tương ứng l&agrave; c&aacute;c gi&aacute; trị a<sub>1</sub>, a<sub>2</sub>, &hellip;, a<sub>n</sub>.</li>\n</ul>\n<h3>Điều kiện</h3>\n<ul>\n<li>$1 \\leq L \\leq 100$</li>\n<li>$1 \\leq N \\leq 20$</li>\n<li>$a_{1} + a_{2} + ... + a_{N} \\leq L$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Bao gồm nhiều d&ograve;ng đầu ra, mỗi d&ograve;ng tương ứng với d&atilde;y số biểu diễn một c&aacute;ch b&aacute;n những căn nh&agrave; của c&ocirc;ng ty, 2 số li&ecirc;n tiếp của d&atilde;y số được c&aacute;ch nhau bởi một khoảng trắng. C&aacute;c d&atilde;y số được liệt k&ecirc; theo thứ tự từ điển.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 2\n2 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1 1 0 2\n1 1 2 0\n2 0 1 1\n2 1 1 0</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e32d334-5cd6-44b1-a1a7-2c26f5733e31",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HOUSES_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9026"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "willitst-will-it-ever-stop",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "\"Khi nào chương trình sẽ dừng?\"",
  "content": "<p class=\"text-center\">Khi Bob ở thư viện ở Đại học Warsaw, anh thấy tr&ecirc;n một trong những mặt đằng trước của t&ograve;a nh&agrave; c&oacute; d&ograve;ng chữ ch&uacute; th&iacute;ch: \"Will it ever stop?\" v&agrave; một đoạn m&atilde; b&iacute; ẩn như sau:</p>\n<pre class=\"language-markup\"><code>while n &gt; 1\n  if n mod 2 = 0 then\n    n:=n/2\n  else\n    n:=3*n+3</code></pre>\n<p>C&aacute;c bạn h&atilde;y gi&uacute;p anh ấy t&igrave;m ra đoạn m&atilde; n&agrave;y hoạt động như n&agrave;o.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Một d&ograve;ng đầu v&agrave;o duy nhất chứa một gi&aacute; trị số $n \\leq 10^{14}$</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra \"TAK\" nếu chương tr&igrave;nh sẽ dừng, nếu kh&ocirc;ng h&atilde;y in ra \"NIE\".</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>TAK</code></pre>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1c1f593b-c18f-412f-b121-5f6623b9b21f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WILLITST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9027"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "vmsubstr-vuon-cay-cua-ba",
  "tags": [],
  "level": "EXPERT",
  "title": "Vườn cây của ba",
  "content": "<p align=\"justify\">Sau một năm học c&agrave;y cuốc vất vả, h&egrave; n&agrave;y Huy quyết định mời c&aacute;c bạn về qu&ecirc; chơi. Huy sẽ dẫn c&aacute;c bạn đi leo n&uacute;i, ngắm cảnh... v&agrave; sẽ mở một buổi chi&ecirc;u đ&atilde;i c&aacute;c bạn t&agrave;i nh&agrave; m&igrave;nh. \"Nh&agrave; rộng v&agrave; đẹp lắm, c&oacute; cả một vườn c&acirc;y ăn tr&aacute;i sum xu&ecirc; !\" - Huy giới thiệu về ng&ocirc;i nh&agrave; của m&igrave;nh.</p>\n<div class=\"prob\">\n<p>Sau khi k&igrave; k&egrave;o với ba, Huy đ&atilde; xin được h&aacute;i tr&aacute;i trong vườn đ&atilde;i c&aacute;c bạn. Nhưng với một điều kiện: Huy chỉ được h&aacute;i tr&aacute;i những LOẠI c&acirc;y m&agrave; ba quy định. Vườn c&acirc;y chia th&agrave;nh L khu đất li&ecirc;n tiếp nằm thẳng h&agrave;ng (được đ&aacute;nh số thứ tự từ 1 đến L từ đầu vườn đến cuối vườn), mỗi khu chỉ trồng duy nhất một c&acirc;y. Nh&agrave; Huy c&oacute; rất nhiều nh&acirc;n c&ocirc;ng, mỗi nh&acirc;n c&ocirc;ng sẽ chấp nhận l&agrave;m việc tr&ecirc;n những khu đất li&ecirc;n tiếp.</p>\n<p>V&igrave; muốn đ&atilde;i c&aacute;c bạn thật nhiều tr&aacute;i c&acirc;y, n&ecirc;n Huy sẽ tận dụng h&aacute;i hết TẤT CẢ những c&acirc;y được ba cho ph&eacute;p. Nhưng mắc nỗi phải dẫn c&aacute;c bạn đi chơi r&ograve;i, n&ecirc;n kh&ocirc;ng c&oacute; thời gian h&aacute;i tr&aacute;i c&acirc;y. N&ecirc;n Huy sẽ nhờ đến c&aacute;c nh&acirc;n c&ocirc;ng. Bạn t&iacute;nh xem Huy sẽ ph&acirc;n c&ocirc;ng &iacute;t nhất bao nhi&ecirc;u nh&acirc;n c&ocirc;ng để thực hiện kế hoạch chi&ecirc;u đ&atilde;i tr&aacute;i c&acirc;y của m&igrave;nh? Biết rằng mỗi nh&acirc;n c&ocirc;ng sẽ h&aacute;i hết tất cả tr&aacute;i c&acirc;y ở c&aacute;c khu đất m&igrave;nh được ph&acirc;n v&agrave;o.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng 1: Gồm 1 số nguy&ecirc;n dương duy nhất: L - số khu đất trong khu vườn.</li>\n<li>D&ograve;ng 2: Chứa x&acirc;u S gồm đ&uacute;ng L chữ c&aacute;i Latin (in thường hoặc hoa), mi&ecirc;u tả khu vườn của Huy. Mỗi chữ c&aacute;i cho biết loại c&acirc;y được trồng ở khu đất tương ứng</li>\n<li>D&ograve;ng 3: Q - số trường hợp m&agrave; bạn phải xứ l&yacute;.</li>\n<li>Q d&ograve;ng tiếp, mỗi d&ograve;ng m&ocirc; tả một trường hợp v&agrave; gồm c&aacute;c chữ c&aacute;i Latin (in thường hoặc hoa). Mỗi chữ đại diện cho một loại c&acirc;y được ph&eacute;p sử dụng.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Với mỗi trường hợp, ghi ra 1 d&ograve;ng duy nhất l&agrave; số nh&acirc;n c&ocirc;ng &iacute;t nhất cần nhờ đến.</li>\n</ul>\n<h3>Chấm điểm</h3>\n<ul>\n<li>B&agrave;i của bạn sẽ được chấm tr&ecirc;n thang điểm 100. Điểm m&agrave; bạn nhận được sẽ tương ứng với % test m&agrave; bạn giải đ&uacute;ng.</li>\n<li>Trong qu&aacute; tr&igrave;nh thi, b&agrave;i của bạn sẽ chỉ được chấm với 1 test v&iacute; dụ c&oacute; trong đề b&agrave;i.</li>\n<li>Khi v&ograve;ng thi kết th&uacute;c, b&agrave;i của bạn sẽ được chấm với bộ test đầy đủ.</li>\n</ul>\n<h3>Điều kiện</h3>\n<ul>\n<li>L &le; 1,000,000;</li>\n<li>Q &le; 100,000;</li>\n<li>Số k&yacute; tự trong mỗi query kh&ocirc;ng qu&aacute; 52. Trong mỗi query, c&aacute;c k&yacute; tự kh&ocirc;ng lặp lại</li>\n<li>Trong 50% số test, L &le; 1000, Q &le; 1000;</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7\nabacaba\n3\nac\nb\nab</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n2 </code></pre>\n<h3>Giải th&iacute;ch</h3>\n<ul>\n<li>Với trường hợp 'ac', Huy chỉ h&aacute;i những c&acirc;y loại 'a' v&agrave; 'c'. N&ecirc;n Huy cần nhờ &iacute;t nhất 3 nh&acirc;n c&ocirc;ng lo 3 phần 'a', 'aca', 'a';</li>\n<li>Với trường hợp 'b', Huy cần nhờ &iacute;t nhất 2 nh&acirc;n c&ocirc;ng lo 2 phần 'b';</li>\n<li>Với trường hợp 'ab', Huy cần nhờ &iacute;t nhất 2 nh&acirc;n c&ocirc;ng lo 2 phần 'aba';</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3fc1405d-8e4f-4176-8109-3f8f55fba73b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VMSUBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9028"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 100,
  "slug": "trafficn-traffic-network",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán mạng lưới giao thông",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Mạng lưới giao th&ocirc;ng th&agrave;nh phố bao gồm n n&uacute;t được đ&aacute;nh số từ 1 đến n v&agrave; m đường một chiều nối c&aacute;c cặp n&uacute;t. Để giảm độ d&agrave;i của đường đi ngắn nhất giữa hai n&uacute;t quan trọng kh&aacute;c nhau s v&agrave; t, một danh s&aacute;ch k đường hai chiều được đề xuất để x&acirc;y dựng. Nhiệm vụ của bạn l&agrave; viết một chương tr&igrave;nh để chọn ra một đường hai chiều từ danh s&aacute;ch đề xuất để giảm thiểu đường đi ngắn nhất giữa s v&agrave; t.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Tệp đầu v&agrave;o bao gồm một số tập dữ liệu. D&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o chứa số lượng bộ dữ liệu l&agrave; một số nguy&ecirc;n dương v&agrave; kh&ocirc;ng lớn hơn 20. C&aacute;c d&ograve;ng sau m&ocirc; tả c&aacute;c bộ dữ liệu.</p>\n<p>Đối với mỗi tập dữ liệu, d&ograve;ng đầu ti&ecirc;n chứa năm số nguy&ecirc;n dương n (n &le; 10 000), m (m &le; 100 000), k (k &lt;300), s (1 &le; s &le; n), t (1 &le; t &le; n) ngăn c&aacute;ch nhau bởi dấu c&aacute;ch. D&ograve;ng thứ i trong số m d&ograve;ng tiếp theo chứa ba số nguy&ecirc;n di, ci, li c&aacute;ch nhau bởi dấu c&aacute;ch, thể hiện độ d&agrave;i li (0 &lt;li &le; 1000) của đường một chiều thứ i nối từ n&uacute;t di đến ci. D&ograve;ng thứ j trong số k d&ograve;ng tiếp theo chứa ba số nguy&ecirc;n dương uj, vj v&agrave; qj (qj &le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, đại diện cho đường hai chiều được đề xuất thứ j c&oacute; độ d&agrave;i qj nối n&uacute;t uj với vj.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập dữ liệu, h&atilde;y viết ra tr&ecirc;n một d&ograve;ng độ d&agrave;i nhỏ nhất c&oacute; thể của con đường ngắn nhất sau khi x&acirc;y dựng một con đường hai chiều đ&atilde; chọn từ danh s&aacute;ch đề xuất. Trong trường hợp kh&ocirc;ng tồn tại đường đi từ s đến t, ghi l&agrave; -1.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4 5 3 1 4\n1 2 13\n2 3 19\n3 1 25\n3 4 17\n4 1 18\n1 3 23\n2 3 5\n2 4 25</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>35</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1c4673d5-622b-4e26-8878-7bde620389e6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRAFFICN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9029"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "toandfro-to-and-fro",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Mã hóa tin nhắn",
  "content": "<p>Mo v&agrave; Larry đ&atilde; nghĩ ra một c&aacute;ch m&atilde; h&oacute;a tin nhắn. Đầu ti&ecirc;n, họ quyết định b&iacute; mật về số lượng cột v&agrave; viết th&ocirc;ng b&aacute;o (chỉ bao gồm chữ c&aacute;i) v&agrave;o c&aacute;c cột, ch&egrave;n th&ecirc;m c&aacute;c chữ c&aacute;i ngẫu nhi&ecirc;n để tạo th&agrave;nh một mảng chữ c&aacute;i h&igrave;nh chữ nhật. V&iacute; dụ: nếu th&ocirc;ng b&aacute;o l&agrave; \"There&rsquo;s no place like home on a snowy night\" v&agrave; c&oacute; năm cột, Mo sẽ viết ra như sau:</p>\n<pre class=\"language-markup\"><code>t o i o y\nh p k n n\ne l e a i\nr a h s g\ne c o n h\ns e m o t\nn l e w x</code></pre>\n<div id=\"problem-body\">\n<p>Lưu &yacute; rằng Mo chỉ th&ecirc;m c&aacute;c chữ c&aacute;i v&agrave; viết tất cả ch&uacute;ng bằng chữ thường. Trong v&iacute; dụ n&agrave;y, Mo đ&atilde; sử dụng k&yacute; tự &lsquo;x&rsquo; để th&ecirc;m v&agrave;o th&ocirc;ng điệp v&agrave; tạo th&agrave;nh một h&igrave;nh chữ nhật, mặc d&ugrave; anh ta c&oacute; thể sử dụng bất kỳ chữ c&aacute;i n&agrave;o. Mo sau đ&oacute; gửi tin nhắn cho Larry bằng c&aacute;ch viết c&aacute;c chữ c&aacute;i theo từng h&agrave;ng, xen kẽ từ tr&aacute;i sang phải v&agrave; từ phải sang tr&aacute;i. V&igrave; vậy, c&aacute;ch viết ở tr&ecirc;n sẽ được m&atilde; h&oacute;a như sau:</p>\n<pre class=\"language-markup\"><code>toioynnkpheleaigshareconhtomesnlewx</code></pre>\n<p>C&ocirc;ng việc của bạn l&agrave; kh&ocirc;i phục cho Larry tin nhắn gốc (với bất kỳ chữ c&aacute;i đệm n&agrave;o) từ tin nhắn đ&atilde; được m&atilde; h&oacute;a.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Sẽ c&oacute; nhiều tập hợp đầu v&agrave;o. Đầu v&agrave;o cho mỗi tập hợp sẽ bao gồm hai d&ograve;ng. D&ograve;ng đầu ti&ecirc;n sẽ chứa một số nguy&ecirc;n trong phạm vi 2 ... 20 cho biết số cột được sử dụng. D&ograve;ng tiếp theo l&agrave; một chuỗi k&yacute; tự gồm tối đa 200 chữ in thường. Tập hợp đầu v&agrave;o cuối c&ugrave;ng được theo sau bởi một d&ograve;ng chứa một số 0 duy nhất, cho biết phần kết th&uacute;c của đầu v&agrave;o.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Mỗi tập hợp đầu v&agrave;o n&ecirc;n tạo ra một d&ograve;ng đầu ra, đưa ra tin nhắn văn bản dạng bạn r&otilde; ban đầu, kh&ocirc;ng c&oacute; khoảng trắng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\ntoioynnkpheleaigshareconhtomesnlewx\n3\nttyohhieneesiaabss\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>theresnoplacelikehomeonasnowynightx\nthisistheeasyoneab</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/828f3aea-b4fe-4407-a1df-7ae2d9b838d7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TOANDFRO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "test-life-the-universe-and-everything-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Vạn vật",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Chương tr&igrave;nh của bạn được y&ecirc;u cầu l&agrave; sử dụng phương ph&aacute;p Brute Force để t&igrave;m ra c&acirc;u trả lời cho sự sống, vũ trụ v&agrave; vạn vật. Ch&iacute;nh x&aacute;c hơn l&agrave; viết ra c&aacute;c số nhỏ từ đầu v&agrave;o đến đầu ra. Dừng xử l&yacute; đầu v&agrave;o sau khi đọc số 42. Tất cả c&aacute;c số ở đầu v&agrave;o l&agrave; số nguy&ecirc;n c&oacute; một hoặc hai chữ số.</p>\n<div id=\"problem-body\">\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88\n42\n99</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n88 </code></pre>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cc36476d-e8b1-4bb6-a024-ab489fdd5d42",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TEST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902b"
  },
  "memoryLimit": 2,
  "source": 10,
  "timeLimit": 2,
  "scores": 100,
  "slug": "tdprimes-printing-some-primes",
  "tags": [],
  "level": "EXPERT",
  "title": "In ra các số nguyên tố",
  "content": "<p>Bạn phải viết tất cả c&aacute;c số nguy&ecirc;n tố nhỏ hơn $10^{8}.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Kh&ocirc;ng c&oacute;</p>\n<h3>Định dạng đầu ra</h3>\n<p>Chỉ viết ra 1st, 101st, 201st, ... 1st mode 100.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n547\n1229\n...\n99995257\n99996931\n99998953</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b17fad90-19fa-428d-bc60-2dc10f51fa85",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TDPRIMES.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "sumpro-sum-of-product",
  "tags": [],
  "level": "EXPERT",
  "title": "Tính tổng của các phép nhân",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Cho một số N, h&atilde;y t&igrave;m tổng của tất cả c&aacute;c ph&eacute;p nh&acirc;n $x \\times y$ sao cho $\\frac{N}{x} = y$ (Ph&eacute;p chia số nguy&ecirc;n). V&igrave; gi&aacute; trị tổng c&oacute; thể rất lớn, h&atilde;y in ra ph&eacute;p to&aacute;n modulo 1000000007.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o chứa một số nguy&ecirc;n T, số lượng trường hợp thử nghiệm. Mỗi d&ograve;ng trong số T d&ograve;ng tiếp theo chứa một số nguy&ecirc;n N.</p>\n<h3><strong> Điều kiện</strong></h3>\n<ul>\n<li>$1 \\leq T \\leq 500$</li>\n<li>$1 \\leq N \\leq 10^{9}$</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra T d&ograve;ng chứa c&acirc;u trả lời tương ứng với trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n4\n6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4\n15\n33</code></pre>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/95c5d270-9407-4537-acb6-34fd25c384e3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUMPRO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 2,
  "scores": 50,
  "slug": "stpar-street-parade",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán về tổ chức cuộc diễu hành đường phố",
  "content": "<p>Chắc chắn, những chiếc xe diễu h&agrave;nh sẽ lại tung ho&agrave;nh tr&ecirc;n đường phố v&agrave;o m&ugrave;a h&egrave; n&agrave;y. Mỗi năm, ban tổ chức quyết định sắp xếp cố định cho những chiếc xe tải được trang tr&iacute;. Theo kinh nghiệm, họ cần đảm bảo khoảng trống cho con đường của khu phố để c&oacute; thể sắp xếp xe tải. Con đường của khu phố hẹp đến mức kh&ocirc;ng thể c&oacute; hai chiếc xe chạy qua nhau. V&igrave; vậy, c&aacute;c xe tải đi v&agrave;o con đường của khu phố cuối c&ugrave;ng nhất thiết phải rời khỏi con đường n&agrave;y&nbsp;trước. Do c&aacute;c xe tải v&agrave; đo&agrave;n người tham gia diễu h&agrave;nh di chuyển s&aacute;t nhau n&ecirc;n xe tải kh&ocirc;ng thể l&ugrave;i v&agrave; v&agrave;o lại con đường của khu phố. Bạn được cho trước thứ tự m&agrave; c&aacute;c xe diễu h&agrave;nh xe đi đến. H&atilde;y viết một chương tr&igrave;nh để x&aacute;c định xem c&aacute;c xe diễu h&agrave;nh c&oacute; thể được đưa v&agrave;o thứ tự m&agrave; ban tổ chức mong muốn hay kh&ocirc;ng.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">C&oacute; một số trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp thử nghiệm chứa một số n duy nhất, số lượng c&aacute;c xe diễu h&agrave;nh. D&ograve;ng thứ hai chứa c&aacute;c số từ 1 đến n theo thứ tự t&ugrave;y &yacute;. Tất cả c&aacute;c số được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch. Những con số n&agrave;y cho biết thứ tự m&agrave; c&aacute;c xe tải đi đến con đường của khu phố. Kh&ocirc;ng c&oacute; hơn 1000 chiếc xe diễu h&agrave;nh sẽ tham gia v&agrave;o cuộc diễu h&agrave;nh đường phố. Đầu v&agrave;o kết th&uacute;c bằng số 0.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng chứa một từ duy nhất \"yes\" nếu c&aacute;c xe tải diễu h&agrave;nh c&oacute; thể được sắp xếp lại với sự trợ gi&uacute;p của con đường của khu phố v&agrave; một từ \"no\" trong trường hợp ngược lại.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n5 1 2 4 3 \n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>yes</code></pre>\n<h3>Giải th&iacute;ch</h3>\n<p>Đầu v&agrave;o b&ecirc;n tr&ecirc;n được m&ocirc; tả bằng h&igrave;nh vẽ như sau:<br /><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade1.gif\" /></p>\n<p>5 chiếc xe tải c&oacute; thể được sắp xếp lại theo c&aacute;ch như sau:<br /><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade2.gif\" />&nbsp;<img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade3.gif\" />&nbsp;<img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade4.gif\" />&nbsp;<img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade5.gif\" />&nbsp;<img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/pomyk:parade6.gif\" /></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4f038740-6aa8-4aa9-ac12-b7d6eeff3c57",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "STPAR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "sbank-sorting-bank-accounts",
  "tags": [],
  "level": "EXPERT",
  "title": "Sắp xếp các tài khoản ngân hàng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>In one of the internet banks thousands of operations are being performed every day. Since certain customers do business more actively than others, some of the bank accounts occur many times in the list of operations. Your task is to sort the bank account numbers in ascending order. If an account appears twice or more in the list, write the number of repetitions just after the account number. The format of accounts is as follows: <strong>2</strong>&nbsp;control digits, an&nbsp;<strong>8</strong>-digit code of the bank,&nbsp;<strong>16</strong>&nbsp;digits identifying the owner (written in groups of four digits), for example (at the end of each line there is exactly one space):</p>\n<p>Tại một trong những ng&acirc;n h&agrave;ng internet, h&agrave;ng ng&agrave;n hoạt động đang được thực hiện mỗi ng&agrave;y. V&igrave; một số kh&aacute;ch h&agrave;ng kinh doanh t&iacute;ch cực hơn những kh&aacute;ch h&agrave;ng kh&aacute;c, một số t&agrave;i khoản ng&acirc;n h&agrave;ng xuất hiện nhiều lần trong danh s&aacute;ch hoạt động. Nhiệm vụ của bạn l&agrave; sắp xếp c&aacute;c số t&agrave;i khoản ng&acirc;n h&agrave;ng theo thứ tự tăng dần. Nếu một t&agrave;i khoản xuất hiện hai lần hoặc nhiều hơn trong danh s&aacute;ch, h&atilde;y ghi số lần lặp lại ngay sau số t&agrave;i khoản. Định dạng của c&aacute;c t&agrave;i khoản như sau: 2 chữ số kiểm so&aacute;t, một m&atilde; gồm 8 chữ số của ng&acirc;n h&agrave;ng, 16 chữ số x&aacute;c định chủ sở hữu (viết theo nh&oacute;m bốn chữ số), v&iacute; dụ (ở cuối mỗi d&ograve;ng c&oacute; đ&uacute;ng một khoảng trắng) :</p>\n<div id=\"problem-body\">\n<table align=\"center\">\n<tbody>\n<tr>\n<td bgcolor=\"navy\"><span style=\"color: yellow;\"><strong>30 10103538 2222 1233 6160 0142&nbsp;</strong></span></td>\n</tr>\n</tbody>\n</table>\n<p>C&aacute;c ng&acirc;n h&agrave;ng l&agrave; c&aacute;c tổ chức thời gian thực v&agrave; họ cần c&aacute;c giải ph&aacute;p NHANH CH&Oacute;NG. Nếu bạn cảm thấy m&igrave;nh c&oacute; thể đ&aacute;p ứng được thử th&aacute;ch trong một thời hạn rất nghi&ecirc;m ngặt, h&atilde;y tiếp tục! Một thuật to&aacute;n sắp xếp được thiết kế tốt c&oacute; khả năng th&agrave;nh c&ocirc;ng.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li><em>Số lượng trường hợp thử nghiệm t</em> &lt;= <strong>5</strong></li>\n<li><em>Số lượng t&agrave;i khoản n</em> &lt;= <strong>100 000</strong></li>\n<li>Danh s&aacute;ch c&aacute;c t&agrave;i khoản</li>\n<li>D&ograve;ng trống rỗng</li>\n<li>C&aacute;c trường hợp thử nghiệm tiếp theo</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Danh s&aacute;ch t&agrave;i khoản được sắp xếp với số lượng t&agrave;i khoản lặp lại</li>\n<li>D&ograve;ng trống rỗng</li>\n<li>C&aacute;c kết quả kh&aacute;c</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n6\n03 10103538 2222 1233 6160 0142 \n03 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0142 \n30 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0142 \n\n5\n30 10103538 2222 1233 6160 0144 \n30 10103538 2222 1233 6160 0142 \n30 10103538 2222 1233 6160 0145 \n30 10103538 2222 1233 6160 0146 \n30 10103538 2222 1233 6160 0143  </code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>03 10103538 2222 1233 6160 0141 1\n03 10103538 2222 1233 6160 0142 1\n30 10103538 2222 1233 6160 0141 2\n30 10103538 2222 1233 6160 0142 2\n\n30 10103538 2222 1233 6160 0142 1\n30 10103538 2222 1233 6160 0143 1\n30 10103538 2222 1233 6160 0144 1\n30 10103538 2222 1233 6160 0145 1\n30 10103538 2222 1233 6160 0146 1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/aec842ac-801a-4619-8c8e-db33880f8e93",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SBANK_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef902f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "samer08f-feynman",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán câu đố của Feynman",
  "content": "<p>Richard Phillips Feynman l&agrave; một nh&agrave; vật l&yacute; người Mỹ nổi tiếng v&agrave; từng nhận giải Nobel về Vật l&yacute;. &Ocirc;ng l&agrave;m việc trong lĩnh vực vật l&yacute; l&yacute; thuyết v&agrave; cũng l&agrave; người đi ti&ecirc;n phong trong lĩnh vực m&aacute;y t&iacute;nh lượng tử. &Ocirc;ng đ&atilde; đến thăm Nam Mỹ trong mười th&aacute;ng, thuyết tr&igrave;nh v&agrave; tận hưởng cuộc sống ở v&ugrave;ng nhiệt đới. &Ocirc;ng cũng được biết đến với cuốn s&aacute;ch \"Surely You're Joking, Mr. Feynman!\", bao gồm một số cuộc phi&ecirc;u lưu b&ecirc;n dưới đường x&iacute;ch đạo.</p>\n<div id=\"problem-body\">\n<p>Đam m&ecirc; cả đời của &ocirc;ng l&agrave; giải v&agrave; l&agrave;m c&aacute;c c&acirc;u đố, kh&oacute;a v&agrave; mật m&atilde;. Gần đ&acirc;y, một l&atilde;o n&ocirc;ng ở Nam Mỹ, người đ&atilde; tiếp đ&oacute;n nh&agrave; vật l&yacute; trẻ n&agrave;y v&agrave;o năm 1949, đ&atilde; t&igrave;m thấy một số giấy tờ v&agrave; ghi ch&uacute; được cho l&agrave; của Feynman. Trong số c&aacute;c ghi ch&uacute; về điện từ học, c&oacute; một tờ giấy ăn nơi &ocirc;ng viết một c&acirc;u đố đơn giản: \"C&oacute; bao nhi&ecirc;u &ocirc; vu&ocirc;ng kh&aacute;c nhau trong một ma trận &ocirc; vu&ocirc;ng N&times;N?\".</p>\n<p>Trong c&ugrave;ng một chiếc khăn ăn, c&oacute; một h&igrave;nh vẽ được m&ocirc; phỏng lại b&ecirc;n dưới, cho thấy rằng, với N = 2, c&acirc;u trả lời l&agrave; 5.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/disatoba:feynman.gif\" alt=\"subir imagenes\" border=\"0\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o chứa một số trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm bao gồm một d&ograve;ng, chỉ chứa một số nguy&ecirc;n N, đại diện cho số &ocirc; vu&ocirc;ng trong mỗi cạnh của ma trận (1 &le; N &le; 100).</li>\n<li>Phần cuối của đầu v&agrave;o được biểu thị bằng một d&ograve;ng chỉ chứa một số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp trong đầu v&agrave;o, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất, chứa số lượng &ocirc; vu&ocirc;ng kh&aacute;c nhau cho đầu v&agrave;o tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n1\n8\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5\n1\n204 </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8a76e36d-ae88-41b6-a001-d9643b368d6d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SAMER08F_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9030"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "rent-rent-your-airplane-and-make-money",
  "tags": [],
  "level": "EXPERT",
  "title": "Thuê máy bay",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>\"ABEAS Corp.\" l&agrave; một c&ocirc;ng ty rất nhỏ sở hữu một chiếc m&aacute;y bay duy nhất. Kh&aacute;ch h&agrave;ng của ABEAS l&agrave; c&aacute;c c&ocirc;ng ty h&agrave;ng kh&ocirc;ng lớn thu&ecirc; m&aacute;y bay để đ&aacute;p ứng t&igrave;nh trạng vượt qu&aacute; c&ocirc;ng suất thường xuy&ecirc;n. Kh&aacute;ch h&agrave;ng gửi đơn đặt h&agrave;ng thu&ecirc; bao gồm khoảng thời gian v&agrave; gi&aacute; cả m&agrave; kh&aacute;ch h&agrave;ng sẵn s&agrave;ng trả để thu&ecirc; m&aacute;y bay trong khoảng thời gian nhất định. Đơn đặt h&agrave;ng của tất cả c&aacute;c kh&aacute;ch h&agrave;ng đ&atilde; được biết trước. Tất nhi&ecirc;n, kh&ocirc;ng phải tất cả c&aacute;c đơn đặt h&agrave;ng đều c&oacute; thể được đ&aacute;p ứng v&agrave; một số đơn đặt h&agrave;ng phải bị từ chối. Eugene LAWLER, Gi&aacute;m đốc Khoa học của ABEAS Corp mong muốn tối đa h&oacute;a lợi nhuận của c&ocirc;ng ty. Bạn l&agrave; nh&acirc;n vi&ecirc;n của c&ocirc;ng ty n&agrave;y v&agrave; được y&ecirc;u cầu t&iacute;nh to&aacute;n một giải ph&aacute;p tối ưu.</p>\n<div id=\"problem-body\">\n<h4>V&iacute; dụ</h4>\n<p>H&atilde;y xem x&eacute;t v&iacute; dụ trường hợp c&ocirc;ng ty c&oacute; 4 đơn đặt h&agrave;ng:</p>\n<ul>\n<li>Đơn đặt 1 (thời gian bắt đầu 0, khoảng thời gian 5, gi&aacute; cả 10)</li>\n<li>Đơn đặt 2 (thời gian bắt đầu 3, khoảng thời gian 7, gi&aacute; cả 8)</li>\n<li>Đơn đặt 3 (thời gian bắt đầu 5, khoảng thời gian 9, gi&aacute; cả 7)</li>\n<li>Đơn đặt 4 (thời gian bắt đầu 6, khoảng thời gian 9, gi&aacute; cả 8)</li>\n</ul>\n<p>Giải ph&aacute;p tối ưu bao gồm giảm đơn đặt 2 v&agrave; 3 v&agrave; thu được l&agrave; 10 + 8 = 18. Lưu &yacute; rằng giải ph&aacute;p bao gồm đơn đặt h&agrave;ng 1 v&agrave; 3 l&agrave; khả thi (m&aacute;y bay được thu&ecirc; kh&ocirc;ng bị gi&aacute;n đoạn từ thời điểm 0 đến thời điểm 14) nhưng kh&ocirc;ng tối ưu.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số T &le; 30 cho biết số lượng trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp kiểm thử chứa số lượng đơn đặt h&agrave;ng n (n &le; 10000). Trong n d&ograve;ng sau, c&aacute;c đơn đặt h&agrave;ng được đưa ra. Mỗi đơn h&agrave;ng được m&ocirc; tả bởi 3 gi&aacute; trị số nguy&ecirc;n: Thời gian bắt đầu của đơn h&agrave;ng st (0 &le; st &lt;1000000), khoảng thời gian d của đơn h&agrave;ng (0 &lt;d &lt;1000000) v&agrave; gi&aacute; cả p (0 &lt; p &lt;100000) m&agrave; kh&aacute;ch h&agrave;ng sẵn s&agrave;ng thanh to&aacute;n cho đơn đặt h&agrave;ng n&agrave;y.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Bạn được y&ecirc;u cầu t&iacute;nh to&aacute;n một giải ph&aacute;p tối ưu. Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải ghi ra tổng gi&aacute; trị m&agrave; c&aacute;c h&atilde;ng h&agrave;ng kh&ocirc;ng đ&atilde; trả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4\n0 5 10\n3 7 14\n5 9 7\n6 9 8</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>18</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92871da2-ee94-4c77-bafb-41c4604e5112",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RENT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9031"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "que1-queue-rookie",
  "tags": [],
  "level": "EXPERT",
  "title": "Hàng đợi",
  "content": "<p class=\"text-center\">C&oacute; N người đang đứng trong một h&agrave;ng đợi. Bạn được cho biết chiều cao của từng người v&agrave; số lượng người cao hơn v&agrave; đứng trước người đ&oacute;. Bạn phải t&igrave;m ra vị tr&iacute; của từng người.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n T duy nhất, số trường hợp thử nghiệm. Mỗi trường hợp bao gồm 3 d&ograve;ng. D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n N. D&ograve;ng thứ hai chứa N số nguy&ecirc;n đại diện cho chiều cao của N người. D&ograve;ng thứ ba chứa N số nguy&ecirc;n biểu thị số người cao hơn đứng trước anh ta.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra một d&ograve;ng cho mỗi trường hợp thử nghiệm chứa chiều cao của N người theo thứ tự họ đang đứng.</p>\n<h3>Điều kiện</h3>\n<ol>\n<li>$0 &lt; T \\leq 100$</li>\n<li>$0 &lt; N \\leq 1000$</li>\n<li>Độ phức tạp về thời gian kỳ vọng l&agrave; $O(N^{2})$</li>\n</ol>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n5\n33 11 22 44 55\n0 2 1 1 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>33 22 11 55 44</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/322302fc-b89f-4493-9b51-c03e40f3e0dd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QUE1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9032"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "eye-and-identity",
  "tags": [],
  "level": "BEGINNER",
  "title": "Công cụ Eye và Identity trong Python",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>identity</h2>\n<p>C&ocirc;ng cụ nhận dạng trả về một mảng nhận dạng. Mảng nhận dạng l&agrave; một ma trận vu&ocirc;ng với tất cả c&aacute;c phần tử đường ch&eacute;o ch&iacute;nh l&agrave; 1 v&agrave; phần c&ograve;n lại l&agrave; 0. Kiểu mặc định của c&aacute;c phần tử l&agrave; float.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nprint(numpy.identity(3))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[[ 1.  0.  0.]\n [ 0.  1.  0.]\n [ 0.  0.  1.]]</code></pre>\n<h2>eye</h2>\n<p>C&ocirc;ng cụ eye trả về một mảng 2 chiều với c&aacute;c gi&aacute; trị 1 ở đường ch&eacute;o v&agrave; 0 ở c&aacute;c vị tr&iacute; c&ograve;n lại. Đường ch&eacute;o c&oacute; thể l&agrave; đường ch&eacute;o ch&iacute;nh, tr&ecirc;n hoặc dưới t&ugrave;y thuộc v&agrave;o tham số k t&ugrave;y chọn. K dương l&agrave; cho đường ch&eacute;o tr&ecirc;n, k &acirc;m cho đường ch&eacute;o b&ecirc;n dưới v&agrave; 0 (mặc định) l&agrave; cho đường ch&eacute;o ch&iacute;nh.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nprint(numpy.eye(8, 7, k = 1))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[[ 0.  1.  0.  0.  0.  0.  0.]\n [ 0.  0.  1.  0.  0.  0.  0.]\n [ 0.  0.  0.  1.  0.  0.  0.]\n [ 0.  0.  0.  0.  1.  0.  0.]\n [ 0.  0.  0.  0.  0.  1.  0.]\n [ 0.  0.  0.  0.  0.  0.  1.]\n [ 0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.]]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Nhiệm vụ của bạn l&agrave; in ra một mảng c&oacute; k&iacute;ch thước NxM với c&aacute;c phần tử đường ch&eacute;o ch&iacute;nh l&agrave; 1 v&agrave; 0 ở c&aacute;c vị tr&iacute; c&ograve;n lại.</p>\n<p><strong>Lưu &yacute;: Để căn chỉnh ch&iacute;nh x&aacute;c, h&atilde;y th&ecirc;m d&ograve;ng numpy.set_printoptions(legacy='1.13') b&ecirc;n dưới c&acirc;u lệnh import numpy.</strong></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng duy nhất chứa c&aacute;c gi&aacute; trị N v&agrave; M được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch. N biểu thị c&aacute;c h&agrave;ng. M biểu thị c&aacute;c cột.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra mảng NxM.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>3 3</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>[[ 1.  0.  0.]\n [ 0.  1.  0.]\n [ 0.  0.  1.]]</code></pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0dfdb79c-0a06-4f32-ab6f-e45af02c0561",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9033"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "matrix-script",
  "tags": [],
  "level": "BEGINNER",
  "title": "Giải mã ma trận",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Neo c&oacute; một tập lệnh ma trận phức tạp. Tập lệnh ma trận l&agrave; một ma trận N x M gồm c&aacute;c chuỗi k&yacute; tự. N&oacute; bao gồm c&aacute;c k&yacute; tự chữ v&agrave; số, dấu c&aacute;ch v&agrave; k&yacute; hiệu (!, @, #, $,%, &amp;).</p>\n<p><img title=\"Capture.JPG\" src=\"https://s3.amazonaws.com/hr-challenge-images/12524/1442753362-1075bd12d9-Capture.JPG\" /></p>\n<p>Để giải m&atilde; tập lệnh, Neo cần đọc từng cột v&agrave; chỉ chọn c&aacute;c k&yacute; tự chữ v&agrave; số v&agrave; kết nối ch&uacute;ng. Neo đọc cột từ tr&ecirc;n xuống dưới v&agrave; bắt đầu đọc từ cột ngo&agrave;i c&ugrave;ng b&ecirc;n tr&aacute;i. Nếu c&oacute; c&aacute;c k&yacute; hiệu hoặc khoảng trắng giữa hai k&yacute; tự chữ v&agrave; số của tập lệnh đ&atilde; giải m&atilde;, Neo sẽ thay thế ch&uacute;ng bằng một khoảng trắng duy nhất '' để dễ đọc hơn. Neo cảm thấy rằng kh&ocirc;ng cần sử dụng c&aacute;c điều kiện if để giải m&atilde;.</p>\n<p>C&aacute;c k&yacute; tự chữ v&agrave; số bao gồm: [A-Z, a-z v&agrave; 0-9].</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa c&aacute;c số nguy&ecirc;n N (h&agrave;ng) v&agrave; M (cột) tương ứng được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>N d&ograve;ng tiếp theo chứa c&aacute;c phần tử h&agrave;ng của tập lệnh ma trận.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>C&aacute;c số nguy&ecirc;n N v&agrave; M sao cho $0 \\le N, M \\le 100$</li>\n</ul>\n<p><span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span></p>\n<p>Lưu &yacute;: Điểm 0 sẽ được đưa ra cho việc sử dụng c&aacute;c điều kiện if trong đoạn m&atilde; của bạn.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra m&atilde; ma trận đ&atilde; giải m&atilde;.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>7 3\nTsi\nh%x\ni #\nsM \n$a \n#t%\nir!</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>This is Matrix#  %!</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Tập lệnh được giải m&atilde; l&agrave;: <code>This$#is% Matrix#  %!\n</code></p>\n<p>Neo thay thế c&aacute;c k&yacute; hiệu hoặc khoảng trắng giữa hai k&yacute; tự chữ v&agrave; số bằng một khoảng trắng duy nhất '' để dễ đọc hơn. V&igrave; vậy, tập lệnh được giải m&atilde; cuối c&ugrave;ng l&agrave;: <code>This is Matrix#  %!</code></p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dc1ee67f-a503-4d0f-a037-69f3ab0db45f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9034"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "compress-the-string",
  "tags": [],
  "level": "BEGINNER",
  "title": "Gộp các ký tự",
  "content": "<p>Trong nhiệm vụ n&agrave;y, ch&uacute;ng t&ocirc;i muốn bạn đ&aacute;nh gi&aacute; t&iacute;nh hữu &iacute;ch của h&agrave;m groupby() của itertools. Bạn được cung cấp một chuỗi k&yacute; tự S. Giả sử một k&yacute; tự khoảng trắng'' xuất hiện li&ecirc;n tiếp X lần trong chuỗi k&yacute; tự. C&aacute;c bạn h&atilde;y thay thế c&aacute;c lần xuất hiện li&ecirc;n tiếp n&agrave;y của k&yacute; tự 'c' bằng (X, c) trong chuỗi.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Một d&ograve;ng đầu v&agrave;o bao gồm chuỗi k&yacute; tự S.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Một d&ograve;ng đầu ra bao gồm chuỗi k&yacute; tự đ&atilde; sửa đổi.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Tất cả c&aacute;c k&yacute; tự của S biểu thị c&aacute;c số nguy&ecirc;n từ 0 đến 9.</li>\n<li>$1 \\leq \\left | S \\right | \\leq 10^{4}$</li>\n</ul>\n<p><span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span></p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1222311</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>(1, 1) (3, 2) (1, 3) (2, 1)</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Đầu ti&ecirc;n, k&yacute; tự 1 chỉ xuất hiện một lần. N&oacute; được thay thế bằng (1,1). Sau đ&oacute;, k&yacute; tự 2 xuất hiện ba lần, v&agrave; n&oacute; được thay thế bằng (3, 2),... Ngo&agrave;i ra, h&atilde;y lưu &yacute; khoảng trống giữa c&aacute;c ph&eacute;p gộp.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dc5b355b-22bc-443d-8b75-452223be358b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9035"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "iterables-and-iterators",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm việc với các đối tượng Iterable và Iterator",
  "content": "<p>M&ocirc;-đun itertools ti&ecirc;u chuẩn h&oacute;a một tập hợp cốt l&otilde;i của c&aacute;c c&ocirc;ng cụ nhanh, hiệu quả về bộ nhớ hữu &iacute;ch v&agrave; c&oacute; thể tạo th&agrave;nh c&aacute;c c&ocirc;ng cụ chuy&ecirc;n dụng hiệu quả trong Python. Bạn được cung cấp một danh s&aacute;ch gồm N chữ c&aacute;i tiếng Anh viết thường. Đối với một số nguy&ecirc;n K nhất định, bạn c&oacute; thể chọn bất kỳ chỉ số K n&agrave;o với x&aacute;c suất đồng nhất từ danh s&aacute;ch. T&igrave;m x&aacute;c suất để &iacute;t nhất một trong K chỉ số được chọn c&oacute; chứa chữ c&aacute;i: 'a'.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Đầu v&agrave;o bao gồm ba d&ograve;ng. D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n N, biểu thị độ d&agrave;i của danh s&aacute;ch. D&ograve;ng tiếp theo gồm N chữ c&aacute;i tiếng Anh viết thường được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, biểu thị c&aacute;c phần tử của danh s&aacute;ch. D&ograve;ng thứ hai v&agrave; d&ograve;ng cuối c&ugrave;ng của dữ liệu đầu v&agrave;o chứa số nguy&ecirc;n K, biểu thị số chỉ số được chọn.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>In ra một d&ograve;ng duy nhất bao gồm x&aacute;c suất để &iacute;t nhất một trong K chỉ số được chọn c&oacute; chứa chữ c&aacute;i: 'a'.</p>\n<p>Lưu &yacute;: C&acirc;u trả lời phải đ&uacute;ng đến 3 chữ số sau dấu thập ph&acirc;n.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$1 \\leq N \\leq 10$</li>\n<li>$1 \\leq K \\leq N$</li>\n<li>Tất cả c&aacute;c chữ c&aacute;i trong danh s&aacute;ch đều l&agrave; chữ c&aacute;i tiếng Anh viết thường.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 \na a c d\n2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>0.8333</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Tất cả c&aacute;c tập hợp tuple chứa c&aacute;c gi&aacute; trị kh&ocirc;ng c&oacute; thứ tự c&oacute; thể c&oacute; độ d&agrave;i 2 bao gồm c&aacute;c chỉ số từ 1 đến 4 l&agrave;: (1,2),(1,3),(1,4),(2,3),(2,4),(3,4)</p>\n<p><span id=\"MathJax-Element-17-Frame\" class=\"MathJax_SVG\"></span></p>\n<p>Trong số 6 tập hợp n&agrave;y, 5 trong số ch&uacute;ng chứa chỉ số 1 hoặc chỉ số 2 l&agrave; c&aacute;c chỉ số c&oacute; chứa chữ c&aacute;i 'a'. Do đ&oacute;, c&acirc;u trả lời l&agrave; $ \\frac{5}{6} $.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e1498049-bae9-4518-a16c-7fb28271a142",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9036"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "set-difference-operation",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm hiệu số giữa 2 tập hợp",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"A-B.png\" src=\"https://s3.amazonaws.com/hr-challenge-images/9420/1437904659-11e4bef847-A-B.png\" /></p>\n<h2><strong>.difference()</strong></h2>\n<p>Phương thức .difference() trả về một tập hợp với tất cả c&aacute;c phần tử từ tập hợp đ&oacute; kh&ocirc;ng nằm trong một tập hợp c&ograve;n lại. Đ&ocirc;i khi to&aacute;n tử dấu trừ được sử dụng thay cho phương thức .difference(), nhưng n&oacute; chỉ sử dụng cho tập hợp c&aacute;c phần tử ở dạng Set. Set l&agrave; bất biến đối với phương thức .difference() (hoặc to&aacute;n tử dấu trừ).</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>s = set(\"TEK4\")\nprint(s.difference(\"Python\"))\nprint(s.difference(set(['P', 'y', 't', 'h', 'o', 'n'])))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>{'T', '4', 'K', 'E'}\n{'T', '4', 'K', 'E'}</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Sinh vi&ecirc;n của trường Đại học H&agrave; Nội c&oacute; đăng k&yacute; b&aacute;o tiếng Anh v&agrave; tiếng Ph&aacute;p. Một số sinh vi&ecirc;n đ&atilde; đăng k&yacute; chỉ b&aacute;o tiếng Anh, một số đăng k&yacute; chỉ b&aacute;o tiếng Ph&aacute;p, v&agrave; một số đăng k&yacute; cả hai tờ b&aacute;o. Bạn được cung cấp hai tập hợp danh s&aacute;ch c&aacute;c sinh vi&ecirc;n. Một tập hợp đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Anh, v&agrave; một tập hợp đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Ph&aacute;p. Nhiệm vụ của bạn l&agrave; t&igrave;m ra tổng số sinh vi&ecirc;n đ&atilde; đăng k&yacute; chỉ b&aacute;o tiếng Anh.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Anh.</li>\n<li>D&ograve;ng thứ hai chứa danh s&aacute;ch c&aacute;c sinh vi&ecirc;n đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Anh được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>D&ograve;ng thứ ba chứa số sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Ph&aacute;p.</li>\n<li>D&ograve;ng thứ tư chứa danh s&aacute;ch c&aacute;c sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Ph&aacute;p được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số lượng sinh vi&ecirc;n N sao cho $0 &lt; N &lt; 1000$</li>\n</ul>\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra tổng số sinh vi&ecirc;n chỉ đăng k&yacute; b&aacute;o tiếng Anh.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>9\n1 2 3 4 5 6 7 8 9\n9\n10 1 2 3 11 21 55 6 8</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>4</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Tổng số sinh vi&ecirc;n chỉ đăng k&yacute; b&aacute;o tiếng Anh l&agrave;: 4,5,7 v&agrave; 9. Như vậy tổng số l&agrave; 4 sinh vi&ecirc;n.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cedc5623-9e66-42d6-a722-14ae3bb1c246",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9037"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "floor-ceil-and-rint",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm tròn giá trị",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>floor</h2>\n<p>The tool <em>floor</em> returns the floor of the input element-wise. The floor of x<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> is the largest integer i<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span> where $i \\leq x$.</p>\n<p>C&ocirc;ng cụ floor trả về gi&aacute; trị l&agrave;m tr&ograve;n của phần tử đầu v&agrave;o. Gi&aacute; trị l&agrave;m tr&ograve;n của x l&agrave; số nguy&ecirc;n i lớn nhất trong đ&oacute; $ i \\leq x $.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nmy_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\nprint(numpy.floor(my_array))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]</code></pre>\n<h2>ceil</h2>\n<p>The tool <em>ceil</em> returns the ceiling of the input element-wise. The ceiling of x<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span> is the smallest integer i<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span> where $i \\geq x$<span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>.</p>\n<p>C&ocirc;ng cụ ceil trả về gi&aacute; trị l&agrave;m tr&ograve;n l&ecirc;n của phần tử đầu v&agrave;o. Gi&aacute; trị l&agrave;m tr&ograve;n l&ecirc;n của x l&agrave; số nguy&ecirc;n i nhỏ nhất trong đ&oacute; $i \\geq x$.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nmy_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\nprint(numpy.ceil(my_array))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[  2.   3.   4.   5.   6.   7.   8.   9.  10.]</code></pre>\n<h2>rint</h2>\n<p>C&ocirc;ng cụ rint l&agrave;m tr&ograve;n đến số nguy&ecirc;n gần nhất của phần tử đầu v&agrave;o.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nmy_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\nprint(numpy.rint(my_array))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[1.   2.   3.   4.   6.   7.   8.   9.  10.]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một mảng 1 chiều, A. Nhiệm vụ của bạn l&agrave; in ra gi&aacute; trị l&agrave;m tr&ograve;n l&ecirc;n, l&agrave;m tr&ograve;n xuống v&agrave; l&agrave;m tr&ograve;n tới gi&aacute; trị gần nhất của tất cả c&aacute;c phần tử của A.</p>\n<p>Lưu &yacute;: Để c&oacute; được định dạng đầu ra ch&iacute;nh x&aacute;c, th&ecirc;m d&ograve;ng numpy.set_printoptions(legacy='1.13') b&ecirc;n dưới c&acirc;u lệnh import numpy.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng dữ liệu đầu v&agrave;o chứa c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của mảng A.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>Tr&ecirc;n d&ograve;ng đầu ti&ecirc;n, in ra gi&aacute; trị l&agrave;m tr&ograve;n xuống của A.</li>\n<li>Tr&ecirc;n d&ograve;ng thứ hai, in ra gi&aacute; trị l&agrave;m tr&ograve;n l&ecirc;n của A.</li>\n<li>Tr&ecirc;n d&ograve;ng thứ ba, in ra gi&aacute; trị l&agrave;m tr&ograve;n gần nhất của A.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>1.1 2.2 3.3 4.4 5.5 6.6 7.7 8.8 9.9</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]\n[  2.   3.   4.   5.   6.   7.   8.   9.  10.]\n[  1.   2.   3.   4.   6.   7.   8.   9.  10.]</code></pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ec881b57-dab8-4be4-9b41-7b7ac69530a7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9038"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "set-symmetric_difference-operation",
  "tags": [],
  "level": "BEGINNER",
  "title": "Phép toán tìm hiệu đối xứng của tập hợp",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"A^B.png\" src=\"https://s3.amazonaws.com/hr-challenge-images/9421/1437912471-534f33cf60-AB.png\" /></p>\n<h2><strong> .symmetric_difference()</strong></h2>\n<p>Phương thức .symmetric_difference() trả về một tập hợp với tất cả c&aacute;c phần tử c&oacute; trong tập hợp n&agrave;y v&agrave; trong tập hợp kh&aacute;c nhưng kh&ocirc;ng nằm trong cả hai tập hợp. Đ&ocirc;i khi, to&aacute;n tử ^ được sử dụng thay cho phương thức .symmetric_difference(), nhưng n&oacute; chỉ sử dụng cho tập hợp c&aacute;c phần tử ở dạng Set. Tập hợp l&agrave; bất biến đối với ph&eacute;p to&aacute;n .symmetric_difference() (hoặc ph&eacute;p to&aacute;n ^).</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>s = set(\"TEK4\")\nprint(s.symmetric_difference(\"PyThon\"))\nprint(s.symmetric_difference(set(['P', 'y', 'T', 'h', 'o', 'n'])))</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Sinh vi&ecirc;n của trường Đại học H&agrave; Nội c&oacute; đăng k&yacute; b&aacute;o tiếng Anh v&agrave; tiếng Ph&aacute;p. Một số sinh vi&ecirc;n chỉ đăng k&yacute; tiếng Anh, một số chỉ đăng k&yacute; tiếng Ph&aacute;p, v&agrave; một số đăng k&yacute; cả hai tờ b&aacute;o. Bạn được cung cấp hai tập hợp danh s&aacute;ch sinh vi&ecirc;n. Một tập hợp đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Anh, v&agrave; một tập hợp đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Ph&aacute;p. Nhiệm vụ của bạn l&agrave; t&igrave;m tổng số sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Anh hoặc b&aacute;o tiếng Ph&aacute;p nhưng kh&ocirc;ng đăng k&yacute; cả hai.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Anh.</li>\n<li>D&ograve;ng thứ hai chứa danh s&aacute;ch c&aacute;c sinh vi&ecirc;n đ&atilde; đăng k&yacute; tờ b&aacute;o tiếng Anh được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>D&ograve;ng thứ ba chứa số sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Ph&aacute;p.</li>\n<li>D&ograve;ng thứ tư chứa danh s&aacute;ch c&aacute;c sinh vi&ecirc;n đ&atilde; đăng k&yacute; b&aacute;o tiếng Ph&aacute;p được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số lượng sinh vi&ecirc;n N sao cho $0 \\le N \\le 1000$</li>\n</ul>\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>In ra tổng số sinh vi&ecirc;n c&oacute; đăng k&yacute; b&aacute;o tiếng Anh hoặc b&aacute;o tiếng Ph&aacute;p nhưng kh&ocirc;ng đăng k&yacute; cả hai.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>9\n1 2 3 4 5 6 7 8 9\n9\n10 1 2 3 11 21 55 6 8</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>8</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Số sinh vi&ecirc;n c&oacute; đăng k&yacute; b&aacute;o tiếng Anh hoặc tiếng Ph&aacute;p nhưng kh&ocirc;ng đăng k&yacute; cả hai b&aacute;o l&agrave;: 4,5,7,9,10,11,21 v&agrave; 55. Như vậy, tổng số l&agrave; 8 sinh vi&ecirc;n.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0ee07f81-55a9-4ed2-9702-3bd448d0800d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9039"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "set-mutations",
  "tags": [],
  "level": "BEGINNER",
  "title": "Thực hiện phép toán thay đổi tập hợp Set",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Ch&uacute;ng ta đ&atilde; thấy c&aacute;c ứng dụng của ph&eacute;p to&aacute;n li&ecirc;n hợp, tập giao, hiệu số v&agrave; hiệu số đối xứng, nhưng những ph&eacute;p to&aacute;n n&agrave;y kh&ocirc;ng tạo ra bất kỳ thay đổi n&agrave;o đối với tập hợp Set.</p>\n<p><strong>Ch&uacute;ng ta c&oacute; thể sử dụng c&aacute;c phương thức sau để thực hiện điều n&agrave;y:</strong></p>\n<h2><strong> Phương thức .update()</strong> hoặc <strong>|=</strong></h2>\n<p>Cập nhật tập hợp Set bằng c&aacute;ch th&ecirc;m c&aacute;c phần tử từ một tập hợp Set kh&aacute;c.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>H = set(\"TEK\")\nR = set(\"4\")\nH.update(R)\nprint(H)</code></pre>\n<p><strong>Phương thức .intersection_update()</strong></p>\n<p>Cập nhật tập hợp bằng c&aacute;ch chỉ giữ lại c&aacute;c phần tử được t&igrave;m thấy trong tập hợp đ&oacute; hoặc một tập hợp Set kh&aacute;c.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>H = set(\"TEK\")\nR = set(\"4\")\nH.intersection_update(R)\nprint(H)</code></pre>\n<h2><strong> Phương thức .difference_update()</strong></h2>\n<p>Cập nhật tập hợp bằng c&aacute;ch x&oacute;a c&aacute;c phần tử được t&igrave;m thấy trong một tập hợp hoặc một tập hợp Set kh&aacute;c.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>H = set(\"TEK\")\nR = set(\"4\")\nH.difference_update(R)\nprint(H)</code></pre>\n<h2><strong> Phương thức .symmetric_difference_update()</strong></h2>\n<p>Cập nhật tập hợp bằng c&aacute;ch chỉ giữ lại c&aacute;c phần tử được t&igrave;m thấy trong một trong hai tập hợp Set, kh&ocirc;ng nằm trong cả hai.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>H = set(\"TEK\")\nR = set(\"4\")\nH.symmetric_difference_update(R)\nprint(H)</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cho một tập hợp A v&agrave; N tập hợp Set kh&aacute;c. N tập hợp n&agrave;y phải thực hiện một số ph&eacute;p to&aacute;n thay đổi cụ thể tr&ecirc;n tập A. Nhiệm vụ của bạn l&agrave; thực hiện c&aacute;c ph&eacute;p to&aacute;n đ&oacute; v&agrave; in ra tổng c&aacute;c phần tử từ tập Set A.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số phần tử trong tập A.</li>\n<li>D&ograve;ng thứ hai chứa danh s&aacute;ch c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch trong tập A.</li>\n<li>D&ograve;ng thứ ba chứa số nguy&ecirc;n N, số lượng c&aacute;c tập hợp Set kh&aacute;c.</li>\n<li>$ 2 \\ast N $ d&ograve;ng tiếp theo được chia th&agrave;nh N phần chứa mỗi phần hai d&ograve;ng.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi phần chứa c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của t&ecirc;n ph&eacute;p to&aacute;n v&agrave; độ d&agrave;i của tập hợp Set c&ograve;n lại.</li>\n<li>D&ograve;ng thứ hai của mỗi phần chứa danh s&aacute;ch c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch trong tập hợp Set c&ograve;n lại.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li><span id=\"MathJax-Element-6-Frame\" class=\"MathJax_SVG\"></span>Độ d&agrave;i của tập hợp A, len(set(A)), sao cho $0 &lt; <em>len(set(<strong>A</strong>)) &lt; 1000</em>$</li>\n<li>Độ d&agrave;i của c&aacute;c tập hợp kh&aacute;c, len(set(other)), sao cho $0 &lt; &nbsp;<em>len(other) &lt; 100$</em></li>\n<li><em>Số nguy&ecirc;n N sao cho 0 &lt; N &lt; 100</em><span id=\"MathJax-Element-10-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>In ra tổng c&aacute;c phần tử trong tập A.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code> 16\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 24 52\n 4\n intersection_update 10\n 2 3 5 6 8 9 1 4 7 11\n update 2\n 55 66\n symmetric_difference_update 5\n 22 7 35 62 58\n difference_update 7\n 11 22 35 55 58 62 66 </code></pre>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>38</code></pre>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>Sau ph&eacute;p to&aacute;n đầu ti&ecirc;n, ch&uacute;ng ta nhận được: set A = set ([1,2,3,4,5,6,7,8,9,11]).</li>\n<li>Sau ph&eacute;p to&aacute;n thứ hai, ch&uacute;ng ta nhận được: set A = set ([1,2,3,4,5,6,7,8,9,11,55,66])</li>\n<li>Sau ph&eacute;p to&aacute;n thứ ba, ch&uacute;ng ta nhận được: set A = set ([1,2,3,4,5,6,8,9,11,22,35,55,58,62,66])</li>\n<li>Sau ph&eacute;p to&aacute;n thứ tư, ch&uacute;ng ta nhận được: set A = set ([1,2,3,4,5,6,8,9])</li>\n<li>Tổng c&aacute;c phần tử trong tập A sau c&aacute;c ph&eacute;p to&aacute;n n&agrave;y l&agrave; 38.</li>\n</ul>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2caa1070-dd11-4f02-97a9-e12112074b4f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903a"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "collections-deque",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm việc với hàng đợi Deque",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2><sub>collections.deque()</sub></h2>\n<p>Deque l&agrave; một h&agrave;ng đợi hai đầu. N&oacute; c&oacute; thể được sử dụng để th&ecirc;m hoặc bớt c&aacute;c phần tử ở cả hai đầu. Deques hỗ trợ luồng an to&agrave;n, lấy phần tử v&agrave; th&ecirc;m phần tử một c&aacute;ch hiệu quả cho bộ nhớ từ hai b&ecirc;n đầu của Deque.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>from collections import deque\nd = deque()\nd.append(1)\nprint(d)\nd.appendleft(2)\nprint(d)\nd.clear()\nprint(d)</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Thực hiện c&aacute;c phương thức <em>append</em>,&nbsp;<em>pop</em>,&nbsp;<em>popleft</em> v&agrave; <em>appendleft</em> cho một h&agrave;ng đợi Deque rỗng d.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n N, số lượng c&aacute;c thao t&aacute;c.</li>\n<li>N d&ograve;ng tiếp theo chứa t&ecirc;n của c&aacute;c phương thức được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch v&agrave; gi&aacute; trị của ch&uacute;ng.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số nguy&ecirc;n N sao cho $0 \\le N \\leq 100$</li>\n</ul>\n<p><span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra c&aacute;c phần tử của h&agrave;ng đợi Deque d được ph&acirc;n c&aacute;ch bằng dấu c&aacute;ch.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>6\nappend 1\nappend 2\nappend 3\nappendleft 4\npop\npopleft</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1 2</code></pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c9ac5c43-6983-4e7f-832a-7ef8f88a2b65",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "transpose-and-flatten",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tạo ma trận chuyển vị và mảng 1 chiều",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>Tranpose</h2>\n<p>Ch&uacute;ng ta c&oacute; thể tạo ra ma trận chuyển vị của một mảng bằng c&aacute;ch sử dụng c&ocirc;ng cụ numpy.transpose. N&oacute; sẽ kh&ocirc;ng ảnh hưởng đến mảng ban đầu, nhưng n&oacute; sẽ tạo ra một mảng mới.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nmy_array = numpy.array([[1,2,3], [4,5,6]])\nprint(numpy.transpose(my_array))</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[[1 4]\n [2 5]\n [3 6]]</code></pre>\n<h2>Flatten</h2>\n<p>C&ocirc;ng cụ l&agrave;m phẳng tạo ra một bản sao của mảng đầu v&agrave;o được chuyển đổi th&agrave;nh mảng một chiều.</p>\n<p>V&iacute; dụ</p>\n<pre class=\"language-python\"><code>import numpy\nmy_array = numpy.array([[1,2,3], [4,5,6]])\nprint(my_array.flatten())</code></pre>\n<p>Kết quả</p>\n<pre class=\"language-markup\"><code>[1 2 3 4 5 6]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một ma trận mảng số nguy&ecirc;n NxM với c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch (N l&agrave; h&agrave;ng v&agrave; M l&agrave; cột). Nhiệm vụ của bạn l&agrave; in ra kết quả ma trận chuyển vị v&agrave; mảng 1 chiều.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa c&aacute;c gi&aacute; trị N v&agrave; M được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>N d&ograve;ng tiếp theo chứa c&aacute;c phần tử M cột được ph&acirc;n c&aacute;ch bằng dấu c&aacute;ch.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra ma trận chuyển vị v&agrave; sau đ&oacute; mảng 1 chiều.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>2 2\n1 2\n3 4</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>[[1 3]\n [2 4]]\n[1 2 3 4]</code></pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ae69de2a-ac5b-4ee4-84a3-b662f2936052",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903c"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "collections-namedtuple",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính số điểm trung bình của học sinh",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2><sub><strong>collections.namedtuple()</strong></sub></h2>\n<p>Về cơ bản, nametuples l&agrave; loại đối tượng dễ tạo. Ch&uacute;ng biến c&aacute;c tập hợp tuple th&agrave;nh v&ugrave;ng chứa tiện lợi cho c&aacute;c c&ocirc;ng việc đơn giản. Với nametuples, bạn kh&ocirc;ng phải sử dụng c&aacute;c chỉ số để truy cập v&agrave;o c&aacute;c th&agrave;nh vi&ecirc;n của một tập hợp tuple.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; from collections import namedtuple\n&gt;&gt;&gt; Point = namedtuple('Point','x,y')\n&gt;&gt;&gt; pt1 = Point(1,2)\n&gt;&gt;&gt; pt2 = Point(3,4)\n&gt;&gt;&gt; dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n&gt;&gt;&gt; print(dot_product)\n11</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; from collections import namedtuple\n&gt;&gt;&gt; Car = namedtuple('Car','Price Mileage Colour Class')\n&gt;&gt;&gt; xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n&gt;&gt;&gt; print(xyz)\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n&gt;&gt;&gt; print(xyz.Class)\nY</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Tiến sĩ John Wesley c&oacute; một bảng t&iacute;nh chứa danh s&aacute;ch ID, điểm, lớp v&agrave; t&ecirc;n của học sinh. Nhiệm vụ của bạn l&agrave; gi&uacute;p Tiến sĩ Wesley t&iacute;nh điểm trung b&igrave;nh của c&aacute;c học sinh.</p>\n<p>\\[ Avg = \\frac{Sum}{Total} \\]</p>\n<p>Trong đ&oacute;:</p>\n<ul>\n<li>Avg l&agrave; điểm trung b&igrave;nh</li>\n<li>Sum l&agrave; tổng c&aacute;c số điểm</li>\n<li>Total l&agrave; tổng số c&aacute;c học sinh</li>\n</ul>\n<p>Ch&uacute; &yacute;:</p>\n<div class=\"MathJax_SVG_Display\"><span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span></div>\n<ol>\n<li>C&aacute;c cột c&oacute; thể theo bất kỳ thứ tự n&agrave;o. ID, số điểm, lớp v&agrave; t&ecirc;n c&oacute; thể được viết theo bất kỳ thứ tự n&agrave;o trong bảng t&iacute;nh.</li>\n<li>T&ecirc;n c&aacute;c cột l&agrave; ID, MARKS, CLASS v&agrave; NAME.</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n N, tổng số học sinh.</li>\n<li>D&ograve;ng thứ hai chứa t&ecirc;n của c&aacute;c cột theo thứ tự bất kỳ.</li>\n<li>N d&ograve;ng tiếp theo chứa số điểm, ID, t&ecirc;n v&agrave; lớp, với t&ecirc;n cột tương ứng.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<p>\\[0 \\le N \\leq 100 \\]</p>\n<p><span id=\"MathJax-Element-7-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra điểm trung b&igrave;nh của danh s&aacute;ch c&oacute; gi&aacute; trị ch&iacute;nh x&aacute;c tới 2 chữ số thập ph&acirc;n.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Trường hợp thử nghiệm 1</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>5\nID         MARKS      NAME       CLASS     \n1          97         Raymond    7         \n2          50         Steven     4         \n3          91         Adrian     9         \n4          72         Stewart    5         \n5          80         Peter      6    </code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>78.00</code></pre>\n<p><strong>Trường hợp thử nghiệm 2</strong></p>\n<pre class=\"language-markup\"><code>5\nMARKS      CLASS      NAME       ID        \n92         2          Calum      1         \n82         5          Scott      2         \n94         2          Jason      3         \n55         8          Glenn      4         \n82         2          Fergus     5</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>81.00</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/18e4cb22-db2a-413f-96f1-12ba962a55fb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903d"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "integers-come-in-all-sizes",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm việc với số nguyên lớn",
  "content": "<p>Số nguy&ecirc;n trong Python c&oacute; thể c&oacute; k&iacute;ch thước lớn được t&iacute;nh bằng số byte trong bộ nhớ m&aacute;y của bạn. Kh&ocirc;ng c&oacute; giới hạn về k&iacute;ch thước v&igrave; c&oacute;: $2^{31}-1$ (c ++ int) hoặc $2^{63}-1$ (C ++ long int). Như ch&uacute;ng ta đ&atilde; biết, kết quả của $a^{b} $ tăng rất nhanh khi tăng b. H&atilde;y l&agrave;m một số ph&eacute;p t&iacute;nh tr&ecirc;n số nguy&ecirc;n rất lớn.</p>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Đọc v&agrave;o bốn số a, b, c v&agrave; d v&agrave; in ra kết quả của $a^{b}+c^{d}$.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>C&aacute;c số nguy&ecirc;n a, b, c v&agrave; d lần lượt được cho tr&ecirc;n bốn d&ograve;ng ri&ecirc;ng biệt.</p>\n<p><strong>Điều kiện</strong><br /><span id=\"MathJax-Element-17-Frame\" class=\"MathJax_SVG\"></span></p>\n<ul>\n<li>$1 \\leq a \\leq 1000$</li>\n<li>$1 \\leq b \\leq 1000$</li>\n<li>$1 \\leq c \\leq 1000$</li>\n<li>$1 \\leq d \\leq 1000$</li>\n</ul>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>In ra kết quả của $a^{b}+c^{d}$ tr&ecirc;n một d&ograve;ng.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>9\n29\n7\n27</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4710194409608608369201743232</code></pre>\n<p>Lưu &yacute;: Kết quả n&agrave;y lớn hơn $2 ^{63}-1$. Do đ&oacute;, n&oacute; sẽ kh&ocirc;ng ph&ugrave; hợp với kiểu dữ liệu long long int trong C++ hoặc một số nguy&ecirc;n 64 bit.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78f9a07a-a083-4856-a269-8effceff1c90",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903e"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "power-mod-power",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm việc với hàm pow() trong Python",
  "content": "<p>Cho đến nay, ch&uacute;ng ta chỉ nghe n&oacute;i về ph&eacute;p t&iacute;nh số mũ trong Python. Số mũ trong Python c&oacute; thể được t&iacute;nh bằng c&aacute;ch sử dụng h&agrave;m lũy thừa được t&iacute;ch hợp sẵn. Ch&uacute;ng ta c&oacute; thể gọi h&agrave;m t&iacute;nh lũy thừa $a^{b}$ như sau:</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; pow(a,b)</code></pre>\n<p>Hoặc</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; a**b</code></pre>\n<p>Ch&uacute;ng ta cũng c&oacute; thể t&iacute;nh được $a^{b} \\; mod \\; m$ như sau:</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; pow(a,b,m)</code></pre>\n<p>Điều n&agrave;y rất hữu &iacute;ch trong c&aacute;c ph&eacute;p t&iacute;nh to&aacute;n m&agrave; bạn phải in ra kết quả % mod.</p>\n<p>Lưu &yacute;: Ở đ&acirc;y, a v&agrave; b c&oacute; thể l&agrave; c&aacute;c số thập ph&acirc;n hoặc số &acirc;m, nhưng nếu c&oacute; đối số thứ ba, b kh&ocirc;ng thể l&agrave; số &acirc;m.</p>\n<p>Lưu &yacute;: Python c&oacute; một m&ocirc;-đun math c&oacute; chứa h&agrave;m pow() ri&ecirc;ng. N&oacute; nhận v&agrave;o hai đối số v&agrave; trả về một số thập ph&acirc;n.</p>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp ba số nguy&ecirc;n: a, b v&agrave; m. H&atilde;y in ra hai d&ograve;ng. Tr&ecirc;n d&ograve;ng đầu ti&ecirc;n, in ra kết quả của pow(a, b). Tr&ecirc;n d&ograve;ng thứ hai, in ra kết quả của pow(a, b, m).</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>D&ograve;ng đầu ti&ecirc;n chứa a, d&ograve;ng thứ hai chứa b v&agrave; d&ograve;ng thứ ba chứa m.</p>\n<p><strong>Điều kiện</strong><br /><span id=\"MathJax-Element-13-Frame\" class=\"MathJax_SVG\"></span></p>\n<ul>\n<li>$1 \\leq a \\leq 10$<span id=\"MathJax-Element-14-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$1 \\leq b \\leq 10$</li>\n<li>$2 \\leq m \\leq 1000$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n4\n5</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>81\n1</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/872a16ce-d183-4f2c-9a08-a74f3a8adf74",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef903f"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "time-delta",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính độ chênh lệch giữa các mốc thời gian",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Khi người d&ugrave;ng cập nhật tr&ecirc;n mạng x&atilde; hội, chẳng hạn như URL, h&igrave;nh ảnh, cập nhật trạng th&aacute;i,..., những người d&ugrave;ng kh&aacute;c trong mạng c&oacute; thể xem b&agrave;i đăng mới n&agrave;y tr&ecirc;n bảng tin tức. Người d&ugrave;ng cũng c&oacute; thể xem ch&iacute;nh x&aacute;c thời điểm b&agrave;i đăng được xuất bản, tức l&agrave; c&aacute;ch đ&acirc;y bao nhi&ecirc;u giờ, ph&uacute;t hoặc gi&acirc;y. V&igrave; đ&ocirc;i khi c&aacute;c b&agrave;i đăng được xuất bản v&agrave; xem ở c&aacute;c m&uacute;i giờ kh&aacute;c nhau, điều n&agrave;y c&oacute; thể g&acirc;y nhầm lẫn. Bạn được cung cấp hai mốc thời gian của một b&agrave;i đăng m&agrave; người d&ugrave;ng c&oacute; thể thấy tr&ecirc;n bảng tin tức ở định dạng sau:</p>\n<pre class=\"language-markup\"><code>Day dd Mon yyyy hh:mm:ss +xxxx</code></pre>\n<p>Ở đ&acirc;y +xxxx biểu diễn cho m&uacute;i giờ. Nhiệm vụ của bạn l&agrave; in ra độ ch&ecirc;nh lệch tuyệt đối (t&iacute;nh bằng gi&acirc;y) giữa 2 mốc thời gian.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa T, số lượng trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp thử nghiệm chứa 2 d&ograve;ng, biểu diễn cho mốc thời gian $t_{1}$ v&agrave; mốc thời gian $t_{2}$.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>Đầu v&agrave;o chỉ chứa c&aacute;c mốc thời gian hợp lệ</li>\n<li><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>Số năm $year \\leq 3000$</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra độ ch&ecirc;nh lệch tuyệt đối giữa $(t_{1}-t_{2})$ được t&iacute;nh bằng gi&acirc;y.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>2\nSun 10 May 2015 13:54:36 -0700\nSun 10 May 2015 13:54:36 -0000\nSat 02 May 2015 19:54:36 +0530\nFri 01 May 2015 13:54:36 -0000</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>25200\n88200</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Trong lần truy vấn đầu ti&ecirc;n, khi ch&uacute;ng ta so s&aacute;nh thời gian theo UTC cho cả hai mốc thời gian, ch&uacute;ng ta thấy độ ch&ecirc;nh lệch l&agrave; 7 giờ, tương đương với $7 x 3600=25200$ gi&acirc;y.</p>\n<p>Tương tự, trong lần truy vấn thứ hai, độ ch&ecirc;nh lệch thời gian l&agrave; 5 giờ 30 ph&uacute;t, nhưng v&igrave; điều chỉnh m&uacute;i giờ n&ecirc;n độ ch&ecirc;nh lệch l&agrave; 1 ng&agrave;y 30 ph&uacute;t. Hoặc $24 x 3600 + 30 x 60 = 88200$</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0844ccbf-a7b4-480b-80a0-5311e5bc6553",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9040"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "any-or-all",
  "tags": [],
  "level": "BEGINNER",
  "title": "Any hoặc All",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2><strong>any()</strong></h2>\n<p>Biểu thức n&agrave;y sẽ trả về <code>True</code> nếu bất kỳ phần tử n&agrave;o trong tập hợp c&oacute; gi&aacute; trị l&agrave; true. Nếu tập hợp rỗng, n&oacute; sẽ trả về False.</p>\n<p>V&iacute; dụ:</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; any([1&gt;0,1==0,1&lt;0]) \nTrue \n&gt;&gt;&gt; any([1&lt;0,2&lt;1,3&lt;2]) \nFalse</code></pre>\n<h2><strong>all()</strong></h2>\n<p>Biểu thức n&agrave;y sẽ trả về <code>True</code> nếu tất cả c&aacute;c phần tử trong tập hợp c&oacute; gi&aacute; trị l&agrave; true. Nếu tập hợp rỗng, n&oacute; sẽ trả về True.</p>\n<p>V&iacute; dụ:</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; all(['a'&lt;'b','b'&lt;'c'])\nTrue\n&gt;&gt;&gt; all(['a'&lt;'b','c'&lt;'b'])\nFalse</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cho trước một danh s&aacute;ch c&aacute;c số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch. Nếu tất cả c&aacute;c số nguy&ecirc;n đều dương, bạn cần kiểm tra xem c&oacute; số nguy&ecirc;n n&agrave;o l&agrave; số nguy&ecirc;n palindromic (l&agrave; số nguy&ecirc;n được viết xu&ocirc;i hay ngược sẽ đều bằng nhau) hay kh&ocirc;ng.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n N. N l&agrave; tổng c&aacute;c số nguy&ecirc;n c&oacute; trong danh s&aacute;ch. D&ograve;ng thứ hai chứa danh s&aacute;ch N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p><strong>Điều kiện</strong></p>\n<p>\\[ 0 \\le N \\le 100 \\]</p>\n<p><span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra True nếu tất cả c&aacute;c điều kiện của vấn đề được thỏa m&atilde;n. Nếu kh&ocirc;ng, in ra False.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ:</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>5\n12 9 61 5 14</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>True</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">Bạn c&oacute; thể giải quyết thử th&aacute;ch n&agrave;y trong 3 d&ograve;ng m&atilde; hoặc &iacute;t hơn kh&ocirc;ng? Sẽ kh&ocirc;ng c&oacute; lỗi n&agrave;o cho c&aacute;c lời giải đ&uacute;ng nhưng c&oacute; nhiều hơn 3 d&ograve;ng.</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/edf9ca30-bf83-49a3-8f4b-795aa539daae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9041"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "validating-uid",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra ID của nhân viên",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>C&ocirc;ng ty ABCXYZ c&oacute; tới 100 nh&acirc;n vi&ecirc;n. C&ocirc;ng ty quyết định tạo một số nhận dạng duy nhất (UID) cho mỗi nh&acirc;n vi&ecirc;n của m&igrave;nh. C&ocirc;ng ty đ&atilde; giao cho bạn nhiệm vụ x&aacute;c thực tất cả c&aacute;c UID được tạo ngẫu nhi&ecirc;n. UID hợp lệ phải tu&acirc;n theo c&aacute;c quy tắc dưới đ&acirc;y:</p>\n<ul>\n<li>N&oacute; phải chứa &iacute;t nhất 2 k&yacute; tự viết hoa trong bảng chữ c&aacute;i tiếng Anh.</li>\n<li>N&oacute; phải chứa &iacute;t nhất 3 chữ số từ 0 đến 9.</li>\n<li>N&oacute; chỉ n&ecirc;n chứa c&aacute;c k&yacute; tự chữ v&agrave; số (a - z, A - Z &amp; 0 - 9).</li>\n<li>Kh&ocirc;ng c&oacute; k&yacute; tự lặp lại</li>\n<li>Phải c&oacute; ch&iacute;nh x&aacute;c 10 k&yacute; tự.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ol>\n<li>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n T, số lượng c&aacute;c trường hợp thử nghiệm.</li>\n<li>T d&ograve;ng tiếp theo chứa UID của nh&acirc;n vi&ecirc;n.</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra 'Valid' nếu UID hợp lệ. Nếu kh&ocirc;ng, h&atilde;y in ra 'Not valid', tr&ecirc;n c&aacute;c d&ograve;ng ri&ecirc;ng biệt. Kh&ocirc;ng in ra dấu ngoặc k&eacute;p.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>2\nB1CD102354\nB1CDEF2354</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>Invalid\nValid</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<ol>\n<li>B1CD102354: 1 lặp lại &rarr; Kh&ocirc;ng hợp lệ</li>\n<li>B1CDEF2354: Hợp lệ</li>\n</ol>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a86edaca-12ef-456c-aebe-96bcee1de5d2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9042"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "concatenate",
  "tags": [],
  "level": "BEGINNER",
  "title": "Nối 2 ma trận",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>concatenate</h2>\n<p>Hai hoặc nhiều mảng c&oacute; thể được nối với nhau bằng c&aacute;ch sử dụng h&agrave;m concatenate với một tập hợp tuple chứa c&aacute;c mảng cần được nối.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>import numpy\n\narray_1 = numpy.array([1,2,3])\narray_2 = numpy.array([4,5,6])\narray_3 = numpy.array([7,8,9])\n\nprint(numpy.concatenate((array_1, array_2, array_3)))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[1 2 3 4 5 6 7 8 9]</code></pre>\n<p>Nếu một mảng c&oacute; nhiều hơn một chiều, c&oacute; thể chỉ định chiều m&agrave; nhiều mảng được nối với nhau. Theo mặc định, n&oacute; theo chiều đầu ti&ecirc;n.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code> import numpy\n\narray_1 = numpy.array([[1,2,3],[0,0,0]])\narray_2 = numpy.array([[0,0,0],[7,8,9]])\n\nprint(numpy.concatenate((array_1, array_2), axis = 1))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[[1 2 3 0 0 0] [0 0 0 7 8 9]]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp hai mảng số nguy&ecirc;n c&oacute; k&iacute;ch thước NxP v&agrave; MxP (N &amp; M l&agrave; h&agrave;ng v&agrave; P l&agrave; cột). Nhiệm vụ của bạn l&agrave; nối c&aacute;c mảng theo chiều 0.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa c&aacute;c số nguy&ecirc;n N, M v&agrave; P, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>N d&ograve;ng tiếp theo chứa c&aacute;c phần tử P cột được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>Sau đ&oacute;, M d&ograve;ng tiếp theo chứa c&aacute;c phần tử P cột được ph&acirc;n c&aacute;ch bằng dấu c&aacute;ch.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra mảng nối c&oacute; k&iacute;ch thước (N + M) xP.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>4 3 2\n1 2\n1 2 \n1 2\n1 2\n3 4\n3 4\n3 4</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>[[1 2]\n [1 2]\n [1 2]\n [1 2]\n [3 4]\n [3 4]\n [3 4]]</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cafce502-e70e-472c-aac7-6c9fac30e395",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9043"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "zeros-and-ones",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tạo mảng NumPy bằng công cụ zeros và ones",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2><strong> zeros</strong></h2>\n<p>C&ocirc;ng cụ zeros trả về một mảng mới c&oacute; chiều v&agrave; kiểu dữ liệu đ&atilde; cho với c&aacute;c gi&aacute; trị số 0.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>import numpy\nprint(numpy.zeros((1,2)))\nprint(numpy.zeros((1,2), dtype = numpy.int))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[[ 0.  0.]]\n[[0 0]]</code></pre>\n<h2><strong> ones</strong></h2>\n<p>C&ocirc;ng cụ ones trả về một mảng mới c&oacute; chiều v&agrave; kiểu dữ liệu đ&atilde; cho với c&aacute;c gi&aacute; trị số 1.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>import numpy\n\nprint(numpy.ones((1,2)))\nprint(numpy.ones((1,2), dtype = numpy.int))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[[1 1]]\n[[ 1.  1.]]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp số chiều của mảng dưới dạng c&aacute;c số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, mỗi số nguy&ecirc;n đại diện cho k&iacute;ch thước của c&aacute;c chiều kh&aacute;c nhau, nhiệm vụ của bạn l&agrave; in ra một mảng c&oacute; h&igrave;nh dạng v&agrave; kiểu số nguy&ecirc;n đ&atilde; cho bằng c&aacute;ch sử dụng c&aacute;c c&ocirc;ng cụ <code>numpy.zeros</code> v&agrave; <code>numpy.ones</code>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng duy nhất chứa c&aacute;c số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n<p>Số nguy&ecirc;n integer với điều kiện $1 \\leq integer \\leq 3 $</p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>Đầu ti&ecirc;n, in ra mảng bằng c&ocirc;ng cụ numpy.zeros v&agrave; sau đ&oacute; in ra mảng bằng c&ocirc;ng cụ numpy.ones.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-python\"><code>3 3 3</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>[[[0 0 0]\n  [0 0 0]\n  [0 0 0]]\n\n [[0 0 0]\n  [0 0 0]\n  [0 0 0]]\n\n [[0 0 0]\n  [0 0 0]\n  [0 0 0]]]\n[[[1 1 1]\n  [1 1 1]\n  [1 1 1]]\n\n [[1 1 1]\n  [1 1 1]\n  [1 1 1]]\n\n [[1 1 1]\n  [1 1 1]\n  [1 1 1]]]</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>In ra mảng được x&acirc;y dựng bằng c&ocirc;ng cụ numpy.zeros v&agrave; numpy.ones.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e657e533-fceb-4f70-8028-7961c4586cd1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9044"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "shape-and-reshape",
  "tags": [],
  "level": "BEGINNER",
  "title": "Shape và Reshape trong mảng NumPy",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>shape</h2>\n<p>C&ocirc;ng cụ shape cung cấp một tuple chứa c&aacute;c chiều của mảng v&agrave; c&oacute; thể được sử dụng để thay đổi k&iacute;ch thước của một mảng.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>import numpy\n\nmy__1D_array = numpy.array([1, 2, 3, 4, 5])\nprint(my_1D_array.shape)\n\nmy__2D_array = numpy.array([[1, 2],[3, 4],[6,5]])\nprint(my_2D_array.shape)</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<pre class=\"language-python\"><code>import numpy\n\nchange_array = numpy.array([1,2,3,4,5,6])\nchange_array.shape = (3, 2)\nprint(change_array)</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[[1 2]\n[3 4]\n[5 6]]</code></pre>\n<h2>reshape</h2>\n<p>C&ocirc;ng cụ reshape cung cấp một h&igrave;nh dạng mới cho một mảng m&agrave; kh&ocirc;ng thay đổi dữ liệu của n&oacute;. N&oacute; tạo ra một mảng mới v&agrave; kh&ocirc;ng sửa đổi mảng ban đầu.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>import numpy\n\nmy_array = numpy.array([1,2,3,4,5,6])\nprint(numpy.reshape(my_array,(3,2)))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[[1 2]\n[3 4]\n[5 6]]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một danh s&aacute;ch ch&iacute;n số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch. Nhiệm vụ của bạn l&agrave; chuyển danh s&aacute;ch n&agrave;y th&agrave;nh mảng NumPy 3x3.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng dữ liệu đầu v&agrave;o chứa 9 số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra mảng <em>NumPy</em> 3x3.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>1 2 3 4 5 6 7 8 9</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>[[1 2 3]\n [4 5 6]\n [7 8 9]]</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6ac272cd-1958-4467-9eba-6610825f6077",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9045"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "polynomials",
  "tags": [],
  "level": "BEGINNER",
  "title": "Làm việc với đa thức trong Python",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<h2>Poly</h2>\n<p>C&ocirc;ng cụ poly trả về c&aacute;c hệ số của một đa thức với d&atilde;y gi&aacute; trị đ&atilde; cho.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>print(numpy.poly([-1, 1, 1, 10]))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[1 -11   9  11 -10]</code></pre>\n<h2>roots</h2>\n<p>C&ocirc;ng cụ root trả về nghiệm của một đa thức với c&aacute;c hệ số đ&atilde; cho.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>print(numpy.roots([1, 0, -1]))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[-1.  1.]</code></pre>\n<h2>polyint</h2>\n<p>C&ocirc;ng cụ polyint trả về một nguy&ecirc;n h&agrave;m của một đa thức.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>print(numpy.polyint([1, 1, 1]))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[0.33333333  0.5         1.          0.       ]</code></pre>\n<h2>polyder</h2>\n<p>C&ocirc;ng cụ polyder trả về đạo h&agrave;m của một đa thức.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>print(numpy.polyder([1, 1, 1, 1]))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[3 2 1]</code></pre>\n<h2>polyval</h2>\n<p>C&ocirc;ng cụ polyval đ&aacute;nh gi&aacute; đa thức ở gi&aacute; trị cụ thể.</p>\n<pre class=\"language-python\"><code>print(numpy.polyval([1, -2, 0, 2], 4))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>34</code></pre>\n<h2>polyfit</h2>\n<p>C&ocirc;ng cụ polyfit tạo một đa thức với bậc nhất định nhằm thỏa m&atilde;n một tập dữ liệu đ&atilde; cho bằng c&aacute;ch sử dụng phương ph&aacute;p b&igrave;nh phương nhỏ nhất.</p>\n<pre class=\"language-python\"><code>print(numpy.polyfit([0,1,-1, 2, -2], [0,1,1, 4, 4], 2))</code></pre>\n<p>Kết quả:</p>\n<pre class=\"language-markup\"><code>[1.00000000e+00   0.00000000e+00  -3.97205465e-16]</code></pre>\n<p>&nbsp;</p>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp c&aacute;c hệ số của một đa thức P. Nhiệm vụ của bạn l&agrave; t&igrave;m gi&aacute; trị của P tại điểm x.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ol>\n<li>D&ograve;ng đầu ti&ecirc;n chứa gi&aacute; trị được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của c&aacute;c hệ số trong P.</li>\n<li>D&ograve;ng thứ hai chứa gi&aacute; trị của x.</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra gi&aacute; trị</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>1.1 2 3\n0</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>3.0</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/14340843-f9d3-434f-a42b-bb1bc5033eec",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9046"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "string-split-and-join",
  "tags": [],
  "level": "BEGINNER",
  "title": "Nối chuỗi và tách chuỗi",
  "content": "<p>Trong Python, một chuỗi k&yacute; tự c&oacute; thể được chia nhỏ dựa tr&ecirc;n một dấu ph&acirc;n c&aacute;ch.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; a = \"this is a string\"\n&gt;&gt;&gt; a = a.split(\" \")\n&gt;&gt;&gt; print a\n['this', 'is', 'a', 'string']</code></pre>\n<p>Thực hiện nối chuỗi cũng kh&aacute; đơn giản như sau:</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; a = \"-\".join(a)\n&gt;&gt;&gt; print a\nthis-is-a-string</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một chuỗi k&yacute; tự. H&atilde;y t&aacute;ch chuỗi dựa tr&ecirc;n dấu ph&acirc;n c&aacute;ch l&agrave; dấu c&aacute;ch v&agrave; nối lại chuỗi k&yacute; tự bằng dấu gạch ngang.</p>\n<p><strong>M&ocirc; tả h&agrave;m</strong></p>\n<p>H&atilde;y viết h&agrave;m <em>split_and_join</em> với c&aacute;c tham số sau.</p>\n<ul>\n<li>string line: một chuỗi c&aacute;c từ được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch</li>\n</ul>\n<p><strong>Trả về</strong></p>\n<ul>\n<li>Chuỗi k&yacute; tự</li>\n</ul>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Một d&ograve;ng chứa một chuỗi bao gồm c&aacute;c từ được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-python\"><code>this is a string</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-python\"><code>this-is-a-string</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/de8a7c93-4cb0-4b35-a302-31c704cac973",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9047"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "introduction-to-sets",
  "tags": [],
  "level": "BEGINNER",
  "title": "Luyện tập với Set",
  "content": "<section class=\"problem-statement split\">\n<div class=\"ui-tabs-wrap\">\n<div id=\"tab-3-content-undefined\" class=\"tab-list-content\" tabindex=\"0\" role=\"tabpanel\" aria-labelledby=\"tab-3-item-undefined\">\n<div class=\"theme-m hr_tour-problem-statement problem-statement have-external-links\">\n<div class=\"content-text challenge-text mlB hackdown-container theme-m\">\n<div class=\"challenge-body-html\">\n<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Set l&agrave; một tập hợp c&aacute;c phần tử kh&ocirc;ng c&oacute; thứ tự v&agrave; kh&ocirc;ng c&oacute; c&aacute;c phần tử tr&ugrave;ng lặp. Khi được in, duyệt hoặc chuyển đổi th&agrave;nh một chuỗi, c&aacute;c phần tử của n&oacute; sẽ xuất hiện theo một thứ tự t&ugrave;y &yacute;.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; print set()\nset([])\n&gt;&gt;&gt; print set([1,2,1,2,3,4,5,6,0,9,12,22,3])\nset([0, 1, 2, 3, 4, 5, 6, 9, 12, 22])\n&gt;&gt;&gt; print set((1,2,3,4,5,5))\nset([1, 2, 3, 4, 5])</code></pre>\n<p>Về cơ bản, Set được sử dụng để kiểm tra th&agrave;nh vi&ecirc;n v&agrave; loại bỏ c&aacute;c phần tử tr&ugrave;ng lặp.</p>\n<p><strong>Nhiệm vụ</strong></p>\n<p>B&acirc;y giờ, ch&uacute;ng ta h&atilde;y sử dụng kiến thức của về Set v&agrave; gi&uacute;p đỡ Mickey. C&ocirc; Gabriel Williams l&agrave; gi&aacute;o sư thực vật học tại trường Cao đẳng. Một ng&agrave;y nọ, c&ocirc; y&ecirc;u cầu học sinh Mickey của m&igrave;nh t&iacute;nh gi&aacute; trị trung b&igrave;nh của tất cả c&aacute;c c&acirc;y c&oacute; chiều cao kh&aacute;c nhau trong nh&agrave; k&iacute;nh của c&ocirc;.</p>\n<p>C&ocirc;ng thức sử dụng:</p>\n<div class=\"MathJax_SVG_Display\"><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></div>\n<p>\\[ Avg = \\frac{Heights}{Total Number of Heights} \\]</p>\n<p><strong>M&ocirc; tả</strong></p>\n<p>Ho&agrave;n th&agrave;nh h&agrave;m trung b&igrave;nh trong tr&igrave;nh chỉnh sửa. H&agrave;m trung b&igrave;nh c&oacute; c&aacute;c th&ocirc;ng số sau:</p>\n<ul>\n<li><em>int arr:</em> mảng chứa c&aacute;c số nguy&ecirc;n</li>\n</ul>\n<p><strong>Trả về</strong></p>\n<ul>\n<li><em>float:</em> gi&aacute; trị thập ph&acirc;n l&agrave;m tr&ograve;n đến số 3 sau dấu phẩy</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<ol>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n, N, k&iacute;ch thước của arr.</li>\n<li>D&ograve;ng thứ hai chứa N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, arr[i].</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n<p>\\[0 \\le N \\leq 100 \\]</p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>STDIN                                       Function\n-----                                       --------\n10                                          arr[] size N = 10\n161 182 161 154 176 170 167 171 170 174     arr = [161, 181, ..., 174]</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>169.375</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Ở đ&acirc;y, set ([154,161,167,170,171,174,176,182]) l&agrave; tập chứa c&aacute;c chiều cao ri&ecirc;ng biệt. Sử dụng c&aacute;c h&agrave;m sum() v&agrave; len(), ch&uacute;ng ta c&oacute; thể t&iacute;nh gi&aacute; trị trung b&igrave;nh. $Avg = \\frac{1355}{8} = 169.375$</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</section>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9a20b3ca-f850-41eb-996e-9947f645305f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "introduction_to_sets.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9048"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "arrays",
  "tags": [],
  "level": "BEGINNER",
  "title": "Luyệt tập với mảng",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>G&oacute;i NumPy (Numeric Python) gi&uacute;p ch&uacute;ng ta thao t&aacute;c với c&aacute;c mảng v&agrave; ma trận lớn của dữ liệu số. Để sử dụng m&ocirc;-đun NumPy, ch&uacute;ng ta cần nhập n&oacute; bằng c&aacute;ch sử dụng c&acirc;u lệnh sau:</p>\n<pre class=\"language-python\"><code>import numpy</code></pre>\n<p>Mảng NumPy l&agrave; một ma trận bao gồm c&aacute;c gi&aacute; trị. Ch&uacute;ng tương tự như danh s&aacute;ch, ngoại trừ việc mọi phần tử của mảng phải c&oacute; c&ugrave;ng kiểu dữ liệu.</p>\n<pre class=\"language-python\"><code>import numpy\na = numpy.array([1,2,3,4,5])\nprint a[1]\nb = numpy.array([1,2,3,4,5],float)\nprint b[1]</code></pre>\n<p>Trong v&iacute; dụ tr&ecirc;n, numpy.array() được sử dụng để chuyển đổi một danh s&aacute;ch th&agrave;nh một mảng NumPy. Đối số thứ hai (float) c&oacute; thể được sử dụng để thiết lập kiểu dữ liệu của c&aacute;c phần tử trong mảng.</p>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một danh s&aacute;ch c&aacute;c số được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch. Nhiệm vụ của bạn l&agrave; in ra một mảng NumPy đảo ngược với kiểu dữ liệu của c&aacute;c phần tử l&agrave; float.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Một d&ograve;ng đầu v&agrave;o chứa c&aacute;c số được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra mảng NumPy đảo ngược với kiểu dữ liệu l&agrave; float.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>1 2 3 4 -8 -10</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>[-10.  -8.   4.   3.   2.   1.]</code></pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e614d5c8-4c1d-4675-b9a7-c24f1459355e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9049"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "ginorts",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp chuỗi ký tự theo một thứ tự nhất định",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Bạn được cho trước một chuỗi k&yacute; tự S. Nhiệm vụ của bạn l&agrave; h&atilde;y sắp xếp chuỗi k&yacute; tự S theo thứ tự sau:</p>\n<ul>\n<li>C&aacute;c k&yacute; tự in thường sẽ nằm trước c&aacute;c k&yacute; tự in hoa.</li>\n<li>C&aacute;c k&yacute; tự in hoa nằm trước c&aacute;c chữ số.</li>\n<li>C&aacute;c chữ số lẻ nằm trước c&aacute;c chữ số chẵn.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n chứa chuỗi k&yacute; tự S.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p>\\[0 \\le S \\le 1000 \\]<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra chuỗi k&yacute; tự đ&atilde; được sắp xếp</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>Sorting1234</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>V&iacute; dụ đầu ra:</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>ginortS1324</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6babcb0e-303a-49f8-a76b-a1ba5e8b9f49",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904a"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "enter-your-code-here-read-input-from-stdin-print-output-to-stdout",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra các tem của các quốc gia khác nhau",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Nếu ch&uacute;ng ta muốn th&ecirc;m một phần tử v&agrave;o một tập hợp Set hiện c&oacute;, ch&uacute;ng ta c&oacute; thể sử dụng phương thức .add(). N&oacute; th&ecirc;m phần tử v&agrave;o tập hợp v&agrave; trả về 'None'.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; s = set('HackerRank')\n&gt;&gt;&gt; s.add('H')\n&gt;&gt;&gt; print(s)\nset(['a', 'c', 'e', 'H', 'k', 'n', 'r', 'R'])\n&gt;&gt;&gt; print(s.add('HackerRank'))\nNone\n&gt;&gt;&gt; print(s)\nset(['a', 'c', 'e', 'HackerRank', 'H', 'k', 'n', 'r', 'R'])</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>&Aacute;p dụng kiến thức của bạn về thao t&aacute;c .add() để gi&uacute;p bạn của bạn Rupal. Rupal c&oacute; một bộ sưu tập tem quốc gia khổng lồ. C&ocirc; quyết định đếm tổng số tem quốc gia kh&aacute;c nhau trong bộ sưu tập của m&igrave;nh. C&ocirc; ấy đ&atilde; y&ecirc;u cầu sự gi&uacute;p đỡ của bạn. Bạn chọn từng con tem một từ chồng N tem c&aacute;c quốc gia.</p>\n<p>T&igrave;m tổng số tem quốc gia kh&aacute;c nhau.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n N, tổng số c&aacute;c tem của c&aacute;c quốc gia. N d&ograve;ng tiếp theo ghi t&ecirc;n quốc gia của chiếc tem.</p>\n<p><strong>Điều kiện</strong></p>\n<p>\\[ 0 \\le N \\le 1000 \\]</p>\n<p><span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra tổng số c&aacute;c tem quốc gia kh&aacute;c nhau tr&ecirc;n một d&ograve;ng.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>7\nUK\nChina\nUSA\nFrance\nNew Zealand\nUK\nFrance</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>5</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Anh (UK) v&agrave; Ph&aacute;p (France) lặp lại hai lần. Do đ&oacute;, tổng số tem quốc gia ri&ecirc;ng biệt l&agrave; 5.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f4456981-07cc-4ca5-ad0e-ee0e2263196a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904b"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "itertools-permutations",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra các hoán vị của chuỗi ký tự",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>This tool returns successive r<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span> length permutations of elements in an iterable. If r<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;is not specified or is&nbsp;<code>None</code>, then r<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span> defaults to the length of the iterable, and all possible full length permutations are generated. Permutations are printed in a lexicographic sorted order. So, if the input iterable is sorted, the permutation tuples will be produced in a sorted order.</p>\n<p>C&ocirc;ng cụ n&agrave;y trả về c&aacute;c ho&aacute;n vị độ d&agrave;i r li&ecirc;n tiếp của c&aacute;c phần tử trong một đối tượng c&oacute; thể lặp lại. Nếu r kh&ocirc;ng được chỉ định hoặc l&agrave; None, th&igrave; r mặc định l&agrave; độ d&agrave;i của đối tượng c&oacute; thể lặp lại v&agrave; tất cả c&aacute;c ho&aacute;n vị c&oacute; độ d&agrave;i đầy đủ c&oacute; thể được tạo ra. C&aacute;c ho&aacute;n vị được in theo thứ tự được sắp xếp từ điển. V&igrave; vậy, nếu đầu v&agrave;o được sắp xếp, c&aacute;c bộ ho&aacute;n vị sẽ được tạo ra theo thứ tự được sắp xếp.</p>\n<p><strong>Đoạn code mẫu</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; from itertools import permutations\n&gt;&gt;&gt; print permutations(['1','2','3'])\n&lt;itertools.permutations object at 0x02A45210&gt;\n&gt;&gt;&gt; \n&gt;&gt;&gt; print list(permutations(['1','2','3']))\n[('1', '2', '3'), ('1', '3', '2'), ('2', '1', '3'), ('2', '3', '1'), ('3', '1', '2'), ('3', '2', '1')]\n&gt;&gt;&gt; \n&gt;&gt;&gt; print list(permutations(['1','2','3'],2))\n[('1', '2'), ('1', '3'), ('2', '1'), ('2', '3'), ('3', '1'), ('3', '2')]\n&gt;&gt;&gt;\n&gt;&gt;&gt; print list(permutations('abc',3))\n[('a', 'b', 'c'), ('a', 'c', 'b'), ('b', 'a', 'c'), ('b', 'c', 'a'), ('c', 'a', 'b'), ('c', 'b', 'a')]</code></pre>\n<p><strong>Nhiệm vụ</strong></p>\n<p>Bạn được cung cấp một chuỗi k&yacute; tự S. Nhiệm vụ của bạn l&agrave; in ra tất cả c&aacute;c ho&aacute;n vị c&oacute; thể c&oacute; k&iacute;ch thước k của chuỗi k&yacute; tự theo thứ tự được sắp xếp từ điển.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng duy nhất chứa chuỗi k&yacute; tự S v&agrave; gi&aacute; trị nguy&ecirc;n k được ph&acirc;n c&aacute;ch bởi khoảng trắng.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li><span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>$0 \\le k \\leq len(S)$</li>\n<li>Chuỗi k&yacute; tự chỉ chứa c&aacute;c k&yacute; tự IN HOA.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra c&aacute;c ho&aacute;n vị của chuỗi S tr&ecirc;n c&aacute;c d&ograve;ng ri&ecirc;ng biệt.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>HACK 2</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>AC\nAH\nAK\nCA\nCH\nCK\nHA\nHC\nHK\nKA\nKC\nKH</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Tất cả c&aacute;c ho&aacute;n vị k&iacute;ch thước l&agrave; 2 c&oacute; thể c&oacute; của chuỗi \"HACK\" được in ra theo thứ tự được sắp xếp từ điển.</p>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/be52c485-ee43-448c-8be5-3ca3809be9db",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904c"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "itertools-product",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra phép nhân của 2 danh sách",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>C&ocirc;ng cụ n&agrave;y t&iacute;nh to&aacute;n t&iacute;ch lũy thừa của c&aacute;c th&agrave;nh phần đầu v&agrave;o. N&oacute; tương đương với c&aacute;c v&ograve;ng lặp for lồng nhau. V&iacute; dụ: product (A, B) trả về (x, y) đối với x trong A đối với y trong B.</p>\n<p><strong>Đoạn code mẫu</strong></p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; from itertools import product\n&gt;&gt;&gt;\n&gt;&gt;&gt; print list(product([1,2,3],repeat = 2))\n[(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]\n&gt;&gt;&gt;\n&gt;&gt;&gt; print list(product([1,2,3],[3,4]))\n[(1, 3), (1, 4), (2, 3), (2, 4), (3, 3), (3, 4)]\n&gt;&gt;&gt;\n&gt;&gt;&gt; A = [[1,2,3],[3,4,5]]\n&gt;&gt;&gt; print list(product(*A))\n[(1, 3), (1, 4), (1, 5), (2, 3), (2, 4), (2, 5), (3, 3), (3, 4), (3, 5)]\n&gt;&gt;&gt;\n&gt;&gt;&gt; B = [[1,2,3],[3,4,5],[7,8]]\n&gt;&gt;&gt; print list(product(*B))\n[(1, 3, 7), (1, 3, 8), (1, 4, 7), (1, 4, 8), (1, 5, 7), (1, 5, 8), (2, 3, 7), (2, 3, 8), (2, 4, 7), (2, 4, 8), (2, 5, 7), (2, 5, 8), (3, 3, 7), (3, 3, 8), (3, 4, 7), (3, 4, 8), (3, 5, 7), (3, 5, 8)]</code></pre>\n<p>Cho trước hai danh s&aacute;ch A v&agrave; B. Nhiệm vụ của bạn l&agrave; t&iacute;nh ph&eacute;p nh&acirc;n giữa A v&agrave; B.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-python\"><code>A = [1, 2]\nB = [3, 4]\n\nAxB = [(1, 3), (1, 4), (2, 3), (2, 4)]</code></pre>\n<p>Lưu &yacute;: A v&agrave; B l&agrave; danh s&aacute;ch đ&atilde; được sắp xếp v&agrave; c&aacute;c gi&aacute; trị của ph&eacute;p nh&acirc;n phải được in ra theo thứ tự được sắp xếp.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n chứa c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của danh s&aacute;ch A. D&ograve;ng thứ hai chứa c&aacute;c phần tử được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của danh s&aacute;ch B.</p>\n<p>Cả hai danh s&aacute;ch kh&ocirc;ng c&oacute; phần tử số nguy&ecirc;n tr&ugrave;ng lặp.</p>\n<p><strong>Điều kiện</strong></p>\n<ol>\n<li><span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span>$0 \\le A \\le 30$<span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$0 \\le B \\le 30$</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra c&aacute;c bộ gi&aacute; trị được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch của ph&eacute;p nh&acirc;n.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>1 2\n3 4</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>(1, 3) (1, 4) (2, 3) (2, 4)</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1c31c7bb-e937-4ee9-95b2-54c1065e2e9c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904d"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "capitalize",
  "tags": [],
  "level": "BEGINNER",
  "title": "In hoa chữ cái đầu",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Bạn h&atilde;y đảm bảo rằng họ v&agrave; t&ecirc;n của mọi người bắt đầu bằng chữ in hoa trong hộ chiếu của họ. V&iacute; dụ, alison heck phải được viết hoa ch&iacute;nh x&aacute;c l&agrave; Alison Heck.</p>\n<p><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n<p>Cho trước một c&aacute;i t&ecirc;n đầy đủ, nhiệm vụ của bạn l&agrave; viết hoa t&ecirc;n một c&aacute;ch th&iacute;ch hợp.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>Một d&ograve;ng dữ liệu đầu v&agrave;o c&oacute; chứa t&ecirc;n đầy đủ, S.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$0 \\le len(S) \\le 100$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>Chuỗi k&yacute; tự bao gồm c&aacute;c k&yacute; tự chữ v&agrave; số v&agrave; khoảng trắng.</li>\n</ul>\n<p>Lưu &yacute;: Trong một từ chỉ viết hoa k&yacute; tự đầu ti&ecirc;n. V&iacute; dụ 12abc khi viết hoa vẫn l&agrave; 12abc.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Định dạng đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra chuỗi viết hoa chữ c&aacute;i đầu, S.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-python\"><code>chris alan</code></pre>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<pre class=\"language-markup\"><code>Chris Alan</code></pre>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1f52aa38-79ef-45ec-aec8-b428a1b40451",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904e"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "finding-the-percentage",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra số điểm của sinh viên",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Đoạn m&atilde; được cung cấp sẽ được đọc v&agrave;o một từ điển chứa c&aacute;c cặp kh&oacute;a v&agrave; gi&aacute; trị chứa t&ecirc;n: [số điểm] cho danh s&aacute;ch học sinh. In ra gi&aacute; trị trung b&igrave;nh của mảng chứa điểm cho t&ecirc;n học sinh được cung cấp, hiển thị 2 gi&aacute; trị số sau phần thập ph&acirc;n.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong><br /><span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></p>\n<p>Cặp kh&oacute;a v&agrave; gi&aacute; trị bao gồm:<br /><span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></p>\n<ul>\n<li>'alpha': [20,30,40]<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span><span id=\"MathJax-Element-4-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>'beta': [30,50,70]</li>\n<li>query_name = 'beta'</li>\n</ul>\n<p><strong>query_name</strong> l&agrave; 'beta'. Số điểm trung b&igrave;nh của beta l&agrave; (30 + 50 + 70)/3 = 50.0<span id=\"MathJax-Element-5-Frame\" class=\"MathJax_SVG\"></span>.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_title\">\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>The first line contains the integer n<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span>, the number of students' records. The next n<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span>&nbsp;lines contain the names and marks obtained by a student, each value separated by a space. The final line contains&nbsp;<strong>query_name</strong>, the name of a student to query.</p>\n<p>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n n, số lượng hồ sơ của học sinh. n d&ograve;ng tiếp theo chứa t&ecirc;n v&agrave; điểm của một học sinh, mỗi gi&aacute; trị c&aacute;ch nhau một khoảng trắng. D&ograve;ng cuối c&ugrave;ng chứa query_name, t&ecirc;n của một học sinh cần truy vấn.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<ul>\n<li>$2 \\leq n \\leq 10$<span id=\"MathJax-Element-1-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>$0 \\leq marks[i] \\leq 100$<span id=\"MathJax-Element-2-Frame\" class=\"MathJax_SVG\"></span></li>\n<li>Độ d&agrave;i của mảng chứa số điểm l&agrave; 3<span id=\"MathJax-Element-3-Frame\" class=\"MathJax_SVG\"></span></li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"challenge_output_format\">\n<div class=\"msB challenge_output_format_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_output_format_body\">\n<div class=\"hackdown-content\">\n<p>In ra một d&ograve;ng: Gi&aacute; trị trung b&igrave;nh cộng của điểm m&agrave; học sinh đạt được ch&iacute;nh x&aacute;c đến 2 chữ số thập ph&acirc;n.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>3\nKrishna 67 68 69\nArjun 70 98 63\nMalika 52 56 60\nMalika</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>56.00</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_explanation\">\n<div class=\"msB challenge_explanation_title\">\n<p><strong>Giải th&iacute;ch</strong></p>\n</div>\n<div class=\"msB challenge_explanation_body\">\n<div class=\"hackdown-content\">\n<p>Số điểm cho Malika l&agrave; {52,56,60} c&oacute; gi&aacute; trị trung b&igrave;nh l&agrave; $ \\frac{52 + 56 + 60}{3} \\Rightarrow 56$</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">&nbsp;</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre>&nbsp;</pre>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5fa15763-ce52-4be5-90ed-025a4484eaf4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef904f"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 10,
  "slug": "whats-your-name",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra họ và tên",
  "content": "<div class=\"challenge_problem_statement\">\n<div class=\"msB challenge_problem_statement_body\">\n<div class=\"hackdown-content\">\n<p>Bạn được cho trước họ v&agrave; t&ecirc;n của một người, trong đ&oacute; hai gi&aacute; trị họ v&agrave; t&ecirc;n n&agrave;y nằm tr&ecirc;n 2 d&ograve;ng kh&aacute;c nhau. Nhiệm vụ của bạn l&agrave; h&atilde;y đọc c&aacute;c gi&aacute; trị n&agrave;y v&agrave; in ra như sau:</p>\n<blockquote>\n<p>Hello <code>lastname</code> <code>firstname</code>!</p>\n</blockquote>\n<p>Trong đ&oacute;:</p>\n<ul>\n<li>lastname l&agrave; họ</li>\n<li>firstname l&agrave; t&ecirc;n của người đ&oacute;</li>\n</ul>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n</div>\n</div>\n</div>\n<div class=\"challenge_input_format\">\n<div class=\"msB challenge_input_format_body\">\n<div class=\"hackdown-content\">\n<p>D&ograve;ng đầu ti&ecirc;n chứa t&ecirc;n v&agrave; d&ograve;ng thứ hai chứa t&ecirc;n họ.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_constraints\">\n<div class=\"msB challenge_constraints_title\">\n<p><strong>Điều kiện</strong></p>\n</div>\n<div class=\"msB challenge_constraints_body\">\n<div class=\"hackdown-content\">\n<p>Độ d&agrave;i của họ v&agrave; t&ecirc;n phải nhỏ hơn hoặc bằng 10.</p>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_input\">\n<div class=\"msB challenge_sample_input_title\">\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n</div>\n<div class=\"msB challenge_sample_input_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>Long\nKhung</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"challenge_sample_output\">\n<div class=\"msB challenge_sample_output_title\">\n<p><strong>Đầu ra</strong></p>\n</div>\n<div class=\"msB challenge_sample_output_body\">\n<div class=\"hackdown-content\">\n<div class=\"highlight\">\n<pre class=\"language-markup\"><code>Hello Khung Long!</code></pre>\n</div>\n</div>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/28457850-7e3e-4304-9235-e60adbcfb746",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "test-cases.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9050"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pradipsum-easy-math",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính phép toán",
  "content": "<p>Zoro l&agrave; học sinh của một trường tiểu học. Anh ấy th&iacute;ch giải quyết c&aacute;c b&agrave;i to&aacute;n học. Một ng&agrave;y nọ, anh ta cố gắng giải một b&agrave;i to&aacute;n, nhưng anh ta kh&ocirc;ng thể giải b&agrave;i to&aacute;n đ&oacute; một c&aacute;ch hiệu quả v&igrave; l&agrave; học sinh tiểu học. Khi bạn l&agrave; một lập tr&igrave;nh vi&ecirc;n, anh ấy muốn bạn gi&uacute;p đỡ để giải quyết vấn đề n&agrave;y. B&agrave;i to&aacute;n đặt ra l&agrave; t&igrave;m tổng của c&aacute;c số li&ecirc;n tiếp.</p>\n<div id=\"problem-body\">\n<p>V&iacute; dụ, nếu số đầu ti&ecirc;n l&agrave; 2 v&agrave; số cuối c&ugrave;ng l&agrave; 5, th&igrave; kết quả sẽ l&agrave; <strong>2 + 3 + 4 + 5 = 14</strong></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Mọi d&ograve;ng chứa hai số nguy&ecirc;n a v&agrave; b. Đầu v&agrave;o được kết th&uacute;c bằng k&yacute; tự kết th&uacute;c d&ograve;ng.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra tổng của tất cả c&aacute;c số nằm giữa a v&agrave; b (bao gồm cả a v&agrave; b).</p>\n<h3>Điều kiện</h3>\n<ul>\n<li>$-10^{8} \\leq (a , b) \\leq 10^{8}$</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2 5\n5 10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>14\n45</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d3b0620c-b33b-4559-a916-a8d524c29f36",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRADIPSUM_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9051"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pizzaloc-pizza-location",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Giao bánh pizza",
  "content": "<p>Người bạn Picko của ch&uacute;ng ta rất gi&agrave;u v&agrave; anh ấy muốn mở nhiều nh&agrave; h&agrave;ng với dịch vụ giao h&agrave;ng. Thức ăn ch&iacute;nh sẽ l&agrave; pizza. Anh ấy c&oacute; một số địa điểm tiềm năng nhất định cho c&aacute;c nh&agrave; h&agrave;ng v&agrave; anh ấy biết địa điểm của những hội chợ c&oacute; nhiều người thường sẽ l&agrave; kh&aacute;ch h&agrave;ng của anh ấy. Việc giao h&agrave;ng của mỗi nh&agrave; h&agrave;ng sẽ bao gồm tất cả c&aacute;c hội chợ trong b&aacute;n k&iacute;nh nhất định.</p>\n<div id=\"problem-body\">\n<p>Picko chỉ c&oacute; thể mở số lượng nh&agrave; h&agrave;ng nhất định v&agrave; anh ấy muốn c&aacute;c nh&agrave; h&agrave;ng ở c&aacute;c địa điểm sẽ c&oacute; số lượng người tham gia hội chợ tối đa. H&atilde;y viết một chương tr&igrave;nh t&iacute;nh to&aacute;n số lượng người tối đa m&agrave; ch&uacute;ng ta c&oacute; thể đảm nhận khi giao h&agrave;ng.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Trong d&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o, c&oacute; hai số nguy&ecirc;n K v&agrave; R, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, số lượng nh&agrave; h&agrave;ng v&agrave; b&aacute;n k&iacute;nh giao h&agrave;ng, 1 &le; K &le; 10, 1 &le; R &le; 500.</li>\n<li>Trong d&ograve;ng thứ hai c&oacute; số nguy&ecirc;n M, số địa điểm, K &le; M &le; 20.</li>\n<li>Trong mỗi M d&ograve;ng tiếp theo c&oacute; hai số nguy&ecirc;n X v&agrave; Y, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, tọa độ của mỗi vị tr&iacute;, -1000 &le; X, Y &le; 1000.</li>\n<li>Trong d&ograve;ng tiếp theo, c&oacute; số nguy&ecirc;n, số lượng c&aacute;c địa điểm hội chợ, 1 &le; N &le; 100.</li>\n<li>Trong mỗi d&ograve;ng trong số N d&ograve;ng tiếp theo, c&oacute; ba số nguy&ecirc;n X, Y v&agrave; S, được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, X v&agrave; Y l&agrave; tọa độ của mỗi hội chợ v&agrave; S l&agrave; số người trong hội chợ đ&oacute;, -1000 &le; X, Y &le; 1000, 1 &le; S &le; 100.</li>\n<li>Ch&uacute;ng ta sẽ giả sử rằng hội chợ nằm trong b&aacute;n k&iacute;nh của một số nh&agrave; h&agrave;ng nếu khoảng c&aacute;ch giữa ch&uacute;ng nhỏ hơn hoặc bằng R. Kh&ocirc;ng c&oacute; hai vị tr&iacute; của nh&agrave; h&agrave;ng tr&ecirc;n c&ugrave;ng một địa điểm.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>&gt; Trong d&ograve;ng duy nhất của tệp đầu ra, ch&uacute;ng ta phải viết gi&aacute; trị số lớn nhất từ văn bản tr&ecirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2 2 \n3 \n1 0 \n4 0 \n7 0 \n4 \n0 0 1 \n3 0 7 \n5 0 9 \n8 0 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>18</code></pre>\n<h3><strong> V&iacute; dụ 2</strong></h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2 2 \n3 \n-2 0 \n0 1 \n3 0 \n8 \n-3 1 1 \n-3 0 1 \n-3 -1 1 \n-2 -1 1 \n0 0 3 \n0 2 1 \n2 1 3 \n4 0 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>12</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb9e751b-8eff-4d81-81da-ba0bd1ac7adb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PIZZALOC-input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9052"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "palin-the-next-palindrome",
  "tags": [],
  "level": "BEGINNER",
  "title": "PALIN - The Next Palindrome",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PALIN - The Next Palindrome</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">A positive integer is called a&nbsp;<em>palindrome</em>&nbsp;if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer&nbsp;<em>K</em>&nbsp;of not more than 1000000 digits, write the value of the smallest palindrome larger than&nbsp;<em>K</em>&nbsp;to output. Numbers are always displayed without leading zeros.</p>\n<h3>Input</h3>\n<p align=\"justify\">The first line contains integer&nbsp;<em>t</em>, the number of test cases. Integers&nbsp;<em>K</em>&nbsp;are given in the next&nbsp;<em>t</em>&nbsp;lines.</p>\n<h3>Output</h3>\n<p align=\"justify\">For each&nbsp;<em>K</em>, output the smallest palindrome larger than&nbsp;<em>K</em>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n808\n2133\n\n<strong>Output:</strong>\n818\n2222</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/45a431c5-114c-419b-ba0f-b67f802d1192",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PALIN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9053"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "onp-transform-the-expression",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ONP - Transform the Expression",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ONP - Transform the Expression</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Transform the algebraic expression with brackets into RPN form (Reverse Polish Notation). Two-argument operators: +, -, *, /, ^ (priority from the lowest to the highest), brackets ( ). Operands: only letters: a,b,...,z. Assume that there is only one RPN form (no expressions like a*b*c).</p>\n<h3>Input</h3>\n<pre><em>t</em> [the number of expressions &lt;= <strong>100</strong>]\n<em>expression</em> [length &lt;= <strong>400</strong>]\n[other expressions]\n</pre>\n<p align=\"left\">Text grouped in [ ] does not appear in the input file.</p>\n<h3>Output</h3>\n<pre>The <em>expression</em>s in RPN form, one per line.\n</pre>\n<h3>Example</h3>\n<pre>Input:\n3\n(a+(b*c))\n((a+b)*(z+x))\n((a+t)*((b+(a+c))^(c+d)))\n\nOutput:\nabc*+\nab+zx+*\nat+bac++cd+^*</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c890e708-c9de-4649-a6af-e2fb2315b8bf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ONP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9054"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "onezero-ones-and-zeros",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Các số có 1 và 0",
  "content": "<p class=\"text-center\">Một số số nguy&ecirc;n dương nhất định c&oacute; dạng biểu diễn thập ph&acirc;n chỉ bao gồm số 1 v&agrave; 0, v&agrave; c&oacute; &iacute;t nhất một chữ số 1, v&iacute; dụ: 101. Nếu một số nguy&ecirc;n dương kh&ocirc;ng c&oacute; t&iacute;nh chất như vậy, người ta c&oacute; thể thử nh&acirc;n n&oacute; với một số nguy&ecirc;n dương n&agrave;o đ&oacute; để t&igrave;m xem t&iacute;ch c&oacute; t&iacute;nh chất n&agrave;y hay kh&ocirc;ng.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Số K c&aacute;c trường hợp thử nghiệm (K xấp xỉ 1000); trong mỗi d&ograve;ng trong số K d&ograve;ng tiếp theo c&oacute; một số nguy&ecirc;n n (1 &lt;= n &lt;= 20000)</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn sẽ t&iacute;nh bội số nhỏ nhất của số n chỉ gồm c&aacute;c chữ số 1 v&agrave; 0 (bắt đầu bằng 1).</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n17\n11011\n17</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11101\n11011\n11101</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/470e9782-5d04-498f-a5e4-4039611eeffb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ONEZERO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9055"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "numpath-gutibazi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đem lại công lý",
  "content": "<p>Xunayed rất tức giận. Anh ph&aacute;t hiện ra rằng người bạn của m&igrave;nh, Nurulla, người cũng giống như anh trai của anh, đ&atilde; g&acirc;y ra tội lỗi với anh ta. Xunayed c&oacute; thể tha thứ cho bất cứ điều g&igrave;, nhưng tội lỗi n&agrave;y l&agrave; thứ anh kh&ocirc;ng bao giờ c&oacute; thể tha thứ. Nhưng để cho Nurulla một b&agrave;i học, Xunayed trước ti&ecirc;n phải đến Nurulla bằng một con đường n&agrave;o đ&oacute;. Sau đ&oacute;, sự cố xảy ra. Những con đường thuộc về một c&aacute; nh&acirc;n rất quyền lực t&ecirc;n l&agrave; Rizvi v&agrave; mọi người phải xin ph&eacute;p anh ta để đi qua những con đường đ&oacute;. Rizvi sẽ cho ph&eacute;p Xunayed chỉ khi Xunayed giải được một c&acirc;u đố.</p>\n<div id=\"problem-body\">\n<p>Đường dẫn l&agrave; một ma trận 2 chiều. Xunayed hiện nằm ở &ocirc; ph&iacute;a tr&ecirc;n b&ecirc;n tr&aacute;i (&ocirc; (1,1) trong h&igrave;nh b&ecirc;n dưới). Nurulla b&acirc;y giờ nằm ở &ocirc; ph&iacute;a dưới b&ecirc;n phải (&ocirc; (3,3) trong h&igrave;nh b&ecirc;n dưới) l&agrave; điểm đ&iacute;ch. Xunayed chỉ c&oacute; thể đi xuống hoặc sang phải từ &ocirc; hiện tại của anh ta. C&oacute; bao nhi&ecirc;u con đường m&agrave; Xunayed c&oacute; thể đến được Nurulla.</p>\n<p><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"example grid\" src=\"https://2.bp.blogspot.com/-DdOeWcMdcHM/VvP2X-ERMQI/AAAAAAAABDI/VFp5Y5MKmso-s7EgwFIjwVStq0RVotaZA/s1600/img.jpg\" alt=\"grid\" width=\"163\" height=\"154\" /></strong></p>\n<p>H&atilde;y giải c&acirc;u đố n&agrave;y để gi&uacute;p Xunayed v&ocirc; tội v&agrave; mang lại c&ocirc;ng l&yacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o bắt đầu bằng số nguy&ecirc;n T (&lt;= 50), biểu thị số lượng trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp bắt đầu bằng một d&ograve;ng chứa hai số nguy&ecirc;n R v&agrave; C (1 &lt;= R, C &lt;= 7), trong đ&oacute; R biểu thị số h&agrave;ng v&agrave; C biểu thị số cột tương ứng của ma trận.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mọi trường hợp thử nghiệm, h&atilde;y in ra một số nguy&ecirc;n đại diện cho số c&aacute;ch Xunayed c&oacute; thể đến Nurulla.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n1 1\n2 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2</code></pre>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c861dcb5-6ebe-4a19-bfc4-ba94bd0c29a1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NUMPATH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9056"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nsteps-number-steps",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Số lượng bước đi",
  "content": "<p>Bắt đầu từ điểm (0,0) tr&ecirc;n một mặt phẳng, ch&uacute;ng ta đ&atilde; viết tất cả c&aacute;c số nguy&ecirc;n kh&ocirc;ng &acirc;m 0, 1, 2, ... như trong h&igrave;nh b&ecirc;n dưới. V&iacute; dụ, 1, 2 v&agrave; 3 đ&atilde; được viết lần lượt tại c&aacute;c điểm (1,1), (2,0) v&agrave; (3, 1) v&agrave; mẫu n&agrave;y vẫn tiếp tục.</p>\n<div id=\"problem-body\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/steinersp:nsteps.gif\" alt=\"Illustration\" border=\"0\" />\n<p>Bạn h&atilde;y viết một chương tr&igrave;nh đọc tọa độ của một điểm (x, y) v&agrave; ghi ra số (nếu c&oacute;) đ&atilde; được viết tại điểm đ&oacute;. Tọa độ (x, y) trong đầu v&agrave;o nằm trong khoảng 0 ... 10000.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o l&agrave; N, số lượng trường hợp thử nghiệm cho vấn đề n&agrave;y. Trong mỗi d&ograve;ng trong số N d&ograve;ng sau, c&oacute; x v&agrave; y biểu diễn tọa độ (x, y) của một điểm.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi điểm trong đầu v&agrave;o, h&atilde;y ghi số được viết tại điểm đ&oacute; hoặc ghi \"No Number\" nếu kh&ocirc;ng c&oacute;.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n4 2\n6 6\n3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n12\nNo Number</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ac7845a9-84bf-4862-b398-33ed57e51467",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NSTEPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9057"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkletter-gui-thu",
  "tags": [],
  "level": "BEGINNER",
  "title": "Gửi thư",
  "content": "<div class=\"prob\">\n<p>Vị Giám đ&ocirc;́c c&ocirc;ng ty XYZ c&acirc;̀n gửi m&ocirc;̣t văn bản quan trọng tới m&ocirc;̣t đ&ocirc;́i tác của mình. Văn bản là m&ocirc;̣t x&acirc;u S các chữ cái la tinh in thường. Đ&ecirc;̉ bảo mật n&ocirc;̣i dung văn bản, &ocirc;ng Giám đ&ocirc;́c gửi 2 bức thư. Bức thư thứ nh&acirc;́t là ph&acirc;̀n đ&acirc;̀u Sb của x&acirc;u S, bức thư thứ 2 là ph&acirc;̀n cu&ocirc;́i Se của S. Hai bức thư Sb và Se đảm bảo đ&acirc;̀y đủ n&ocirc;̣i dung của S, tuy nhi&ecirc;n có th&ecirc;̉ m&ocirc;̣t ph&acirc;̀n cu&ocirc;́i của Sb c&oacute; thể được vi&ecirc;́t lặp lại trong ph&acirc;̀n đ&acirc;̀u của Se, song s&ocirc;́ k&iacute; tự được vi&ecirc;́t lặp lại kh&ocirc;ng bi&ecirc;́t trước. V&iacute; dụ: với văn bản S=&rsquo;truongnguyenduquannhat&rsquo; tạo ra hai bức thư:</p>\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Sb=&rsquo;truongnguyendu&rsquo; v&agrave; Se=&rsquo;nguyenduquannhat&rsquo;</span></pre>\n<p>Y&ecirc;u c&acirc;̀u: Cho hai x&acirc;u Sb và Se, hãy xác định m&ocirc;̣t x&acirc;u S có th&ecirc;̉ là n&ocirc;̣i dung của bức thư sao cho đ&ocirc;̣ dài của x&acirc;u S là ngắn nh&acirc;́t.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Dòng đ&acirc;̀u chứa x&acirc;u Sb, dòng thứ hai chứa x&acirc;u Se. M&ocirc;̃i x&acirc;u có đ&ocirc;̣ dài kh&ocirc;ng quá 250.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Ghi ra đ&ocirc;̣ dài của x&acirc;u S tìm được.</p>\n<h3>Ví dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>truongnguyendu\nnguyenduquannhat</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>22</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3b82f511-4b63-4d59-9248-255d73f81af8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKLETTER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9058"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkgaurd-bao-ve-nong-trang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bảo vệ nông trang",
  "content": "<header class=\"border-bottom border-color-light-grey\">\n<div class=\"container\">\n<p class=\"margin-none padding-top-2 padding-bottom-2\">N&ocirc;ng trang c&oacute; rất nhiều ngọn đồi n&uacute;i, để bảo vệ n&ocirc;ng trang n&ocirc;ng d&acirc;n Th&aacute;i muốn đặt người canh g&aacute;c tr&ecirc;n c&aacute;c ngọn đồi n&agrave;y. Anh ta băn khoăn kh&ocirc;ng biết sẽ cần bao nhi&ecirc;u người canh g&aacute;c nếu như anh ta muốn đặt 1 người canh g&aacute;c tr&ecirc;n đỉnh của mỗi đồi. Anh ta c&oacute; bản đồ của n&ocirc;ng trang l&agrave; một ma trận gồm N (1 &lt; N &lt;= 700) h&agrave;ng v&agrave; M (1 &lt; M &lt;= 700) cột. Mỗi phần tử của ma trận l&agrave; độ cao H_ij so với mặt nước biển (0 &lt;= H_ij &lt;= 10,000) của &ocirc; (i, j). H&atilde;y gi&uacute;p anh ta x&aacute;c định số lượng đỉnh đồi tr&ecirc;n bản đồ.</p>\n</div>\n</header>\n<section class=\"main-container container\">\n<div class=\"content-wrapper padding-top-half padding-bottom-2\">\n<div class=\"post-container\">\n<div class=\"padding-top padding-bottom\">\n<p>Đỉnh đồi l&agrave; 1 hoặc nhiều &ocirc; nằm kề nhau của ma trận c&oacute; c&ugrave;ng độ cao được bao quanh bởi cạnh của bản đồ hoặc bởi c&aacute;c &ocirc; c&oacute; độ cao nhỏ hơn. Hai &ocirc; gọi l&agrave; kề nhau nếu độ ch&ecirc;nh lệch giữa tọa độ X kh&ocirc;ng qu&aacute; 1 v&agrave; ch&ecirc;nh lệch tọa độ Y kh&ocirc;ng qu&aacute; 1.</p>\n<h3 id=\"đầu-v&agrave;o\">Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>\n<p>D&ograve;ng 1: Hai số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; M</p>\n</li>\n<li>\n<p>D&ograve;ng 2..N+1: D&ograve;ng i+1 m&ocirc; tả h&agrave;ng i của ma trận với M số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: H_ij</p>\n</li>\n</ul>\n<h4 id=\"đầu-ra\">Định dạng đầu ra</h4>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; số lượng đỉnh đồi.</li>\n</ul>\n<h3 id=\"v&iacute;-dụ\">V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>8 7 \n4 3 2 2 1 0 1 \n3 3 3 2 1 0 1 \n2 2 2 2 1 0 0 \n2 1 1 1 1 0 0 \n1 1 0 0 0 1 0 \n0 0 0 1 1 1 0 \n0 1 2 2 1 1 0 \n0 1 1 1 2 1 0  </code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>\n</div>\n</div>\n</section>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78ae3bfc-ab84-49cb-8f9d-8022b473c01b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKGAURD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9059"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ndccard-cac-la-bai-blackjack",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Các lá bài Blackjack",
  "content": "<div id=\"problem-body\">\n<p>Blackjack l&agrave; tr&ograve; chơi đ&aacute;nh b&agrave;i kh&aacute; phổ biến, mục ti&ecirc;u l&agrave; c&oacute; được những l&aacute; b&agrave;i m&agrave; tổng của n&oacute; l&agrave; lớn nhất nhưng kh&ocirc;ng vượt qu&aacute; 21. Lấy &yacute; tưởng từ tr&ograve; chơi n&agrave;y, c&aacute;c bạn khaihanhdk, huytion156, thanhdat01234 đ&atilde; s&aacute;ng tạo ra một phi&ecirc;n bản mới của tr&ograve; chơi cho ri&ecirc;ng m&igrave;nh.</p>\n<p>Trong phi&ecirc;n bản tr&ograve; chơi mới n&agrave;y c&aacute;c bạn đ&atilde; viết l&ecirc;n mỗi l&aacute; b&agrave;i một số nguy&ecirc;n dương. Người tham gia tr&ograve; chơi được cung cấp một tập gồm N l&aacute; b&agrave;i v&agrave; một số nguy&ecirc;n dương M. Nhiệm vụ của người chơi l&agrave; phải chọn ra 3 l&aacute; b&agrave;i từ tập l&aacute; b&agrave;i đ&atilde; cho sao cho tổng c&aacute;c số tr&ecirc;n 3 l&aacute; b&agrave;i đ&atilde; chọn l&agrave; lớn nhất v&agrave; kh&ocirc;ng vượt qu&aacute; M. Bạn h&atilde;y t&igrave;m kết quả tốt nhất c&oacute; thể c&oacute; của tr&ograve; chơi tr&ecirc;n.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ghi số nguy&ecirc;n dương N,M (N&lt;=10000 , M&lt;=500000).</li>\n<li>N d&ograve;ng sau ghi N số nguy&ecirc;n dương đ&ocirc;i một kh&aacute;c nhau l&agrave; c&aacute;c số được ghi tr&ecirc;n N l&aacute; b&agrave;i&nbsp;( 1 &le; a[i] &le; 10000).</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Ghi tr&ecirc;n một d&ograve;ng duy nhất l&agrave; kết quả b&agrave;i to&aacute;n. Trường hợp thử nghiệm lu&ocirc;n đảm bảo c&oacute; kết quả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6 20\n7 9\n6 2\n1 5</code></pre>\n<p><strong>Kết quả:</strong></p>\n<pre class=\"language-markup\"><code>20</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Chọn c&aacute;c l&aacute; b&agrave;i mang số 9 , 6 , 5 ta c&oacute; 9+6+5 = 20 &lt;= M</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d0ce4d9d-8ecf-4417-a803-65cf9a0b48af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NDCCARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nakanj-minimum-knight-moves",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Số nước đi quân mã nhỏ nhất",
  "content": "<p>Anjali v&agrave; Nakul l&agrave; bạn tốt của nhau. Cả hai đ&atilde; c&atilde;i nhau gần đ&acirc;y khi đang chơi cờ. Nakul muốn biết số nước đi tối thiểu của một qu&acirc;n m&atilde; c&oacute; thể c&oacute; sao cho đến được từ &ocirc; vu&ocirc;ng n&agrave;y sang &ocirc; vu&ocirc;ng kh&aacute;c của b&agrave;n cờ (8X8). Nakul rất th&ocirc;ng minh v&agrave; anh ấy đ&atilde; viết một chương tr&igrave;nh để giải quyết vấn đề n&agrave;y. Nakul muốn biết liệu Anjali c&oacute; l&agrave;m được kh&ocirc;ng. Anjali rất yếu về lập tr&igrave;nh. H&atilde;y gi&uacute;p c&ocirc; ấy để giải quyết vấn đề.</p>\n<div id=\"problem-body\">\n<p>Một qu&acirc;n m&atilde; c&oacute; thể di chuyển theo h&igrave;nh chữ \"L\" trong b&agrave;n cờ - hai h&igrave;nh vu&ocirc;ng tiến, l&ugrave;i, tr&aacute;i hoặc phải v&agrave; sau đ&oacute; l&agrave; một h&igrave;nh vu&ocirc;ng ở b&ecirc;n tr&aacute;i hoặc b&ecirc;n phải của n&oacute;. Nước đi của qu&acirc;n m&atilde; l&agrave; hợp lệ nếu n&oacute; đi như đ&atilde; đề cập ở tr&ecirc;n v&agrave; n&oacute; nằm trong ranh giới của b&agrave;n cờ (8 X 8).</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"knight\" src=\"https://www.spoj.com/content/francky:knight\" alt=\"knight\" width=\"50%\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Tổng cộng c&oacute; T trường hợp thử nghiệm. T d&ograve;ng tiếp theo chứa hai chuỗi k&yacute; tự (điểm bắt đầu v&agrave; điểm đến) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>C&aacute;c chuỗi bắt đầu v&agrave; đ&iacute;ch sẽ chỉ chứa hai k&yacute; tự - K&yacute; tự đầu ti&ecirc;n l&agrave; chữ c&aacute;i nằm giữa 'a' v&agrave; 'h', k&yacute; tự thứ hai l&agrave; một chữ số từ '1' đến '8'.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra số nước đi tối thiểu m&agrave; qu&acirc;n m&atilde; phải đi từ đầu đến đ&iacute;ch trong một d&ograve;ng ri&ecirc;ng.</p>\n<h3>Điều kiện</h3>\n<ul>\n<li>1 &lt;= T &lt;= 4096</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\na1 h8\na1 c2\nh8 c3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n1\n4</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/265a9025-34eb-4400-ac84-f5a0e2e1b30e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NAKANJ _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nabilhacker-hack-the-password",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Hack mật khẩu",
  "content": "<header class=\"border-bottom border-color-light-grey\">\n<div class=\"container\">\n<p class=\"margin-none padding-top-2 padding-bottom-2\">Rất nhiều người hỏi m&igrave;nh về vấn đề &aacute;p dụng lập tr&igrave;nh ở cuộc thi v&agrave;o c&aacute;c project trong đời sống thực chất l&agrave; g&igrave;? Điều n&agrave;y c&oacute; vẻ kh&ocirc;ng mấy th&uacute; vị. C&aacute;i m&agrave; m&igrave;nh thấy thực sự th&uacute; vị đ&oacute; l&agrave;, v&agrave;o một ng&agrave;y nọ, một người bạn - l&agrave; hacker đ&atilde; đến gặp m&igrave;nh. Anh ta y&ecirc;u cầu m&igrave;nh giải quyết một b&agrave;i to&aacute;n về hacking của anh ấy. Khi bạn muốn lấy cắp mật khẩu của ai đ&oacute;, bạn c&oacute; thể c&agrave;i đặt chương tr&igrave;nh KeyLogger tr&ecirc;n m&aacute;y t&iacute;nh của người đ&oacute;. KeyLogger sẽ đưa cho bạn một string đ&oacute;ng vai tr&ograve; l&agrave; password. Nhưng c&oacute; một vấn đề, đ&oacute; l&agrave; n&oacute; sẽ đưa cho bạn tất cả mọi thứ m&agrave; nạn nh&acirc;n đ&atilde; g&otilde;, bao gồm cả ph&iacute;m dịch tr&aacute;i, dịch phải, backspace. Giả sử nạn nh&acirc;n g&otilde; password \"generio312\", nhưng dựa tr&ecirc;n kịch bản l&agrave;:</p>\n</div>\n</header>\n<section class=\"main-container container\">\n<div class=\"content-wrapper padding-top-half padding-bottom-2\">\n<div class=\"post-container\">\n<div class=\"padding-top padding-bottom\">\n<ol>\n<li>Anh ta g&otilde; \"generio1\"</li>\n<li>Sau đ&oacute;, anh ta nhấn n&uacute;t dịch tr&aacute;i, v&agrave; nhấn 3. L&uacute;c n&agrave;y password sẽ l&agrave; \"generio31\"</li>\n<li>Rồi anh ta nhấn dịch phải, v&agrave; nhấn 2. L&uacute;c n&agrave;y password l&agrave; \"generio312\"</li>\n<li>Cuối c&ugrave;ng anh ta nhấn \"ghj\" v&agrave; nhấn backspace 3 lần để xo&aacute; 3 k&iacute; tự n&agrave;y đi. V&igrave; vậy, password cuối c&ugrave;ng sẽ l&agrave; \"generio312\".</li>\n</ol>\n<p>Tuy nhi&ecirc;n, như m&igrave;nh đ&atilde; n&oacute;i, KeyLogger sẽ đưa cho bạn tất cả những g&igrave; m&agrave; anh ta g&otilde;. Do đ&oacute;, bạn sẽ nhận được string l&agrave; \"generio1&lt;3&gt;2ghj---\". Trong đ&oacute;, &lt; l&agrave; dịch tr&aacute;i, &gt; l&agrave; dịch phải v&agrave; - l&agrave; backspace.</p>\n<h3 id=\"đầu-v&agrave;o\">Định dạng đầu v&agrave;o</h3>\n<p>Tại vị tr&iacute; đầu ti&ecirc;n của input l&agrave; số T, số lượng của testcase. Sau đ&oacute;, c&oacute; T string s, với độ d&agrave;i 1 &lt;= |s| &lt;= 10^6. Mỗi string sẽ bao gồm chữ c&aacute;i in hoa, chữ c&aacute;i in thường, dấu &lt;, dấu &amp;gt, dấu - v&agrave; c&aacute;c số [0, 9]</p>\n<h3 id=\"đầu-ra\">Định dạng đầu ra</h3>\n<p>Đầu ra sẽ l&agrave; một string ở mỗi d&ograve;ng - tương ứng với password.</p>\n<h3 id=\"v&iacute;-dụ\">V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n&lt;&lt;BP&lt;A&gt;&gt;Cd-\nThisIsS3Cr3t</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>BAPC\nThisIsS3Cr3t</code></pre>\n</div>\n</div>\n</div>\n</section>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8441c6fd-adba-4f9a-8556-7c8630485804",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NABILHACKER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mul-fast-multiplication",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính phép nhân",
  "content": "<p>H&atilde;y nh&acirc;n c&aacute;c số đ&atilde; cho.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>n [số ph&eacute;p nh&acirc;n &lt;= 1000]</li>\n<li>l1 l2 [c&aacute;c số cần nh&acirc;n (nhiều nhất 10000 chữ số thập ph&acirc;n cho mỗi số)]</li>\n<li>Văn bản được nh&oacute;m trong [] kh&ocirc;ng xuất hiện trong tệp đầu v&agrave;o.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>C&aacute;c kết quả của c&aacute;c ph&eacute;p nh&acirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n4 2\n123 43\n324 342\n0 12\n9999 12345</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8\n5289\n110808\n0\n123437655</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0383c38c-fd6f-4c67-98f9-076eb6495db0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MUL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "msubstr-mirror-strings",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chuỗi ký tự phản chiếu",
  "content": "<p>Như ch&uacute;ng ta đ&atilde; biết Utkarsh rất giỏi trong việc giải c&aacute;c b&agrave;i to&aacute;n số, lần n&agrave;y Arpit đ&atilde; suy nghĩ th&ocirc;ng minh v&agrave; đưa cho Utkarsh giải một b&agrave;i to&aacute;n tr&ecirc;n c&aacute;c chuỗi k&yacute; tự. Arpit đưa cho Utkarsh một chuỗi k&yacute; tự v&agrave; th&aacute;ch anh ta t&igrave;m độ d&agrave;i của chuỗi con lớn nhất c&oacute; chuỗi k&yacute; tự phản chiếu giống với chuỗi ban đầu v&agrave; số lượng c&aacute;c chuỗi con như vậy. B&acirc;y giờ Utkarsh đang bận rộn với việc chuẩn bị c&aacute;c giấy tờ cho Avishkar v&igrave; vậy anh ấy y&ecirc;u cầu bạn gi&uacute;p anh ấy l&agrave;m nhiệm vụ n&agrave;y.</p>\n<p>V&iacute; dụ: Chuỗi k&yacute; tự \"lalit\" c&oacute; chuỗi k&yacute; tự phản chiếu l&agrave; \"tilal\".</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>C&oacute; t số trường hợp thử nghiệm (t &lt;= 100), tiếp theo l&agrave; t d&ograve;ng, trong đ&oacute;, mỗi d&ograve;ng chứa một chuỗi k&yacute; tự gồm c&aacute;c k&yacute; tự viết thường (a-z) c&oacute; độ d&agrave;i l (1&gt; = l &lt;= 3000).</p>\n<p><strong>ĐỊnh dạng đầu ra</strong></p>\n<p>Sẽ c&oacute; hai số nguy&ecirc;n tr&ecirc;n mỗi d&ograve;ng được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch cho biết độ d&agrave;i của chuỗi con lớn nhất c&oacute; chuỗi phản chiếu giống nhau v&agrave; số lượng c&aacute;c chuỗi con c&oacute; t&iacute;nh chất như vậy.</p>\n<h2><strong>V&iacute; dụ</strong></h2>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\nlalit\nabedcdetr\nabcde</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3 1\n5 1\n1 5</code></pre>\n<div id=\"problem-body\">\n<div id=\"_mcePaste\">Giới hạn về thời gian: 1 gi&acirc;y</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6813763e-3e61-4b7a-94c9-554a8509f4b5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MSUBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mmatrix-shift-operator-on-matrix",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Toán tử SHIFT trên ma trận",
  "content": "<p>Cho một ma trận A c&oacute; k&iacute;ch thước l&agrave; n&times;n, c&oacute; c&aacute;c phần tử Ai, j l&agrave; c&aacute;c số nguy&ecirc;n (0 &le; i &lt;n, 0 &le; j &lt;n). Thao t&aacute;c SHIFT tại h&agrave;ng i (0 &le; i &lt;n) sẽ di chuyển c&aacute;c số nguy&ecirc;n trong h&agrave;ng sang phải một vị tr&iacute; v&agrave; số nguy&ecirc;n ngo&agrave;i c&ugrave;ng b&ecirc;n phải sẽ xuống d&ograve;ng so với cột ngo&agrave;i c&ugrave;ng b&ecirc;n tr&aacute;i.</p>\n<p id=\"problem-body\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/simes:MMATRIX.png\" border=\"0\" /><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Bạn c&oacute; thể thực hiện thao t&aacute;c SHIFT ở h&agrave;ng t&ugrave;y &yacute; v&agrave; bao nhi&ecirc;u lần t&ugrave;y th&iacute;ch. X&aacute;c định Cj = A0, j + A1, j + .. + A (n-1), j v&agrave; M = max {Cj | 0 &lt;= j &lt;n}. Cj l&agrave; tổng của tất cả c&aacute;c số trong cột thứ i. Việc của bạn l&agrave; giảm thiểu M. </span></p>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Định dạng đầu v&agrave;o</span></strong></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o bao gồm một số trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp chứa một số nguy&ecirc;n n. Mỗi d&ograve;ng trong số n d&ograve;ng sau chứa n số nguy&ecirc;n cho biết ma trận A. Đầu v&agrave;o được kết th&uacute;c bằng một d&ograve;ng duy nhất với số nguy&ecirc;n &minus;1. Bạn c&oacute; thể giả định rằng 1 &le; n &le; 7 v&agrave; | Ai, j | &lt;10 ^ 4.</span></p>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Định dạng đầu ra</span></strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra một d&ograve;ng chứa gi&aacute; trị nhỏ nhất của gi&aacute; trị lớn nhất của tổng c&aacute;c cột.</p>\n<h2><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> V&iacute; dụ</span></strong></h2>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o</span></strong></p>\n<pre class=\"language-markup\"><code>2\n4 6\n3 7\n3\n1 2 3\n4 5 6\n7 8 9\n-1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11\n15</code></pre>\n<div>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82f92522-54d2-45f1-aec6-67dab2a50282",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MMATRIX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef905f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mkjumps-making-jumps",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Thực hiện bước nhảy",
  "content": "<p>Một qu&acirc;n m&atilde; l&agrave; một qu&acirc;n cờ được sử dụng trong tr&ograve; chơi cờ vua. Bản th&acirc;n b&agrave;n cờ l&agrave; một mảng &ocirc; vu&ocirc;ng. Mỗi khi một qu&acirc;n m&atilde; di chuyển, vị tr&iacute; kết quả của n&oacute; l&agrave; hai h&agrave;ng v&agrave; một cột, hoặc hai cột v&agrave; một h&agrave;ng so với vị tr&iacute; xuất ph&aacute;t của n&oacute;. Do đ&oacute;, một qu&acirc;n m&atilde; bắt đầu từ h&agrave;ng r, cột c - m&agrave; ch&uacute;ng ta sẽ k&yacute; hiệu l&agrave; (r, c) - c&oacute; thể di chuyển đến bất kỳ &ocirc; vu&ocirc;ng n&agrave;o (r-2, c-1), (r-2, c + 1), (r-1, c-2), (r-1, c + 2), (r + 1, c-2), (r + 1, c + 2), (r + 2, c-1), hoặc (r + 2, c + 1). Tất nhi&ecirc;n, qu&acirc;n m&atilde; kh&ocirc;ng được di chuyển đến bất kỳ &ocirc; vu&ocirc;ng n&agrave;o kh&ocirc;ng c&oacute; tr&ecirc;n b&agrave;n cờ.</p>\n<div id=\"problem-body\">\n<p>Giả sử b&agrave;n cờ kh&ocirc;ng phải l&agrave; h&igrave;nh vu&ocirc;ng, m&agrave; thay v&agrave;o đ&oacute; l&agrave; c&aacute;c h&agrave;ng c&oacute; số cột thay đổi v&agrave; với khoảng c&aacute;ch mỗi h&agrave;ng l&agrave; 0 hoặc nhiều cột ở b&ecirc;n phải của h&agrave;ng ph&iacute;a tr&ecirc;n n&oacute;. H&igrave;nh b&ecirc;n tr&aacute;i minh họa một c&aacute;ch sắp xếp khả thi. C&oacute; bao nhi&ecirc;u &ocirc; trong một b&agrave;n cờ đ&atilde; sửa đổi như vậy m&agrave; một qu&acirc;n m&atilde; c&oacute; thể, bắt đầu ở &ocirc; ph&iacute;a tr&ecirc;n b&ecirc;n tr&aacute;i (được đ&aacute;nh dấu bằng dấu hoa thị), kh&ocirc;ng tiếp cận được với bất kỳ số nước đi n&agrave;o m&agrave; kh&ocirc;ng dừng lại ở bất kỳ &ocirc; n&agrave;o nhiều hơn một lần?</p>\n<center><img src=\"https://www.spoj.com/content/steinersp:jumps.png\" alt=\"subir imagenes\" border=\"0\" /></center>\n<p>Nếu cần, qu&acirc;n m&atilde; được ph&eacute;p đi qua c&aacute;c v&ugrave;ng nằm ngo&agrave;i bi&ecirc;n giới của b&agrave;n cờ đ&atilde; sửa đổi, nhưng như thường lệ, n&oacute; chỉ c&oacute; thể di chuyển đến c&aacute;c &ocirc; nằm trong bi&ecirc;n giới của b&agrave;n cờ.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Sẽ c&oacute; nhiều trường hợp cần xem x&eacute;t. Đầu v&agrave;o cho mỗi trường hợp bắt đầu bằng số nguy&ecirc;n n, từ 1 đến 10, chỉ định số h&agrave;ng trong b&agrave;n cờ đ&atilde; sửa đổi. Theo sau n sẽ c&oacute; n cặp số nguy&ecirc;n, với cặp thứ i tương ứng với h&agrave;ng thứ i của b&agrave;n cờ. Số nguy&ecirc;n đầu ti&ecirc;n của mỗi cặp cho biết số &ocirc; vu&ocirc;ng bị bỏ qua ở đầu h&agrave;ng. Số nguy&ecirc;n thứ hai cho biết số &ocirc; vu&ocirc;ng trong h&agrave;ng (sẽ lu&ocirc;n lu&ocirc;n &iacute;t nhất l&agrave; 1). Trường hợp cuối c&ugrave;ng sẽ được theo sau bởi số nguy&ecirc;n 0.</p>\n<p>V&iacute; dụ, đầu v&agrave;o cho trường hợp được minh họa bằng b&agrave;n cờ hiển thị ở tr&ecirc;n sẽ l&agrave;:</p>\n<pre class=\"language-markup\"><code>7 0 3 0 3 0 4 0 4 1 3 1 7 4 4</code></pre>\n</div>\n<div id=\"problem-body\">\n<p>K&iacute;ch thước tối đa của bảng sẽ l&agrave; 10 h&agrave;ng v&agrave; 10 cột. C&oacute; nghĩa l&agrave;, bất kỳ b&agrave;n cờ đ&atilde; sửa đổi n&agrave;o được chỉ định bởi đầu v&agrave;o sẽ ho&agrave;n to&agrave;n nằm vừa tr&ecirc;n một b&agrave;n cờ 10 h&agrave;ng, 10 cột.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp đầu v&agrave;o, hiển thị gi&aacute; trị số của trường hợp (1, 2,&hellip;) v&agrave; số &ocirc; vu&ocirc;ng m&agrave; qu&acirc;n m&atilde; kh&ocirc;ng thể tiếp cận. Hiển thị kết quả theo định dạng được hiển thị trong c&aacute;c v&iacute; dụ b&ecirc;n dưới.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7 0 3 0 3 0 4 0 4 1 3 1 7 4 4\n3 0 3 0 3 0 3\n2 0 1 2 1\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Case 1, 4 squares can not be reached.\nCase 2, 1 square can not be reached.\nCase 3, 0 squares can not be reached.</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f94352a0-82df-48de-b85c-9de914579d4f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKJUMPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9060"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mkequal-make-them-equal",
  "tags": [],
  "level": "BEGINNER",
  "title": "Thêm bớt",
  "content": "<p>Bạn c&oacute; một mảng chứa N phần tử. Tại bất kỳ bước di chuyển n&agrave;o, bạn chọn hai chỉ số i v&agrave; j (0 &lt;= i, j &lt;N v&agrave; i! = J) v&agrave; tăng gi&aacute; trị ở một chỉ số v&agrave; giảm gi&aacute; trị ở chỉ số kh&aacute;c. Bạn c&oacute; thể thực hiện thao t&aacute;c n&agrave;y với bất kỳ số lần n&agrave;o. Số phần tử lớn nhất c&oacute; thể c&oacute; c&ugrave;ng gi&aacute; trị (sau bất kỳ số lần di chuyển n&agrave;o) l&agrave; bao nhi&ecirc;u?</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n bao gồm T, số lượng trường hợp thử nghiệm. (1 &lt;= T &lt;= 100)</li>\n<li>Tiếp theo l&agrave; T tập hợp. Mỗi tập hợp chứa N, số phần tử trong mảng, ở d&ograve;ng đầu ti&ecirc;n. (1 &lt;= N &lt;= 100000)</li>\n<li>D&ograve;ng tiếp theo của mỗi tập hợp bao gồm N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch (0 &lt;= Gi&aacute; trị &lt;= 100000)</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra T d&ograve;ng, mỗi d&ograve;ng chứa c&acirc;u trả lời được y&ecirc;u cầu.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4\n1 2 3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/29419844-db25-404e-9a9e-1df55ad8a1a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKEQUAL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9061"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "micemaze-mice-and-maze",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Chuột trong mê cung",
  "content": "<p>Một nh&oacute;m chuột trong ph&ograve;ng th&iacute; nghiệm đang được huấn luyện để tho&aacute;t khỏi một m&ecirc; cung. M&ecirc; cung được tạo th&agrave;nh từ c&aacute;c &ocirc;, v&agrave; mỗi &ocirc; được kết nối với một số &ocirc; kh&aacute;c. Tuy nhi&ecirc;n, c&oacute; những chướng ngại vật trong việc đi lại giữa c&aacute;c &ocirc; v&agrave; do đ&oacute; c&oacute; một h&igrave;nh phạt về thời gian để vượt qua lối đi. Ngo&agrave;i ra, một số đoạn cho ph&eacute;p chuột đi một chiều, nhưng kh&ocirc;ng phải theo chiều ngược lại.</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Giả sử rằng tất cả c&aacute;c con chuột hiện đ&atilde; được huấn luyện v&agrave; khi được đặt v&agrave;o một &ocirc; t&ugrave;y &yacute; trong m&ecirc; cung, h&atilde;y đi theo con đường dẫn ch&uacute;ng đến &ocirc; tho&aacute;t trong thời gian tối thiểu. Ch&uacute;ng ta sẽ tiến h&agrave;nh th&iacute; nghiệm sau: một con chuột được đặt trong mỗi &ocirc; của m&ecirc; cung v&agrave; đồng hồ đếm ngược được bắt đầu. Khi bộ đếm thời gian dừng, ch&uacute;ng ta sẽ đếm số lượng chuột ra khỏi m&ecirc; cung.</p>\n<p align=\"justify\">Viết một chương tr&igrave;nh, với m&ocirc; tả về m&ecirc; cung v&agrave; giới hạn về thời gian, dự đo&aacute;n số lượng chuột sẽ tho&aacute;t ra khỏi m&ecirc; cung. Giả sử rằng kh&ocirc;ng c&oacute; n&uacute;t thắt cổ chai l&agrave; m&ecirc; cung, tức l&agrave; tất cả c&aacute;c &ocirc; đều c&oacute; chỗ trống cho một số lượng chuột t&ugrave;y &yacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">C&aacute;c &ocirc; m&ecirc; cung được đ&aacute;nh số $ 1, 2, \\ ldots, N $, trong đ&oacute; $ N $ l&agrave; tổng số &ocirc;. Bạn c&oacute; thể giả định rằng $ N \\ le 100 $.</p>\n<p align=\"justify\">Ba d&ograve;ng đầu v&agrave;o đầu ti&ecirc;n chứa $ N $, số &ocirc; trong m&ecirc; cung, $ E $, số &ocirc; tho&aacute;t v&agrave; gi&aacute; trị bắt đầu $ T $ cho đồng hồ đếm ngược (trong một số đơn vị thời gian t&ugrave;y &yacute;).</p>\n<p align=\"justify\">D&ograve;ng thứ tư chứa số $ M $ c&aacute;c kết nối trong m&ecirc; cung v&agrave; theo sau l&agrave; c&aacute;c d&ograve;ng $ M $, mỗi d&ograve;ng chỉ định một kết nối với ba số nguy&ecirc;n: hai số &ocirc; $ a $ v&agrave; $ b $ (trong phạm vi $ 1, \\ ldots, N $) v&agrave; số đơn vị thời gian cần thiết để đi từ $ a $ đến $ b $.</p>\n<p align=\"justify\">Lưu &yacute; rằng mỗi kết nối l&agrave; một chiều, tức l&agrave; chuột kh&ocirc;ng thể di chuyển từ $ b $ đến $ a $ trừ khi c&oacute; một d&ograve;ng kh&aacute;c chỉ định đoạn đường đ&oacute;. Cũng lưu &yacute; rằng thời gian cần thiết để di chuyển theo mỗi hướng c&oacute; thể kh&aacute;c nhau.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Đầu ra bao gồm một d&ograve;ng duy nhất với số lượng chuột đ&atilde; đến &ocirc; tho&aacute;t $ E $ với nhiều nhất l&agrave; $ T $ đơn vị thời gian.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 \n2 \n1\n8\n1 2 1\n1 3 1\n2 1 1\n2 4 1\n3 1 1\n3 4 1\n4 2 1\n4 3 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb8aea1f-a777-4c70-811e-26fc0a700898",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MICEMAZE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9062"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maxxor-find-the-max-xor-value",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm giá trị XOR lớn nhất",
  "content": "<p>Bạn c&oacute; hai số nguy&ecirc;n L v&agrave; R, v&agrave; bạn được y&ecirc;u cầu t&igrave;m gi&aacute; trị xor lớn nhất của a v&agrave; b trong đ&oacute; L &lt;= a &lt;= R v&agrave; L &lt;= b &lt;= R</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Hai số nguy&ecirc;n tr&ecirc;n một d&ograve;ng. $L, R &lt;= 1e^{9}$</p>\n<h3>Định dạng đầu ra</h3>\n<p>1 số nguy&ecirc;n</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>15</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b7f85178-1e22-4bcf-a257-d7c6e75e501c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MAXXOR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9063"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lks-large-knapsack",
  "tags": [],
  "level": "BEGINNER",
  "title": "Túi ba lô",
  "content": "<p>B&agrave;i to&aacute;n ba l&ocirc; hoặc b&agrave;i to&aacute;n ba l&ocirc; l&agrave; một b&agrave;i to&aacute;n trong tối ưu h&oacute;a tổ hợp: Cho một tập hợp c&aacute;c phần tử, mỗi phần tử c&oacute; trọng số v&agrave; gi&aacute; trị, h&atilde;y x&aacute;c định gi&aacute; trị số của mỗi phần tử để th&ecirc;m v&agrave;o một tập hợp sao cho tổng trọng số nhỏ hơn hoặc bằng một giới hạn đ&atilde; cho v&agrave; tổng gi&aacute; trị c&agrave;ng lớn c&agrave;ng tốt. T&ecirc;n gọi của n&oacute; bắt nguồn từ b&agrave;i to&aacute;n m&agrave; ai đ&oacute; phải giải quyết l&agrave; người bị r&agrave;ng buộc bởi một chiếc t&uacute;i c&oacute; k&iacute;ch thước cố định v&agrave; phải lấp đầy n&oacute; với những m&oacute;n đồ c&oacute; gi&aacute; trị nhất.</p>\n<div id=\"problem-body\">\n<p>Chỉ cần thực hiện Knapsack 0/1.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa hai số nguy&ecirc;n K v&agrave; N, trong đ&oacute; K l&agrave; k&iacute;ch thước ba l&ocirc; lớn nhất v&agrave; N l&agrave; số phần tử. N d&ograve;ng tiếp theo, trong đ&oacute; d&ograve;ng thứ i m&ocirc; tả phần tử thứ i ở dạng $v_{i}$ v&agrave; $w_{i}$ trong đ&oacute; $v_{i}$ l&agrave; gi&aacute; trị v&agrave; $w_{i} l&agrave; trọng số của phần tử thứ i.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra một số duy nhất - gi&aacute; trị lớn nhất của ba l&ocirc;. (Tất cả c&aacute;c ph&eacute;p to&aacute;n v&agrave; c&acirc;u trả lời được đảm bảo ph&ugrave; hợp với số nguy&ecirc;n 32 bit c&oacute; dấu.)</p>\n<p><em>Giới hạn thời gian thay đổi từ 2s v&agrave;o 02.07.11.</em></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 3\n7 3\n8 8\n4 6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ab1e16e3-9d82-4953-9725-076f383ca8b2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LKS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9064"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastdig-the-last-digit",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm chữ số cuối cùng",
  "content": "<p>Nestor đang l&agrave;m b&agrave;i tập trong lớp to&aacute;n của m&igrave;nh khoảng ba ng&agrave;y nhưng anh ấy cảm thấy mệt mỏi v&igrave; phải thực hiện nhiều ph&eacute;p to&aacute;n v&agrave; anh ấy sẽ giao nhiệm vụ v&agrave;o ng&agrave;y mai. Gi&aacute;o vi&ecirc;n to&aacute;n của anh ấy cho anh ấy hai số a v&agrave; b. B&agrave;i to&aacute;n bao gồm t&igrave;m chữ số cuối c&ugrave;ng của cơ số a v&agrave; chỉ số b. H&atilde;y gi&uacute;p Nestor giải quyết vấn đề của anh ấy. Bạn được cho hai số nguy&ecirc;n: cơ số a (0 &lt;= a &lt;= 20) v&agrave; chỉ số b (0 &lt;= b &lt;= 2.147.483.000), a v&agrave; b đều kh&aacute;c 0. Bạn phải t&igrave;m chữ số cuối c&ugrave;ng của $a^{b}$ .</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n t, số lượng trường hợp thử nghiệm (t &lt;= 30). Tiếp theo l&agrave; t c&aacute;c trường hợp thử nghiệm. Đối với mỗi trường hợp thử nghiệm sẽ in ra a v&agrave; b c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một số nguy&ecirc;n tr&ecirc;n mỗi d&ograve;ng đại diện cho kết quả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 10\n6 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>9\n6</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/33afcb57-94c7-4049-a049-502d4d3a6190",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LASTDIG_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9065"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "labyr1-labyrinth",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Giải mã mê cung",
  "content": "<p>Phần ph&iacute;a bắc của Kim tự th&aacute;p chứa một m&ecirc; cung rất lớn v&agrave; phức tạp. M&ecirc; cung được chia th&agrave;nh c&aacute;c khối vu&ocirc;ng, mỗi khối hoặc được lấp đầy bởi đ&aacute;, hoặc kh&ocirc;ng c&oacute; g&igrave;. Ngo&agrave;i ra c&ograve;n c&oacute; một c&aacute;i m&oacute;c nhỏ tr&ecirc;n s&agrave;n ở trung t&acirc;m của mỗi khối kh&ocirc;ng chứa g&igrave; cả. ACM đ&atilde; ph&aacute;t hiện ra rằng hai trong số c&aacute;c m&oacute;c phải được kết nối bằng một sợi d&acirc;y chạy qua c&aacute;c m&oacute;c trong mỗi khối tr&ecirc;n đường dẫn giữa c&aacute;c m&oacute;c được kết nối. Khi sợi d&acirc;y được thắt chặt, một c&aacute;nh cửa b&iacute; mật sẽ mở ra. Vấn đề l&agrave; ch&uacute;ng ta kh&ocirc;ng biết m&oacute;c n&agrave;o cần kết nối. Điều đ&oacute; cũng c&oacute; nghĩa l&agrave; chiều d&agrave;i cần thiết của sợi d&acirc;y vẫn chưa được biết. Nhiệm vụ của bạn l&agrave; x&aacute;c định chiều d&agrave;i tối đa của sợi d&acirc;y m&agrave; ch&uacute;ng ta c&oacute; thể cần cho một m&ecirc; cung nhất định.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">Đầu v&agrave;o bao gồm T trường hợp thử nghiệm. Số lượng T được cho tr&ecirc;n d&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o. Mỗi trường hợp thử nghiệm bắt đầu bằng một d&ograve;ng chứa hai số nguy&ecirc;n C v&agrave; R (3 &lt;= C, R &lt;= 1000) cho biết số cột v&agrave; h&agrave;ng. Sau đ&oacute; ch&iacute;nh x&aacute;c R d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa C k&yacute; tự. C&aacute;c k&yacute; tự n&agrave;y chỉ định m&ecirc; cung. Mỗi dấu trong số ch&uacute;ng l&agrave; một dấu thăng (#) hoặc một dấu chấm (.). Dấu thăng tượng trưng cho đ&aacute;, dấu chấm l&agrave; c&aacute;c khối trống rỗng. Chỉ c&oacute; thể đi bộ giữa c&aacute;c khối l&acirc;n cận, nơi c&aacute;c khối l&acirc;n cận l&agrave; c&aacute;c khối c&oacute; c&ugrave;ng một cạnh. Ch&uacute;ng ta kh&ocirc;ng thể đi theo đường ch&eacute;o v&agrave; ch&uacute;ng ta kh&ocirc;ng thể bước ra khỏi m&ecirc; cung.</p>\n<p align=\"justify\">M&ecirc; cung được thiết kế theo c&aacute;ch c&oacute; ch&iacute;nh x&aacute;c một đường đi giữa hai khối trống rỗng bất kỳ. Do đ&oacute;, nếu ch&uacute;ng ta t&igrave;m thấy c&aacute;c m&oacute;c th&iacute;ch hợp để kết nối, ch&uacute;ng ta sẽ dễ d&agrave;ng t&igrave;m thấy đ&uacute;ng đường kết nối ch&uacute;ng.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Chương tr&igrave;nh của bạn phải in ra ch&iacute;nh x&aacute;c một d&ograve;ng đầu ra cho mỗi trường hợp thử nghiệm. D&ograve;ng phải chứa chuỗi \"Maximum rope length is X.\", trong đ&oacute;, X l&agrave; độ d&agrave;i của đường đi d&agrave;i nhất giữa hai khối trống rỗng bất kỳ, được đo bằng số khối.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 3\n###\n#.#\n###\n7 6\n#######\n#.#.###\n#.#.###\n#.#.#.#\n#.....#\n#######</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Maximum rope length is 0.\nMaximum rope length is 8.</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8fcea2ca-8edf-40a0-a02e-9834755841fc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LABYR1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9066"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "koirep-representatives",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm ra đại diện tham gia cuộc thi",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&oacute; N lớp trong một trường học, mỗi lớp học c&oacute; M học sinh. Sẽ c&oacute; một cuộc đua 100m, v&agrave; một đại diện của mỗi lớp sẽ được chọn để tham gia cuộc đua n&agrave;y. Bạn đ&atilde; được giao một nhiệm vụ để chọn những người đại diện n&agrave;y. V&igrave; bạn kh&ocirc;ng muốn cuộc đua diễn ra một chiều, bạn muốn chọn những người đại diện sao cho sự kh&aacute;c biệt giữa khả năng của người đại diện tốt nhất v&agrave; người đại diện k&eacute;m nhất l&agrave; nhỏ nhất.</p>\n<div id=\"problem-body\">\n<p>V&iacute; dụ, nếu N = 3 v&agrave; M = 4, v&agrave; mỗi lớp c&oacute; những học sinh c&oacute; c&aacute;c khả năng sau:</p>\n<ul>\n<li>Lớp 1: {12,16,67,43}</li>\n<li>Lớp 2: {7,17,68,48}</li>\n<li>Lớp 3: {14,15,77,54}</li>\n</ul>\n<p>Tốt nhất l&agrave; chọn học sinh c&oacute; khả năng 16 từ Lớp 1, 17 từ Lớp 2 v&agrave; 15 từ Lớp 3. Như vậy, sự kh&aacute;c biệt trong trường hợp n&agrave;y sẽ l&agrave; 17-15 = 2.</p>\n<p>Nhiệm vụ của bạn l&agrave; t&iacute;nh to&aacute;n mức ch&ecirc;nh lệch tối thiểu c&oacute; thể đạt được bằng c&aacute;ch chọn một đại diện từ mỗi lớp.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o bao gồm hai số nguy&ecirc;n, N v&agrave; M. (1 &lt;= N &lt;= 1000, 1 &lt;= M &lt;= 1000).</li>\n<li>N d&ograve;ng tiếp theo sẽ c&oacute; M số nguy&ecirc;n. Phần tử thứ j của d&ograve;ng thứ i l&agrave; khả năng của học sinh thứ j của lớp thứ i. Con số n&agrave;y nằm trong khoảng từ 0 đến 10^9.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra mức ch&ecirc;nh lệch tối thiểu c&oacute; thể đạt được bằng c&aacute;ch chọn đại diện từ mỗi lớp.</p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3 4\n12 16 67 43\n7 17 68 48\n14 15 77 54</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 3\n10 20 30\n40 50 60\n70 80 90\n100 110 120</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>70</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/47c2e147-7057-4408-9c18-7d79836037eb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KOIREP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9067"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "invcnt-inversion-count",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đếm số lượng các chữ số nghịch đảo",
  "content": "<p>Cho A [0 ... n - 1] l&agrave; một mảng gồm n số nguy&ecirc;n dương kh&aacute;c nhau. Nếu i &lt;j v&agrave; A[i] &gt; A[j] th&igrave; cặp (i, j) được gọi l&agrave; nghịch đảo của A. Cho n v&agrave; một mảng A, nhiệm vụ của bạn l&agrave; t&igrave;m số lượng c&aacute;c số nghịch đảo của A.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa t, số lượng trường hợp thử nghiệm, theo sau l&agrave; một khoảng trống. Mỗi trường hợp thử t bắt đầu bằng số n (n &lt;= 200000). Sau đ&oacute; n+1 d&ograve;ng tiếp theo. Ở d&ograve;ng thứ i, cho trước số A[i - 1] (A[i - 1] &lt;= 10^7). D&ograve;ng thứ (n + 1) l&agrave; một khoảng trống.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi đầu ra thử nghiệm, h&atilde;y in ra một d&ograve;ng cho số c&aacute;c số nghịch đảo của A.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n\n3\n3\n1\n2\n\n5\n2\n3\n8\n6\n1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ff3b2420-e9c1-4c7c-9a13-4c657df0c79f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "INVCNT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9068"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "iitkwpco-create-collections",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Tạo các tập hợp chữ số",
  "content": "<p>Cậu b&eacute; Feluda rất th&iacute;ch chơi đ&ugrave;a. Như bạn biết, anh ấy chỉ chơi với những con số. V&igrave; vậy, anh ta được cho n số. B&acirc;y giờ cố gắng nh&oacute;m c&aacute;c số th&agrave;nh c&aacute;c tập hợp rời rạc, mỗi tập hợp chứa hai số. Anh ta c&oacute; thể tạo th&agrave;nh tập hợp chứa hai số nếu số nhỏ trong tập hợp đ&oacute; ch&iacute;nh x&aacute;c bằng một nửa số lớn.</p>\n<div id=\"problem-body\">\n<p>Cho n số, t&igrave;m xem c&oacute; bao nhi&ecirc;u số tập hợp lớn nhất m&agrave; anh ta c&oacute; thể tạo?</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Số lượng trường hợp thử nghiệm T (1 &lt;= T &lt;= 100).</p>\n<p>Đối với mỗi trường hợp</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa n (1 &lt;= n &lt;= 100)</li>\n<li>Sau đ&oacute;, d&ograve;ng tiếp theo sẽ chứa n số c&aacute;ch nhau một khoảng trắng. Phạm vi của mỗi số sẽ từ 1 đến $10^{6}$.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra số lượng tập hợp tối đa c&oacute; thể được h&igrave;nh th&agrave;nh.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n2\n1 2\n3 \n1 2 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/66651c9b-4daf-4aab-b2de-5a0d9381b1d4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IITKWPCO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9069"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "acode-alphacode-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bảng mã Alpha",
  "content": "<p>Alice v&agrave; Bob cần gửi tin nhắn b&iacute; mật cho nhau v&agrave; đang thảo luận về c&aacute;ch m&atilde; h&oacute;a tin nhắn của họ:</p>\n<div id=\"problem-body\">\n<blockquote>\n<p>Alice: &ldquo;H&atilde;y chỉ sử dụng một m&atilde; rất đơn giản: Ch&uacute;ng ta sẽ g&aacute;n cho&lsquo; A &rsquo; l&agrave; m&atilde; 1,&lsquo; B &rsquo;sẽ l&agrave; 2 v&agrave; cứ tiếp tục cho đến&lsquo; Z &rsquo;được g&aacute;n l&agrave; 26.&rdquo;</p>\n<p>Bob: &ldquo;Đ&oacute; l&agrave; một đoạn m&atilde; sai lầm, Alice. Giả sử t&ocirc;i gửi cho bạn từ &lsquo;BEAN&rsquo; được m&atilde; h&oacute;a l&agrave; 25114. Bạn c&oacute; thể giải m&atilde; từ đ&oacute; theo nhiều c&aacute;ch kh&aacute;c nhau! &rdquo;</p>\n<p>Alice: &ldquo;Chắc chắn l&agrave; bạn c&oacute; thể, nhưng bạn sẽ nhận được những từ n&agrave;o? Ngo&agrave;i &lsquo;BEAN&rsquo;, bạn sẽ nhận được &lsquo;BEAAD&rsquo;, &lsquo;YAAD&rsquo;, &lsquo;YAN&rsquo;, &lsquo;YKD&rsquo; v&agrave; &lsquo;BEKD&rsquo;. T&ocirc;i nghĩ rằng bạn sẽ c&oacute; thể t&igrave;m ra lời giải m&atilde; ch&iacute;nh x&aacute;c. V&agrave; tại sao bạn lại gửi cho t&ocirc;i từ &lsquo;BEAN&rsquo;? &rdquo;</p>\n<p>Bob: &ldquo;Được rồi, c&oacute; thể đ&oacute; l&agrave; một v&iacute; dụ sai, nhưng t&ocirc;i c&aacute; với bạn rằng nếu bạn c&oacute; một chuỗi d&agrave;i 5000 th&igrave; sẽ c&oacute; rất nhiều c&aacute;ch giải m&atilde; kh&aacute;c nhau v&agrave; với nhiều giải m&atilde; đ&oacute;, bạn sẽ t&igrave;m thấy &iacute;t nhất hai giải m&atilde; kh&aacute;c nhau c&oacute; &yacute; nghĩa&rdquo;.</p>\n<p>Alice: \"C&oacute; bao nhi&ecirc;u c&aacute;ch giải m&atilde; kh&aacute;c nhau?\"</p>\n<p>Bob: \"Jillions!\"</p>\n</blockquote>\n<p>V&igrave; một số l&yacute; do, Alice vẫn kh&ocirc;ng cảm thấy thuyết phục bởi lập luận của Bob, v&igrave; vậy c&ocirc; ấy y&ecirc;u cầu một chương tr&igrave;nh sẽ x&aacute;c định số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho một chuỗi k&yacute; tự nhất định bằng c&aacute;ch sử dụng m&atilde; của c&ocirc; ấy.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm nhiều tập hợp đầu v&agrave;o. Mỗi tập hợp sẽ bao gồm một d&ograve;ng tối đa l&agrave; 5000 chữ số đại diện cho một c&aacute;ch m&atilde; h&oacute;a hợp lệ (v&iacute; dụ: kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o bắt đầu bằng số 0). Sẽ kh&ocirc;ng c&oacute; khoảng trắng giữa c&aacute;c chữ số. D&ograve;ng đầu v&agrave;o l&agrave; '0' sẽ kết th&uacute;c đầu v&agrave;o v&agrave; kh&ocirc;ng được xử l&yacute;.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập hợp đầu v&agrave;o, in ra số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho chuỗi k&yacute; tự đầu v&agrave;o. Tất cả c&aacute;c c&acirc;u trả lời sẽ nằm trong phạm vi của một số nguy&ecirc;n c&oacute; dấu 64 bit.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>25114\n1111111111\n3333333333\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n89\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3768699c-b25c-4b11-ae7e-a65919401f8e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACODE _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "acpc10a-whats-next-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Dãy số liên tiếp",
  "content": "<p>Theo Wikipedia, một cấp số cộng (AP) l&agrave; một d&atilde;y số sao cho hiệu của hai phần tử li&ecirc;n tiếp bất kỳ của d&atilde;y l&agrave; một hằng số. V&iacute; dụ: d&atilde;y 3, 5, 7, 9, 11, 13 ,. . . l&agrave; một cấp số cộng với hiệu chung l&agrave; 2. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số cộng c&oacute; hiệu chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<div id=\"problem-body\">\n<p>Mặt kh&aacute;c, một cấp số nh&acirc;n (GP) l&agrave; một d&atilde;y số trong đ&oacute; mỗi số hạng đứng sau số hạng đầu ti&ecirc;n được t&igrave;m thấy bằng c&aacute;ch nh&acirc;n số hạng trước với một số kh&aacute;c 0 cố định được gọi l&agrave; tỷ số chung. V&iacute; dụ, d&atilde;y số 2, 6, 18, 54 ,. . . l&agrave; một cấp số nh&acirc;n với tỉ số chung 3. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp độ h&igrave;nh học c&oacute; tỉ số chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<p>Với ba phần tử li&ecirc;n tiếp của một d&atilde;y, bạn cần x&aacute;c định kiểu d&atilde;y số v&agrave; phần tử kế tiếp tiếp theo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một hoặc nhiều trường hợp thử nghiệm. Mỗi trường hợp được chỉ định tr&ecirc;n một d&ograve;ng với ba số nguy&ecirc;n (&minus;10, 000 &lt; a1, a2, a3 &lt;10, 000) trong đ&oacute; a1, a2 v&agrave; a3 l&agrave; kh&aacute;c nhau.</li>\n<li>Trường hợp cuối c&ugrave;ng được theo sau bởi một d&ograve;ng c&oacute; ba số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất c&oacute; dạng: XX v</li>\n<li>Trong đ&oacute; XX l&agrave; AP hoặc GP t&ugrave;y thuộc v&agrave;o d&atilde;y số đ&atilde; cho l&agrave; cấp số cộng hoặc cấp h&igrave;nh nh&acirc;n. v l&agrave; phần tử tiếp theo của d&atilde;y đ&atilde; cho. Tất cả c&aacute;c trường hợp đầu v&agrave;o được đảm bảo l&agrave; một cấp số cộng hoặc nh&acirc;n.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 7 10\n2 6 18\n0 0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>AP 13\nGP 54</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c9ba12c-7753-454b-918b-62e1dc0e7666",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACPC10A_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adfruits-advanced-fruits-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Trái cây hoa quả",
  "content": "<p>C&ocirc;ng ty \"Tr&aacute;i c&acirc;y thế kỷ 21\" đ&atilde; chuy&ecirc;n tạo ra c&aacute;c loại tr&aacute;i c&acirc;y mới bằng c&aacute;ch chuyển gen từ tr&aacute;i c&acirc;y n&agrave;y v&agrave;o bộ gen của tr&aacute;i c&acirc;y kh&aacute;c. Hầu hết c&aacute;c phương ph&aacute;p n&agrave;y kh&ocirc;ng hiệu quả, nhưng đ&ocirc;i khi, trong một số trường hợp hiếm hoi, một loại tr&aacute;i c&acirc;y mới xuất hiện c&oacute; vị giống như hỗn hợp giữa cả hai loại tr&aacute;i c&acirc;y.</p>\n<div id=\"problem-body\">\n<p>Một chủ đề thảo luận lớn trong c&ocirc;ng ty l&agrave; \"C&aacute;c c&acirc;y s&aacute;ng tạo mới n&ecirc;n được gọi như thế n&agrave;o?\" Tất nhi&ecirc;n, một hỗn hợp giữa t&aacute;o v&agrave; l&ecirc; c&oacute; thể được gọi l&agrave; apple-pear, nhưng điều n&agrave;y nghe c&oacute; vẻ kh&ocirc;ng th&uacute; vị cho lắm. Cuối c&ugrave;ng, &ocirc;ng chủ quyết định sử dụng chuỗi ngắn nhất chứa cả t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y ban đầu l&agrave;m chuỗi con l&agrave;m t&ecirc;n mới. V&iacute; dụ: \"applear\" chứa \"apple\" v&agrave; \"pear\" (APPLEar v&agrave; apPlEAR) v&agrave; kh&ocirc;ng c&oacute; chuỗi n&agrave;o ngắn hơn c&oacute; c&ugrave;ng thuộc t&iacute;nh. V&iacute; dụ, sự kết hợp giữa cranberry v&agrave; boysenberry sẽ được gọi l&agrave; \"boysecranberry\" or a \"craboysenberry\".</p>\n<p>C&ocirc;ng việc của bạn l&agrave; viết một chương tr&igrave;nh t&iacute;nh to&aacute;n một c&aacute;i t&ecirc;n ngắn nhất cho tổ hợp của hai loại quả đ&atilde; cho. Thuật to&aacute;n của bạn phải hiệu quả, nếu kh&ocirc;ng, n&oacute; kh&ocirc;ng chắc sẽ thực thi trong thời gian quy định đối với t&ecirc;n của c&aacute;c quả d&agrave;i.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Mỗi d&ograve;ng của tệp đầu v&agrave;o chứa hai chuỗi k&yacute; tự biểu thị t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y được kết hợp. Tất cả c&aacute;c t&ecirc;n c&oacute; độ d&agrave;i tối đa l&agrave; 100 v&agrave; chỉ bao gồm c&aacute;c k&yacute; tự chữ c&aacute;i. Đầu v&agrave;o được kết th&uacute;c ở cuối tệp.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra t&ecirc;n ngắn nhất của quả kết quả tr&ecirc;n một d&ograve;ng. Nếu c&oacute; thể c&oacute; nhiều hơn một t&ecirc;n ngắn nhất, bất kỳ t&ecirc;n n&agrave;o cũng được chấp nhận.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>apple peach\nananas banana\npear peach</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>appleach\nbananas\npearch</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/33508314-1a57-4511-a0a9-2cb89881a317",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADFRUITS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "anarc05b-the-double-helix-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Double HeLiX",
  "content": "<p>Hai d&atilde;y số nguy&ecirc;n, tăng dần, nghi&ecirc;m ngặt được đưa ra. Bất kỳ số nguy&ecirc;n chung n&agrave;o giữa hai d&atilde;y đều tạo th&agrave;nh giao điểm. Lấy v&iacute; dụ về hai d&atilde;y sau m&agrave; c&aacute;c điểm giao nhau được in đậm:</p>\n<div id=\"problem-body\">\n<ul>\n<li>First= 3 5&nbsp;<strong>7</strong>&nbsp;9 20&nbsp;<strong>25</strong>&nbsp;30 40&nbsp;<strong>55</strong>&nbsp;56&nbsp;<strong>57</strong>&nbsp;60 62</li>\n<li>Second= 1 4&nbsp;<strong>7</strong>&nbsp;11 14&nbsp;<strong>25</strong>&nbsp;44 47&nbsp;<strong>55</strong>&nbsp;<strong>57</strong>&nbsp;100</li>\n</ul>\n<p>Bạn c&oacute; thể duyệt qua 2 d&atilde;y theo c&aacute;ch sau:</p>\n<ol>\n<li>Bạn c&oacute; thể bắt đầu ở phần đầu của bất kỳ d&atilde;y n&agrave;o trong hai d&atilde;y. B&acirc;y giờ h&atilde;y bắt đầu tiến về ph&iacute;a trước.</li>\n<li>Tại mỗi điểm giao nhau, bạn c&oacute; thể lựa chọn tiếp tục với c&ugrave;ng một d&atilde;y m&agrave; bạn hiện đang sử dụng hoặc chuyển sang d&atilde;y c&ograve;n lại.</li>\n</ol>\n<p>Mục ti&ecirc;u l&agrave; tạo ra một đường dẫn tạo ra tổng dữ liệu tối đa m&agrave; bạn đ&atilde; duyệt qua. Trong v&iacute; dụ tr&ecirc;n, tổng lớn nhất c&oacute; thể l&agrave; 450, l&agrave; kết quả của việc cộng 3, 5, 7, 9, 20, 25, 44, 47, 55, 56, 57, 60 v&agrave; 62</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một số trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm sẽ được chỉ định tr&ecirc;n hai d&ograve;ng ri&ecirc;ng biệt. Mỗi d&ograve;ng biểu thị một d&atilde;y v&agrave; được chỉ định bằng c&aacute;ch sử dụng định dạng sau:</p>\n<pre class=\"language-markup\"><code>n v1 v2 ... vn</code></pre>\n<p>Trong đ&oacute; n l&agrave; độ d&agrave;i của d&atilde;y v&agrave; vi l&agrave; phần tử thứ i trong d&atilde;y đ&oacute;. Mỗi d&atilde;y sẽ c&oacute; &iacute;t nhất một phần tử nhưng kh&ocirc;ng qu&aacute; 10.000. Tất cả c&aacute;c phần tử nằm trong khoảng -10.000 đến 10.000. D&ograve;ng cuối c&ugrave;ng của đầu v&agrave;o bao gồm một số 0 duy nhất, kh&ocirc;ng phải l&agrave; một phần của c&aacute;c trường hợp thử nghiệm.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y viết tr&ecirc;n một d&ograve;ng ri&ecirc;ng biệt, tổng lớn nhất c&oacute; thể được tạo ra.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>13 3 5 7 9 20 25 30 40 55 56 57 60 62\n11 1 4 7 11 14 25 44 47 55 57 100\n4 -5 100 1000 1005\n3 -12 1000 1001\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>450\n2100</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/44a45100-ebf2-402a-bbd8-145d2d708035",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ANARC05B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "aps-amazing-prime-sequence-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chuỗi số nguyên tố kỳ diệu",
  "content": "<p>Bablu rất th&iacute;ch tập hợp v&agrave; chuỗi số ... Sau khi nghi&ecirc;n cứu Chuỗi Fibonacci ở lớp IX, anh ấy đ&atilde; rất ấn tượng v&agrave; anh ấy đ&atilde; thiết kế chuỗi của ri&ecirc;ng m&igrave;nh như sau ...</p>\n<div id=\"problem-body\">\n<ul>\n<li>a[0] = a[1] = 0&nbsp;</li>\n<li>Đối với n &gt; 1, a[n] = a[n - 1] + f(n), trong đ&oacute; f(n) l&agrave; số nguy&ecirc;n tố nhỏ nhất của n.</li>\n</ul>\n<p>Anh ấy cũng rất th&iacute;ch lập tr&igrave;nh v&agrave; do đ&oacute; đ&atilde; thực hiện một chương tr&igrave;nh nhỏ để t&igrave;m a[n], nhưng v&igrave; anh ấy kh&ocirc;ng giỏi lập tr&igrave;nh cho lắm. V&igrave; vậy, anh ấy y&ecirc;u cầu bạn gi&uacute;p đỡ. Nhiệm vụ của bạn l&agrave; t&igrave;m một a[n] cho d&atilde;y số tr&ecirc;n&hellip;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>M&atilde; của bạn sẽ được kiểm tra cho nhiều Trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu v&agrave;o chứa T (&lt;= 100), số lượng trường hợp thử nghiệm.</li>\n<li>T d&ograve;ng tiếp theo chứa một số N. ($1 &lt; N &lt;10 ^{7}$).</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Một d&ograve;ng chứa a[n], l&agrave; số thứ n của chuỗi cho mỗi trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n3\n4</code></pre>\n<p>Đầu ra</p>\n<pre class=\"language-markup\"><code>2\n5\n7</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bfd0c6e7-5871-47dd-8520-e284d9e2d9f4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "APS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "broken-broken-keyboard-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "BROKEN - Broken Keyboard",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BROKEN - Broken Keyboard</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Bruce Force's keyboard is broken, only a few keys are still working. Bruce has figured out he can still type texts by switching the keyboard layout whenever he needs to type a letter which is currently not mapped to any of the&nbsp;<em>m</em>&nbsp;working keys of the keyboard.</p>\n<p>You are given a text that Bruce wishes to type, and he asks you if you can tell him the maximum number of consecutive characters in the text which can be typed without having to switch the keyboard layout. For simplicity, we assume that each key of the keyboard will be mapped to exactly one character, and it is not possible to type other characters by combination of different keys. This means that Bruce wants to know the length of the largest substring of the text which consists of at most&nbsp;<em>m</em>&nbsp;different characters.</p>\n<h3>Input</h3>\n<p>The input contains several test cases, each test case consisting of two lines. The first line of each test case contains the number&nbsp;<em>m</em>&nbsp;(<em>1 &le; m &le; 128</em>), which specifies how many keys on the keyboard are still working. The second line of each test case contains the text which Bruce wants to type. You may assume that the length of this text does not exceed 1 million characters. Note that the input may contain space characters, which should be handled like any other character.</p>\n<p>The last test case is followed by a line containing one zero.</p>\n<h3>Output</h3>\n<p>For each test case, print one line with the length of the largest substring of the text which consists of at most&nbsp;<em>m</em>&nbsp;different characters.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\nThis can't be solved by brute force.\n1\nMississippi\n0\n\n<strong>Output:</strong>\n7\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e792250a-77bb-4c8c-80a4-1997c46d22b5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BROKEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef906f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "buglife-a-bugs-life-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BUGLIFE - A Bug’s Life",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BUGLIFE - A Bug&rsquo;s Life</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Professor Hopper is researching the sexual behavior of a rare species of bugs. He assumes that they feature two different genders and that they only interact with bugs of the opposite gender. In his experiment, individual bugs and their interactions were easy to identify, because numbers were printed on their backs.<br /><br />Given a list of bug interactions, decide whether the experiment supports his assumption of two genders with no homosexual bugs or if it contains some bug interactions that falsify it.</p>\n<h3>Input</h3>\n<p>The first line of the input contains the number of scenarios. Each scenario starts with one line giving the number of bugs (at least one, and up to 2000) and the number of interactions (up to 1000000) separated by a single space. In the following lines, each interaction is given in the form of two distinct bug numbers separated by a single space. Bugs are numbered consecutively starting from one.</p>\n<h3>Output</h3>\n<p>The output for every scenario is a line containing &ldquo;<tt>Scenario #i:</tt>&rdquo;, where i is the number of the scenario starting at 1, followed by one line saying either &ldquo;<tt>No suspicious bugs found!</tt>&rdquo; if the experiment is consistent with his assumption about the bugs&rsquo; sexual behavior, or &ldquo;<tt>Suspicious bugs found!</tt>&rdquo; if Professor Hopper&rsquo;s assumption is definitely wrong.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3 3\n1 2\n2 3\n1 3\n4 2\n1 2\n3 4\n\n<strong>Output:</strong>\nScenario #1:\nSuspicious bugs found!\nScenario #2:\nNo suspicious bugs found!</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4b7dee50-ca6c-4e37-9a68-7f56857bc740",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BUGLIFE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9070"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bytesm2-philosophers-stone-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "BYTESM2 - Philosophers Stone",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BYTESM2 - Philosophers Stone</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>One of the secret chambers in Hogwarts is full of philosopher&rsquo;s stones. The floor of the chamber is covered by h &times; w square tiles, where there are h rows of tiles from front (first row) to back (last row) and w columns of tiles from left to right. Each tile has 1 to 100 stones on it. Harry has to grab as many philosopher&rsquo;s stones as possible, subject to the following restrictions:</p>\n<ul>\n<li>He starts by choosing any tile in the first row, and collects the philosopher&rsquo;s stones on that tile. Then, he moves to a tile in the next row, collects the philosopher&rsquo;s stones on the tile, and so on until he reaches the last row.</li>\n<li>When he moves from one tile to a tile in the next row, he can only move to the tile just below it or diagonally to the left or right.</li>\n</ul>\nGiven the values of h and w, and the number of philosopher&rsquo;s stones on each tile, write a program to compute the maximum possible number of philosopher&rsquo;s stones Harry can grab in one single trip from the first row to the last row.\n<h3>Input</h3>\n<p>The first line consists of a single integer T, the number of test cases. In each of the test cases, the first line has two integers. The first integer h (1 &lt;= h &lt;= 100) is the number of rows of tiles on the floor. The second integer w (1 &lt;= w &lt;= 100) is the number of columns of tiles on the floor. Next, there are h lines of inputs. The i-th line of these, specifies the number of philosopher&rsquo;s stones in each tile of the i-th row from the front. Each line has w integers, where each integer m (0 &lt;= m &lt;= 100) is the number of philosopher&rsquo;s stones on that tile. The integers are separated by a space character.</p>\n<h3>Output</h3>\n<p>The output should consist of T lines, (1 &lt;= T &lt;= 100), one for each test case. Each line consists of a single integer, which is the maximum possible number of philosopher&rsquo;s stones Harry can grab, in one single trip from the first row to the last row for the corresponding test case.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n6 5\n3 1 7 4 2\n2 1 3 1 1\n1 2 2 1 8\n2 2 1 5 3\n2 1 4 4 4\n5 2 7 5 1\n\n<strong>Output:</strong>\n32 \t\n\n//7+1+8+5+4+7=32</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/770143ff-175f-48e7-9af4-6309fc2d4791",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BYTESM2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9071"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "candy-candy-i-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bài toán chia kẹo",
  "content": "<p>Jennifer l&agrave; gi&aacute;o vi&ecirc;n năm đầu ti&ecirc;n của trường tiểu học. H&ocirc;m nay c&ocirc; ấy đ&atilde; đi du lịch với lớp m&igrave;nh. C&ocirc; đ&atilde; lấy cho mỗi trẻ một g&oacute;i kẹo. Thật kh&ocirc;ng may, k&iacute;ch thước của c&aacute;c g&oacute;i kh&ocirc;ng giống nhau.</p>\n<div id=\"problem-body\">\n<p>Jennifer sợ rằng mỗi đứa trẻ sẽ muốn c&oacute; g&oacute;i kẹo lớn nhất v&agrave; điều n&agrave;y sẽ dẫn đến những cuộc c&atilde;i v&atilde; hoặc thậm ch&iacute; đ&aacute;nh nhau giữa c&aacute;c đứa trẻ. C&ocirc; ấy muốn tr&aacute;nh điều n&agrave;y. V&igrave; vậy, c&ocirc; đ&atilde; quyết định mở tất cả c&aacute;c g&oacute;i, đếm số kẹo trong mỗi g&oacute;i v&agrave; chuyển một số kẹo từ g&oacute;i lớn hơn sang g&oacute;i nhỏ hơn để mỗi g&oacute;i sẽ chứa số kẹo bằng nhau. C&acirc;u hỏi đặt ra l&agrave; c&ocirc; ấy phải chuyển bao nhi&ecirc;u vi&ecirc;n kẹo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Tệp đầu v&agrave;o bao gồm một số khối dữ liệu. Mỗi khối bắt đầu bằng số lượng g&oacute;i kẹo N (1 &lt;= N &lt;= 10000), tiếp theo l&agrave; N số nguy&ecirc;n (mỗi số nhỏ hơn 1000) ở c&aacute;c d&ograve;ng ri&ecirc;ng biệt, cho biết số kẹo trong mỗi g&oacute;i. Sau khối dữ liệu cuối c&ugrave;ng l&agrave; số -1.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Tệp đầu ra phải chứa một d&ograve;ng với số lần chuyển nhỏ nhất cho mỗi khối dữ liệu. Một động t&aacute;c chuyển bao gồm lấy một vi&ecirc;n kẹo từ một g&oacute;i v&agrave; đặt n&oacute; v&agrave;o một c&aacute;i kh&aacute;c. Nếu kh&ocirc;ng thể c&oacute; số kẹo giống nhau trong mỗi g&oacute;i th&igrave; in ra số -1.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n1\n1\n1\n1\n6\n2\n3\n4\n-1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4\n-1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7d5b60f9-93cc-44ef-ad1e-1402585b1682",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CANDY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9072"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "canton-count-on-cantor-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "CANTON - Count on Cantor",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CANTON - Count on Cantor</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>One of the famous proofs of modern mathematics is Georg Cantor's demonstration that the set of rational numbers is enumerable. The proof works by using an explicit enumeration of rational numbers as shown in the diagram below.</p>\n<pre>1/1 1/2 1/3 1/4 1/5 ...\n2/1 2/2 2/3 2/4\n3/1 3/2 3/3\n4/1 4/2\n5/1\n</pre>\n<p>In the above diagram, the first term is 1/1, the second term is 1/2, the third term is 2/1, the fourth term is 3/1, the fifth term is 2/2, and so on.</p>\n<h3>Input</h3>\n<p>The input starts with a line containing a single integer&nbsp;<strong>t</strong>&nbsp;&lt;= 20, the number of test cases.&nbsp;<strong>t</strong>&nbsp;test cases follow.</p>\n<p>Then, it contains a single number per line.</p>\n<h3>Output</h3>\n<p>You are to write a program that will read a list of numbers in the range from 1 to 10^7 and will print for each number the corresponding term in Cantor's enumeration as given below.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3\n14\n7\n\n<strong>Output:</strong>\nTERM 3 IS 2/1\nTERM 14 IS 2/4\nTERM 7 IS 1/4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/13d3258c-72fb-4fc7-8a7a-6cbb18b4d082",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CANTON_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9073"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cmexpr-complicated-expressions-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CMEXPR - Complicated Expressions",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CMEXPR - Complicated Expressions</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The most important activity of ACM is the GSM network. As the mobile phone operator, ACM must build its own transmitting stations. It is very important to compute the exact behaviour of electro-magnetic waves. Unfortunately, prediction of electro-magnetic fields is a&nbsp;very complex task and the formulas describing them are very long and hard-to-read. For example, Maxwell's Equations describing the basic laws of electrical engineering are really tough.</p>\n<p>ACM has designed its own computer system that can make some field computations and produce results in the form of mathematic expressions. Unfortunately, by generating the expression in several steps, there are always some unneeded parentheses inside the expression. Your task is to take these partial results and make them \"nice\" by removing all unnecessary parentheses.</p>\n<h3>Input</h3>\n<p>There is a&nbsp;single positive integer&nbsp;<var>T</var>&nbsp;on the first line of input (equal to about 10000). It stands for the number of expressions to follow. Each expression consists of a&nbsp;single line containing only lowercase letters, operators (<tt>+</tt>,&nbsp;<tt>-</tt>,&nbsp;<tt>*</tt>,&nbsp;<tt>/</tt>) and parentheses (<tt>(</tt>&nbsp;and&nbsp;<tt>)</tt>). The letters are variables that can have any value, operators and parentheses have their usual meaning. Multiplication and division have higher priority then subtraction and addition. All operations with the same priority are computed from left to right (operators are left-associative). There are no spaces inside the expressions. No input line contains more than 250 characters.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>Print a&nbsp;single line for every expression. The line must contain the same expression with unneeded parentheses removed. You must remove as many parentheses as possible without changing the semantics of the expression. The semantics of the expression is considered the same if and only if any of the following conditions hold:</p>\n<div align=\"left\">\n<ul>\n<li>The ordering of operations remains the same. That means \"(<var>a</var>+<var>b</var>)+<var>c</var>\" is the same as \"<var>a</var>+<var>b</var>+<var>c</var>\", and \"<var>a</var>+(<var>b</var>/<var>c</var>)\" is the same as \"<var>a</var>+<var>b</var>/<var>c</var>\".</li>\n<li>The order of some operations is swapped but the result remains unchanged with respect to the addition and multiplication associativity. That means \"<var>a</var>+(<var>b</var>+<var>c</var>)\" and \"(<var>a</var>+<var>b</var>)+<var>c</var>\" are the same. We can also combine addition with subtraction and multiplication with division, if the subtraction or division is the second operation. For example, \"<var>a</var>+(<var>b</var>-<var>c</var>)\" is the same as \"<var>a</var>+<var>b</var>-<var>c</var>\".</li>\n</ul>\n</div>\n<p>You cannot use any other laws, namely you cannot swap left and right operands and you cannot replace \"<var>a</var>-(<var>b</var>-<var>c</var>)\" with \"<var>a</var>-<var>b</var>+<var>c</var>\".</p>\n<h3>Example</h3>\n<p>Sample Input:</p>\n<pre><tt>8\n(a+(b*c))\n((a+b)*c)\n(a*(b*c))\n(a*(b/c)*d)\n((a/(b/c))/d)\n((x))\n(a+b)-(c-d)-(e/f)\n(a+b)+(c-d)-(e+f)\n</tt></pre>\n<p>Sample Output:</p>\n<pre><tt>a+b*c\n(a+b)*c\na*b*c\na*b/c*d\na/(b/c)/d\nx\na+b-(c-d)-e/f\na+b+c-d-(e+f)</tt></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ff522b8d-a37d-41d3-8e0b-3c7add848e62",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CMEXPR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9074"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "codfury-megatron-and-his-rage",
  "tags": [],
  "level": "BEGINNER",
  "title": "CODFURY - Megatron and his rage",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CODFURY - Megatron and his rage</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Infuriated by the Decepticons' defeat after a long epic battle with the Autobots, Megatron, in his rage, has decided to destroy all the planets on his way back to Cybertron from Earth. There are multiple planets between Earth and Cybertron, and each planet has some number of Autobots to guard it from him. Since Megatron is low on ammo, he wants to fight as few autobots as possible (in fact, not more than \"M\" of them ) on his way back.</div>\n<div id=\"_mcePaste\">You need to find the maximum number of planets he can possibly destroy in his journey.</div>\n<div id=\"_mcePaste\">NOTE: Megatron can start his \"destruction spree\" from any planet, and can only move to the next planet from the planet he's currently on.</div>\n<p>Infuriated by the Decepticons' defeat after a long epic battle with the Autobots, Megatron, in his rage, has decided to destroy all the planets on his way back to Cybertron from Earth. There are multiple planets between Earth and Cybertron, and each planet has some number of Autobots to guard it from him. Since Megatron is low on ammo, he wants to fight as few autobots as possible on his way back.He can defeat no more than \"M\" autobots in total.</p>\n<p>You need to find the maximum number of planets he can possibly destroy in his journey.</p>\n<p>&nbsp;</p>\n<p>NOTE: Megatron can start his \"destruction spree\" from any planet, and can only move to the next planet from the planet he's currently on.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>You will receive one integer \"T\" denoting the number of test cases. (T&lt;=20)</p>\n<p>Then, the next line will contain two non-negative space-separated integers \"P\" and \"M\", where P is the number of planets on his way back (P&lt;=50000) and M is the maximum number of Autobots that Megatron can see (M&lt;=1000,000).</p>\n<p>After that, one line containing P integers separated by a single space will denote the number of Autobots present in each planet. (For each planet there will be no more than 1000 autobots).</p>\n<h3>Output</h3>\n<p>Your output should consist of \"T\" pairs of space-separated integers, one pair per line, denoting the number of Autobots Megatron will fight and the number of planets he will destroy respectively.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4 50\n20 5 23 45\n\n<strong>Output:</strong>\n48 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/76e57697-e3b3-4ddb-bd22-f161b3cedbc7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CODFURY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9075"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "crypto2-the-bytelandian-cryptographer-act-ii-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "CRYPTO2 - The Bytelandian Cryptographer (Act II)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CRYPTO2 - The Bytelandian Cryptographer (Act II)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Encouraged by his last successful exploit, the Bytelandian fanatic cryptographer impudently encrypted a three-digit number by subtracting 1 from it.</p>\n<p align=\"justify\">This time he has&nbsp;<strong>really</strong>&nbsp;overstepped the mark! Soldier, go and beat him, for Burger King &amp; Country! Oh, and remember your good manners, use Brainf**k (no other language is allowed).</p>\n<h3>Input</h3>\n<p align=\"justify\">An encrypted 3-digit positive integer.</p>\n<h3>Output</h3>\n<p align=\"justify\">The decrypted value.</p>\n<h3>Example</h3>\n<div align=\"left\">Input:\n<pre>699</pre>\n<p>Output:</p>\n<pre>700</pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/79aeced2-b2e8-46cc-8412-4b5ec7a28821",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CRYPTO2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9076"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ctain-containers-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "CTAIN - Containers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CTAIN - Containers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>We are given&nbsp;<em>n</em>&nbsp;containers, where 1 &lt;=&nbsp;<em>n</em>&nbsp;&lt;= 4. At the beginning all of them are full of water. The liter capacity of the&nbsp;<em>i</em>-th container is a natural number&nbsp;<em>o</em><sub><em>i</em>&nbsp;</sub>satisfying inequalities 1 &lt;=&nbsp;<em>o<sub>i</sub>&nbsp;</em>&lt;= 49.&nbsp;<br />Three kinds of moves can be made: &nbsp;</p>\n<ol type=\"1\">\n<li>Pouring the whole content of one container into another. This move can be made unless there is too little room in the second container.&nbsp;</li>\n<li>Filling up one container with part of the water from another one.</li>\n<li>Pouring away the whole content of one container into a drain.&nbsp;</li>\n</ol>\n<p>&nbsp;</p>\n<h3>Task</h3>\n<p>&nbsp;</p>\n<p>Write a program that for each test case:</p>\n<ul type=\"disc\">\n<li>Reads the number of containers&nbsp;<em>n</em>, the capacity of each container and the requested final amount of water in each container.</li>\n<li>Verifies, whether there exist a series of moves which leads to the requested final situation, and if there is one, the program computes the minimal number of moves leading to the requested situation,</li>\n<li>Writes the result. The result should be the minimal number of moves leading to the requested final situation, or one word \"NO\" if there is no such a sequence of moves.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>One integer in the first line, stating the number of test cases, followed by a blank line. There will be not more than 20 tests.</p>\n<p>For each test case, at the first line, one positive integer&nbsp;<em>n</em>&nbsp;is written,&nbsp;<em>n</em>&nbsp;&lt;= 4, this is the number of containers. There are&nbsp;<em>n</em>&nbsp;positive integers written in the second line. These are the capacities of the containers (the&nbsp;<em>i</em>-th integer&nbsp;<em>o</em><sub><em>i</em></sub>&nbsp;denotes the capacity if the&nbsp;<em>i</em>-th&nbsp; container,1 &lt;=&nbsp;<em>o</em><sub><em>i</em></sub>&nbsp;&lt;= 49). In the third line there are written&nbsp;<em>n</em>&nbsp;numbers. These are the requested final volumes of water in the containers (the&nbsp;<em>i</em>-th integer&nbsp;<em>w</em><sub><em>i</em></sub>&nbsp;denotes the requested final volume of water in the&nbsp;<em>i</em>-th container, 0 &lt;=&nbsp;<em>w</em><sub><em>i</em></sub>&nbsp;&lt;=&nbsp;<em>o</em><sub><em>i</em></sub>). All integers in the second and the third line are separated by single spaces.</p>\n<p>The test cases will be separated by a single blank line.</p>\n<h3>Output</h3>\n<p>For each test case : write one integer - the minimal number of moves which lead to the requested final situation or write only one word \"NO\" if it is not possible to reach the requested final situation making only allowed moves.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n\n3\n3 5 5\n0 0 4\n\n2\n20 25\n10 16\n\n<strong>Output:</strong>\n6\nNO</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/42cfe4e7-6b00-48a8-af80-c8b24e0cc174",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTAIN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9077"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cubefr-cube-free-numbers-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "CUBEFR - Cube Free Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CUBEFR - Cube Free Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A cube free number is a number who&rsquo;s none of the divisor is a cube number (A cube number is a cube of a integer like 8 (2 * 2 * 2) , 27 (3 * 3 * 3) ). So cube free numbers are 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18 etc (we will consider 1 as cube free). 8, 16, 24, 27, 32 etc are not cube free number. So the position of 1 among the cube free numbers is 1, position of 2 is 2, 3 is 3 and position of 10 is 9. Given a positive number you have to say if its a cube free number and if yes then tell its position among cube free numbers.</p>\n<h3>Input</h3>\n<p>First line of the test case will be the number of test case T (1 &lt;= T &lt;= 100000) . Then T lines follows. On each line you will find a integer number n (1 &lt;= n &lt;= 1000000).</p>\n<h3>Output</h3>\n<p>For each input line, print a line containing&nbsp;<tt>&ldquo;Case I: &rdquo;</tt>, where I is the test case number. Then if it is not a cube free number then print&nbsp;<tt>&ldquo;Not Cube Free&rdquo;</tt>. Otherwise print its position among the cube free numbers.</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n<strong>Sample Output:</strong>\nCase 1: 1\nCase 2: 2\nCase 3: 3\nCase 4: 4\nCase 5: 5\nCase 6: 6\nCase 7: 7\nCase 8: Not Cube Free\nCase 9: 8\nCase 10: 9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/81a48f17-a932-4956-9a74-a1b681eb471f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CUBEFR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9078"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dcepc501-save-thy-toys-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DCEPC501 - Save Thy Toys",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPC501 - Save Thy Toys</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Leonard is very fond of buying rare and expensive science fiction toys. He keeps his collection in a sequential order of the date on which the toy was bought in a special closet so that his roomie Sheldon never gets hold of his toys. But because of his bad luck Leonard once loses a bet to Sheldon and Sheldon demands a share Leonard&rsquo;s toys. Since Leonard doesn&rsquo;t want to loose much money, he decides upon a strategy to reduce his loss to minimum.</p>\n<p>Leonard, beginning from the first toy in his closet will pick some toys, say \"x\" toys in sequence. Sheldon will then pick the next \"x\" toys (Note that Sheldon picks equal no. of toys as picked by Leonard in his move unless the remaining toys are less than \"x\". In that case he picks all of the remaining). This will keep going on till no more toys are left in the closet for Leonard to pick. You are given the sequence of toys with their price. Help Leonard in maximizing the total price of all toys he picks.</p>\n<p>Leonard in his each turn can either pick only 1 or 2 or 3 toys (\"x\" described above can take value either 1, 2 or 3).</p>\n<h3>Input</h3>\n<p>First line specifies T, the number of test cases.</p>\n<p>Each test case contains N in the first line. Second line contains N integers as described above.</p>\n<h3>Output</h3>\n<p>Output 1 line for each test case giving the maximum possible value of the total sum of all toys Leonard picks.</p>\n<h3>Constraints</h3>\n<p>1&lt;=T&lt;=10</p>\n<p>1&lt;=N&lt;=100000</p>\n<p>1&lt;=Price of toys&lt;=1000000</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n5 4 3 2\n6\n10 8 7 11 15 20\n\n<strong>Output:</strong>\n12\n53</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1d7abbf5-ae07-48b3-902d-e2b26f489066",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DCEPC501_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9079"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "facefrnd-friends-of-friends-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "FACEFRND - Friends of Friends",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FACEFRND - Friends of Friends</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Bob uses a social networking site almost all the time. He was wondering what are Friends of Friends in that social networking site? If &ldquo;X&rdquo; is his friend, and &ldquo;Y&rdquo; is X&rsquo;s friend but &ldquo;Y&rdquo; is not his friend, then &ldquo;Y&rdquo; is called his friend of friend. You have to find how many friends of friends Bob has. (Each user in that social networking site has a unique 4-digit ID number)</p>\n<h3>Input</h3>\n<p>First line contains a integer &ldquo;N&rdquo; (1 &lt;= N &lt;= 100) the number of friends in Bob's Profile. Then follow N lines.</p>\n<p>First Integer in each line is the ID number of Bob's friend, then an integer &ldquo;M&rdquo; (1 &lt;= M &lt;= 100) is the number of people in his friend list. Then follow M integers in that line, denoting the ID number of friends in his friend list (excluding Bob).&nbsp;</p>\n<h3>Output</h3>\n<p>Output a single integer denoting Bob's number of friends of friends.</p>\n<p><strong>Example</strong></p>\n<pre><strong>Input:</strong>\n3\n2334 5 1256 4323 7687 3244 5678\n1256 2 2334 7687\n4323 5 2334 5678 6547 9766 9543\n\n<strong>Output:</strong>\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/897a4ede-b591-4969-8798-be866c71820e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FACEFRND_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fashion-fashion-shows-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "FASHION - Fashion Shows",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FASHION - Fashion Shows</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A fashion show rates participants according to their level of hotness. Two different fashion shows were organized, one for men and the other for women. A date for the third is yet to be decided ;) .</p>\n<p>Now the results of both fashion shows are out. The participants of both the fashion shows have decided to date each other, but as usual they have difficuly in choosing their partners. The Maximum Match dating serive (MMDS) comes to their rescue and matches them in such a way that that maximizes the hotness bonds for all couples.</p>\n<p>If a man has been rated at hotness level&nbsp;<tt>x</tt>&nbsp;and a women at hotness level&nbsp;<tt>y</tt>, the value of their hotness bond is&nbsp;<tt>x*y</tt>.</p>\n<p>Both fashion shows contain&nbsp;<strong>N</strong>&nbsp;participants each. MMDS has done its job and your job is to find the sum of hotness bonds for all the couples that MMDS has proposed.</p>\n<h3>Input</h3>\n<p>The first line of the input contains an integer&nbsp;<strong>t</strong>, the number of test cases.&nbsp;<strong>t</strong>&nbsp;test cases follow.</p>\n<p>Each test case consists of 3 lines:</p>\n<ul>\n<li>The first line contains a single integer&nbsp;<strong>N</strong>&nbsp;(1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 1000).</li>\n<li>The second line contains&nbsp;<strong>N</strong>&nbsp;integers separated by single spaces denoting the hotness levels of the men.</li>\n<li>The third line contains&nbsp;<strong>N</strong>&nbsp;integers separated by single spaces denoting the hotness levels of the women.</li>\n</ul>\n<p>All hotness ratings are on a scale of 0 to 10.</p>\n<h3>Output</h3>\n<p>For each test case output a single line containing a single integer denoting the sum of the hotness bonds for all pairs that MMDS has proposed.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n1 1\n3 2\n3\n2 3 2\n1 3 2\n\n<strong>Output:</strong>\n5\n15</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/602d4856-51d9-4210-8e7c-4a0b8bf834e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FASHION_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fctrl-factorial-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "FCTRL - Factorial",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FCTRL - Factorial</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The most important part of a&nbsp;GSM network is so called&nbsp;<em>Base Transceiver Station</em>&nbsp;(<em>BTS</em>). These transceivers form the areas called&nbsp;<em>cells</em>&nbsp;(this term gave the name to the cellular phone) and every phone connects to the BTS with the strongest signal (in a&nbsp;little simplified view). Of course, BTSes need some attention and technicians need to check their function periodically.</p>\n<p>ACM technicians faced a&nbsp;very interesting problem recently. Given a&nbsp;set of BTSes to visit, they needed to find the shortest path to visit all of the given points and return back to the central company building. Programmers have spent several months studying this problem but with no results. They were unable to find the solution fast enough. After a&nbsp;long time, one of the programmers found this problem in a&nbsp;conference article. Unfortunately, he found that the problem is so called \"Travelling Salesman Problem\" and it is very hard to solve. If we have&nbsp;<var>N</var>&nbsp;BTSes to be visited, we can visit them in any order, giving us&nbsp;<var>N</var>! possibilities to examine. The function expressing that number is called factorial and can be computed as a&nbsp;product 1.2.3.4....<var>N</var>. The number is very high even for a&nbsp;relatively small&nbsp;<var>N</var>.</p>\n<p>The programmers understood they had no chance to solve the problem. But because they have already received the research grant from the government, they needed to continue with their studies and produce at least&nbsp;<em>some</em>&nbsp;results. So they started to study behaviour of the factorial function.</p>\n<p>For example, they defined the function&nbsp;<var>Z</var>. For any positive integer&nbsp;<var>N</var>,&nbsp;<var>Z</var>(<var>N</var>) is the number of zeros at the end of the decimal form of number&nbsp;<var>N</var>!. They noticed that this function never decreases. If we have two numbers&nbsp;<var>N</var><sub>1</sub>&lt;<var>N</var><sub>2</sub>, then&nbsp;<var>Z</var>(<var>N</var><sub>1</sub>) &lt;=&nbsp;<var>Z</var>(<var>N</var><sub>2</sub>). It is because we can never \"lose\" any trailing zero by multiplying by any positive number. We can only get new and new zeros. The function&nbsp;<var>Z</var>&nbsp;is very interesting, so we need a&nbsp;computer program that can determine its value efficiently.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>There is a&nbsp;single positive integer&nbsp;<var>T</var>&nbsp;on the first line of input (equal to about 100000). It stands for the number of numbers to follow. Then there are&nbsp;<var>T</var>&nbsp;lines, each containing exactly one positive integer number&nbsp;<var>N</var>, 1 &lt;=&nbsp;<var>N</var>&nbsp;&lt;= 1000000000.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For every number&nbsp;<var>N</var>, output a&nbsp;single line containing the single non-negative integer&nbsp;<var>Z</var>(<var>N</var>).</p>\n<h3>Example</h3>\n<p>Sample Input:</p>\n<pre><tt>6\n3\n60\n100\n1024\n23456\n8735373\n</tt></pre>\n<p>Sample Output:</p>\n<pre><tt>0\n14\n24\n253\n5861\n2183837</tt></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/56c5c9ed-3eb9-4989-b1b2-8e60b33eb68a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FCTRL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fctrl2-small-factorials-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "FCTRL2 - Small factorials",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FCTRL2 - Small factorials</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">You are asked to calculate factorials of some small positive integers.</p>\n<h3>Input</h3>\n<p align=\"justify\">An integer t, 1&lt;=t&lt;=100, denoting the number of testcases, followed by t lines, each containing a single integer n, 1&lt;=n&lt;=100.</p>\n<h3>Output</h3>\n<p align=\"justify\">For each integer n given at input, display a line with the value of n!</p>\n<h3>Example</h3>\n<div align=\"left\">Sample input:\n<pre>4\n1\n2\n5\n3\n</pre>\n<p>Sample output:</p>\n<pre>1\n2\n120\n6</pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/db540425-842b-4f3b-bb18-8d07cf1724e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FCTRL2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "findsr-find-string-roots",
  "tags": [],
  "level": "BEGINNER",
  "title": "FINDSR - Find String Roots",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FINDSR - Find String Roots</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In mathematics, the N-th root of a number M, is a number K such that K<sup>N</sup>&nbsp;= M , i.e. KKK . . . K = M where K is multiplied N times.<br />We can translate this into strings. In string notation, the yuxtaposition is concatenation instead of multiplication. So, the N-th root of a string S is another string T such that T<sup>N</sup>&nbsp;= S, where T N = T T T . . . T is the string T concatenated N times. For instance, if S = &ldquo;abcabcabcabc&rdquo;, for N = 2 the string T = &ldquo;abcabc&rdquo; is the N-th root of S, while for N = 4 its N-th root is T = &ldquo;abc&rdquo;. Note that for N = 1 any string S is the N-th root<br />of S itself.<br />Given a string S you have to find the maximum N such that the N-th root of S exists. In the above example the answer would be 4, because there is no N-th root of S = &ldquo;abcabcabcabc&rdquo; for N &gt; 4.</p>\n<h3>Input</h3>\n<p>The input contains several test cases, each one described in a single line. The line contains<br />a non-empty string S of at most 10<sup>5</sup>&nbsp;characters, entirely formed of digits and lowercase<br />letters. The last line of the input contains a single asterisk (&ldquo;*&rdquo;) and should not be<br />processed as a test case.</p>\n<h3>Output</h3>\n<p>For each test case output a single line with the greatest integer N such that there exists<br />a string T that concatenated N times is equal to S.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />abcabcabcabc<br />abcdefgh012<br />aaaaaaaaaa<br />*<br /><br /><strong>Output:</strong>\n4<br />1<br />10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c169bd47-ddfd-4352-8fa5-274358eb2958",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FINDSR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "gcpc11f-diary-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GCPC11F - Diary",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GCPC11F - Diary</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Nowadays, people who want to communicate in a secure way use asymmetric encryption algorithms such as RSA. However, my older brother uses another, simpler encryption method for his diary entries. He uses a substitution cipher where each letter in the plaintext is substituted by another letter from the alphabet. The distance between the plaintext letter and the encrypted letter is fixed. If we would define this fixed distance&nbsp;<em>d</em>&nbsp;to&nbsp;<em>5</em>, A would be replaced by F, B by G, C by H, ..., Y by D, Z by E.</p>\n<p>With a fixed and known distance&nbsp;<em>d</em>&nbsp;the decryption would be somewhat simple. But my brother uses random distances for each of his diary entries. To decrypt his diary I have to guess the distance&nbsp;<em>d</em>&nbsp;for each entry. Thus, I use the well known phenomenon that the letter E is used more often in English words than other letters. Can you write a program for me that calculates the distance&nbsp;<em>d</em>&nbsp;based on the fact that the most used letter in the encrypted text corresponds to the letter E in plaintext? Of course, I am interested in the decrypted text, too.</p>\n<h3>Input</h3>\n<p>The input consists of several test cases&nbsp;<em>c</em>&nbsp;that follow (<em>1 &le; c &le; 100</em>). Each test case is given in exactly one line containing one diary entry. Diary entries only use upper case letters (A-Z) and spaces. Each diary entry consists of at most&nbsp;<em>1000</em>&nbsp;encrypted letters (including spaces).</p>\n<h3>Output</h3>\n<p>For each test case, print one line containing the smallest possible distance&nbsp;<em>d</em>&nbsp;(<em>0 &le; d &le; 25</em>) and the decrypted text. If the decryption is not possible because there are multiple distances conforming to the rules above, print&nbsp;<strong>NOT POSSIBLE</strong>&nbsp;instead. Spaces are not encrypted.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\nRD TQIJW GWTYMJWX INFWD JSYWNJX ZXJ F XNRUQJ JSHWDUYNTS YJHMSNVZJ\nTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK UVTIPGKZFE\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK\n\n<strong>Output:</strong>\n5 MY OLDER BROTHERS DIARY ENTRIES USE A SIMPLE ENCRYPTION TECHNIQUE\n10 JXU GKYSA RHEMD VEN ZKCFI ELUH JXU BQPO TEW\n17 GERMAN COLLEGIATE PROGRAMMING CONTEST DECRYPTION\nNOT POSSIBLE</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7affb264-b88f-47de-9d74-48fabe839dcb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11F_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef907f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gcpc11j-time-to-live-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "GCPC11J - Time to live",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GCPC11J - Time to live</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might know, most computer networks are organized in a tree-like fashion, i.e. each computer is reachable by each other computer but only over one, unique path.</p>\n<p>The so-called&nbsp;<em>Time to live</em>&nbsp;(TTL) specifies after how many hops a network packet is dropped if it has not reached its destination yet. The purpose of the TTL is to avoid situations in which a packet circulates through the network caused by errors in the routing tables.</p>\n<p>The placement of a router that connects the network to another network is optimal when the maximal needed TTL for packets that are sent from this router to any other computer within the same network is minimal. Given a network as specified above, you should calculate the maximal needed TTL in this network if you can select the computer that should be used as router.</p>\n<h3>Input</h3>\n<p>The first line of the input consists of the number of test cases&nbsp;<em>c</em>&nbsp;that follow (<em>1 &le; c &le; 100</em>). Each test case starts with a line specifying&nbsp;<em>N</em>, the number of computers in this network (<em>1 &lt; N &le; 10<sup>5</sup></em>). Computers are numbered from&nbsp;<em>0</em>&nbsp;to&nbsp;<em>N-1</em>. Then follow&nbsp;<em>N-1</em>&nbsp;lines, each specifying a network connection by two numbers&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;which means that computer&nbsp;<em>a</em>&nbsp;is connected to computer&nbsp;<em>b</em>&nbsp;and vice versa, of course (<em>0 &le; a,b &lt; N</em>).</p>\n<h3>Output</h3>\n<p>For each test case in the input, print one line containing the optimal TTL as specified above.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n2\n1 0\n5\n3 2\n2 1\n0 2\n2 4\n9\n3 1\n6 5\n3 4\n0 3\n8 1\n1 7\n1 6\n2 3\n\n<strong>Output:</strong>\n1\n1\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7ad57e9b-8e9c-44c7-acf2-ca2624fb3f82",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11J_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9080"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ggd-mr-toothless-and-his-gcd-operation-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "GGD - Mr Toothless and His GCD Operation",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GGD - Mr Toothless and His GCD Operation</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>You are given&nbsp;<strong>N</strong>. You have to find two numbers&nbsp;<strong>a&nbsp;</strong>and<strong>&nbsp;b</strong>&nbsp;such that&nbsp;<strong>GCD (a, b)&nbsp;</strong>is as maximum as possible where&nbsp;<strong>1&lt;=a&lt;b&lt;=N</strong>.</p>\n<p><strong>Input</strong></p>\n<p>Input starts with an integer&nbsp;<strong>T (&le; 100)</strong>, denoting the number of test cases.</p>\n<p>Each case contains an integer&nbsp;<strong>N (2 &le; N &le; 10<sup>6</sup>)</strong>.</p>\n<p><strong>Output</strong></p>\n<p>For each case, print the case number and then print<strong>&nbsp;a</strong>&nbsp;and&nbsp;<strong>b</strong>. If there exists multiple solutions print the one where&nbsp;<strong>a+b</strong>&nbsp;is maximum.</p>\n<p><strong>Sample Input/Output</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"314\">\n<p align=\"center\"><strong>Sample Input</strong></p>\n</td>\n<td valign=\"top\" width=\"314\">\n<p align=\"center\"><strong>Sample Output</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"314\">\n<p>1</p>\n<p>2</p>\n</td>\n<td valign=\"top\" width=\"314\">\n<p>Case 1: 1 2</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/44426464-2c63-4ee2-ae4a-8c53a98bede9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GGD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9081"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "girlsnbs-girls-and-boys-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "GIRLSNBS - Girls and Boys",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GIRLSNBS - Girls and Boys</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are G girl students and B boy students in a class that is about to graduate. You need to arrange them in a single row for the graduation. To give a better impression of diversity, you want to avoid having too many girls or too many boys seating consecutively. You decided to arrange the students in order to minimize the gender regularity. The gender regularity of an arrangement is the maximum number of students of the same gender (all girls or all boys) that appear consecutively. Given G and B, calculate the minimum gender regularity among all possible arrangements.</p>\n<h3>Input</h3>\n<p>Each test case is described using a single line. The line contains two integers G and B representing the number of girls and boys in the class, respectively (0 &le; G, B &le; 1000). The end of input is indicated with a line containing the number &minus;1 twice.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line with a single integer representing the minimum gender regularity that an arrangement of G girls and B boys can have.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong> <br />10 10<br />5 1<br />0 1000<br />-1 -1\n<br /><strong>Output:</strong> <br />1<br />3<br />1000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d1684f9d-e17d-4aee-902f-6043c7dfcda2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GIRLSNBS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9082"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hangover-hangover-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "HANGOVER - Hangover",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HANGOVER - Hangover</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length. (We're assuming that the cards must be perpendicular to the table.) With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2&nbsp;<tt>+</tt>&nbsp;1/3&nbsp;<tt>=</tt>&nbsp;5/6 card lengths. In general you can make&nbsp;<em>n</em>&nbsp;cards overhang by 1/2&nbsp;<tt>+</tt>&nbsp;1/3&nbsp;<tt>+</tt>&nbsp;1/4&nbsp;<tt>+</tt>&nbsp;...&nbsp;<tt>+</tt>&nbsp;1/(<em>n</em>&nbsp;<tt>+</tt>&nbsp;1) card lengths, where the top card overhangs the second by 1/2, the second overhangs tha third by 1/3, the third overhangs the fourth by 1/4, etc., and the bottom card overhangs the table by 1/(<em>n</em>&nbsp;<tt>+</tt>&nbsp;1). This is illustrated in the figure below.</p>\n<center><img src=\"https://www.spoj.com/content/wanderley:hangover.jpg\" /></center>\n<h3>Input</h3>\n<p>The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number&nbsp;<em>c</em>&nbsp;whose value is at least 0.01 and at most 5.20;&nbsp;<em>c</em>&nbsp;will contain exactly three digits.</p>\n<h3>Output</h3>\n<p>For each test case, output the minimum number of cards necessary to achieve an overhang of at least&nbsp;<em>c</em>&nbsp;card lengths. Use the exact output format shown in the examples.</p>\n<pre><strong>Input:</strong>\n1.00\n3.71\n0.04\n5.19\n0.00\n</pre>\n<pre><strong>Output:</strong>\n3 card(s)\n61 card(s)\n1 card(s)\n273 card(s)</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/db39fa17-5abd-4e2b-b0b7-3cd294729a64",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HANGOVER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9083"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "herding-herding-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "HERDING - Herding",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HERDING - Herding</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Oh no! A number of stray cats have been let loose in the city, and as the City Cat Catcher, you have been assigned the vital task of retrieving all of the cats. This is an ideal opportunity to test your latest invention, a cat trap which is guaranteed to retrieve every cat which walks into a square-shaped subsection of the city.<br /><br />Fortunately, you have the assistance of one of the world's foremost cat psychologists, who has the amazing ability of predicting, given a square subsection of the city, exactly which of the four cardinal directions (north, east, south or west) the cat will head. While this information is handy, you still don't know where all the cats currently are.<br /><br />In order to prove the cost-effectiveness of your method to the City it would, of course, be important to minimize the number of traps used.<br /><br /></p>\n<h3>Input</h3>\n<p>The input will begin with a line consisting of two numbers n and m, separated by a space (1 &le; n, m &le; 1000). The city will be an n x m grid of square subsections. The next n lines will each consist of a string of length m, consisting of the letters 'N', 'E', 'S', or 'W', representing north, east, south and west, respectively. (The first character of the first line will be the northwesternmost point.) The direction in the square is the direction which cats will head if they are in that square. The cat psychologist assures you that cats have no interest in leaving the city.</p>\n<h3>Output</h3>\n<p>Output the minimum number of traps needed.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 4\nSWWW\nSEWN\nEEEN\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/826e9617-2150-493f-b3f1-1ee8b3e2f3c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HERDING_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9084"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hotels-hotels-along-the-croatian-coast-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "HOTELS - Hotels Along the Croatian Coast",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HOTELS - Hotels Along the Croatian Coast</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are N hotels along the beautiful Adriatic coast. Each hotel has its value in Euros.</p>\n<p>Sroljo has won M Euros on the lottery. Now he wants to buy a sequence of consecutive hotels, such that the sum of the values of these consecutive hotels is as great as possible - but not greater than M.</p>\n<p>You are to calculate this greatest possible total value.</p>\n<h3>Input</h3>\n<p>In the first line of the input there are integers N and M (1 &le; N &le; 300 000, 1 &le; M &lt; 2<sup>31</sup>).</p>\n<p>In the next line there are N natural numbers less than 10<sup>6</sup>, representing the hotel values in the order they lie along the coast.</p>\n<h3>Output</h3>\n<p>Print the required number (it will be greater than 0 in all of the test data).</p>\n<h3>Example</h3>\n<table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"50%\">input<br />\n<pre>5 12\n2 1 3 4 5</pre>\noutput<br />\n<pre>12</pre>\n</td>\n<td bgcolor=\"#000000\" width=\"1px\"><img src=\"http://zatemas.zrs.hr/images/empty.gif\" alt=\"\" width=\"1px\" /></td>\n<td valign=\"top\" width=\"50%\">input<br />\n<pre>4 9\n7 3 5 6</pre>\noutput<br />\n<pre>8</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/782f0589-8bdd-4fa7-a2cb-4dae876724fe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HOTELS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9085"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iitkwpco-create-collections-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "IITKWPCO - Create Collections",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITKWPCO - Create Collections</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp; Little Feluda likes to play very much. As you know he only plays with numbers. So he is given n numbers. Now tries to group the numbers into disjoint collections each containing two numbers. He can form the collection containing two numbers iff small number in the collection is exactly half of large number.</p>\n<p>&nbsp; Given n numbers, Find out how many maximum number of collections he can form ?</p>\n<h3>Input</h3>\n<p>T: number of test cases. (1 &lt;= T &lt;= 100).</p>\n<p>For each test case:</p>\n<p>First line will contain n :&nbsp; (1 &lt;= n &lt;= 100)</p>\n<p>Then next line will contain n numbers single space seperated. Range of each number will be between 1 and 10^6.</p>\n<h3>Output</h3>\n<p>For each test case, output maximum number of collections that can be formed.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />2<br />1 2<br />3 <br />1 2 4<br /><strong>Output:</strong><br />1<br />1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/009da4db-c724-4b6b-8027-1041cfb3d9f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IITKWPCO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9086"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "invcnt-inversion-count-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "INVCNT - Inversion Count",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INVCNT - Inversion Count</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Let A[0...n - 1] be an array of n distinct positive integers. If i &lt; j and A[i] &gt; A[j] then the pair (i, j) is called an inversion of A. Given n and an array A your task is to find the number of inversions of A.</p>\n<h3>Input</h3>\n<p>The first line contains t, the number of testcases followed by a blank space. Each of the t tests start with a number n (n &lt;= 200000). Then n + 1 lines follow. In the ith line a number A[i - 1] is given (A[i - 1] &lt;= 10^7). The (n + 1)th line is a blank space.</p>\n<h3>Output</h3>\n<p>For every test output one line giving the number of inversions of A.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n\n3\n3\n1\n2\n\n5\n2\n3\n8\n6\n1\n\n\n<strong>Output:</strong>\n2\n5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/afbbb700-7046-4ae0-ba68-87a77d5754ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "INVCNT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9087"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "koirep-representatives-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "KOIREP - Representatives",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KOIREP - Representatives</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are N classes in a school, each with M students. There is going to be a race&nbsp;of 100m dash, and a representative from&nbsp;each class&nbsp;will be chosen to&nbsp;participate in this race. You were assigned a task to choose these representatives. Since you did not want the race to be one sided, you wanted to choose the representatives such that the difference between the&nbsp;ability of&nbsp;the best&nbsp;representative and the&nbsp;worst representative&nbsp;is minimal.</p>\n<p>For example, if N = 3 and M = 4, and each class has&nbsp;students with following abilities:</p>\n<p>Class 1: {12,16,67,43}</p>\n<p>Class 2: {7,17,68,48}</p>\n<p>Class 3: {14,15,77,54}</p>\n<p>it is best to choose the student with ability 16 from Class 1, 17 from Class 2, and 15 from Class 3. Thus, the difference in this case would be 17-15 = 2.</p>\n<p>Your task is to calculate the minimal possible difference you can achieve by choosing a representative from each class.</p>\n<h3>Input</h3>\n<p>The first line of the input consists of two integers, N and M. (1&lt;=N&lt;=1000, 1&lt;=M&lt;=1000).</p>\n<p>The next N lines will have M integers. The jth element of ith line is the ability of the jth student in ith class. The number is between 0 and 10^9, inclusive.</p>\n<h3>Output</h3>\n<p>Output the minimal difference one can achieve by choosing the representative from each class.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 4<br />12 16 67 43<br />7 17 68 48<br />14 15 77 54<br /><br />\n<strong>Output:</strong>\n2</pre>\n<pre>&nbsp;</pre>\n<pre><strong>Input:</strong><br />4 3<br />10 20 30<br />40 50 60<br />70 80 90<br />100 110 120</pre>\n<pre><br /><br /><br /><br /><strong>Output:</strong><br />70</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e682c972-bf5c-421d-b9ba-3beaef46580f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KOIREP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9088"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "labyr1-labyrinth-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "LABYR1 - Labyrinth",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LABYR1 - Labyrinth</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">The northern part of the Pyramid contains a very large and complicated labyrinth. The labyrinth is divided into square blocks, each of them either filled by rock, or free. There is also a little hook on the floor in the center of every free block. The ACM have found that two of the hooks must be connected by a rope that runs through the hooks in every block on the path between the connected ones. When the rope is fastened, a secret door opens. The problem is that we do not know which hooks to connect. That means also that the neccessary length of the rope is unknown. Your task is to determine the maximum length of the rope we could need for a given labyrinth.</p>\n<h3>Input</h3>\n<p align=\"justify\">The input consists of&nbsp;<var>T</var>&nbsp;test cases. The number of them (<var>T</var>) is given on the first line of the input file. Each test case begins with a line containing two integers&nbsp;<var>C</var>&nbsp;and&nbsp;<var>R</var>&nbsp;(<var>3 &lt;= C,R &lt;= 1000</var>) indicating the number of columns and rows. Then exactly&nbsp;<var>R</var>&nbsp;lines follow, each containing&nbsp;<var>C</var>&nbsp;characters. These characters specify the labyrinth. Each of them is either a hash mark (<code>#</code>) or a period (<code>.</code>). Hash marks represent rocks, periods are free blocks. It is possible to walk between neighbouring blocks only, where neighbouring blocks are blocks sharing a&nbsp;common side. We cannot walk diagonally and we cannot step out of the labyrinth.</p>\n<p align=\"justify\">The labyrinth is designed in such a way that there is exactly one path between any two free blocks. Consequently, if we find the proper hooks to connect, it is easy to find the right path connecting them.</p>\n<h3>Output</h3>\n<p align=\"justify\">Your program must print exactly one line of output for each test case. The line must contain the sentence \"<code>Maximum rope length is&nbsp;<var>X</var>.</code>\" where&nbsp;<var>X</var>is the length of the longest path between any two free blocks, measured in blocks.</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n2\n3 3\n###\n#.#\n###\n7 6\n#######\n#.#.###\n#.#.###\n#.#.#.#\n#.....#\n#######\n\n<strong>Sample output:</strong>\nMaximum rope length is 0.\nMaximum rope length is 8.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f5f44a7b-56b3-46e6-839f-10a737fd5a7e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LABYR1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9089"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastdig-the-last-digit-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "LASTDIG - The last digit",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LASTDIG - The last digit</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Nestor was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His math&rsquo;s teacher gives him two numbers a and b. The problem consist of finding the last digit of the potency of base a and index b. Help Nestor with his problem. You are given two integer numbers: the base a (0 &lt;= a &lt;= 20) and the index b (0 &lt;= b &lt;= 2,147,483,000), a and b both are not 0. You have to find the last digit of a<sup>b</sup>.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer t, the number of test cases (t &lt;= 30). t test cases follow. For each test case will appear a and b separated by space.</p>\n<h3>Output</h3>\n<p>For each test case output an integer per line representing the result.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3 10\n6 2<br /><br /><strong>Output:</strong>\n9\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7dfdc72b-28e6-43eb-9658-e920f19d1ddf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LASTDIG_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "lks-large-knapsack-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LKS - Large Knapsack",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LKS - Large Knapsack</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The&nbsp;<strong><a href=\"https://en.wikipedia.org/wiki/Knapsack_problem\">knapsack problem</a></strong>&nbsp;or&nbsp;<strong>rucksack problem</strong>&nbsp;is a problem in&nbsp;<a>combinatorial optimization</a>: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible. It derives its name from the problem faced by someone who is constrained by a fixed-size&nbsp;<a>knapsack</a>&nbsp;and must fill it with the most valuable items.</p>\n<p>Just implement 0/1 Knapsack.</p>\n<h3>Input</h3>\n<p>First line contains two integers K and N, where K in the maximum knapsack size and N is the number of items. N lines follow where i<sup>th</sup>&nbsp;line describes i<sup>th</sup>&nbsp;item in the form v<sub>i</sub>&nbsp;and w<sub>i</sub>&nbsp;where v<sub>i</sub>&nbsp;is the value and w<sub>i</sub>&nbsp;is the weight of i<sup>th</sup>&nbsp;item.</p>\n<h3>Output</h3>\n<p>Output a single number - maximum value of knapsack. (All operations and the answer are guaranteed to fit in signed 32-bit integer.)</p>\n<p><em>Time limit changed to 2s on 02.07.11.</em></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10 3\n7 3\n8 8\n4 6\n\n<strong>Output:</strong>\n11</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/36bdfbd9-c6e6-45a5-ab58-3671d50f8209",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LKS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "micemaze-mice-and-maze-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MICEMAZE - Mice and Maze",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MICEMAZE - Mice and Maze</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">A set of laboratory mice is being trained to escape a maze. The maze is made up of cells, and each cell is connected to some other cells. However, there are obstacles in the passage between cells and therefore there is a time penalty to overcome the passage Also, some passages allow mice to go one-way, but not the other way round.</p>\n<p align=\"justify\">Suppose that all mice are now trained and, when placed in an arbitrary cell in the maze, take a path that leads them to the exit cell in minimum time.</p>\n<p align=\"justify\">We are going to conduct the following experiment: a mouse is placed in each cell of the maze and a count-down timer is started. When the timer stops we count the number of mice out of the maze.</p>\n<h2><span style=\"color: #0000ff;\">Problem</span></h2>\n<p align=\"justify\">Write a program that, given a description of the maze and the time limit, predicts the number of mice that will exit the maze. Assume that there are no bottlenecks is the maze, i.e. that all cells have room for an arbitrary number of mice.</p>\n<h3>Input</h3>\n<p align=\"justify\">The maze cells are numbered $1, 2, \\ldots, N$, where $N$ is the total number of cells. You can assume that $N \\le 100$.</p>\n<p align=\"justify\">The first three input lines contain $N$, the number of cells in the maze, $E$, the number of the exit cell, and the starting value $T$ for the count-down timer (in some arbitrary time unit).</p>\n<p align=\"justify\">The fourth line contains the number $M$ of connections in the maze, and is followed by $M$ lines, each specifying a connection with three integer numbers: two cell numbers $a$ and $b$ (in the range $1, \\ldots, N$) and the number of time units it takes to travel from $a$ to $b$.</p>\n<p align=\"justify\">Notice that each connection is one-way, i.e., the mice can't travel from $b$ to $a$ unless there is another line specifying that passage. Notice also that the time required to travel in each direction might be different.</p>\n<h3>Output</h3>\n<p align=\"justify\">The output consists of a single line with the number of mice that reached the exit cell $E$ in at most $T$ time units.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4 \n2 \n1\n8\n1 2 1\n1 3 1\n2 1 1\n2 4 1\n3 1 1\n3 4 1\n4 2 1\n4 3 1\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa198c1c-d4d3-447b-b604-e44854766230",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MICEMAZE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mkequal-make-them-equal-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MKEQUAL - Make them equal !",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MKEQUAL - Make them equal !</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You have an array containing&nbsp;<strong>N</strong>&nbsp;elements. At any move, you choose two indices&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;( 0 &lt;=&nbsp;<strong>i</strong>,&nbsp;<strong>j</strong>&nbsp;&lt;&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>i</strong>&nbsp;!=&nbsp;<strong>j</strong>&nbsp;) and increment value at one index and decrement value at other index. You can make this move any number of times. What is the maximum number of elements which can have the same value (after any number of moves) ?</p>\n<h3>Input</h3>\n<p>First line consists of&nbsp;<strong>T</strong>, the number of test cases. (1 &lt;=&nbsp;<strong>T</strong>&nbsp;&lt;= 100)</p>\n<p><strong>T</strong>&nbsp;sets follow. Each set contains&nbsp;<strong>N</strong>, the number of elements in the array, in the first line. (1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 100000)</p>\n<p>Next line of each set consists of&nbsp;<strong>N</strong>&nbsp;space separated integers (0 &lt;= value &lt;= 100000)</p>\n<h3>Output</h3>\n<p>Output&nbsp;<strong>T</strong>&nbsp;lines each containing the required answer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n1 2 3 4\n\n<strong>Output:</strong>&nbsp;\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f272f421-7795-4ec8-a219-5d6a2cc1ccbe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKEQUAL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mkjumps-making-jumps-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MKJUMPS - Making Jumps",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MKJUMPS - Making Jumps</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A knight is a piece used in the game of chess. The chessboard itself is square array of cells. Each time a knight moves, its resulting position is two rows and one column, or two columns and one row away from its starting position. Thus a knight starting on row r, column c &ndash; which we&rsquo;ll denote as (r,c) &ndash; can move to any of the squares (r-2,c-1), (r-2,c+1), (r-1,c-2), (r-1,c+2), (r+1,c-2), (r+1,c+2), (r+2,c-1), or (r+2,c+1). Of course, the knight may not move to any square that is not on the board.</p>\n<p><br />Suppose the chessboard is not square, but instead has rows with variable numbers of columns, and with each row offset zero or more columns to the right of the row above it. The figure to the left illustrates one possible configuration. How many of the squares in such a modified chessboard can a knight, starting in the upper left square (marked with an asterisk), not reach in any number of moves without resting in any square more than once?</p>\n<p>&nbsp;</p>\n<center><img src=\"https://www.spoj.com/content/steinersp:jumps.png\" alt=\"subir imagenes\" border=\"0\" /></center>\n<p><br /><br />If necessary, the knight is permitted to pass over regions that are outside the borders of the modified chessboard, but as usual, it can only move to squares that are within the borders of the board.<br /><br /></p>\n<h3>Input</h3>\n<p>There will be multiple cases to consider. The input for each case begins with an integer n, between 1 and 10, that specifies the number of rows in the modified chessboard. Following n there will be n pairs of integers, with the ith pair corresponding to the ith row of the chessboard. The first integer of each pair indicates the number of squares skipped at the beginning of the row. The second integer indicates the number of squares in the row (which will always be at least 1).The last case will be followed by the integer 0.</p>\n<p><br />For example, input for the case illustrated by the chessboard shown above would be:</p>\n<p><br />7 0 3 0 3 0 4 0 4 1 3 1 7 4 4</p>\n<p><br />The maximum dimensions of the board will be 10 rows and 10 columns. That is, any modified chessboard specified by the input will fit completely on a 10 row, 10 column board.<br /><br /></p>\n<h3>Output</h3>\n<p>For each input case, display the case number (1, 2, &hellip;), and the number of squares that the knight can not reach. Display the results in the format shown in the examples below.<br /><br /></p>\n<h3>Example</h3>\n<br />\n<pre><strong>Input:</strong>\n7 0 3 0 3 0 4 0 4 1 3 1 7 4 4\n3 0 3 0 3 0 3\n2 0 1 2 1\n0\n\n<strong>Output:</strong>\nCase 1, 4 squares can not be reached.\nCase 2, 1 square can not be reached.\nCase 3, 0 squares can not be reached.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82a3c8b1-4b75-49b8-85e6-ed65587c7b03",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKJUMPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mmatrix-shift-operator-on-matrix-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MMATRIX - SHIFT Operator on Matrix",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MMATRIX - SHIFT Operator on Matrix</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MMATRIX/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MMATRIX/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<pre>Given an n&times;n matrix A, whose entries Ai,j are integer numbers ( 0 &le; i &lt; n,\n0 &le; j &lt; n ). An operation SHIFT at row i ( 0 &le; i &lt; n ) will move the integers\nin the row one position right, and the rightmost integer will wrap around\nto the leftmost column.\n</pre>\n<p><img src=\"https://www.spoj.com/content/simes:MMATRIX.png\" border=\"0\" /></p>\n<pre>You can do the SHIFT operation at arbitrary row, and as many times as you like. \nDefine Cj=A0,j+A1,j+..+A(n-1),j and M = max {Cj|0&lt;=j &lt; n } . \nCj is the sum of all number in column ith.\nYour job is to minimize M. \n</pre>\n<h3>Input</h3>\n<pre>The input consists of several test cases. The ﬁrst line of each test case \ncontains an integer n. Each of the following n lines contains n integers, \nindicating the matrix A. The input is terminated by a single line with \nan integer &minus;1. You may assume that 1 &le; n &le; 7 and |Ai,j| &lt; 10^4.\n\nSample Input\n2\n4 6\n3 7\n3\n1 2 3\n4 5 6\n7 8 9\n-1\n</pre>\n<h3>Output</h3>\n<pre> \nFor each test case, print a line containing the minimum value of the maximum\nof column sums.\n\nSample output\n11\n15\n</pre>\n<p>&nbsp;</p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://www.spoj.com/submit/MMATRIX/\">&nbsp;Submit solution!</a></div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d929377a-fc7c-412a-b2dc-b11891b24e0a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MMATRIX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef908f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "msubstr-mirror-strings-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MSUBSTR - Mirror Strings !!!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MSUBSTR - Mirror Strings !!!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Mirror Strings</div>\n<div id=\"_mcePaste\">As we all know Utkarsh is very good at solving number based problems, this time Arpit thinks smartly and gives Utkarsh to solve a problem on Strings. Arpit gives Utkarsh a string and challenges him to find the length of largest substring that have its mirror string same as its original one and number of such substrings. Now Utkarsh is buzy at preparing Avishkar papers so he asks you to help him in doing this task.</div>\n<div id=\"_mcePaste\">Eg.Consider string \"lalit\" then its mirror string will be \"tilal\".</div>\n<div id=\"_mcePaste\">Input :</div>\n<div id=\"_mcePaste\">There are t numbers of test cases (t&lt;=100) followed t lines where each line contains a character string of lower case characters (a-z) of length l (1&gt;=l&lt;=3000).</div>\n<div id=\"_mcePaste\">Output :</div>\n<div id=\"_mcePaste\">There will be two integers per line separated by space indicating the length of largest substring which have its mirror string same and number of such substrings.</div>\n<div id=\"_mcePaste\">Sample test cases :</div>\n<div id=\"_mcePaste\">Input :</div>\n<div id=\"_mcePaste\">3</div>\n<div id=\"_mcePaste\">lalit</div>\n<div id=\"_mcePaste\">abedcdetr</div>\n<div id=\"_mcePaste\">abcde</div>\n<div id=\"_mcePaste\">Output :</div>\n<div id=\"_mcePaste\">3 1</div>\n<div id=\"_mcePaste\">5 1</div>\n<div id=\"_mcePaste\">1 5</div>\n<div id=\"_mcePaste\">Time Limit : 1 sec</div>\n<p>&nbsp; &nbsp; &nbsp;As we all know Utkarsh is very good at solving number based problems, this time Arpit thinks smartly and gives Utkarsh to solve a problem on Strings. Arpit gives Utkarsh a string and challenges him to find the length of largest substring that have its mirror string same as its original one and number of such substrings. Now Utkarsh is buzy at preparing Avishkar papers so he asks you to help him in doing this task.</p>\n<p>Eg. for mirror string : Consider string \"lalit\" then its mirror string will be \"tilal\".</p>\n<p>&nbsp;</p>\n<p><strong>Input&nbsp;</strong>:</p>\n<p>There are t numbers of test cases (t&lt;=200) followed t lines where each line contains a character string of lower case characters (a-z) of length l (1&gt;=l&lt;=3000).</p>\n<p>&nbsp;</p>\n<p><strong>Output :</strong></p>\n<p>There will be two integers per line separated by space indicating the length of largest substring which have its mirror string same and number of such substrings.</p>\n<p>&nbsp;</p>\n<p><strong>Sample test cases :</strong></p>\n<p><strong>Input :</strong></p>\n<p>3</p>\n<p>lalit</p>\n<p>abedcdetr</p>\n<p>abcde</p>\n<p>&nbsp;</p>\n<p><strong>Output :</strong></p>\n<p>3 1</p>\n<p>5 1</p>\n<p>1 5</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/62a1bbc6-7932-43ca-9985-c3f73edd096b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MSUBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9090"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mul-fast-multiplication-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MUL - Fast Multiplication",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MUL - Fast Multiplication</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Multiply the given numbers.</p>\n<h3>Input</h3>\n<p><em>n</em>&nbsp;[the number of multiplications &lt;= 1000]</p>\n<p><em>l1 l2</em>&nbsp;[numbers to multiply (at most 10000 decimal digits each)]</p>\n<p>Text grouped in [ ] does not appear in the input file.</p>\n<h3>Output</h3>\n<p>The results of multiplications.</p>\n<h3>Example</h3>\n<pre>Input:\n5\n4 2\n123 43\n324 342\n0 12\n9999 12345\n\nOutput:\n8\n5289\n110808\n0\n123437655</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b2e41f6c-7b57-418a-acb1-ef82c0ecbd06",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MUL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9091"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nabilhacker-hack-the-password-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NABILHACKER - Hack the Password",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NABILHACKER - Hack the Password</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p><strong>Credit:</strong></p>\n<p><strong>Problem Set and Data set: Yasir Uddin Ahamed (Nabil)</strong></p>\n<p><strong>Alternet Solution: Iqbal Hossain Bappy</strong></p>\n<p>&nbsp;</p>\n<p>Many people asked me what actually contest programming do in real life projects. That does not feel&nbsp;so interesting to me. What I found interesting is, one day a hacker friend came to me. He asked me to solve one of his hacking problems.</p>\n<p>When you try to steal someone's password, you may set a keylogger in his/her computer. Keylogger will give you a string that is typed as the password. But there is a problem, it will give you everything victim typed such as&nbsp;left key, right key, backspace everything. (Left key and right key means the keys you use to play car games, and backspace is the key you use to remove a letter, the button on the top of \"Enter\"&nbsp;button. )</p>\n<p>Suppose, the victim typed \"generio312\" as password, but he follows these criteria:</p>\n<p>1. he typed generio1.</p>\n<p>2. Then he pressed the left key, and press 3. So the password will be generio31.</p>\n<p>3. Then he pressed the right key and press 2. So the password will be generio312.</p>\n<p>4. Now he typed&nbsp;ghj&nbsp;and then press backspace&nbsp;three times and remove these three letters. So the final password is generio312.</p>\n<p>But, as I said, keylogger gives you all the typed key. You will get \"generio1&lt;3&gt;2ghj---\". (Here, &lt; for&nbsp;left&nbsp;key, &gt; for right key and - for backspace.)</p>\n<h3>Input</h3>\n<p>At first input T, the number of test cases.<br />Then input T strings. 1&lt;=|s|&lt;=10^6. The strings will include upper case, lower case, &lt;, &gt;, - and digits(0-9).</p>\n<h3>Output</h3>\n<p>The output&nbsp;should contain a string each line, the password.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>2</p>\n<p>&lt;&lt;BP&lt;A&gt;&gt;Cd-</p>\n<p>ThisIsS3Cr3t</p>\n<pre><strong>Output:</strong></pre>\n<p>BAPC</p>\n<p>ThisIsS3Cr3t</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5f50d05e-2a51-4a1a-ad21-0387009ed30a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NABILHACKER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9092"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nsteps-number-steps-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NSTEPS - Number Steps",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NSTEPS - Number Steps</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Starting from point (0,0) on a plane, we have written all non-negative integers 0, 1, 2,... as shown in the figure. For example, 1, 2, and 3 has been written at points (1,1), (2,0), and (3, 1) respectively and this pattern has continued.</p>\n<p>&nbsp;</p>\n<img src=\"https://www.spoj.com/content/steinersp:nsteps.gif\" alt=\"Illustration\" border=\"0\" />\n<p><br /><br />You are to write a program that reads the coordinates of a point (x, y), and writes the number (if any) that has been written at that point. (x, y) coordinates in the input are in the range 0...10000.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of the input is N, the number of test cases for this problem. In each of the N following lines, there is x, and y representing the coordinates (x, y) of a point.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each point in the input, write the number written at that point or write No Number if there is none.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n4 2\n6 6\n3 4\n\n<strong>Output:</strong>\n6\n12\nNo Number</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9c40652c-9029-46b3-b059-03bbd8b623a2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NSTEPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9093"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pqueue-printer-queue",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PQUEUE - Printer Queue",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PQUEUE - Printer Queue</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><img src=\"https://www.spoj.com/content/overwise:pqueue1.jpg\" /></p>\n<p>The only printer in the computer science students' union is experiencing an extremely heavy workload. Sometimes there are a hundred jobs in the printer queue and you may have to wait for hours to get a single page of output.</p>\n<p>Because some jobs are more important than others, the Hacker General has invented and implemented a simple priority system for the print job queue. Now, each job is assigned a priority between 1 and 9 (with 9 being the highest priority, and 1 being the lowest), and the printer operates as follows.</p>\n<ul>\n<li>The first job&nbsp;<em>J</em>&nbsp;in queue is taken from the queue.</li>\n<li>If there is some job in the queue with a higher priority than job&nbsp;<em>J</em>, then move&nbsp;<em>J</em>&nbsp;to the end of the queue without printing it.</li>\n<li>Otherwise, print job&nbsp;<em>J</em>&nbsp;(and do not put it back in the queue).</li>\n</ul>\n<p>&nbsp;</p>\n<p>In this way, all those important muffin recipes that the Hacker General is printing get printed very quickly. Of course, those annoying term papers that others are printing may have to wait for quite some time to get printed, but that's life.</p>\n<p>Your problem with the new policy is that it has become quite tricky to determine when your print job will actually be completed. You decide to write a program to figure this out. The program will be given the current queue (as a list of priorities) as well as the position of your job in the queue, and must then calculate how long it will take until your job is printed, assuming that no additional jobs will be added to the queue. To simplify matters, we assume that printing a job always takes exactly one minute, and that adding and removing jobs from the queue is instantaneous.</p>\n<h3>Input</h3>\n<p>One line with a positive integer: the number of test cases (at most 100). Then for each test case:</p>\n<ul>\n<li>One line with two integers&nbsp;<em>n</em>&nbsp;and&nbsp;<em>m</em>, where&nbsp;<em>n</em>&nbsp;is the number of jobs in the queue (1 &le;&nbsp;<em>n</em>&nbsp;&le; 100) and&nbsp;<em>m</em>&nbsp;is the position of your job (0 &le; m &le; n-1). The first position in the queue is number 0, the second is number 1, and so on.</li>\n<li>One line with&nbsp;<em>n</em>&nbsp;integers in the range 1 to 9, giving the priorities of the jobs in the queue. The first integer gives the priority of the first job, the second integer the priority of the second job, and so on.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, print one line with a single integer; the number of minutes until your job is completely printed, assuming that no additional print jobs will arrive.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1 0\n5\n4 2\n1 2 3 4\n6 0\n1 1 9 1 1 1\n\n<strong>Output:</strong>\n1\n2\n5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e13a9a2d-fc10-4c92-96fb-34ec882d3355",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PQUEUE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9094"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qkp-queens-knights-and-pawns-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QKP - Queens, Knights and Pawns",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">QKP - Queens, Knights and Pawns</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You all are familiar with the famous 8-queens problem which asks you to place 8 queens on a chess board so no two attack each other. In this problem, you will be given locations of queens and knights and pawns and asked to find how many of the unoccupied squares on the board are not under attack from either a queen or a knight (or both). We&rsquo;ll call such squares &ldquo;safe&rdquo; squares. Here, pawns will only serve as blockers and have no capturing ability. The board below has 6 safe squares. (The shaded squares are safe.)</p>\n<p>&nbsp;</p>\n<center><img src=\"https://www.spoj.com/content/steinersp:QKP.png\" alt=\"subir imagenes\" border=\"0\" /></center>\n<p>&nbsp;</p>\n<p>Recall that a knight moves to any unoccupied square that is on the opposite corner of a 2x3 rectangle from its current position; a queen moves to any square that is visible in any of the eight horizontal, vertical, and diagonal directions from the current position. Note that the movement of a queen can be blocked by another piece, while a knight&rsquo;s movement can not.</p>\n<h3>Input</h3>\n<p>There will be multiple test cases. Each test case will consist of 4 lines. The first line will contain two integers n and m, indicating the dimensions of the board, giving rows and columns, respectively. Neither integer will exceed 1000. The next three lines will each be of the form</p>\n<p>&nbsp;</p>\n<p><em>k r<sub>1</sub>&nbsp;c<sub>1</sub>&nbsp;r<sub>2</sub>&nbsp;c<sub>2</sub>&nbsp;&middot; &middot; &middot; r<sub>k</sub>&nbsp;c<sub>k</sub></em></p>\n<p>&nbsp;</p>\n<p>indicating the location of the queens, knights and pawns, respectively. The numbering of the rows and columns will start at one. There will be no more than 100 of any one piece. Values of n = m = 0 indicate end of input.</p>\n<h3>Output</h3>\n<p>Each test case should generate one line of the form</p>\n<p>&nbsp;</p>\n<p><strong><em>Board b has s safe squares.</em></strong></p>\n<p>&nbsp;</p>\n<p>where&nbsp;<em>b</em>&nbsp;is the number of the board (starting at one) and you supply the correct value for&nbsp;<em>s</em>.</p>\n<h3>Example</h3>\n<pre>4 4\n2 1 4 2 4\n1 1 2\n1 2 3\n2 3\n1 1 2\n1 1 1\n0\n1000 1000\n1 3 3\n0\n0\n0 0\n\n<strong>Output:</strong>\nBoard 1 has 6 safe squares.\nBoard 2 has 0 safe squares.\nBoard 3 has 996998 safe squares.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/47b8bda7-eaa5-43f7-9209-f1866d996c36",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QKP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9095"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "quadarea-maximal-quadrilateral-area-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QUADAREA - Maximal Quadrilateral Area",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">QUADAREA - Maximal Quadrilateral Area</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are trying to build a house, but unfortunately you currently have only four available walls with side lengths a, b, c, and d. You want your house to be as big as possible, so you would like to know the largest possible area of any quadrilateral you can construct with these four side lengths.</p>\n<h3>Input</h3>\n<p>The first line contains the integer T (1 &le; T &le; 2,000), the number of tests. Each test contains a single line with four real numbers: a, b, c, and d (0 &lt; a, b, c, d &lt; 1,000). Note that it will always be possible to form a valid quadrilateral with these lengths; that is, the sum of any three side lengths will be strictly larger than the other one.</p>\n<h3>Output</h3>\n<p>For each test case, print a single line containing the largest possible area. Your output will be accepted if it is within 0.01 of the official answer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1 2 1 2\n0.5 0.5 0.5 0.5\n\n<strong>Output:</strong>\n2.00\n0.25</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/24556353-38d9-4d06-b0f3-051839dc517a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QUADAREA_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9096"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sbstr1-substring-check-bug-funny-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "SBSTR1 - Substring Check (Bug Funny)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SBSTR1 - Substring Check (Bug Funny)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Given two binary strings, A (of length 10) and B (of length 5), output 1 if B is a substring of A and 0 otherwise.</p>\n<p align=\"justify\"><em><strong>Please note, that the solution may only be submitted in the following languages: Brainf**k, Whitespace and Intercal.</strong></em></p>\n<h3>Input</h3>\n<p align=\"justify\">24 lines consisting of pairs of binary strings A and B separated by a single space.</p>\n<h3>Output</h3>\n<p align=\"justify\">The logical value of: 'B is a substring of A'.</p>\n<h3>Example</h3>\n<p>First two lines of input:<br /><br />1010110010 10110<br />1110111011 10011</p>\n<p>First two lines of output:<br />1<br />0</p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://www.spoj.com/submit/SBSTR1/\">&nbsp;Submit solution!</a></div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/701ba4b1-274e-4723-ad8c-56789eff1120",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SBSTR1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9097"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sditsavl-avl-tree-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SDITSAVL - AVL Tree",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SDITSAVL - AVL Tree</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>This problem is an extension problem (with a little modification) from this problem:&nbsp;<a href=\"https://www.spoj.com/SDITSBST/\">http://www.spoj.com/problems/SDITSBST/</a></p>\n<p>In this problem you are given two type of query</p>\n<ol>\n<li>Insert an integer to the list.</li>\n<li>Given an integer&nbsp;<strong>x</strong>, you're about to find an integer&nbsp;<strong>k</strong>&nbsp;which represent x's index if the list is sorted in ascending order. Note that in this problem we will use 1-based indexing.</li>\n</ol>\n<p>As the problem title suggest, this problem intended to be solved using Balanced Binary Search Tree, one of its example is AVL Tree.</p>\n<h3>Input</h3>\n<p>The first line contains an integer Q, which denotes how many queries that follows.<br />The next Q lines will be one of the type queries which follow this format:<br />1 x means insert x to the list<br />2 x means find x's index if the list is sorted in ascending order.</p>\n<h3>Output</h3>\n<p>For each query type 2, print a line containing an integer as the answer or print \"Data tidak ada\" no quotes if the requested number does not exist in the current lis.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<div id=\"_mcePaste\">10</div>\n<pre>10\n1 100\n1 74\n2 100\n2 70\n1 152\n1 21\n1 33\n2 100\n2 21\n2 1\n\n<strong>Output:</strong>\n2\nData tidak ada\n4\n1\nData tidak ada</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/411afc0b-f3ab-479a-9c22-47114131bac2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SDITSAVL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9098"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sergrid-grid-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "SERGRID - Grid",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SERGRID - Grid</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are on an nxm grid where each square on the grid has a digit on it. From a given square that has digit k on it, a Move consists of jumping exactly k squares in one of the four cardinal directions. A move cannot go beyond the edges of the grid; it does not wrap. What is the minimum number of moves required to get from the top-left corner to the bottom-right corner?</p>\n<h3>Input</h3>\n<p>Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input contains two space-separated integers n and m (1&le;n,m&le;500), indicating the size of the grid. It is guaranteed that at least one of n and m is greater than 1. The next n lines will each consist of m digits, with no spaces, indicating the nxm grid. Each digit is between 0 and 9, inclusive. The top-left corner of the grid will be the square corresponding to the first character in the first line of the test case. The bottom-right corner of the grid will be the square corresponding to the last character in the last line of the test case.</p>\n<h3>Output</h3>\n<p>Output a single integer on a line by itself representing the minimum number of moves required to get from the top-left corner of the grid to the bottom-right. If it isn&rsquo;t possible, output -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 4 <br />2120 <br />1203 <br />3113 <br />1120 <br />1110</pre>\n<pre><strong>Output:</strong>\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4a96cb87-a201-4c5f-b539-6674a2b76fb6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SERGRID_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9099"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-mot-ky-tu-nhap-nham-trong-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa một ký tự nhập nhầm trong dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB x&oacute;a một k&yacute; tự nhập nhầm trong d&atilde;y số m&agrave; BOB đang viết.<br />Input:</p>\n<p>Nhập v&agrave;o 1 d&atilde;y số. V&agrave; nhập v&agrave;o&nbsp;số&nbsp;x.</p>\n<p>D&ograve;ng đầu la d&atilde;y số cảu BOB cach nhau như v&iacute; dụ ph&iacute;a dưới.</p>\n<p>D&ograve;ng thứ 2 l&agrave; số BOB cần x&oacute;a.</p>\n<p>Output:</p>\n<p>Kết quả của d&atilde;y số đ&atilde; được x&oacute;a x tr&ecirc;n một d&ograve;ng duy nhất.</p>\n<p><br />INPUT</p>\n<p>1 7&nbsp;20&nbsp;15 49 35 18</p>\n<p>15</p>\n<p>OUTPUT</p>\n<p>1 7 20 49 35 18</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4c21a8e8-fa4a-4bda-ab6f-beb6370c9264",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-mot-so-nhap-nham-tai-vi-tri-x-trong-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa một số nhập nhầm tại vị trí x trong dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB x&oacute;a một số nhập nhầm tại vị tr&iacute; x trong d&atilde;y số m&agrave; BOB đang viết.<br />Input:</p>\n<p>Nhập v&agrave;o 1 d&atilde;y số. V&agrave; nhập v&agrave;o&nbsp;vị tr&iacute;&nbsp;x.</p>\n<p>D&ograve;ng đầu l&agrave; d&atilde;y số của BOB c&aacute;ch nhau như v&iacute; dụ ph&iacute;a dưới.</p>\n<p>D&ograve;ng thứ 2 l&agrave; vị tr&iacute; BOB cần x&oacute;a.</p>\n<p>Output:</p>\n<p>Kết quả của d&atilde;y số đ&atilde; được x&oacute;a tại vị tr&iacute; x tr&ecirc;n một d&ograve;ng duy nhất.</p>\n<p><br />INPUT</p>\n<p>1 7&nbsp;20&nbsp;15 49 35 18</p>\n<p>2</p>\n<p>OUTPUT</p>\n<p>1 7&nbsp;15 49 35 18</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b198e5f9-3b1f-4a45-91fd-8f50b9d9200e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-cac-gia-tri-am-trong-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa các giá trị âm trong dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB x&oacute;a c&aacute;c gi&aacute; trị &acirc;m trong d&atilde;y số m&agrave; BOB đang viết.<br />Input:</p>\n<p>Nhập v&agrave;o 1 d&atilde;y số.</p>\n<p>Output:</p>\n<p>Kết quả của d&atilde;y số đ&atilde; được x&oacute;a c&aacute;c gi&aacute; trị &acirc;m.</p>\n<p><br />INPUT</p>\n<p>1 7&nbsp;-10 -15 20 15 -2 49 35 -7 18</p>\n<p>OUTPUT</p>\n<p>1 7 20 15 49 35 18</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/52c56dc3-0c0f-46ee-ba98-5c576917e568",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.12input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tong-cac-gia-tri-am-tong-cac-gia-tri-duong-trong-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tổng các giá trị âm , tổng các giá trị dương trong dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB t&iacute;nh tổng c&aacute;c gi&aacute; trị &acirc;m , tổng c&aacute;c gi&aacute; trị dương trong d&atilde;y số m&agrave; BOB đang viết.<br />Input:</p>\n<p>Nhập v&agrave;o 1 d&atilde;y số.</p>\n<p>Output:</p>\n<p>Kết quả tổng c&aacute;c gi&aacute; trị &acirc;m, tổng c&aacute;c gi&aacute; trị dương của d&atilde;y số.</p>\n<p>D&ograve;ng thứ nhất l&agrave; tổng c&aacute;c gi&aacute; trị dương của d&atilde;y số.</p>\n<p>D&ograve;ng thứ hai l&agrave; tổng c&aacute;c gi&aacute; trị &acirc;m của d&atilde;y số.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/89320436-495b-45c7-84d3-23820b967fc7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.13input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nhap-vao-mot-ma-tran-va-in-ra-theo-2-chieu",
  "tags": [],
  "level": "BEGINNER",
  "title": "Nhập vào một ma trận  và in ra theo 2 chiều",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;nhập v&agrave;o một ma trận (mảng 2 chiều) v&agrave; in ra theo 2 chiều.<br />Input:</p>\n<p>Nhập v&agrave;o hai số m, n v&agrave; một ma trận c&oacute; k&iacute;ch thước m*n</p>\n<p>D&ograve;ng &nbsp;thứ nhất l&agrave; một số nguy&ecirc;n dương m.</p>\n<p>D&ograve;ng &nbsp;thứ hai l&agrave; một số nguy&ecirc;n dương n.</p>\n<p>m d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm n số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>In ra ma trận vừa nhập.</p>\n<p><br />INPUT</p>\n<p>3</p>\n<p>4</p>\n<p>2 9&nbsp;17 16</p>\n<p>7 2 20 24</p>\n<p>8 5 11 13</p>\n<p>OUTPUT</p>\n<p>2 9&nbsp;17 16</p>\n<p>7 2 20 24</p>\n<p>8 5 11 13</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6f2f7851-a6e0-4a06-aaa0-aaed82fca29c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.14input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tong-2-duong-cheo-cua-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tổng 2 đường chéo của ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;nhập v&agrave;o một ma trận vu&ocirc;ng v&agrave; t&iacute;nh tổng 2 đường ch&eacute;o của ma trận.<br />Input:</p>\n<p>Nhập v&agrave;o một số nguy&ecirc;n k v&agrave; một ma trận vu&ocirc;ng bậc k vừa nhập.</p>\n<p>D&ograve;ng &nbsp;thứ nhất l&agrave; một số nguy&ecirc;n dương k.</p>\n<p>K d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm k số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>In ra tổng 2 đường ch&eacute;o của ma trận.</p>\n<p><br />INPUT</p>\n<p>4</p>\n<p>28915 4105 26613 10837</p>\n<p>1976 14643 25159 7982</p>\n<p>11776 10019 10337 1637</p>\n<p>4114 27924 30816 -463</p>\n<p>OUTPUT</p>\n<p>Kết quả tổng hai đường ch&eacute;o bằng 103561.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3952dd3a-c8d4-4e26-adc3-e4d933d8d66e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.15input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef909f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sap-xep-ma-tran-theo-chieu-tang-dan",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sắp xếp ma trận theo chiều tăng dần",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;nhập v&agrave;o một ma trận v&agrave; sắp xếp ma trận theo chiều tăng dần.</p>\n<p>Input:</p>\n<p>Nhập v&agrave;o hai số nguy&ecirc;n dương m, n v&agrave; một ma trận c&oacute; k&iacute;ch thước m*n.</p>\n<p>D&ograve;ng &nbsp;thứ nhất l&agrave; một số nguy&ecirc;n dương m.</p>\n<p>D&ograve;ng &nbsp;thứ hail&agrave; một số nguy&ecirc;n dương n.</p>\n<p>m d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm n số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>In ra ma trận đ&atilde; được sắp xếp theo chiều tăng dần.</p>\n<p><br />INPUT</p>\n<p>3</p>\n<p>4</p>\n<p>1 24 5 45</p>\n<p>12 78 10 2</p>\n<p>6 4 123 75</p>\n<p>OUTPUT</p>\n<p>1 2 4 5</p>\n<p>6 10 12 24</p>\n<p>45 75 78 123</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ee716716-2cf7-42fe-91db-d7762d70245c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.16input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-gia-tri-lon-nhat-gia-tri-nho-nhat-trong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm giá trị lớn nhất, giá trị nhỏ nhất trong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;nhập v&agrave;o một ma trận v&agrave; in ra gi&aacute; trị lớn nhất, gi&aacute; trị nhỏ nhất&nbsp;trong ma trận vừa nhập.</p>\n<p>Input:</p>\n<p>Nhập v&agrave;o hai số nguy&ecirc;n dương m, n v&agrave; một ma trận c&oacute; k&iacute;ch thước m*n.</p>\n<p>D&ograve;ng &nbsp;thứ nhất l&agrave; một số nguy&ecirc;n dương m.</p>\n<p>D&ograve;ng &nbsp;thứ hai l&agrave; một số nguy&ecirc;n dương n.</p>\n<p>m d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm n số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>In ra kết quả gồm hai d&ograve;ng.</p>\n<p>D&ograve;ng thứ nhất l&agrave; gi&aacute; trị lớn nhất trong ma trận.</p>\n<p>D&ograve;ng thứ hai l&agrave; gi&aacute; trị nhỏ nhất trong ma trận.<br />INPUT</p>\n<p>3</p>\n<p>4</p>\n<p>1 24 5 45</p>\n<p>12 78 10 2</p>\n<p>6 4 123 75</p>\n<p>OUTPUT</p>\n<p>Gia tri lon nhat: 123</p>\n<p>Gia tri nho nhat: 1</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/65e44372-cdf0-4b0b-9ff3-714e12db43cb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.17input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "in-ra-cac-gia-tri-am-cac-gia-tri-duong-trong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "In ra các giá trị âm, các giá trị dương trong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;nhập v&agrave;o một ma trận v&agrave; &nbsp;in ra c&aacute;c gi&aacute; trị &acirc;m, c&aacute;c gi&aacute; trị dương trong ma trận vừa nhập.</p>\n<p>Input:</p>\n<p>Nhập v&agrave;o hai số nguy&ecirc;n dương m, n v&agrave; một ma trận c&oacute; k&iacute;ch thước m*n.</p>\n<p>D&ograve;ng &nbsp;thứ nhất l&agrave; một số nguy&ecirc;n dương m.</p>\n<p>D&ograve;ng &nbsp;thứ hai l&agrave; một số nguy&ecirc;n dương n.</p>\n<p>m d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm n số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>In ra kết quả gồm hai d&ograve;ng.</p>\n<p>D&ograve;ng thứ nhất l&agrave; gi&aacute; trị &acirc;m trong ma trận.</p>\n<p>D&ograve;ng thứ hai l&agrave; gi&aacute; trị dương trong ma trận.<br />INPUT</p>\n<p>3</p>\n<p>4</p>\n<p>1 -24 -5 -45</p>\n<p>12 78 -10 2</p>\n<p>6 -4 123 75</p>\n<p>OUTPUT</p>\n<p>-24&nbsp;-5 -45 -10 -4</p>\n<p>1 12 78 2 6 123 75</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d8b607fc-0685-4ccd-9180-62ccfcc3a15f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.18input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bien-doi-chuoi-thanh-chu-in-hoa",
  "tags": [],
  "level": "BEGINNER",
  "title": "Biến đổi chuổi thành chữ in hoa",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;viết lại họ v&agrave; t&ecirc;n m&agrave; BOB đ&atilde; nhập với tất cả k&yacute; tự đều th&agrave;nh in hoa.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi chứa họ v&agrave; t&ecirc;n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi với tất cả k&yacute; tự đều th&agrave;nh in hoa.<br />INPUT</p>\n<p>tran van an</p>\n<p>OUTPUT</p>\n<p>TRAN VAN AN</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ac38e8ef-ff27-4607-aa3c-eddc99fecf19",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.20input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-cac-dau-khoang-trang-trong-chuoi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa các dấu khoảng trắng trong chuỗi",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;x&oacute;a c&aacute;c dấu khoảng trắng trong chuỗi&nbsp;m&agrave; BOB đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; x&oacute;a c&aacute;c dấu khoảng trắng.<br />INPUT</p>\n<p>&ldquo; &nbsp;dang cao tung &nbsp;&nbsp;&ldquo;</p>\n<p>OUTPUT</p>\n<p>&ldquo;dangcaotung&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/190feffd-7273-42a0-aa38-f053b6908d59",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.21input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-ky-tu-x-trong-chuoi-ky-tu",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa ký tự x trong chuỗi ký tự",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;x&oacute;a k&yacute; tự x trong chuỗi m&agrave; BOB đ&atilde; nhập nhầm.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự v&agrave; một k&yacute; tự.</p>\n<p>D&ograve;ng đầu ti&ecirc;n l&agrave; một chuỗi k&yacute; tự.</p>\n<p>D&ograve;ng thứ hai l&agrave; một k&yacute; tự x cần x&oacute;a.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; x&oacute;a k&yacute; tự x.<br />INPUT</p>\n<p>&ldquo;dang van anh&rdquo;</p>\n<p>OUTPUT</p>\n<p>&nbsp;&ldquo;dng vn nh&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1d104618-0a7a-43aa-832c-8e8cc8303ddc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.22input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-cac-dau-khoang-trang-o-dau-va-cuoi-chuoi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa các dấu khoảng trắng ở đầu và cuối chuỗi",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;x&oacute;a c&aacute;c dấu khoảng trắng&nbsp;ở đầu v&agrave; cuối &nbsp;trong chuỗi&nbsp;m&agrave; BOB đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; x&oacute;a c&aacute;c dấu khoảng trắng&nbsp;ở đầu v&agrave; cuối&nbsp;chuỗi.<br />INPUT</p>\n<p>&ldquo; &nbsp;&nbsp;dang van anh &nbsp;&nbsp;&rdquo;</p>\n<p>OUTPUT</p>\n<p>&nbsp;&ldquo;dang van anh&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e418f950-33e6-4674-bb47-a29f29cee30f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.23input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "chuyen-doi-thanh-chuoi-ky-tu-thuong-tru-ky-tu-dau-tien",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chuyển đổi thành chuỗi ký tự thường trừ ký tự đầu tiên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;chuyển đổi th&agrave;nh chuỗi k&yacute; tự thường trừ k&yacute; tự đầu ti&ecirc;n&nbsp;m&agrave; BOB đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; chuyển đổi th&agrave;nh chuỗi k&yacute; tự thường trừ k&yacute; tự đầu ti&ecirc;n.<br />INPUT</p>\n<p>&ldquo;Dang Van Anh&rdquo;</p>\n<p>OUTPUT</p>\n<p>&nbsp;&ldquo;Dang van anh&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5d404d9f-1c8e-4179-b4ad-f7ea1ed9f8e2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.24input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-cac-dau-khoang-trang-lien-ke-trong-chuoi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa các dấu khoảng trăng liền kề trong chuỗi",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB &nbsp;x&oacute;a c&aacute;c dấu khoảng trăng liền kề&nbsp;m&agrave; BOB đ&atilde; nhập thừa trong chuỗi.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; x&oacute;a c&aacute;c dấu khoảng trăng liền kề.<br />INPUT</p>\n<p>&ldquo; Thanh &nbsp;&nbsp;&nbsp;Thanh&rdquo;</p>\n<p>OUTPUT</p>\n<p>&nbsp;&ldquo; Thanh Thanh&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ccc06fd0-f3b8-4bd7-a1fa-66718c6616eb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.25input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-mot-doan-ky-tu-tu-m-den-n-trong-chuoi-ky-tu",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa một đoạn ký tự từ m đến n trong chuỗi ký tự",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p BOB x&oacute;a một đoạn k&yacute; tự từ m đến n&nbsp;m&agrave; BOB đ&atilde; nhập thừa trong chuỗi.</p>\n<p>Input:</p>\n<p>Gồm một chuỗi k&yacute; tự v&agrave; hai số nguy&ecirc;n m, n.</p>\n<p>D&ograve;ng đầu ti&ecirc;n l&agrave; một chuỗi k&yacute; tự.</p>\n<p>D&ograve;ng thứ hai l&agrave; số nguy&ecirc;n m.</p>\n<p>D&ograve;ng thứ ba l&agrave; số nguy&ecirc;n n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi đ&atilde; x&oacute;a một đoạn k&yacute; tự từ m đến n.<br />INPUT</p>\n<p>&ldquo;Thanh &nbsp;&nbsp;&nbsp;Thanh&rdquo;</p>\n<p>2</p>\n<p>5</p>\n<p>OUTPUT</p>\n<p>&nbsp;&ldquo;ThThanh&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/caca51ab-f566-4058-ab00-468c9eb11cb9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.26input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90a9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tich-2-ma-tran-cap-hai",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tích 2 ma trận cấp hai",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An t&iacute;nh t&iacute;ch 2 ma trận cấp hai m&agrave; An vừa nhập.</p>\n<p>Input:</p>\n<p>Gồm hai ma trận cấp hai.</p>\n<p>Hai d&ograve;ng đầu l&agrave; ma trận thứ nhất.</p>\n<p>Hai d&ograve;ng tiếp theo l&agrave; ma trận thứ ha.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; t&iacute;ch hai ma trận cấp 2 m&agrave; An đ&atilde; nhập.<br />INPUT</p>\n<p>1 &nbsp;&nbsp;2</p>\n<p>3 &nbsp;&nbsp;4</p>\n<p>0 &nbsp;-1</p>\n<p>6 &nbsp;&nbsp;7</p>\n<p>OUTPUT</p>\n<p>12 13</p>\n<p>24 25</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/72a3667a-0c7b-492e-bbff-3c5c457caca5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.27input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90aa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-day-so-nguyen-co-do-dai-lon-hon-va-day-so-co-tong-lon-hon-trong-hai-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm dãy số nguyên có độ dài lớn hơn và dãy số có tổng lớn hơn trong hai dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An t&igrave;m d&atilde;y số nguy&ecirc;n&nbsp;c&oacute; độ d&agrave;i lớn hơn&nbsp;v&agrave; d&atilde;y số c&oacute; tổng lớn hơn&nbsp;trong hai d&atilde;y số m&agrave; An đ&atilde; nh&acirc;p.</p>\n<p>Input:</p>\n<p>Gồm hai d&atilde;y số nguy&ecirc;n.</p>\n<p>D&ograve;ng thứ nhất l&agrave; d&atilde;y số nguy&ecirc;n đầu ti&ecirc;n m&agrave; An đ&atilde; nhập.</p>\n<p>D&ograve;ng thứ hai l&agrave; d&atilde;y số nguy&ecirc;n thứ hai m&agrave; An nhập.</p>\n<p>Output:</p>\n<p>Kết quả gồm hai d&ograve;ng.</p>\n<p>D&ograve;ng thứ nhất l&agrave; d&atilde;y số nguy&ecirc;n c&oacute; độ d&agrave;i lớn hơn.</p>\n<p>D&ograve;ng thứ hai l&agrave; d&atilde;y số nguy&ecirc;n c&oacute; tổng lớn hơn.<br />INPUT</p>\n<p>40 100 200 300</p>\n<p>1 2 3 4 5 6 7 8 9 10</p>\n<p>OUTPUT</p>\n<p>1 2 3 4 5 6 7 8 9 10</p>\n<p>40 100 200 300</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e53bf00-f2c7-410a-a79a-7abb2ae379ff",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.28input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ab"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-vi-tri-cua-so-nguyen-x-trong-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm vị trí của số nguyên x trong dãy số",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An t&igrave;m vị tr&iacute; của số nguy&ecirc;n x trong d&atilde;y số m&agrave; An vừa nhập.</p>\n<p>Input:</p>\n<p>Gồm một d&atilde;y số nguy&ecirc;n v&agrave; s&ocirc; nguy&ecirc;n x.</p>\n<p>Hai d&ograve;ng đầu l&agrave; l&agrave; d&atilde;y số nguy&ecirc;n.</p>\n<p>Hai d&ograve;ng tiếp theo l&agrave; số nguy&ecirc;n x cần t&igrave;m vị tr&iacute; trong d&atilde;y số.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; vị tr&iacute; của số nguy&ecirc;n x trong d&atilde;y số nếu tồn tại, ngược lại trả về 0.<br />INPUT</p>\n<p>1 7 20 15 49 35 18</p>\n<p>15</p>\n<p>OUTPUT</p>\n<p>4</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c5884df-a390-4069-a7c7-7db6af170d39",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.9input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ac"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-tang-dan-day-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp tăng dần dãy số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An sắp xếp tăng dần d&atilde;y số m&agrave; An vừa nhập.</p>\n<p>Input:</p>\n<p>Gồm một d&atilde;y số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; d&atilde;y số nguy&ecirc;n đ&atilde; được sắp xếp tăng dần.<br />INPUT</p>\n<p>1 7 20 15 49 35 18</p>\n<p>OUTPUT</p>\n<p>1 7&nbsp;15 18 20 35 49</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9adb4e8c-c763-4cdb-9414-8345d853531c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.6.8input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ad"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "in-ma-tran-xoan-oc-cap-n",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "In ma trận xoắn ốc cấp n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An in ra ma trận xoắn ốc cấp n v&agrave;o c&aacute;c h&agrave;ng lẻ trong file ( tức l&agrave; mỗi số c&aacute;ch nhau 1 khoảng, mỗi h&agrave;ng c&aacute;ch nhau 1 h&agrave;ng)&nbsp;với n l&agrave; số nguy&ecirc;n m&agrave; An An đ&atilde; nhập v&agrave;o.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n n.</p>\n<p>Output:</p>\n<p>L&agrave; một ma trận xoắn ốc cấp n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>4</p>\n<p>OUTPUT:</p>\n<p>&nbsp;</p>\n<p>1 2 3 4</p>\n<p>&nbsp;</p>\n<p>12 13 14 5</p>\n<p>&nbsp;</p>\n<p>11 16 15 6</p>\n<p>&nbsp;</p>\n<p>10 9 8 7</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/88495e20-745e-4bfd-92db-40ce6e4e23c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.8.7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ae"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "xuat-ma-tran-zich-zac-cap-n-x-m",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Xuất ma trận zich zắc cấp n x m",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An in ra ma trận zich zắc cấp n x m&nbsp;với m, n l&agrave; hai số nguy&ecirc;n m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>Bao gồm hai số nguy&ecirc;n:</p>\n<p>D&ograve;ng thứ nhất l&agrave; số nguy&ecirc;n dương n.</p>\n<p>D&ograve;ng thứ hai l&agrave; số nguy&ecirc;n dương m.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; một ma trận zich zắc cấp n x m.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>6</p>\n<p>4</p>\n<p>OUTPUT:</p>\n<p>1 2 3 4</p>\n<p>8 7 6 5</p>\n<p>9 10 11 12</p>\n<p>16 15 14 13</p>\n<p>17 18 19 20</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e531a07f-3610-4c7b-ac96-98b4de85f91b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.9.4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90af"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bai-toan-thap-ha-noi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bài toán tháp Hà Nội",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An thực hiện b&agrave;i to&aacute;n th&aacute;p H&agrave; Nội. B&agrave;i to&aacute;n th&aacute;p H&agrave; Nội l&agrave; một tr&ograve; chơi to&aacute;n học gồm 3 cột v&agrave; số đĩa nhiều hơn 1. Với quy tắc c&aacute;c đĩa nhỏ phải nằm tr&ecirc;n c&aacute;c đĩa lớn. Nhiệm vụ của tr&ograve; chơi l&agrave; di chuyển c&aacute;c đĩa c&oacute; k&iacute;ch cỡ kh&aacute;c nhau sang cột kh&aacute;c sao cho vẫn đảm bảo thứ tự ban đầu của c&aacute;c đĩa: đĩa nhỏ nằm tr&ecirc;n đĩa lớn.</p>\n<p>Input:</p>\n<p>Bao gồm một số nguy&ecirc;n dương lớn hơn 1 l&agrave; số đĩa cần di chuyển.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; hướng dẫn thực hiện di chuyển c&aacute;c đĩa giữa c&aacute;c cột.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>4</p>\n<p>OUTPUT:</p>\n<p>A-------B</p>\n<p>A-------C</p>\n<p>B-------C</p>\n<p>A-------B</p>\n<p>C-------A</p>\n<p>C-------B</p>\n<p>A-------B</p>\n<p>A-------C</p>\n<p>B-------C</p>\n<p>B-------A</p>\n<p>C-------A</p>\n<p>B-------C</p>\n<p>A-------B</p>\n<p>A-------C</p>\n<p>B-------C</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b6bfc22f-991a-4c90-ac2c-22f9faa7f70f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "I.9.5input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-boi-so-cua-so-nguyen-x-voi-cac-so-tu-1-15",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm bội số của số nguyên x với các số từ 1-15",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An thực hiện t&igrave;m bội số của số nguy&ecirc;n x&nbsp;với c&aacute;c số từ 1-15.</p>\n<p>Input:</p>\n<p>Bao gồm một số nguy&ecirc;n..</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; bội số của số nguy&ecirc;n x với c&aacute;c số từ 1 đến 15.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>10</p>\n<p>OUTPUT:</p>\n<p>10 20 30 40 50 60 70 80 90 100 110 120 130 140 150</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/587eecaa-a5cd-4e62-9b3d-3dc24fc54430",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dem-so-tu-va-ky-tu-trong-cau",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đếm số từ và ký tự trong câu",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An đếm số từ v&agrave; k&yacute; tự trong c&acirc;u&nbsp;m&agrave; An An vừa nhập.</p>\n<p>Input:</p>\n<p>Bao gồm chuỗi k&yacute; tự.</p>\n<p>Output:</p>\n<p>Kết quả gồm hai d&ograve;ng.</p>\n<p>D&ograve;ng đầu l&agrave; số từ trong c&acirc;u.</p>\n<p>D&ograve;ng thứ hai l&agrave; số k&yacute; tự trong c&acirc;u.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>&ldquo;xin chao tat ca moi nguoi&rdquo;</p>\n<p>OUTPUT:</p>\n<p>So tu trong cau la: 6</p>\n<p>So ky tu trong cau la: 20</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ac7f50e7-fa97-4d24-b80b-8e1893aaee44",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-so-dao-nguoc",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm số đảo ngược",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m số đảo ngược (về thứ tự) của số nguy&ecirc;n &nbsp;m&agrave; An An vừa nhập.</p>\n<p>Input:</p>\n<p>Bao gồm một số nguy&ecirc;n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; số nguy&ecirc;n đảo ngược t&igrave;m được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>512347</p>\n<p>OUTPUT:</p>\n<p>743215</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1e8adadd-f9b7-47a5-8521-40f3f9d6c19a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.3input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-gia-tri-cua-x-13x3-15x5-17x5-19x9",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính giá trị của x - 1/3!x3 + 1/5!x5 - 1/7!x5 + 1/9!x9",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh gi&aacute; trị của x - 1/3!x3 + 1/5!x5 - 1/7!x5 + 1/9!x9&nbsp;với x l&agrave; số nguy&ecirc;n m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; số nguy&ecirc;n x m&agrave; An An nhập.</p>\n<p>Output:</p>\n<p>L&agrave; kết quả ph&eacute;p t&iacute;nh.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>12</p>\n<p>OUTPUT:</p>\n<p>11.942749</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b0c9dcff-993b-4e17-9e37-b5a7464914e7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-so-nguyen-to-tu-1-den-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các số nguyên tố từ 1 đến n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c số nguy&ecirc;n tố từ 1 đến n&nbsp;với n l&agrave; số nguy&ecirc;n m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; số nguy&ecirc;n n m&agrave; An An nhập.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; c&aacute;c số nguy&ecirc;n tố từ 1 đến n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>15</p>\n<p>OUTPUT:</p>\n<p>2 3 5 7 11 13</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6ee8d1f5-39c9-4e17-87b0-ef2e0c8f6e4b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.5input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-day-fibonacci-co-do-dai-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm dãy Fibonacci có độ dài n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m&nbsp;d&atilde;y Fibonacci c&oacute; độ d&agrave;i n với n l&agrave; số nguy&ecirc;n m&agrave; An An y&ecirc;u cầu.</p>\n<p>D&atilde;y Fibonacci&nbsp;l&agrave;&nbsp;<a href=\"https://vi.wikipedia.org/wiki/D%C3%A3y_(to%C3%A1n_h%E1%BB%8Dc)\">d&atilde;y</a>&nbsp;<a href=\"https://vi.wikipedia.org/wiki/V%C3%B4_t%E1%BA%ADn\">v&ocirc; hạn</a>&nbsp;c&aacute;c&nbsp;<a href=\"https://vi.wikipedia.org/wiki/S%E1%BB%91_t%E1%BB%B1_nhi%C3%AAn\">số tự nhi&ecirc;n</a>&nbsp;bắt đầu bằng hai phần tử 0 v&agrave; 1 hoặc 1 v&agrave; 1, c&aacute;c phần tử sau đ&oacute; được thiết lập theo quy tắc&nbsp;<em>mỗi phần tử lu&ocirc;n bằng tổng hai phần tử trước n&oacute;.</em></p>\n<p>Input:</p>\n<p>L&agrave; số nguy&ecirc;n n m&agrave; An An nhập.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; d&atilde;y Fibonacci c&oacute; độ d&agrave;i n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>13</p>\n<p>OUTPUT:</p>\n<p>0 1 1 2 3 5 8 13 21 34 55 89 144</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/72bdd58f-f476-4efb-a787-0353a30bfdf2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.6input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-giai-thua-cua-mot-so-nguyen-duong-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính giai thừa của một số nguyên dương n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh giai thừa của một số nguy&ecirc;n dương&nbsp;n với n l&agrave; số nguy&ecirc;n m&agrave; An An y&ecirc;u cầu.</p>\n<p>Input:</p>\n<p>L&agrave; số nguy&ecirc;n n m&agrave; An An nhập.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; giai thừa của n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>5</p>\n<p>OUTPUT:</p>\n<p>120</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/77a278bd-a8b8-4649-8adf-656820f8c0b9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-so-tien-lai-ngan-hang",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính số tiền lãi ngân hàng",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh số tiền l&atilde;i ng&acirc;n h&agrave;ng phải trả cho kh&aacute;ch h&agrave;ng&nbsp;với m, n, p lần lượt l&agrave;&nbsp;tiền gửi, l&atilde;i xuất, thời gian gửi tiền, kết quả thu về l&agrave; tiền l&atilde;i tương ứng.</p>\n<p>Input:</p>\n<p>L&agrave; ba số m, n, p c&ugrave;ng nằm tr&ecirc;n một d&ograve;ng được c&aacute;ch nhau bằng một k&yacute; tự khoảng trắng.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tiền l&atilde;i tương ứng.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>1000041 10 9</p>\n<p>OUTPUT:</p>\n<p>900036.88</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8e6480d0-8018-4aae-bd3c-077be1fcc90e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.3.11input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "chuan-hoa-ho-ten",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Chuẩn hóa họ tên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An chuẩn h&oacute;a họ t&ecirc;n m&agrave; An An&nbsp;nhập từ b&agrave;n ph&iacute;m.</p>\n<p>Họ t&ecirc;n được chuẩn h&oacute;a l&agrave; họ t&ecirc;n c&oacute; c&aacute;c k&yacute; tự đầu v&agrave; cuối kh&ocirc;ng phải l&agrave; khoảng trắng v&agrave; trước mỗi từ phải được viết in hoa, c&aacute;c k&yacute; tự c&ograve;n lại viết thường, giữa c&aacute;c từ được c&aacute;ch nhau bằng 1 dấu khoảng trắng</p>\n<p>Input:</p>\n<p>L&agrave; một chuỗi họ t&ecirc;n chưa được chuẩn h&oacute;a.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi k&yacute; tự họ t&ecirc;n đ&atilde; được chuẩn h&oacute;a.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>&ldquo;huynh &nbsp;&nbsp;nguyen THUY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AN &nbsp;&nbsp;&rdquo;</p>\n<p>OUTPUT:</p>\n<p>&ldquo;Huynh Nguyen Thuy An&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/29d7a070-fc78-4d4a-a48c-734504771fa1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.4.1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90b9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-cac-dau-khoang-trang-thua-trong-chuoi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa các dấu khoảng trắng thừa trong chuỗi",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra c&aacute;c k&yacute; tự trong chuỗi c&oacute; thừa dấu space hay kh&ocirc;ng nếu c&oacute; th&igrave; x&oacute;a c&aacute;c dấu dư thừa trong chuỗi.</p>\n<p>Input:</p>\n<p>L&agrave; một chuỗi k&yacute; tự</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; chuỗi k&yacute; tự đ&atilde; được x&oacute;a c&aacute;c dấu khoảng trắng dư thừa.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>&ldquo; &nbsp;&nbsp;huynh &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nguyen &nbsp;&nbsp;THUY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AN &nbsp;&nbsp;&rdquo;</p>\n<p>OUTPUT:</p>\n<p>&ldquo;huynh nguyen THUY AN&rdquo;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1194a042-81dd-49ab-8502-a0d1b677dae4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.4.3input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ba"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kiem-tra-input-la-so-duong-so-am-so-thuc-hay-mot-day-ky-tu",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Kiểm tra input là số dương , số âm, số thực hay một dãy ký tự",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra input l&agrave; số dương , số &acirc;m, số thực hay một d&atilde;y k&yacute; tự.</p>\n<p>Input:</p>\n<p>L&agrave; một chuỗi k&yacute; tự hoặc số bất kỳ.</p>\n<p>Output:</p>\n<p>L&agrave; kết quả kiểm tra input l&agrave; số dương , số &acirc;m, số thực hay một d&atilde;y k&yacute; tự.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>1000</p>\n<p>OUTPUT:</p>\n<p>1000 la so duong</p>\n<p>&nbsp;</p>\n<p>INPUT:</p>\n<p>c</p>\n<p>OUTPUT:</p>\n<p>c la chuoi ky tu</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/95918048-f8bb-41da-a12b-79e79e120e62",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "II.4.4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90bb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-1-2-3-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1 + 2 + 3 + … + n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1 + 2 + 3 + &hellip; + n, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng từ 1 đến n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>5</p>\n<p>OUTPUT:</p>\n<p>Tong tu 1 den 5: 15</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/73df4ca6-abce-47f2-87fb-6e0b647aa066",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90bc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-12-22-n2",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1^2 + 2^2 + … + n^2",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1^2 + 2^2 + &hellip; + n^2, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng b&igrave;nh phương từ 1 đến n.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>13</p>\n<p>OUTPUT:</p>\n<p>Tong binh puong tu 1 den 13: 819</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7927ce07-039f-4e1a-8008-e5c65a98a4e7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90bd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-1-13-1n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1 + ½ + 1/3 + … + 1/n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1 + &frac12; + 1/3 + &hellip; + 1/n, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>141</p>\n<p>OUTPUT:</p>\n<p>5.53</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb16d1b0-f31d-42c6-8957-45477d00fce4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.3input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90be"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-12n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = ½ + ¼ + … + 1/2n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = &frac12; + &frac14; + &hellip; + 1/2n, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>127</p>\n<p>OUTPUT:</p>\n<p>2.71</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/659ac0c1-c90a-4972-9499-5a141aa6d424",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90bf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-1-13-15-12n-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1 + 1/3 + 1/5 + … + 1/(2n + 1)",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1 + 1/3 + 1/5 + &hellip; + 1/(2n + 1), với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>130</p>\n<p>OUTPUT:</p>\n<p>3.42</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c9f81dce-8899-4e07-9a06-469777e3a594",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.5input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-11x2-12x3-1n-x-n-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1/1×2 + 1/2×3 +…+ 1/n x (n + 1)",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1/1&times;2 + 1/2&times;3 +&hellip;+ 1/n x (n + 1), với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>150</p>\n<p>OUTPUT:</p>\n<p>Tong tu 1/1*2 den 1/150*(150+1): 1.00</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5d9f99a0-f652-4963-9f87-e9d2dbff4d9a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.6input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-23-n-n-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = ½ + 2/3 + ¾ + …. + n / n + 1",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = &frac12; + 2/3 + &frac34; + &hellip;. + n / n + 1, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>150</p>\n<p>OUTPUT:</p>\n<p>Tong tu 1/2 den 150/(150+1): 145.40</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/df6f3acf-3bad-49ab-8004-92c5741dd3b4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-56-2n-1-2n-2",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = ½ + ¾ + 5/6 + … +( 2n + 1)/( 2n + 2)",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = &frac12; + &frac34; + 5/6 + &hellip; +( 2n + 1)/( 2n + 2), với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; tổng ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>150</p>\n<p>OUTPUT:</p>\n<p>Tong tu 1/2 den 301/302: 148.20</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/de0ea0be-84c8-4076-a76b-92088ac25668",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.8input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tn-1-x-2-x-3x-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính T(n) = 1 x 2 x 3…x N",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh T(n) = 1 x 2 x 3&hellip;x N, với n l&agrave; một số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; t&iacute;ch ph&eacute;p t&iacute;nh thu được.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>6</p>\n<p>OUTPUT:</p>\n<p>Tich tu 1 den 6: 720</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/486ee69d-9994-4ff1-8c63-03321b8d048b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.9input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tx-n-xn",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính T(x, n) = x^n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh T(x, n) = x^n, với x, n l&agrave; hai số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>Bao gồm hai số nguy&ecirc;n c&aacute;ch nhau bằng một dấu khoẳng trắng.</p>\n<p>Output:</p>\n<p>L&agrave; kết quả của ph&eacute;p t&iacute;nh.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>2 3</p>\n<p>OUTPUT:</p>\n<p>2^3&nbsp;= 8</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3372b30b-78a0-4acc-a5cc-7318c0363869",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.10input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-sn-1-1-2-1-2-3-1-2-3-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính S(n) = 1 + 1.2 + 1.2.3 + … + 1.2.3….N",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh S(n) = 1 + 1.2 + 1.2.3 + &hellip; + 1.2.3&hellip;.N, với n l&agrave; số nguy&ecirc;n dương m&agrave; An An đ&atilde; nhập.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương m&agrave; An An nhập v&agrave;o.</p>\n<p>Output:</p>\n<p>L&agrave; kết quả của ph&eacute;p t&iacute;nh.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>6</p>\n<p>OUTPUT:</p>\n<p>Tong giai thua tu 1 den 6: 873</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8e54279e-7fb8-4787-a1e9-3a7db8305c1b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IV.1.11input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "aba12e-shooting-the-balloons",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ABA12E - Shooting the balloons!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ABA12E - Shooting the balloons!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Dhinakaran is very fond of games. Shooting the balloons is his favourite. In this game, there are &lsquo;n&rsquo; balloons which are arranged in a line. Every balloon has a unique number which is the number of points earned if that balloon is shot. A constraint here is that you should shoot contiguous balloons. So, Dhinakaran wanted to find the maximum number of points he could earn. He sought help from a friend who told him that it was the famous maximum contiguous sum problem. So Dhinakaran learnt about it and was happy. But Dhinakaran is not someone who gets satisfied so easily. He wanted to find the k-th smallest possible contiguous sum! Now, his friend was not able to solve this. So he came to me. I suggested that he approach you. You are a great coder, aren&rsquo;t you? Help him out.</p>\n<p>&nbsp;</p>\n<p>There will be atleast 1 balloon and atmost 50000 balloons, and each balloon can have atleast&nbsp;<strong>0</strong>&nbsp;point and atmost&nbsp;<strong>10<sup>9</sup></strong>&nbsp;points.</p>\n<h3>Input</h3>\n<p>The first line of each data set contains the number of balloons and value of k.</p>\n<p>1 &lt;= k &lt;= (n * (n + 1)) / 2</p>\n<p>The second line contains N space separated integers.</p>\n<h3>Output</h3>\n<p>The output for each test case should be a single line containing the k-th smallest possible contiguous sum of points that could be achieved.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>5 3</p>\n<p>1 2 3 4 5</p>\n<p>Output:</p>\n<p>3</p>\n<p>Explanation of sample case:</p>\n<p>The first 5 smallest contiguous subsequences are 1, 2, 3, 1 + 2, 4</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e2b2085e-a324-413c-a11d-00cdae5d3aca",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABA12Einput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "acmt-acm-teams",
  "tags": [],
  "level": "BEGINNER",
  "title": "ACMT - Acm Teams",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ACMT - Acm Teams</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Engineer ahmed sror one of the best coches, He picks team members by using two ways.</p>\n<p>First one that the optimal team of three people should consist of one experienced participant and two newbies. Thus, each experienced participant can share the experience with a large number of people.</p>\n<p>Second one that the optimal team should have two experienced members plus one newbie. Thus, each newbie can gain more knowledge and experience.</p>\n<p>All the teams during the training session should belong to one of the two ways described above. Furthermore,they agree that the total number of teams should be as much as possible.</p>\n<p>There are E experienced members and N newbies on the training session.Can you calculate what maximum number of teams can be formed?</p>\n<h3>Input</h3>\n<p>The first line of the input contains a single integer corresponding to number of test cases t (1 &le; t &le; 10) ,The second line contains two integers&nbsp;<em>E</em>&nbsp;and&nbsp;<em>N</em>&nbsp;(0&thinsp;&le;&thinsp;<em>E</em>,&thinsp;<em>N</em>&thinsp;&le;&thinsp;5&middot;10<sup>5</sup>) &mdash; the number of experienced participants and newbies that are present at the training session.</p>\n<h3>Output</h3>\n<p>For each test case print&nbsp;a single integer representing&nbsp;the maximum number of teams that can be formed.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2 6\n4 5\n\n<strong>Output:</strong>\n2\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0a6dd4f5-dc56-409f-a055-550c399656bc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adaapple-ada-and-apple",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADAAPPLE - Ada and Apple",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADAAPPLE - Ada and Apple</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug is currently on a trip on apple&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)\">tree</a>. There are many apples on the tree connected with branches. Each apple is inhabited by either Psylloideas or by Woolly Apple Aphids. Psylloideas and Aphids doesn't like each other, so it is strictly prohibited to walk from apple of Psylloideas to apple of aphids (and vice versa). Ada has some questions, whether it is possible to go from node&nbsp;<strong>I</strong>&nbsp;to node&nbsp;<strong>J</strong>.</p>\n<p>Anyway note, that as Aphids and Psyllodeas doesn't like each other, they sometime conquer an apple of the others. Also note, that it is a real apple tree (not some bush) so no apple is connected with more than 50 other apples.</p>\n<h3>Input</h3>\n<p>The first line contains&nbsp;<strong>1 &le; N, Q &le; 3*10<sup>5</sup>&nbsp;</strong>, number apples on tree and number for queries.</p>\n<p>The next line contains&nbsp;<strong>N</strong>&nbsp;characters (either 0 or 1), indicating whether&nbsp;<strong>i</strong><sup>th</sup>&nbsp;apple belongs to Psyllodeas or to Aphids.</p>\n<p>Next&nbsp;<strong>N-1</strong>&nbsp;lines contains two numbers, the branches (edges) of apple tree (<strong>0 &le; I, J &lt; N</strong>,&nbsp;<strong>I &ne; J</strong>).</p>\n<p>Each of following&nbsp;<strong>Q</strong>&nbsp;lines contains one of following types of queries:</p>\n<p><strong>0 I</strong>,&nbsp;<strong>0 &le; I &lt; N</strong>, meaning that ownership of&nbsp;<strong>I</strong><sup>th</sup>&nbsp;apple has changed.</p>\n<p><strong>1 I J</strong>,&nbsp;<strong>0 &le; I, J &lt; N</strong>, question, whether it is possible to go from&nbsp;<strong>I</strong><sup>th</sup>&nbsp;to&nbsp;<strong>J</strong><sup>th</sup>&nbsp;apple.</p>\n<h3>Output</h3>\n<p>For each query of second kind (1) print \"YES\", if it is possible or \"NO\" if it is impossible!</p>\n<h3>Example Input</h3>\n<pre>8 11\n00111100\n0 1\n1 7\n1 2\n2 3\n2 6\n2 4\n4 5\n1 1 2\n1 0 7\n1 6 5\n1 2 3\n1 6 7\n0 2\n1 1 2\n1 0 7\n1 6 5\n1 2 3\n1 6 7\n</pre>\n<h3>Example Output</h3>\n<pre>NO\nYES\nNO\nYES\nNO\nYES\nYES\nNO\nNO\nYES</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e6b4962f-e282-47be-9bab-b4c6c0a52292",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADAAPPLEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90c9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adabranc-ada-and-branches",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADABRANC - Ada and Branches",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADABRANC - Ada and Branches</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug lives on a bush. A typical bush consists of some fruits connected with branches. Ada wants to travel between some fruits. Problem is that each edge can stand only some&nbsp;<strong>X<sub>i</sub></strong>&nbsp;weigth (so if some creature with more weigth would like to travel over the edge, it would break and the creature would fall of the bush).</p>\n<p>Ada wants to make several travels so she asks you (for each such travel) to how many distinct fruits she can get?</p>\n<h3>Input</h3>\n<p>The first line of each test-case will contain three integers&nbsp;<strong>2 &le; N &le; 10<sup>5</sup></strong>, the number of fruits,&nbsp;<strong>1 &le; M &le; 2*10<sup>5</sup></strong>, the number of edges and&nbsp;<strong>1 &le; Q &le; 3*10<sup>5</sup></strong>, the number of queries.</p>\n<p>The next&nbsp;<strong>M</strong>&nbsp;lines will contain three integers&nbsp;<strong>0 &le; a, b &lt; N (a &ne; b)</strong>, the fruits which are connected by and edge and&nbsp;<strong>1 &le; X<sub>i</sub>&nbsp;&le; 10<sup>5</sup></strong>.</p>\n<p>The next&nbsp;<strong>Q</strong>&nbsp;lines will contain two integers&nbsp;<strong>0 &le; a &lt; N</strong>, the fruit Ada starts in and&nbsp;<strong>1 &le; Y &le; 10<sup>5</sup></strong>, her actual weigth.</p>\n<p><strong>NOTE</strong>&nbsp;Multiedges are allowed.</p>\n<h3>Output</h3>\n<p>For each query, output the number of fruits Ada can get to.</p>\n<h3>Example Input</h3>\n<pre>4 4 3\n1 2 4\n2 3 3\n3 0 4\n0 1 3\n1 3\n1 4\n1 5\n</pre>\n<h3>Example Output</h3>\n<pre>4\n2\n1\n</pre>\n<h3>Example Input</h3>\n<pre>8 10 8\n1 3 3\n1 2 2 \n3 5 1\n3 4 3\n2 4 7\n5 6 2\n4 6 8\n4 7 3\n7 0 1\n6 0 4\n1 3\n1 4\n0 5\n6 6\n6 1\n2 3\n0 4\n5 2\n</pre>\n<h3>Example Output</h3>\n<pre>7\n1\n1\n3\n8\n7\n4\n8</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a6857b45-8926-410b-9cbd-aa27cb0f15c6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADABRANCinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ca"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adacarot-ada-and-carrot",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADACAROT - Ada and Carrot",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADACAROT - Ada and Carrot</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug is a great farmer. She has many places where she grows vegetables. She wants to grow two completely different kinds of vegetable:&nbsp;<strong>carrots</strong>&nbsp;and&nbsp;<strong>baby carrots</strong>. She wants to connect them by paths in such way, that she can get from any carrot (or baby carrot) to any other carrot (or baby carrot). She isn't amused by building itself, so she wants to make least number of paths, which is sufficient to make all carrots (and all baby carrots) connected. Due to regulations of Earwigean Union (<strong>EU</strong>), a carrot can't be connected to other carrot (and same is true for baby carrots) [so basically, she can connect only \"baby carrots\" to \"carrots\"]. Ada also wants to keep track of everything, so she will somehow distinguish between each carrot and between each baby carrot (and also between each place).</p>\n<p>She is wondering in how many ways she can plant carrots (and baby carrots) and connect them by ways, so that it corresponds to&nbsp;<strong>EU</strong>&nbsp;regulations.</p>\n<h3>Input</h3>\n<p>The input contains up to 200 lines. Each line consists of single integer&nbsp;<strong>2 &le; N &le; 2*10<sup>5</sup>&nbsp;</strong>, the number of places to which carrots/baby carrots shall be placed (note that she won't waste so she will fill all the places).</p>\n<h3>Output</h3>\n<p>For each line of input, print the number of ways, to plant carrots and baby carrots in such way, that it coresponds to&nbsp;<strong>EU</strong>&nbsp;regulations. Since this number might be pretty big, output it modulo&nbsp;<strong>10<sup>9</sup>+7</strong>&nbsp;(<strong>1000000007</strong>)</p>\n<h3>Example Input</h3>\n<pre>2\n3\n4\n10\n66666\n</pre>\n<h3>Example Output</h3>\n<pre>2\n12\n144\n452744977\n57191401</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/154dd1bd-f013-4f89-91ff-c67653cce4e2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90cb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adachery-ada-and-cherry",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADACHERY - Ada and Cherry",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADACHERY - Ada and Cherry</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might already know, Ada the Ladybug is a farmer. She grows cherry and now she wants to collect them. She is wondering about the number of cherries she will collect. But befor you could help here, you shall know some biological facts:</p>\n<p>Firstly, almost everyone think that cherry-tree is a tree. But it might not be true - in fact, it is a graph.</p>\n<p>Secondly, you have to know, how a cherry looks like. It is not hard to recognize a chery - it is a node, which is connected to another two nodes, which are NOT connected.</p>\n<p><strong>NOTE</strong>: Even though the cherry-tree structure might be weird, note that there won't be any multi-branches nor self-branches. Anyway do not assume it is not a cherry-forest.</p>\n<p><strong>This is a cherry:</strong></p>\n<p><img title=\"Cherry\" src=\"https://www.spoj.com/content/morass:cherry.png\" alt=\"Cherry\" /></p>\n<p><strong>This is NOT a cherry:</strong></p>\n<p><img title=\"Not a cherry\" src=\"https://www.spoj.com/content/morass:notcherry.png\" alt=\"Not a cherry\" /></p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains two integers&nbsp;<strong>1 &le; N, M &le; 10<sup>5</sup></strong>, the number of nodes of cherry-tree and the number of branches (edges) connecting them.</p>\n<p>The next&nbsp;<strong>M</strong>&nbsp;lines contains two integers&nbsp;<strong>0 &le; a, b &lt; N</strong>, the branch connecting two nodes.</p>\n<h3>Output</h3>\n<p>Print a single line - the number of cherries on the cherry-tree.</p>\n<h3>Example Input</h3>\n<pre>4 2\n1 2\n3 2\n</pre>\n<h3>Example Output</h3>\n<pre>1\n</pre>\n<h3>Example Input 2</h3>\n<pre>5 4\n1 2\n1 3\n1 4\n1 0\n</pre>\n<h3>Example Output 2</h3>\n<pre>6\n</pre>\n<h3>Example Input 3</h3>\n<pre>6 6\n0 1\n0 2\n2 1\n0 3\n1 4\n5 3\n</pre>\n<h3>Example Output 3</h3>\n<pre>5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f68e691b-9d48-4106-b206-49e6d4868c7a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90cc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adaches2-ada-and-palaces",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADACHES2 - Ada and Palaces",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADACHES2 - Ada and Palaces</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug was playing&nbsp;<a href=\"https://en.wikipedia.org/wiki/Chess_piece\">chess</a>&nbsp;agains her good friend Velvet Mite Vinit. They came up with new figure, called&nbsp;<strong>palace</strong>. In fact, palace is just&nbsp;<strong>tower</strong>&nbsp;with&nbsp;<strong>king</strong>&nbsp;inside. It can attack as king and tower combined: Either anywhere to same column or row&nbsp;<strong>or</strong>&nbsp;anywhere to adjacent (by side or diagonal) field.</p>\n<p>Their question is simple: How many ways can&nbsp;<strong>N</strong>&nbsp;palaces be placed on&nbsp;<strong>NxN</strong>&nbsp;chessboard so none of them attacks any other. Since this number might be pretty big, output answer modulo&nbsp;<strong>10<sup>9</sup>+7</strong></p>\n<h3>Input</h3>\n<p>The first line of input will contain&nbsp;<strong>1 &le; T &le; 10<sup>5</sup></strong>, the number of test-cases.</p>\n<p>Each of the testcases will contain single integer&nbsp;<strong>1 &le; N &le; 10<sup>7</sup></strong>, the size of chessboard.</p>\n<h3>Output</h3>\n<p>For each test-case output the number of possibilities modulo 1000000007.</p>\n<h3>Example Input</h3>\n<pre>8\n1\n2\n3\n7\n10\n1000\n10000\n9999999\n</pre>\n<h3>Example Output</h3>\n<pre>1\n0\n0\n646\n479306\n711794305\n450342414\n838796194</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/49ef0bcc-2657-435c-ba5a-05e428a3c335",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90cd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "adacoins-ada-and-coins",
  "tags": [],
  "level": "EXPERT",
  "title": "ADACOINS - Ada and Coins",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADACOINS - Ada and Coins</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><a href=\"https://www.spoj.com/problems/tag/dynamic-programming\"><span class=\" tag-algorithm-datastructure- tag-link problem-tag\" data-tagid=\"45\">#dynamic-programming</span></a>&nbsp;<a href=\"https://www.spoj.com/problems/tag/datastructures\"><span class=\" tag-conception-paradigm- tag-link problem-tag\" data-tagid=\"2450\">#datastructures</span></a></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug has several coins in her wallet. She is wondering, how many different values [sum of some subset of coins] is she able to make (in given range).</p>\n<h3>Input</h3>\n<p>The first line contains two integer numbers&nbsp;<strong>1 &le; N &le; 10<sup>4</sup>, 1 &le; Q &le; 5*10<sup>5</sup></strong>, the number of coins and number of queries.</p>\n<p>The next line contains&nbsp;<strong>N</strong>&nbsp;integer numbers&nbsp;<strong>1 &le; A<sub>i</sub>&nbsp;&le; 10<sup>5</sup></strong>, the values of coins in Ada's wallet.</p>\n<p>Afterward,&nbsp;<strong>Q</strong>&nbsp;lines follow, each containing two integers&nbsp;<strong>1 &le; B &le; E &le; 10<sup>5</sup></strong>,&nbsp;<strong>b</strong>eginning and&nbsp;<strong>e</strong>nd of range, for which ada wants to know the answer</p>\n<h3>Output</h3>\n<p>For each query, output the number of distinct values Ada can generate in given range.</p>\n<h3>Example Input</h3>\n<pre>10 10\n1 2 2 3 5 30 31 90 100 100\n1 1\n1 5\n3 6\n2 9\n30 100\n1 10000\n30 32\n5 12\n9 29\n190 220\n</pre>\n<h3>Example Output</h3>\n<pre>1\n5\n4\n8\n40\n231\n3\n8\n5\n25\n</pre>\n<h3>Output Subsets</h3>\n<pre>[  1,    1]: 1 \n[  1,    5]: 1 2 3 4 5 \n[  3,    6]: 3 4 5 6 \n[  2,    9]: 2 3 4 5 6 7 8 9 \n[ 30,  100]: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 90 91 92 93 94 95 96 97 98 99 100 \n[  1,10000]: 1 2 3 4 5 6 7 8 9 10 11 12 13 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 290 291 292 293 294 295 296 297 298 299 300 301 302 303 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 351 352 353 354 355 356 357 358 359 360 361 362 363 364 \n[ 30,   32]: 30 31 32 \n[  5,   12]: 5 6 7 8 9 10 11 12 \n[  9,   29]: 9 10 11 12 13 \n[190,  220]: 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 220</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/83d85e7c-e610-4579-9e28-4a52ad579938",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ce"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adadig-ada-and-digits",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADADIG - Ada and Digits",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADADIG - Ada and Digits</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might already know, Ada the Ladybug is a farmer and she also loves math. One day, as farming is sometimes very notorious work, she was thinking about numbers. She was wondering about how many numbers there are having exactly same digital sum as digital product.</p>\n<p>She have found out some answers for small&nbsp;<strong>N</strong>&nbsp;(sum &amp; product), but then the numbers started getting big. Can you help her to find out the answers for bigger sums to satisfy her mind?</p>\n<h3>Input</h3>\n<p>The first line contains a single integer&nbsp;<strong>1 &le; T &le; 100</strong>, number of test-cases.</p>\n<p>Each of the next line contains a single number&nbsp;<strong>1 &le; N &le; 3*10<sup>5</sup>&nbsp;</strong>, the required sum (and so the required product).</p>\n<h3>Output</h3>\n<p>For each test-case, print the number of existing numbers. Since this number might be pretty huge, output it modulo&nbsp;<strong>10<sup>9</sup>+7</strong>&nbsp;(<strong>1000000007</strong>).</p>\n<h3>Example Input</h3>\n<pre>8\n1\n2\n3\n7\n8\n12\n16\n144\n</pre>\n<h3>Example Output</h3>\n<pre>1\n1\n1\n1\n23\n240\n1091\n243368058</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/28ece9b9-5842-4269-907e-afc6599d5ad2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADADIGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90cf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adadung-ada-and-manure",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADADUNG - Ada and Manure",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADADUNG - Ada and Manure</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might know Ada the Ladybug is farmer. Last year, she sowed&nbsp;<strong>N</strong>&nbsp;distinct types of grain to&nbsp;<strong>N</strong>&nbsp;distinct places. This year she wants to seed the same types of grain again, yet there is a little problem: each type of grain needs special kind of manure, yet fertilizing soil with same kind of manure in consecutive years might destroy it.</p>\n<p>Now she is asking you to count the number of ways, to seed&nbsp;<strong>N</strong>&nbsp;types of grain to&nbsp;<strong>N</strong>&nbsp;places in such way that no type of grain will be in its original place. Since this number might be pretty big, print it modulo&nbsp;<strong>10<sup>9</sup>+7</strong>.</p>\n<h3>Input</h3>\n<p>The first line contains&nbsp;<strong>1 &le; T &le; 10<sup>5</sup>&nbsp;</strong>, number of test-cases.</p>\n<p>Each of following&nbsp;<strong>T</strong>&nbsp;lines contains&nbsp;<strong>1 &le; N &le; 10<sup>7</sup></strong>, number of types/places.</p>\n<h3>Output</h3>\n<p>For each test case, print the number of possibilities for given number of types/places modulo 1000000007.</p>\n<h3>Example Input</h3>\n<pre>5\n2\n3\n10\n100\n666\n</pre>\n<h3>Example Output</h3>\n<pre>1\n2\n1334961\n944828409\n769756093</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7ef019cc-d0b5-4d05-b1ca-ce802bc9e3e9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adafurow-ada-and-furrows",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADAFUROW - Ada and Furrows",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADAFUROW - Ada and Furrows</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might already know, Ada the Ladybug is a farmer. She has multiple furrows in which she grows vegetables. She also never grows multiple vegetables of the same kind in the same furrow. Ada sometime palnts a new vegetable, harveest a vegetable or asks for some aspect which two different furrows have in common (described in input).</p>\n<h3>Input</h3>\n<p>The first line of input will contain&nbsp;<strong>1 &le; Q &le; 3*10<sup>5</sup></strong>, the number of queries.</p>\n<p>Each of the next&nbsp;<strong>Q</strong>&nbsp;lines will contain&nbsp;<strong>? x y</strong>:&nbsp;<strong>0 &le; x, y &le; 2*10<sup>4</sup></strong>, and&nbsp;<strong>?</strong>&nbsp;is one of:&nbsp;<strong>+ - v ^ ! \\</strong>&nbsp;with following meaning:</p>\n<p>+: Plants vegetable of kind&nbsp;<strong>y</strong>&nbsp;to furrow number&nbsp;<strong>x</strong>&nbsp;(note that there will never be multiple vegetables of the same kind in the same furrow)</p>\n<p>-: Harvests vegetable of kind&nbsp;<strong>y</strong>&nbsp;from furrow number&nbsp;<strong>x</strong>&nbsp;(note that there will always be a vegetable of that kind)</p>\n<p>v: Finds out how many kinds of vegetables there are in furrows&nbsp;<strong>x</strong>&nbsp;and&nbsp;<strong>y</strong>.</p>\n<p>^: Finds out how many kinds of vegetable are in both furrows (<strong>x, y</strong>)</p>\n<p>!: Find out how many kinds of vegetables are in&nbsp;<strong>x</strong>&nbsp;and&nbsp;<strong>y</strong>&nbsp;<strong>BUT</strong>&nbsp;not in both of them at once.</p>\n<p>\\: Find out how many kinds of vegetable are in&nbsp;<strong>x</strong>&nbsp;but not in&nbsp;<strong>y</strong></p>\n<h3>Output</h3>\n<p>For each query of the last four kinds, output the proper answer.</p>\n<h3>Example Input</h3>\n<pre>10\n+ 1 4\n! 0 2\n+ 0 2\n\\ 0 2\n^ 0 1\nv 2 0\n+ 2 4\n! 2 0\n+ 1 0\n! 0 2</pre>\n<pre>Example Output\n</pre>\n<pre>0\n1\n0\n1\n2\n2\n</pre>\n<h3>Example Input</h3>\n<pre>15\n+ 0 2\n! 0 1\n+ 1 1\nv 0 1\n+ 1 2\n! 1 0\n! 0 1\n+ 0 0\nv 0 1\n^ 0 1\n+ 1 3\n\\ 1 0\n\\ 1 0\n+ 1 0\n- 1 2\n</pre>\n<h3>Example Output</h3>\n<pre>1\n2\n1\n1\n3\n1\n2\n2\n</pre>\n<h3>Example Input</h3>\n<pre>10\n+ 2 1\n! 3 1\n! 3 1\n+ 1 1\n\\ 2 0\n+ 3 1\nv 2 3\n! 2 3\n- 1 1\n^ 1 2\n\n</pre>\n<h3>Example Output</h3>\n<pre>0\n0\n1\n1\n0\n0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/48218549-4abf-49f1-ba82-33a5246e0e60",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adagame4-ada-and-game-of-divisors",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADAGAME4 - Ada and Game of Divisors",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADAGAME4 - Ada and Game of Divisors</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug is playing&nbsp;<strong>Game of Divisors</strong>&nbsp;against her friend Velvet Mite Vinit. The game has following rules. There is a pile of&nbsp;<strong>N</strong>&nbsp;stones between them. The player who's on move can pick at least&nbsp;<strong>1</strong>&nbsp;an at most&nbsp;<strong>&sigma;(N)</strong>&nbsp;stones (where&nbsp;<strong>&sigma;(N)</strong>&nbsp;stands for number of divisors of&nbsp;<strong>N</strong>). Obviously,&nbsp;<strong>N</strong>&nbsp;changes after each move. The one who won't get any stones (<strong>N == 0</strong>) loses.</p>\n<p>As Ada the&nbsp;<strong>Lady</strong>bug is a lady, so she moves first. Can you decide who will be the winner? Assume that both players play optimally.</p>\n<h3>Input</h3>\n<p>The first line of input will contain&nbsp;<strong>1 &le; T &le; 10<sup>5</sup></strong>, the number of test-cases.</p>\n<p>&nbsp;</p>\n<p>The next&nbsp;<strong>T</strong>&nbsp;lines will contain&nbsp;<strong>1 &le; N &le; 2*10<sup>7</sup></strong>, the number of stones which are initially in pile.</p>\n<h3>Output</h3>\n<p>Output the name of winner, so either \"Ada\" or \"Vinit\".</p>\n<h3>Example Input</h3>\n<pre>8\n1\n3\n5\n6\n11\n1000001\n1000000\n29\n</pre>\n<h3>Example Output</h3>\n<pre>Ada\nVinit\nAda\nAda\nVinit\nVinit\nAda\nAda</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2f5b1bc9-250a-4508-87af-1ea97bb41ef6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADAGAME4 input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adamoney-ada-va-kinh-te",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADAMONEY - Ada và Kinh tế",
  "content": "<h2 id=\"problem-name\" class=\"text-center\"><span>ADAMONEY - Ada v&agrave; Kinh tế</span></h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><span>Ada the Ladybug nghĩ rằng c&ocirc; ấy đ&atilde; t&igrave;m ra ch&igrave;a kh&oacute;a kinh doanh nền kinh tế của m&igrave;nh.&nbsp;Ada l&agrave; một n&ocirc;ng d&acirc;n v&agrave; c&ocirc; ấy nghĩ rằng c&ocirc; ấy đ&atilde; t&igrave;m thấy một tấm l&ograve;ng trong c&aacute;ch c&ocirc; ấy kiếm tiền.&nbsp;C&ocirc; ấy thấy rằng số tiền của ng&agrave;y h&ocirc;m sau c&oacute; thể được t&iacute;nh từ những ng&agrave;y trước bằng số tiền c&ocirc; ấy c&oacute; trong ng&agrave;y h&ocirc;m trước cộng với số tiền gấp đ&ocirc;i số tiền c&ocirc; ấy c&oacute; hai ng&agrave;y trước đ&oacute; cộng với năm lần số tiền c&ocirc; ấy c&oacute; bốn ng&agrave;y trước đ&oacute; cộng với số tiền c&ocirc; ấy c&oacute; năm ng&agrave;y trước đ&oacute;. .&nbsp;Đơn giản phải kh&ocirc;ng?&nbsp;C&ocirc; ấy muốn hệ thống n&agrave;y tự động, v&igrave; vậy c&ocirc; ấy đ&atilde; y&ecirc;u cầu bạn tạo một chương tr&igrave;nh cho n&oacute;.</span></p>\n<p><span>Ồ, một điều nữa.&nbsp;Bạn phải ghi nhớ một điều rằng c&ocirc; ấy mua một chiếc m&aacute;y k&eacute;o ngay khi c&oacute; đủ tiền (c&oacute; thể mua nhiều m&aacute;y k&eacute;o nếu c&oacute; thể).&nbsp;Gi&aacute; th&agrave;nh của m&aacute;y k&eacute;o l&agrave;&nbsp;</span><strong><span>10&nbsp;</span><sup><span>9</span></sup><span>&nbsp;+7</span></strong></p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p><span>D&ograve;ng đầu ti&ecirc;n chứa&nbsp;</span><strong><span>1 &le; T &le; 1000</span></strong><span>&nbsp;, số lượng test-case.</span></p>\n<p><span>Mỗi d&ograve;ng trong số&nbsp;</span><strong><span>T</span></strong><span>&nbsp;d&ograve;ng sau chứa 6 số nguy&ecirc;n&nbsp;</span><strong><span>0 &le; T&nbsp;</span><sub><span>0</span></sub><span>&nbsp;, T&nbsp;</span><sub><span>1</span></sub><span>&nbsp;, T&nbsp;</span><sub><span>2</span></sub><span>&nbsp;, T&nbsp;</span><sub><span>3</span></sub><span>&nbsp;, T&nbsp;</span><sub><span>4</span></sub><span>&nbsp;&lt;10&nbsp;</span><sup><span>9</span></sup><span>&nbsp;+7</span></strong><span>&nbsp;, nghĩa l&agrave; số tiền c&ocirc; ấy c&oacute; trong 5 ng&agrave;y đầu ti&ecirc;n v&agrave;&nbsp;</span><strong><span>0 &le; N &le; 10&nbsp;</span><sup><span>16</span></sup></strong><span>&nbsp;nghĩa l&agrave;&nbsp;ng&agrave;y&nbsp;</span><sup><span>thứ</span></sup><span>&nbsp;N&nbsp;m&agrave; c&ocirc; ấy muốn biết số tiền m&agrave; c&ocirc; ấy sẽ sở hữu.</span></p>\n<p><span>Như bạn hy vọng đ&atilde; hiểu, h&ocirc;m nay l&agrave; ng&agrave;y&nbsp;</span><strong><span>0</span></strong></p>\n<h3><span>Đầu ra</span></h3>\n<p><span>Đối với mỗi test-case, in số tiền c&ocirc; ấy sẽ c&oacute; trong&nbsp;ng&agrave;y&nbsp;</span><sup><span>thứ</span></sup><span>&nbsp;N&nbsp;(số tiền được t&iacute;nh v&agrave;o cuối ng&agrave;y, sau khi c&ocirc; ấy mua tất cả c&aacute;c m&aacute;y k&eacute;o!).</span></p>\n<h3><span>Đầu v&agrave;o mẫu</span></h3>\n<pre><span>7</span><span>\n1 1 1 1 1 5</span><span>\n1 2 3 4 5 6</span><span>\n4 2 5 6 4 10</span><span>\n1 2 1 2 1 15</span><span>\n1 2 1 1 2 20</span><span>\n1 0 0 0 0 19</span><span>\n2 4 8 16 32 1024</span>\n</pre>\n<h3><span>Đầu ra mẫu</span></h3>\n<pre><span>9</span><span>\n51</span><span>\n1777</span><span>\n49552</span><span>\n3128538</span><span>\n62128</span><span>\n565476237</span></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78347076-032e-43ff-a496-c054fb9acafb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adapower-ada-and-power",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADAPOWER - Ada and Power",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADAPOWER - Ada and Power</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug got a new homework today. She was attending algebra class and teacher was lecturing about various utilizations of matrix multiplication. He wanted to teach his students about the power of matrix, so he gave them following homework:</p>\n<p>Students were given a matrix followed be multiple queries. The query of first kind is adding a number to each element of a rectangular region of their matrix. In the query of second kind, a matrix is given and students are asked, whether it is the second power of actual matrix.</p>\n<p>Can you help Ada to solve her homework?</p>\n<p>Input</p>\n<p>The first line contains two integers&nbsp;<strong>1 &le; N &le; 150&nbsp;</strong>, the size of square matrix and&nbsp;<strong>1 &le; Q &le; 200&nbsp;</strong>, the number of queries.</p>\n<p>Each of the next&nbsp;<strong>N</strong>&nbsp;lines contains&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>0 &le; A<sub>x,y</sub>&nbsp;&le; 100</strong>, the element on&nbsp;<strong>x<sup>th</sup>,y<sup>th</sup></strong>&nbsp;coordinate of matrix.</p>\n<p>Then&nbsp;<strong>Q</strong>&nbsp;queries follows:</p>\n<p>The query of first kind is&nbsp;<strong>1</strong>&nbsp;followed five integers&nbsp;<strong>0 &le; x, y &le; X, Y &lt; N</strong>, specifing the part, to which the number will be added, and number&nbsp;<strong>0 &le; V &le; 100</strong>, the value which will be added.</p>\n<p>The query of second kind is&nbsp;<strong>2</strong>&nbsp;followed by&nbsp;<strong>N</strong>&nbsp;lines containing&nbsp;<strong>N</strong>&nbsp;integers, which are supposed to be the second power of actual matrix.</p>\n<h3>Output</h3>\n<p>For each query of second kind, print either&nbsp;<strong>yes</strong>, if given matrix is second power of actual state of matrix or&nbsp;<strong>no</strong>&nbsp;in the other case.</p>\n<h3>Example Input</h3>\n<pre>2 5\n1 2\n2 1\n2\n5 4\n4 5\n2\n4 5\n5 4\n1 0 1 1 1 1\n2\n7 9\n6 10\n2\n5 4\n4 5\n</pre>\n<h3>Example Output</h3>\n<pre>yes\nno\nyes\nno\n</pre>\n<h3>Example Input 2</h3>\n<pre>5 10\n66 60 69 84 23\n69 81 94 91 66\n24 38 35 65 28\n31 27 91 57 11\n4 5 40 0 71\n1 3 0 4 0 79\n2\n21301 13825 21173 20277 9967\n27887 17060 26586 24464 15252\n14519 7743 13488 11454 6743\n18490 13839 18940 20861 8268\n12676 7260 10437 10027 8400\n1 1 0 4 2 100\n1 2 4 3 4 37\n1 2 2 2 2 1\n1 0 2 0 3 4\n2\n46237 38485 46414 21029 16080\n96987 88160 100456 49140 37497\n73915 66266 75834 36015 28535\n79761 74224 83550 45701 31771\n60176 56760 62709 34759 25280\n2\n46237 38485 46414 21029 16080\n96987 88160 100456 49140 37497\n73915 66266 75835 36015 28535\n79761 74224 83551 45701 31771\n60176 56760 62709 34759 25280\n2\n46237 38486 46414 21028 16080\n96987 88160 100456 49140 37497\n73915 66265 75835 36016 28535\n79761 74224 83551 45701 31771\n60176 56760 62709 34759 25280\n2\n46237 38485 46414 21029 16080\n96987 88160 100456 49140 37497\n73915 66266 75835 36015 28535\n79761 74224 83551 45701 31771\n60176 56760 62709 34759 25280\n</pre>\n<h3>Example Output 2</h3>\n<pre>no\nno\nyes\nno\nyes</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1845fd60-bab8-490e-a2b9-7e0f73604822",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adarainb-ada-and-rain-ii",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADARAINB - Ada and Rain II",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADARAINB - Ada and Rain II</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might&nbsp;<a href=\"http://www.spoj.com/problems/ADARAIN/\">already know</a>&nbsp;, Ada the Ladybug is growing plants. She used to have a very long furrow, yet it costs a fortune to fence it. To reduce it, she has decided to build a square field. It is so big, that most of water falling from rains drops just onto a rectangular part of the field. Ada doesn't want the plants to wither, so she records all rains to know, how much water every particular plant got. Sadly, there are so many rains that she couldn't handle this alone!</p>\n<p>At first, you will be given&nbsp;<strong>N</strong>&nbsp;queries with&nbsp;<strong>[x,y],[X,Y]</strong>&nbsp;rectangles telling you, where all of the&nbsp;<strong>N</strong>&nbsp;rains has fallen (lower left / upper right corners of it). Afterward&nbsp;<strong>M</strong>&nbsp;queries follow, with number&nbsp;<strong>i</strong>&nbsp;- the i-th plant for which you want to know, the number of rains, which has fallen onto it.</p>\n<h3>Input</h3>\n<p>The first line will contain&nbsp;<strong>0&lt; N,M &le; 3*10<sup>5</sup></strong>,<strong>0&lt; L &le; 5000</strong>, number of rains, number of questions and size of square field.</p>\n<p>Then&nbsp;<strong>N</strong>&nbsp;lines follow, each containing four integers&nbsp;<strong>x, y, X, Y</strong>(&nbsp;<strong>1 &le; x &le; X &le; L, 1 &le; y &le; Y &le; L&nbsp;</strong>), bottom-left and upper-right corner of rectangle where i<sup>th</sup>&nbsp;rain has fallen.</p>\n<p>Afterward&nbsp;<strong>M</strong>&nbsp;lines follow, each containing two numbers&nbsp;<strong>1 &le; x, y &le; L</strong>, asking for number of rains which has fallen onto plant on coordinates&nbsp;<strong>[x,y]</strong></p>\n<h3>Output</h3>\n<p>Print&nbsp;<strong>M</strong>&nbsp;lines (for each query of second type), with integer indicating number of rains, which has fallen onto the plant in query.</p>\n<h3>Example Input</h3>\n<pre>6 16 4\n1 1 3 4\n1 1 3 3\n2 2 2 2\n4 2 4 3\n3 3 4 4\n1 2 2 4\n1 1\n1 2\n1 3\n1 4\n2 1 \n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n3 4\n4 1\n4 2\n4 3\n4 4\n</pre>\n<h3>Example Output</h3>\n<pre>2\n3\n3\n2\n2\n4\n3\n2\n2\n2\n3\n2\n0\n1\n2\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4180227d-1c57-47c2-944d-ccafec2662f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adasqr-ada-and-squares",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADASQR - Ada and Squares",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADASQR - Ada and Squares</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might already know, Ada the Ladybug is a farmer. She has a beautiful square field (of size&nbsp;<strong>NxN</strong>) in which she grows many beautiful plants. Each plant has some height. She wants to know, for each subsquare (of some defined size&nbsp;<strong>KxK</strong>) what is the minimal sized plant in it. As she doesn't want too many information, she only asks you for the sum of all such lowest plants.</p>\n<p>As it is mentioned above, she doesn't like \"too many information\" so she also comprimed the heights for you. For each of the&nbsp;<strong>N</strong>&nbsp;rows, you wll be given 4 integers&nbsp;<strong>x<sub>0</sub>&nbsp;a b c</strong>. The rest of the row (<strong>N-1</strong>&nbsp;plants) could be obtained as&nbsp;<strong>x<sub>i+1</sub>=(x<sub>i</sub>*a+b)%c</strong>.</p>\n<h3>Input</h3>\n<p>The first line will contain two integers&nbsp;<strong>N, K</strong>:&nbsp;<strong>1 &le; K &le; N &le; 5000</strong>, the size of field and the defined size of subsquare.</p>\n<p>The next&nbsp;<strong>N</strong>&nbsp;lines will contain four integers&nbsp;<strong>0 &le; x<sub>0</sub>, a, b, c &le; 10<sup>18</sup></strong>&nbsp;(<strong>c &ne; 0</strong>), which will generate the&nbsp;<strong>i<sup>th</sup></strong>&nbsp;row.</p>\n<h3>Output</h3>\n<p>Output the sum of minimal heights of each subarray of size&nbsp;<strong>KxK</strong>. As it might be pretty big, output the number modulo&nbsp;<strong>10<sup>9</sup>+7</strong>&nbsp;(1000000007).</p>\n<h3>Example Input</h3>\n<pre>4 2\n8 2 9 9\n5 7 9 3\n9 7 7 5\n7 4 7 3\n</pre>\n<h3>Example Output</h3>\n<pre>6\n</pre>\n<h3>Real Field</h3>\n<pre>8 7 5 1\n5 2 2 2\n9 0 2 1\n7 2 0 1\n</pre>\n<h3>Example Input 2</h3>\n<pre>10 8\n78 51 99 77\n27 95 37 80\n76 5 93 32\n92 48 56 64\n93 17 18 28\n70 30 15 73\n60 69 36 56\n12 11 63 57\n18 81 55 60\n59 92 68 81\n</pre>\n<h3>Example Output 2</h3>\n<pre>18\n</pre>\n<h3>Real Field 2</h3>\n<pre>78 73 49 57 3 21 15 17 42 8\n27 42 27 42 27 42 27 42 27 42\n76 25 26 31 24 21 6 27 4 17\n92 56 56 56 56 56 56 56 56 56\n93 3 13 15 21 11 9 3 13 15\n70 71 28 52 42 34 13 40 47 38\n60 32 4 32 4 32 4 32 4 32\n12 24 42 12 24 42 12 24 42 12\n18 13 28 43 58 13 28 43 58 13\n59 69 17 12 38 0 68 6 53 3\n</pre>\n<h3>Example Input 3</h3>\n<pre>20 5\n2956 1596 6710 2713\n2626 2791 1425 3859\n1874 6262 3248 2238\n5856 4491 7062 2271\n2722 1707 9943 7035\n403 2209 7057 1975\n7211 9708 3898 6949\n2426 9144 8440 2974\n5034 3983 6243 7717\n3877 37 9002 7373\n3021 2549 7277 5516\n3673 9640 7775 5355\n1563 9728 6671 5484\n4342 2971 1237 6834\n3589 3662 5391 9672\n780 6008 5239 304\n5095 4370 280 9403\n6295 118 822 2545\n5649 2519 5412 6501\n2901 2829 9801 846\n</pre>\n<h3>Example Output 3</h3>\n<pre>38811\n</pre>\n<h3>Example Input 4</h3>\n<pre>30 8\n42190820083565085 13910582960072682 404339598526125697 18330389877395687\n13136432922739892 360508552206096544 840939247896706683 166851773518294104\n195629367891644832 133017412681920741 791801761173755587 953548694494513035\n930566226452148080 212263842828807811 175150807852323258 261521670663969864\n223183990889228375 549657188306426129 227104892059916771 710982591168543028\n622099644118414985 984577533571891185 802914550839341535 577466815316077292\n363883415474075556 913215986569797 257759523922291507 129711072317319582\n472381530848232370 587974020968388203 95939647385371737 421772367107774947\n870958993881230243 98076059799725034 955829596729745763 73827358022047846\n50043465537791007 178000244851301580 686791668222702403 230423627799787034\n41761070639181344 703749524391633426 575680731101407438 948818018258441027\n74006463131502635 534256412790647769 117842073420805101 689203117404347787\n720627491787492218 206756570671097114 5074687913252083 402683208709668506\n583558162725379851 516050342346753246 792500576162473842 130741479957823970\n709539139438259321 132262390506172747 780941668119266465 575886488550729150\n518457490774399283 781644026117044419 451050302936677524 319690456859518311\n747952274084607955 433194299929591864 829471355224525516 87759356942462111\n472230421696663981 150197958929639709 699963373353260575 156451405305679606\n379767724942828073 307602673656652612 536339937437228412 450095461910438107\n130196535602142550 12133076804665744 944874740331622465 112002748054899251\n384924669386020020 895364022010504585 562727215734096434 364228612518853658\n2558159832040223 42876494731943717 303029667687965036 370694399470107119\n801915657644445462 610444723365908160 304599053734522278 593616674445351229\n318887526987442235 390853723621574162 339872209606293879 308835452771750585\n476033942116470840 213009419015490269 20470342994674399 282092030038623628\n582424275023334455 712867665674241464 17697708714929958 654849385199113364\n475223303973240030 425222042042672679 12723252770801578 591938517391534160\n538033927835846645 318295777283007977 593613359214212470 772515434523625506\n612174705584217229 415458073586196348 508007743847849815 965297054583491903\n179981864970425260 975763652798172152 215122546620747273 113899093042760092\n</pre>\n<h3>Example Output 4</h3>\n<pre>641904340</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5ef55f2f-f9cf-4b29-b632-d6eadf18dd14",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adataxes-ada-and-taxes",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADATAXES - Ada and Taxes",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADATAXES - Ada and Taxes</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>As you might already know, Ada the Ladybug is a farmer. She grows vegetables in a long furrow. All of the vegetables have some height. Local politicians tax small vegetables, but as the furrow is very long, they always tax just a part of it.</p>\n<p>The taxes always have some limit on height. They are calculated very simply: Tax collectors multiply the heights of all vegetables, which are lesser or equal to limit and are on desired segment.</p>\n<p>The taxes might be very high so tax collectors just round their income and take only&nbsp;<strong>1000000007</strong>&nbsp;(<strong>10<sup>9</sup>+7</strong>) banknotes. They are very kind, so they always leave the rest to Ada. She is interested in how much they will leave her.</p>\n<p><strong>NOTE:</strong>&nbsp;If none of the vegeteble is lesser/equal to given limit, Ada is left with symbolical 1 \"money\".</p>\n<h3>Input</h3>\n<p>The first line contains an integer&nbsp;<strong>1 &le; N, Q &le; 3*10<sup>5</sup></strong>, the number of vegetables Ada grows and the number of times the tax collectors come.</p>\n<p>The second line contains&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>1 &le; A<sub>i</sub>&nbsp;&le; 3*10<sup>5</sup></strong>, the heights of vegetables.</p>\n<p>The next&nbsp;<strong>Q</strong>&nbsp;lines contains three integers&nbsp;<strong>0 &le; L &le; R &lt; N</strong>, the left and right vegetables of segment and&nbsp;<strong>1&le; H &le; 3*10<sup>5</sup></strong>, the limit.</p>\n<h3>Output</h3>\nPrint a single line for each query with the number of money Ada will be left with after each tax collecting.\n<h3>Example Input</h3>\n<pre>10 6\n1 2 3 4 5 10 9 8 7 6\n5 5 5\n0 2 3\n0 9 9\n4 8 8\n2 4 11\n2 2 3\n</pre>\n<h3>Example Output</h3>\n<pre>1\n6\n362880\n280\n60\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8410b4a9-c92a-44e1-ac4f-bf24719f84b2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adatomat-ada-and-tomato",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADATOMAT - Ada and Tomato",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADATOMAT - Ada and Tomato</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ada the Ladybug grows tomatoes. She has a very long furrow full of them. At the day of harvest, she picks all tomatoes,&nbsp;<strong>sorts</strong>&nbsp;them by size, index them (from 1) and sell them for price of \"<strong>size &times; index</strong>\". How much money will she make, if she sells all of them?</p>\n<p>As the nature is very beautiful (and Ada is great mathematician), she found the pattern for sizes of tomatoes. The patern works in (hopefully well known) way: Let us have tomato of size&nbsp;<strong>X<sub>i</sub></strong>, then&nbsp;<strong>X<sub>i+1</sub></strong>&nbsp;will be counted as&nbsp;<strong>X<sub>i+1</sub>=X<sub>i</sub>*a+b mod M</strong>.&nbsp;<strong>M</strong>&nbsp;(modulo) is equal to&nbsp;<strong>10<sup>9</sup>+7</strong>&nbsp;(1000000007).</p>\n<h3>Input</h3>\nThe first line contains&nbsp;<strong>1 &le; T &le; 200</strong>, the number of test-cases.\n<p>Each test-case contains four numbers&nbsp;<strong>N, a, b, X<sub>1</sub></strong>:</p>\n<p><strong>1 &le; N &le; 2*10<sup>7</sup></strong>, the number of tomatoes.</p>\n<p><strong>0 &le; a, b, X<sub>1</sub>&nbsp;&lt; 10<sup>9</sup>+7&nbsp;</strong>- described above (X<sub>1</sub>&nbsp;is the size of first tomato).</p>\n<p>Sum of&nbsp;<strong>N</strong>&nbsp;over all test-cases will not exceed&nbsp;<strong>5*10<sup>7</sup></strong>.</p>\n<h3>Output</h3>\nFor each test-case output the sum of all prices modulo&nbsp;<strong>10<sup>9</sup>+7</strong>.\n<h3>Example Input</h3>\n<pre>5 \n2 2 3 1\n3 1 1 1\n5 1 2 1\n4 1 0 1\n20 5 6 7\n</pre>\n<h3>Example Output</h3>\n<pre>11\n14\n95\n10\n150690584\n</pre>\n<h3>Sizes of tomatoes for each input</h3>\n<pre>1 5\n1 2 3\n1 3 5 7 9\n1 1 1 1\n7 41 211 1061 5311 26561 132811 664061 3320311 16601561 75195297 83007811 375976491 399412248 415039061 632654193 879882454 926530843 985306173 997061239</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/deda0fe4-c0d8-4420-92df-bc446357f22d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "adv04b-upper-right-king-easy",
  "tags": [],
  "level": "BEGINNER",
  "title": "ADV04B - Upper Right King (Easy)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADV04B - Upper Right King (Easy)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There is a king in the lower left corner of the n &times; n checkmate board. The king can move one step right, one step up or one step up-right. How many ways are there for him to reach the upper right corner of the board?</p>\n<h3>Input</h3>\n<p>The first line of input contains number T - the amount of test cases. Next T lines consist of single integer n - the size of the board.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 1000<br />1 &lt;= n &lt;= 1000</p>\n<h3>Output</h3>\n<p>For each test case output the munber of ways to reach upper right corner of n &times; n board modulo 1000003.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n3\n\n<strong>Output:</strong>\n3\n13\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/10c3fcb2-e19a-4f63-9d9e-6bb4f9abe439",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90d9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adv04b1-upper-right-king-hard",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ADV04B1 - Upper Right King (Hard)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ADV04B1 - Upper Right King (Hard)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There is a king in the lower left corner of the n &times; n checkmate board. The king can move one step right, one step up or one step up-right. How many ways are there for him to reach the upper right corner of the board?</p>\n<h3>Input</h3>\n<p>The first line of input contains number T - the amount of test cases. Next T lines consist of single integer n - the size of the board.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 10000<br />1 &lt;= n &lt;= 1000000</p>\n<h3>Output</h3>\n<p>For each test case output the munber of ways to reach upper right corner of n &times; n board modulo 1000003.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n3\n\n<strong>Output:</strong>\n3\n13\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8dd5fec8-d123-4f64-ad0c-cac9bcb20701",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90da"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ae00-rectangles",
  "tags": [],
  "level": "BEGINNER",
  "title": "AE00 - Rectangles",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AE00 - Rectangles</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Byteman has a collection of N squares with side 1. How many different rectangles can he form using these squares?</p>\n<p>Two rectangles are considered different if none of them can be rotated and moved to obtain the second one. During rectangle construction, Byteman can neither deform the squares nor put any squares upon any other ones.</p>\n<h3>Input</h3>\n<p>The first and only line of the standard input contains one integer N (1 &lt;= N &lt;= 10000).</p>\n<h3>Output</h3>\n<p>The first and only line of the standard output should contain a single integer equal to the number of different rectangles that Byteman can form using his squares.</p>\n<h3>Example</h3>\n<p>For the input data:</p>\n<pre>6</pre>\n<p>the correct result is:</p>\n<pre>8</pre>\n<p><img src=\"http://www.spoj.com/content/min_25:ae00.png\" width=\"250px\" /></p>\n<p><em>Task author: Jakub Radoszewski.</em></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/977a0cab-d547-4a3d-b2c7-96c09345a3d2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90db"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ae1b-tables",
  "tags": [],
  "level": "BEGINNER",
  "title": "AE1B - Tables",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AE1B - Tables</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Byteman works as a carpenter. He has just received an order for s pine-wood tables. Although he has plenty of pine-wood boards in his workshop, he has just run out of screws. Therefore he needs to walk to the warehouse and bring back some boxes with screws. What is the minimum number of boxes that he needs to bring in order to have enough screws to make the tables?</p>\n<h2>Input</h2>\n<p>The first line of the standard input contains three integers n, k, and s (1 &le; n, k, s &le; 1000) separated with single spaces. They denote the number of boxes with screws in Byteman's warehouse, the number of screws needed to make a table and the number of tables to be made by Byteman, respectively. The second line contains n (not necessarily different) integers a<sub>i</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 1000) separated with single spaces, such that a<sub>i</sub>&nbsp;is the number of screws in the i<sup>th</sup>&nbsp;box in the warehouse.</p>\n<h2>Output</h2>\n<p>The first and only line of the standard output should contain a single integer - the minimal number of boxes with screws that Byteman needs to bring from his warehouse in order to make s tables. You may assume that Byteman has enough screws in the warehouse to make all tables.</p>\n<h2>Example</h2>\n<p>For the input data:</p>\n<pre>5 6 3\n3 9 5 7 3</pre>\n<p>the correct result is:</p>\n<pre>3</pre>\n<p><strong>Explanation of the example.</strong>&nbsp;To make three tables, each of which requires six screws, Byteman has to bring three boxes with screws from the warehouse. These can be either the ones containing 3, 7 and 9 screws, or the ones with 9, 5 and 7 screws.</p>\n<p><em>Task author: Jakub Lacki.</em></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3c6e6f62-6e4d-400a-acae-11ffe1313cc5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90dc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "afs-amazing-factor-sequence",
  "tags": [],
  "level": "BEGINNER",
  "title": "AFS - Amazing Factor Sequence",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AFS - Amazing Factor Sequence</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Bhelu is the classmate of Bablu who made the&nbsp;<a href=\"https://www.spoj.com/problems/APS/\" target=\"next\">Amazing Prime Sequence&nbsp;</a>.</p>\n<p>He felt jealous of his classmate and decides to make his own sequence. Since he was not very imaginative, he came up with almost the same definition just making a difference in f(n):</p>\n<ul>\n<li>a[0] = a[1] = 0.</li>\n<li>For n &gt; 1, a[n] = a[n - 1] + f(n), where f(n) is the sum of positive integers in the following set S.</li>\n<li>S = {x | x &lt; n and n % x = 0}.</li>\n</ul>\n<p>Now, Bablu asked him to make a code to find f(n) as he already had the code of his sequence. So, Bhelu asks for your help since he doesn't know Programming. Your task is very simple, just find a[n] for a given value of n (&lt; 10^6).</p>\n<h3>Input</h3>\n<p>Your code will be checked for multiple Test Cases.</p>\n<p>First Line of Input contains T (&lt;= 100), the number of Test Cases.</p>\n<p>Next T lines contain a single positive integer N. (1 &lt; N &lt; 10^6).</p>\n<h3>Output</h3>\n<p>Single line containing a[n] i.e. n-th number of the sequence for each test case.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3\n4\n5\n\n<strong>Output:</strong>\n2\n5\n6</pre>\n<p><strong>Explanation</strong></p>\n<pre>f(2) = 1 {1}\nf(3) = 1 {1}\nf(4) = 3 {1, 2}\nf(5) = 1 {1}</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0314be5e-1f3e-4ff6-be71-f0116a39fdc6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90dd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "aggrcow-aggressive-cows-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "AGGRCOW - Aggressive cows",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AGGRCOW - Aggressive cows</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Farmer John has built a new long barn, with N (2 &lt;= N &lt;= 100,000) stalls. The stalls are located along a straight line at positions x1,...,xN (0 &lt;= xi &lt;= 1,000,000,000).<br /><br />His C (2 &lt;= C &lt;= N) cows don't like this barn layout and become aggressive towards each other once put into a stall. To prevent the cows from hurting each other, FJ wants to assign the cows to the stalls, such that the minimum distance between any two of them is as large as possible. What is the largest minimum distance?</p>\n<h3>Input</h3>\n<p><em>t</em>&nbsp;&ndash; the number of test cases, then&nbsp;<em>t</em>&nbsp;test cases follows.<br />* Line 1: Two space-separated integers: N and C<br />* Lines 2..N+1: Line i+1 contains an integer stall location, xi</p>\n<h3>Output</h3>\n<p>For each test case output one integer: the largest minimum distance.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<pre>1\n5 3\n1\n2\n8\n4\n9\n</pre>\n<p><strong>Output:</strong></p>\n<pre>3\n</pre>\n<p><strong>Output details:</strong></p>\n<p>FJ can put his 3 cows in the stalls at positions 1, 4 and 8,<br />resulting in a minimum distance of 3.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa10c9fc-9f67-460c-b9a1-a2f96ee26432",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90de"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "agpc01b-too-late",
  "tags": [],
  "level": "BEGINNER",
  "title": "AGPC01B - Too Late",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AGPC01B - Too Late</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>It's exam day and as usual Halum is running late. He has only&nbsp;<strong>T</strong>&nbsp;minutes to go the the exam hall before it starts. There are two types of transports to go to the University. He can go via Bus which takes&nbsp;<strong>B</strong>&nbsp;minutes or he can take a CNG which takes&nbsp;<strong>C</strong>&nbsp;minutes. If he can reach the hall by Bus or CNG in time, he will always choose the Bus. As a lazy guy Halum doesn't like to walk but if he can't reach the university by Bus or CNG in time he will try walking. It takes&nbsp;<strong>W</strong>&nbsp;minutes to go to the university if he walks. Walking is sometimes faster than Bus or CNG because of heavy traffic. Even then if it's impossible to reach the exam hall by any of the described ways he'll just miss the exam.</p>\n<p>Now, given T, B, C and W, you will have to find out which transport Halum should take to go to the university or tell us if he's too late.</p>\n<h3>Input</h3>\n<p>In the first line of input there will be four integers&nbsp;<strong>T B C W</strong>&nbsp;<strong>(1&lt;=T, B, C, W&lt;= 100)</strong>.</p>\n<h3>Output</h3>\n<p>Output one line describing the answer to the question. If he can go via Bus print&nbsp;<strong>\"Bus\"</strong>, if he can go via CNG print&nbsp;<strong>\"CNG\"</strong>, if those fails but he can go by foot print&nbsp;<strong>\"Walk\"</strong>. If it's impossible to reach in time print&nbsp;<strong>\"Too Late\"</strong>. All output should be without the quotes. See sample input output for clarification.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n30 25 27 30\n\n<strong>Output:</strong>\nBus\n</pre>\n<pre><strong>Input:</strong>\n30 35 38 47\n\n<strong>Output:</strong>\nToo Late</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/682df339-a690-4840-94aa-d7f729bcad68",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90df"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "agpc01c-dem-so-nguoi-choi",
  "tags": [],
  "level": "BEGINNER",
  "title": "AGPC01C - Đếm số người chơi",
  "content": "<h2 id=\"problem-name\" class=\"text-center\"><span>AGPC01C - Đếm số người chơi</span></h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em><span>Kh&ocirc;ng c&oacute; thẻ</span></em>&nbsp;</div>\n</div>\n<h2 class=\"text-center\">&nbsp;</h2>\n<div id=\"problem-body\">\n<p><span>Tại AIUB c&oacute;&nbsp;</span><strong><span>N</span></strong><span>&nbsp;sinh vi&ecirc;n.&nbsp;Trong số đ&oacute;&nbsp;học sinh&nbsp;</span><strong><span>C</span></strong><span>&nbsp;th&iacute;ch chơi cricket,&nbsp;học sinh&nbsp;</span><strong><span>F</span></strong><span>&nbsp;th&iacute;ch chơi b&oacute;ng đ&aacute; v&agrave;&nbsp;học sinh&nbsp;</span><strong><span>T</span></strong><span>&nbsp;th&iacute;ch chơi quần vợt.&nbsp;Trong số những sinh vi&ecirc;n n&agrave;y, một số (&nbsp;</span><strong><span>CF</span></strong><span>&nbsp;) th&iacute;ch cả cricket v&agrave; b&oacute;ng đ&aacute;, một số sinh vi&ecirc;n (&nbsp;</span><strong><span>CT</span></strong><span>&nbsp;) th&iacute;ch cả cricket v&agrave; quần vợt&nbsp;, một số sinh vi&ecirc;n&nbsp;kh&aacute;c (&nbsp;</span><strong><span>FT</span></strong><span>&nbsp;) th&iacute;ch cả b&oacute;ng đ&aacute; v&agrave; Tennis v&agrave; c&oacute; rất &iacute;t sinh vi&ecirc;n (&nbsp;</span><strong><span>CFT</span></strong><span>&nbsp;) th&iacute;ch tất cả c&aacute;c m&ocirc;n thể thao cricket, b&oacute;ng đ&aacute;. v&agrave; quần vợt.&nbsp;B&acirc;y giờ nhiệm vụ của bạn l&agrave; t&igrave;m số học sinh kh&ocirc;ng chơi tr&ograve; n&agrave;o.</span></p>\n<p><span>AIUB c&oacute; N số học sinh.&nbsp;Trong đ&oacute; C th&iacute;ch chơi cricket, F th&iacute;ch đ&aacute; b&oacute;ng v&agrave; T th&iacute;ch chơi quần vợt.&nbsp;Trong số đ&oacute; CF th&iacute;ch cả cricket v&agrave; b&oacute;ng đ&aacute;, CT th&iacute;ch cricket v&agrave; tennis, FT th&iacute;ch b&oacute;ng đ&aacute; v&agrave; quần vợt v&agrave; CFT th&iacute;ch chơi cả ba tr&ograve; chơi.&nbsp;B&acirc;y giờ bạn phải t&igrave;m xem c&oacute; bao nhi&ecirc;u học sinh kh&ocirc;ng th&iacute;ch chơi một tr&ograve; chơi.</span></p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p><span>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa t&aacute;m số nguy&ecirc;n NCFT CF CT FT CFT.&nbsp;C&aacute;c gi&aacute; trị sẽ lớn hơn bằng 0 v&agrave; nhỏ hơn 100 (N&gt; = C + F + T).</span></p>\n<p><span>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o sẽ c&oacute; t&aacute;m số NCFT CF CT FT CFT.&nbsp;Tất cả c&aacute;c số sẽ nằm trong khoảng từ 0 đến 100 (N&gt; = C + F + T).</span></p>\n<h3><span>Đầu ra</span></h3>\n<p><span>Xuất ra một d&ograve;ng chứa một số nguy&ecirc;n, l&agrave; số học sinh kh&ocirc;ng chơi m&ocirc;n thể thao n&agrave;o.&nbsp;Xem Đầu ra đầu v&agrave;o mẫu để l&agrave;m r&otilde;.</span></p>\n<p><span>C&oacute; bao nhi&ecirc;u học sinh phải viết v&agrave;o một d&ograve;ng kh&ocirc;ng th&iacute;ch chơi một tr&ograve; chơi duy nhất.&nbsp;Xem v&iacute; dụ để hiểu r&otilde; hơn.</span></p>\n<h3><span>Th&iacute; dụ</span></h3>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span> \n10 3 2 2 0 0 0 0 <strong>Đầu ra:</strong> \n3</span>\n\n\n</pre>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span> \n10 3 2 2 1 1 1 1 <strong>Đầu ra:</strong> \n5</span>\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5cadcf89-d2d6-4abe-bd14-a0b400cdfab4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "agpc01f-can-you-search",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "AGPC01F - Can you search?",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AGPC01F - Can you search?</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Shimlin loves to play with array. One day she was playing a game of finding the smallest number in an array but soon she got bored as the game was too easy for her. She asked her ghost friend to make the game more interesting. After thinking for a while the ghost came up with an idea. The ghost will give her some queries. In each query the ghost will tell her a number&nbsp;<strong>b<sub>i</sub></strong>&nbsp;(less than the given array size) and Shimlin will have to answer the smallest number among first&nbsp;<strong>b<sub>i</sub></strong>&nbsp;elements of the given array.</p>\n<p>The ghost gave you the responsibility to find the correct answer of each query so that he can match the answer with Shimlin's answer.</p>\n<h3>Input</h3>\n<p>Input starts with&nbsp;<strong>T(1&lt;=T&lt;=100)</strong>, denoting the number of test case.</p>\n<p>Each of the test case contains 3 line.</p>\n<p>In the first line there are two positive integer numbers&nbsp;<strong>n</strong>&nbsp;and&nbsp;<strong>q (1&thinsp;&le;&thinsp;n&thinsp;&le;&thinsp;10^5, 1&thinsp;&le;&thinsp;q&thinsp;&le;&thinsp;10^5)</strong>&nbsp;&mdash; size of the array and number of queries.</p>\n<p>The second line contains&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>a<sub>1</sub>,&thinsp;a<sub>2</sub>,&thinsp;...,&thinsp;a<sub>n</sub>&nbsp;(1&thinsp;&le;&thinsp;a<sub>i</sub>&thinsp;&le;&thinsp;10^5)</strong>&nbsp;&mdash; elements of the array.</p>\n<p>The third line contains&nbsp;<strong>q</strong>&nbsp;integers&nbsp;<strong>b<sub>1</sub>,&thinsp;b<sub>2</sub>, ...,&thinsp;b<sub>q</sub>&nbsp;(1&thinsp;&le;&thinsp;b<sub>i&thinsp;</sub>&le;&thinsp;n)</strong>&nbsp;&mdash; range of query.</p>\n<h3>Output</h3>\n<p>For each query print one integer in a line&mdash; the minimum number in that range.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4 2\n2 2 3 1\n3 4\n\n<strong>Output:</strong>\n2\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/027448f3-7b57-480f-ab24-caf0a5e9ef82",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "agpc01g-eat-pray-love",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "AGPC01G - Eat Pray Love",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AGPC01G - Eat Pray Love</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>One of your friends was in relationship with multiple people at once and it didn&rsquo;t end very well. Thus he/she chose the path of righteousness and decided to stay in only one relationship or stay single. But not only that, he/she became a motivational speaker and formed an organization to help people to walk through this path.</p>\n<p>N people joined his/her organization. He/She takes one person and he/she either pairs that person up with another person in a relationship or keeps that person single. Let&rsquo;s assume that every person can be paired up with every other person. In how many ways he/she can do that?</p>\n<h3>Input</h3>\n<p>First line of input will be T (1&lt;= T &lt;= 100000), denoting the number of test cases.</p>\n<p>Next T lines will contain one integer N (1&lt;= N &lt;= 100000) per line.</p>\n<h3>Output</h3>\n<p>For each test case print correct answer describe in the description. As, output can be large. Print it modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3\n100000\n\n<strong>Output:</strong>\n4\n823421181\n</pre>\n<h3>Explanation</h3>\n<p>For case one, let&rsquo;s assume they are numbered 1 2 and 3.</p>\n<p>Formation can be:</p>\n<p>{1} {2} {3} // every person is single</p>\n<p>{1} {2, 3} // one is single and two other is in a relationship</p>\n<p>{1, 2} {3} // one is single and two other is in a relationship</p>\n<p>{1, 3} {2} // one is single and two other is in a relationship</p>\n<p>Thus answer is 4.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/83af38aa-a80e-485e-a056-11ec981d539f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "akvod05-ross-generates-data",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "AKVOD05 - Ross generates Data",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AKVOD05 - Ross generates Data</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ross wants to complete the data set for his next research work. He has to generate a set of &ldquo;N&rdquo; non negative integers. He already knows the first &ldquo;K&rdquo; values out of them. He knows how to generate the remaining values. Any of the remaining values will be the minimum non negative integer that does not exist in the previous &ldquo;K&rdquo; values.</p>\n<p>For example, let the value of &ldquo;N&rdquo; is 7 and the value of &ldquo;K&rdquo; be 4 and the first &ldquo;K&rdquo; values be 0 4 3 2 then the next 3 values will be 1 0 4.</p>\n<p>You just have to generate the &ldquo;N&rdquo;th value for his work.</p>\n<h3>Input</h3>\n<p>The first line will contain \"T\", the no. of test cases. Then \"T\" test cases follows. For each test case, the first line will contain two integers \"N\" and \"K\". The next line will contain \"K\" integers denoting the \"K\" values that he already knows.</p>\n<h3>Output</h3>\n<p>For each test case, output a single integer value that denotes the \"N\"th integer in his data set.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 10</p>\n<p>1 &lt;= K &lt;= 10^5</p>\n<p>K &lt; N &lt;= 10^8</p>\n<p>0 &lt;= Each of the first K values &lt;= 10^8</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n</pre>\n<pre>2</pre>\n<pre>7 4</pre>\n<pre>0 4 3 2</pre>\n<pre>8 5</pre>\n<pre>4 7 2 3 0\n\n<strong>Output:</strong>\n\n</pre>\n<pre>4</pre>\n<pre>5</pre>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/baf5a909-c492-407a-97e8-4abdd5ace9e6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "alcatraz2-go-goa-gone",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ALCATRAZ2 - GO GOA GONE",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ALCATRAZ2 - GO GOA GONE</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>So , it was winter and Me and 8 of my friends decided to plan a trip to GOA . Since the Bars ans Clubs are too Expensive out there , we decided to pool money together for our whole trip expenses . Now since every group has some internal politics going on , same aplies to our group also :P . 2 Members that are having a cold war between them won't go to the trip if the other one is going . But Since we want to enjoy a lavish party , we want to maximize the pooled money . So , for this task I've chosen my marwari friend&nbsp;Mohit to solve this problem &nbsp;( He's good at money matters )&nbsp; . Your task is to help&nbsp;Mohit achieve the maximum pooled money&nbsp;.</p>\n<h3>Input</h3>\n<p>First Line will contain&nbsp; 8 space seperated integers denoting the money contributed by each member in order .</p>\n<p>The next line will contain the total number of pairs having a cold war in between them . Let us denote this&nbsp;by P .</p>\n<p>The next P lines will contain 2 numbers seperated by a space showing the members having a cold war&nbsp; . Numbers used to denote members will be ( 1-8 ) for each 8 members&nbsp;.</p>\n<p><strong>Constraints:</strong></p>\n<pre>Everything is guarenteed to  easily fit in 32 bit integer type  . </pre>\n<p><strong>Output description</strong></p>\n<p>Output will give the maximum amt of money that can be pooled .</p>\n<p><strong>Example</strong></p>\n<pre><strong>Input:</strong><strong>&nbsp;</strong>\n3 14 5 2 3 4 1 9 </pre>\n<pre>4</pre>\n<pre>1 2</pre>\n<pre>2 3</pre>\n<pre>4 5</pre>\n<pre>7 8</pre>\n<pre><strong>Output:</strong>\n</pre>\n<pre>30</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/16c41a97-2b0c-48d3-a285-7f12a0a01696",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "altseq-alternating-sequences",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ALTSEQ - Alternating Sequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ALTSEQ - Alternating Sequences</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an array a of N integers a1, a2, a3, ... aN you have to find the longest alternating sub-sequence of this array .<br />An alternating sequence b1, b2 ... bk, k&gt;=1 is a sequence that has the 2 following properties:<br />1.|b1|&lt;|b2|&lt;|b3|&lt;.....&lt;|bk|<br />2. The signs alternate between adjacent elements, i.e, if b1 &gt; 0 then b2&lt;0, b3 &gt;0 and so on. Alternatively, if b1&lt;0, then b2&gt;0, b3&lt;0 and so on.<br />A sub sequence of array a is a sequence obtained by dropping some elements of the array a. Here is the formal definition.<br />It is guaranteed that the array a contains no element equal to 0.</p>\n<h3>Constraints</h3>\n<p>1&lt;=N&lt;=5000 |ai|&lt;=10^9, ai not equal to 0.</p>\n<h3>Input</h3>\n<p>The first line contains a single integer N, denoting the size of the array. The next line contains N integers , denoting the array a.</p>\n<h3>Output</h3>\n<p>Print a single integer - the length of the longest alternating sub-sequence.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n8\n1 2 -2 -3 5 -7 -8 10\n\n<strong>Output:</strong>\n5\n</pre>\n<h3>Explaination</h3>\n<h3>One of the longest alternating subsequence is 1 -2 5 -7 10</h3>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/12252721-e65c-4425-aa9f-5d85bf8dd612",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "amr10c-square-free-factorization",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "AMR10C - Square Free Factorization",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AMR10C - Square Free Factorization</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You all know about factorization of an integer.&nbsp; Here we want you to factor a number into as few factors as possible.&nbsp; That is easy, you say, just have the number itself, and that will be the smallest number of factors i.e. 1.<br />But wait, I haven't finished -- each of the factors that you find must be square-free.&nbsp; A square-free number, however you factor it, won't have any factor that is a perfect square.&nbsp; Of course, you can never include 1 as a factor.</p>\n<h3>Input</h3>\n<p>The first line of input is the number of test cases T.<br />The next T lines each have an integer N.</p>\n<h3>Output</h3>\n<p>For each testcase, output the smallest number of square-free factors.</p>\n<h3>Constraints</h3>\n<p>T &lt;= 10<sup>4</sup><br />2 &lt;= N &lt;= 10<sup>6</sup></p>\n<h3>Example</h3>\n<pre><strong>SAMPLE INPUT</strong>\n2\n6\n8\n\n<strong>SAMPLE OUTPUT</strong>\n1\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9df1a20a-b6f1-4546-a196-3164539e3f23",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "anarc08h-ghe-am-nhac",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ANARC08H - Ghế âm nhạc",
  "content": "<h2 id=\"problem-name\" class=\"text-center\"><span>ANARC08H - Ghế &acirc;m nhạc</span></h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\"><span>Trong tr&ograve; chơi truyền thống Ghế &acirc;m nhạc, N + 1 trẻ em chạy xung quanh N chiếc ghế (đặt trong v&ograve;ng tr&ograve;n) miễn l&agrave; c&oacute; nhạc.&nbsp;Thời điểm nhạc dừng, trẻ chạy v&agrave; cố gắng ngồi v&agrave;o một chiếc ghế c&oacute; sẵn.&nbsp;Trẻ vẫn đứng th&igrave; rời tr&ograve; chơi, bỏ ghế v&agrave; tiếp tục tr&ograve; chơi với N trẻ.&nbsp;Trẻ ngồi cuối c&ugrave;ng l&agrave; trẻ chiến thắng.</span><br /><br /><span>Trong nỗ lực tạo ra một tr&ograve; chơi tương tự tr&ecirc;n m&aacute;y chơi game ng&agrave;y nay, bạn sửa đổi tr&ograve; chơi theo c&aacute;ch sau: N Trẻ em được ngồi tr&ecirc;n N chiếc ghế được sắp xếp xung quanh một v&ograve;ng tr&ograve;n.&nbsp;C&aacute;c ghế được đ&aacute;nh số từ 1 đến N.&nbsp;Chương tr&igrave;nh của bạn chọn trước một số dương D.&nbsp;Chương tr&igrave;nh bắt đầu đi theo v&ograve;ng tr&ograve;n đếm những đứa trẻ bắt đầu với chiếc ghế đầu ti&ecirc;n.&nbsp;Khi số đếm đến D, đứa trẻ đ&oacute; rời khỏi tr&ograve; chơi, bỏ ghế của m&igrave;nh.&nbsp;Chương tr&igrave;nh bắt đầu đếm lại, bắt đầu với chiếc ghế tiếp theo trong v&ograve;ng tr&ograve;n.&nbsp;Đứa trẻ cuối c&ugrave;ng c&ograve;n lại trong v&ograve;ng tr&ograve;n l&agrave; người chiến thắng.</span><br />\n<p><img src=\"http://www.spoj.com/content/ahmed_aly:ANARC08H.png\" /></p>\n<p><span>V&iacute; dụ, h&atilde;y xem x&eacute;t tr&ograve; chơi được minh họa trong h&igrave;nh tr&ecirc;n cho N = 5 v&agrave; D = 3.&nbsp;Trong h&igrave;nh, dấu chấm cho biết nơi bắt đầu đếm v&agrave; &times; cho biết đứa trẻ rời đi.&nbsp;Bắt đầu, con số 3 rời khỏi tr&ograve; chơi v&agrave; đếm bắt đầu lại với con số 4.&nbsp;Con số 1 l&agrave; con thứ hai rời đi v&agrave; qu&aacute; tr&igrave;nh đếm bắt đầu lại với con số 2 dẫn đến con số 5 rời đi.&nbsp;Con số 2 l&agrave; người cuối c&ugrave;ng rời đi v&agrave; con số 4 l&agrave; người chiến thắng.&nbsp;Viết chương tr&igrave;nh x&aacute;c định con tr&uacute;ng thưởng cho cả N v&agrave; D.</span></p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p><span>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một hoặc nhiều trường hợp thử nghiệm.&nbsp;Mỗi trường hợp thử nghiệm chỉ định hai số nguy&ecirc;n dương N v&agrave; D tr&ecirc;n một d&ograve;ng, c&aacute;ch nhau bởi một hoặc nhiều dấu c&aacute;ch, trong đ&oacute; N, D &lt;1.000.000.</span><br /><br /><span>D&ograve;ng cuối c&ugrave;ng của tệp đầu v&agrave;o chứa hai số 0 v&agrave; kh&ocirc;ng phải l&agrave; một phần của c&aacute;c trường hợp kiểm tra.</span></p>\n<h3><span>Đầu ra</span></h3>\n<p><span>Đối với mỗi trường hợp thử nghiệm, h&atilde;y viết người chiến thắng theo định dạng sau:</span><br /><br /><span>NDW</span><br /><br /><span>Trong đ&oacute; N v&agrave; D như tr&ecirc;n, l&agrave; một k&yacute; tự khoảng trắng v&agrave; W l&agrave; người chiến thắng trong tr&ograve; chơi đ&oacute;.</span></p>\n<h3><span>Th&iacute; dụ</span></h3>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span>\n5 3</span><span>\n7 4</span><span>\n0 0</span>\n\n<strong><span>Đầu ra:</span></strong><span>\n5 3 4</span><span>\n7 4 2</span></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/169c467b-f084-46a8-909d-5d1162bde9d5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "antp-mr-ant-his-problem",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ANTP - Mr. Ant & His Problem",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ANTP - Mr. Ant &amp; His Problem</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Mr. Ant has&nbsp;<strong>3</strong>&nbsp;boxes and the infinite number of marbles. Now he wants to know the number of ways he can put marbles in these three boxes when the following conditions hold.</p>\n<p>1)&nbsp;&nbsp;&nbsp;&nbsp; Each box must contain at least 1 marble.</p>\n<p>2)&nbsp;&nbsp;&nbsp;&nbsp; The summation of marbles of the 3 boxes must be in between X and Y inclusive.</p>\n<p>&nbsp;</p>\n<p>Now you are given X and Y. You have to find the number of ways Mr. Ant can put marbles in the 3 boxes.</p>\n<p><strong>Input</strong></p>\n<p>Input starts with an integer T, denoting the number of test cases. Each test case contains two integers&nbsp;<strong>X</strong>&nbsp;and&nbsp;<strong>Y.</strong></p>\n<p><strong>Constraints</strong></p>\n<p>1&lt;=T&lt;=1000000</p>\n<p>1&lt;=X&lt;= Y&lt;=1000000</p>\n<p><strong>Output</strong></p>\n<p>For each test case, print the required answer modulo&nbsp;<strong>1000000007</strong>.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p>Sample Input</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p>Sample Output</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p>1</p>\n<p>4 5</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p>9</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Explanation for the first test case</strong></p>\n<p><strong>&nbsp;</strong></p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>Way 01</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p>Way 02</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>Way 03</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>1</td>\n<td>3</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>Way 04</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>Way 05</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>3</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>Way 06</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>Way 07</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>Way 08</p>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>Way 09</p>\n<p><strong>Note: use faster i/o method.</strong></p>\n<p><strong><em>Problem Setter: Md Abdul Alim, CEO &amp; Founder at&nbsp;<a href=\"https://www.facebook.com/codemaskcp\">CodeMask</a></em></strong></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a9cac10a-46f4-4b4a-8079-3ddea2bca189",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "aps-amazing-prime-sequence-2",
  "tags": [],
  "level": "BEGINNER",
  "title": "APS - Amazing Prime Sequence",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">APS - Amazing Prime Sequence</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Bablu is very fond of Series and Sequences...</p>\n<p>After studying Fibonacci Series in Class IX, he was impressed and he designed his own sequence as follows...</p>\n<p>a[0] = a[1] = 0&nbsp;</p>\n<p>For n &gt; 1, a[n] = a[n - 1] + f(n), where f(n) is smallest prime factor of n.</p>\n<p>He is also very fond of programming and thus made a small program to find a[n], but since he is in Class IX, he is not very good at programming. So, he asks you for help. Your task is to find a[n] for the above sequence....</p>\n<h3>Input</h3>\n<p>Your code will be checked for multiple Test Cases.</p>\n<p>First Line of Input contains T (&lt;= 100), the number of Test Cases.</p>\n<p>Next T lines contain a single number N. (1 &lt; N &lt; 10^7).</p>\n<h3>Output</h3>\n<p>Single line containing a[n] i.e. nth number of the sequence for each test case.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n2\n3\n4\n\n<strong>Output:</strong>\n2\n5\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fcf4215f-7621-48d4-b724-48541c68c4de",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90e9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "arctan-use-of-function-arctan",
  "tags": [],
  "level": "BEGINNER",
  "title": "ARCTAN - Use of Function Arctan",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ARCTAN - Use of Function Arctan</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>It's easy to know that arctan(1/2)+arctan(1/3)=arctan(1). Given number A, write a program to calculate the minimum sum B+C. A,B and C are all positive integers and satisfy the equation below:</p>\n<p>arctan(1/A)=arctan(1/B)+arctan(1/C)</p>\n<h3>Input</h3>\n<p>The first line contains a integer number T(about 1000). T lines follow,each contains a single integer A, 1&lt;=A&lt;=60000.</p>\n<h3>Output</h3>\n<p>T lines,each contains a single integer which denotes to the minimum sum B+C.</p>\n<h3>Example</h3>\n<pre><strong><tt>Sample input:</tt></strong>\n1\n1\n\n<strong><tt>Sample output:</tt></strong>\n5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9e7efcd3-312b-4dd3-b1c7-fc2ee838a983",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ea"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "arrprm-prime-is-fun",
  "tags": [],
  "level": "BEGINNER",
  "title": "ARRPRM - Prime is fun",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ARRPRM - Prime is fun</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You will be given an array A. You can pick X (where X is a&nbsp;<strong>prime</strong>) consecutive elements from the array A so that the sum is maximized. Note that you can select multiple consecutive elements.</p>\n<p>For example, if you are given an array with 10 elements, then one of ways you can select elements by selecting 1<sup>st</sup>,2<sup>nd</sup>&nbsp;element then 4<sup>th</sup>,5<sup>th</sup>,6<sup>th</sup>&nbsp;element then 8<sup>th</sup>,9<sup>th</sup>&nbsp;elements.</p>\n<p>Another way can be to select 1<sup>st</sup>&nbsp;and 2<sup>nd</sup>&nbsp;element then select 4-10 elements.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of the input will be an integer&nbsp;<strong>t,&nbsp;</strong>denoting the number of the test cases.</p>\n<p>For each test case, there will be an integer&nbsp;<strong>n</strong>, denoting the size of the array A.</p>\n<p>Next line there will be&nbsp;<strong>n&nbsp;</strong>integers denoting the elements of the array A.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, print the maximized sum (as discussed above) in a line.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<p>1 &lt;= t &lt;= 100</p>\n<p>1 &lt;= n &lt;= 2000</p>\n<p>1 &lt;= elements of the array A &lt;= 100000</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre><strong>Input:</strong></pre>\n<p>2</p>\n<p>4</p>\n<p>1 2 3 4</p>\n<p>10</p>\n<pre>10 1 1 1 1 1 1 2 2 2</pre>\n<pre><strong>Output:</strong></pre>\n<p>9</p>\n<pre>21</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6d4e71b6-ab4b-48fd-b24d-bd0b6766dfcc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90eb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ashmhf-meet-her-fast",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ASHMHF - Meet Her Fast!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ASHMHF - Meet Her Fast!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<h2 class=\"text-center\">&nbsp;</h2>\n<div id=\"problem-body\">\n<p>Dreamerash Lives in Wonderland. He loves a girl named Tania. They live in two different cities. Today Tania told him that she is coming to Dreamerash&rsquo;s city for a work. She told him that she will stay in a hotel. But unfortunately as their communication link broke up she couldn&rsquo;t tell him the exact hotel. After her arriving in the city they can again communicate with each other. Since they&rsquo;ve not seen each other for a long time he wants to meet her as soon as possible after her arrival in the city. So he decides to stay in one of the hotels until he meets her.</p>\n<p>There are&nbsp;<strong>n</strong>&nbsp;hotels in the city, all are arranged in one straight line. Dreamerash know the positions of every hotel. Positions of every hotel are&nbsp;<strong>distinct</strong>. He wants to stay in a hotel from where,&nbsp;<strong>sum of distance</strong>&nbsp;among all the other hotels is&nbsp;<strong>minimum</strong>. As he is busy dreaming, he wants you to solve this problem for him.</p>\n<p>Your&nbsp;<strong>task</strong>&nbsp;is to find the&nbsp;<strong>index (</strong>starting from one<strong>)&nbsp;</strong>of a hotel from where, sum of distance among all the other hotels is minimum. If there are multiple hotels, print the index of the hotel that appeared in the input first.</p>\n<h3>Input</h3>\n<p>First line contains an integer&nbsp;<strong>T&nbsp;</strong>(1 &le; T &le; 10) denoting the number of test cases.</p>\n<p>For&nbsp;<strong>each</strong>&nbsp;test case there will be following lines:</p>\n<p>The first line has an integer&nbsp;<strong>N&nbsp;</strong>(1 &le; N &le; 10^5) denoting the number of hotels.</p>\n<p>Next line contain array of N space separated distinct integers&nbsp;<strong>A</strong>[i] (1 &le; A[i] &le; 10^9) denoting the positions of the hotels&nbsp;<strong>indexed from One</strong>.</p>\n<h3>Output</h3>\n<p>For each test case print the case number followed by the index of the hotel according to the following format &ldquo;<strong>Case X: I&rdquo;&nbsp;</strong>without quote, where&nbsp;<strong>X&nbsp;</strong>denotes the case number and&nbsp;<strong>I</strong>&nbsp;denotes the index of the desired hotel.</p>\n<p>For better understanding see the sample input output.</p>\n<h3>Example</h3>\n<p>&nbsp;</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\">\n<p><strong>Input</strong></p>\n</td>\n<td valign=\"top\">\n<p><strong>Output</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\">\n<p>2</p>\n<p>4</p>\n<p>1 12 17 9</p>\n<p>5</p>\n<p>8 20 60 14 32</p>\n</td>\n<td valign=\"top\">\n<p>Case 1: 2</p>\n<p>Case 2: 2</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>&nbsp;</strong></p>\n</div>\n<h2 id=\"problem-name\" class=\"text-center\"></h2>\n<div id=\"problem-body\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/502387ec-3c4f-489e-b15d-a0814c2267a9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ec"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "assign-assignments",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ASSIGN - Assignments",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ASSIGN - Assignments</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<h3>Problem</h3>\n<p align=\"justify\">Your task will be to calculate number of different assignments of n different topics to n students such that everybody gets exactly one topic he likes.</p>\n<h3>Input</h3>\n<p align=\"justify\">First line of input contains number of test cases c (1&lt;=c&lt;=80). Each test case begins with number of students n (1&lt;=n&lt;=20). Each of the next n lines contains n integers describing preferences of one student. 1 at the ith position means that this student likes ith topic, 0 means that he definitely doesn't want to take it.</p>\n<h3>Output</h3>\n<p align=\"justify\">For each test case output number of different assignments (it will fit in a signed 64-bit integer).</p>\n<h3>Example</h3>\n<pre>Input:\n3\n3\n1 1 1\n1 1 1\n1 1 1\n11\n1 0 0 1 0 0 0 0 0 1 1 \n1 1 1 1 1 0 1 0 1 0 0 \n1 0 0 1 0 0 1 1 0 1 0 \n1 0 1 1 1 0 1 1 0 1 1 \n0 1 1 1 0 1 0 0 1 1 1 \n1 1 1 0 0 1 0 0 0 0 0 \n0 0 0 0 1 0 1 0 0 0 1 \n1 0 1 1 0 0 0 0 0 0 1 \n0 0 1 0 1 1 0 0 0 1 1 \n1 1 1 0 0 0 1 0 1 0 1 \n1 0 0 0 1 1 1 1 0 0 0 \n11\n0 1 1 1 0 1 0 0 0 1 0 \n0 0 1 1 1 1 1 1 1 1 1 \n1 1 0 1 0 0 0 0 0 1 0 \n0 1 0 1 0 1 0 1 0 1 1 \n1 0 0 1 0 0 0 0 1 0 1 \n0 0 1 0 1 1 0 0 0 0 1 \n1 0 1 0 1 1 1 0 1 1 0 \n1 0 1 1 0 1 1 0 0 1 0 \n0 0 1 1 0 1 1 1 1 1 1 \n0 1 0 0 0 0 0 0 0 1 1 \n0 1 1 0 0 0 0 0 1 0 1 \n\nOutput:\n6\n7588\n7426</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/55788c0d-6f28-4fa7-b186-2c8eb1951625",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ed"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "assist-assistance-required",
  "tags": [],
  "level": "BEGINNER",
  "title": "ASSIST - Assistance Required",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ASSIST - Assistance Required</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>After the 1997/1998 Southwestern European Regional Contest (which was held in Ulm) a large contest party took place. The organization team invented a special mode of choosing those participants that were to assist with washing the dirty dishes. The contestants would line up in a queue, one behind the other. Each contestant got a number starting with 2 for the first one, 3 for the second one, 4 for the third one, and so on, consecutively.</p>\n<p>The first contestant in the queue was asked for his number (which was 2). He was freed from the washing up and could party on, but every second contestant behind him had to go to the kitchen (those with numbers 4, 6, 8, etc). Then the next contestant in the remaining queue had to tell his number. He answered 3 and was freed from assisting, but every third contestant behind him was to help (those with numbers 9, 15, 21, etc). The next in the remaining queue had number 5 and was free, but every fifth contestant behind him was selected (those with numbers 19, 35, 49, etc). The next had number 7 and was free, but every seventh behind him had to assist, and so on.</p>\n<p>Let us call the number of a contestant who does not need to assist with washing up a lucky number. Continuing the selection scheme, the lucky numbers are the ordered sequence 2, 3, 5, 7, 11, 13, 17, etc. Find out the lucky numbers to be prepared for the next contest party.</p>\n<h3>Input Specification</h3>\n<p>The input contains several test cases. Each test case consists of an integer&nbsp;<code>n</code>. You may assume that&nbsp;<code>1 &lt;= n &lt;= 3000</code>. A zero follows the input for the last test case.</p>\n<h3>Output Specification</h3>\n<p>For each test case specified by&nbsp;<code>n</code>&nbsp;output on a single line the&nbsp;<code>n</code>-th lucky number.</p>\n<h3>Sample Input</h3>\n<p>&nbsp;</p>\n<pre>1\n2\n10\n20\n0\n</pre>\n<h3>Sample Output</h3>\n<p>&nbsp;</p>\n<pre>2\n3\n29\n83</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f9ae11b7-a83c-4e21-ad95-3c3399d0d59f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ee"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "atextart-ascii-text-art",
  "tags": [],
  "level": "BEGINNER",
  "title": "ATEXTART - ASCII Text Art",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ATEXTART - ASCII Text Art</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><em>\"ASCII art is a graphic design technique that uses computers for presentation and consists of pictures pieced together from the 95 printable (from a total of 128) characters defined by the ASCII Standard from 1963 and ASCII compliant character sets with proprietary extended characters (beyond the 128 characters of standard 7-bit ASCII). The term is also loosely used to refer to text based visual art in general. ASCII art can be created with any text editor, and is often used with free-form languages.\"</em>&nbsp;- Wikepedia</p>\n<p>For example, here is an ASCII Text Art:</p>\n<pre>  |\\_/|        ****************************    (\\_/)\n / @ @ \\       *  \"Purrrfectly pleasant\"  *   (='.'=)\n( &gt; &ordm; &lt; )      *       Poppy Prinz        *   (\")_(\")\n `&gt;&gt;x&lt;&lt;&acute;       *   (pprinz@example.com)   *\n /  O  \\       ****************************\n</pre>\n<p>In this problem, you have to write a program, which will output an ASCII Text Art like the following image:</p>\n<p><img title=\"ASCII Text Art\" src=\"https://s15.postimg.org/hwkfmcw23/ascii.png\" alt=\"ASCII Text Art\" width=\"448\" height=\"215\" /></p>\n<p>Note: Whitespaces are replaced with . (dot) for better conception, this will not be in output.</p>\n<h3>Input</h3>\n<p>Input will consist of only one printable ASCII character.</p>\n<p><strong>Constraints:</strong></p>\n<p>Pintables of 128 bit ASCII characters</p>\n<h3>Output</h3>\n<p>Your program should use the character to print the desired output.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n#\n\n<strong>Output:</strong></pre>\n<pre># # # # # # # # # # #         # # # # # # # # # # #\n            #    #     ##                    #    #\n          # # #  #   #    #                  # #  #\n        #   #  # #  #      #                 #  # #\n      #     #    #   ######                  #    #\n    #       #    #  #                        #    #\n      #     #    #    #            #     #   #    #\n        #   #    #      #        #  #  #  #  #    #\n          # #    #        #     #     #    # #    #\n            #    #          #  #             #    #</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c8dd744b-688f-48a4-bd20-a3628375e055",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ef"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "atmcmxng-richie-rich-and-keen-bean",
  "tags": [],
  "level": "BEGINNER",
  "title": "ATMCMXNG - Richie Rich and Keen Bean",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ATMCMXNG - Richie Rich and Keen Bean</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Dr.Keen Bean has great love for chemistry.He has 100 elements with atomic number from 0-99. Dr.Kean Bean wants to react(mix) all elements together.At each turn he mix two elements together placed next to each other and replace the resulting element in their place. When mixing two elements with atomic number a and b,the resulting element atomic number will get modified and will be (a+b)%100. The dangerous point is while mixing two elements there is production of toxic gas,whose toxicity level is a*b.</p>\n<p>Dr.Keen Bean would like to produce very less amount of toxic gas.So he wants you to help him find minimum amount of toxic gas he can produce when mixing all elements together.</p>\n<h3>Input</h3>\n<p>The first line of input contains integer&nbsp; N(1&lt;=N&lt;=100),the number of elements. The second line will conatin atomic numbers between 0-99.The initial atomic numbers of elements.</p>\n<h3>Output</h3>\n<p>Output the minimum amount of toxic gas Dr. Keen bean can produce.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre><strong>1</strong></pre>\n<pre><strong>3</strong></pre>\n<pre>40 60 20</pre>\n<pre><strong>Output:</strong>\n2400</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4fa70197-705b-4a16-83db-a8a081fdebd0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "badxor-bad-xor",
  "tags": [],
  "level": "BEGINNER",
  "title": "BADXOR - Bad XOR",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BADXOR - Bad XOR</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>Bad XOR | BADXOR</strong></p>\n<p><strong>Time Limit: 1s</strong></p>\n<p>You are given an array A of N elements. Also you are given another array B of M elements. Any subset (i&shy;<sub>1</sub>, i<sub>2</sub>, i<sub>3</sub>, &hellip;., i<sub>p&nbsp;</sub>) is bad IFF ( Ai<sub>1</sub>&nbsp;&oplus; Ai<sub>2</sub>&nbsp;&oplus; &hellip;. &oplus; Ai<sub>p&nbsp;</sub>) equals any value of B. &oplus; means Bitwise XOR, which can be found with ^ syntax in popular programming languages. Now your job is to find the number of good subsets. Empty Subset has XOR value of 0.</p>\n<p>&nbsp;</p>\n<p><strong>Input</strong></p>\n<p>The first line of input denotes the number of test cases T (1 &lt;= T &lt;= 20). The first line of each test case contains two integers N and M ( 0 &lt;= N, M &lt;= 1000). The next line contains N integers of the array A (0 &lt;= A<sub>i&nbsp;</sub>&lt;=1000). The next line contains M integers of the array B (0 &lt;= B<sub>i&nbsp;</sub>&lt;=1000). You can assume that each element of array B will be unique. &nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong></p>\n<p>For each case, print the case number and the total numbers of good subsets in a line. As the result can be very big, output it modulo 100000007.</p>\n<p>&nbsp;</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"332\">\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Sample Input</strong></p>\n</td>\n<td valign=\"top\" width=\"332\">\n<p align=\"center\"><strong>Output for Sample Input</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"332\">\n<p>2</p>\n<p>2 3</p>\n<p>1 2</p>\n<p>0 1 2</p>\n<p>1 3</p>\n<p>1</p>\n<p>0 1 2</p>\n</td>\n<td valign=\"top\" width=\"332\">\n<p>Case 1: 1</p>\n<p>Case 2: 0</p>\n<p>&nbsp;</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/32f6bf53-a3b2-40ec-827d-c5a1d9b44ba4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bapm-base-and-power",
  "tags": [],
  "level": "BEGINNER",
  "title": "BAPM - Base and Power",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BAPM - Base and Power</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Little boy Arik learned exponent formulas from his math teacher. Teacher taught him, If you have such expression x^a=y^b then,</p>\n<ol>\n<li>If x=y then a=b.</li>\n<li>If a=b then x=y.</li>\n</ol>\n<p>Arik learned this awesome thing. After a while, he was playing with different numbers. He got confused a little bit. Sometimes x not equal to y and a not equal to b but x^a=y^b. Such as 2^4=4^2. Your task is to help Arik to determine if x^a is equal to y^b or not.</p>\n<h3>Input</h3>\n<p>Input starts with an integer T (&lt;= 30) denoting the number of test cases.</p>\n<p>For each case, you will given 4 integers x, a, y, b.</p>\n<p>x and y are two bases where 0 &lt; x, y &lt;=100000000000001.</p>\n<p>Two exponents are given as a and b where 0 &lt;= a, b &lt;= 100000000000001.</p>\n<h3>Output</h3>\n<p>Print \"Yes\" without quote in a single line if x^a=y^b, \"No\" otherwise.</p>\n<h3>Example</h3>\n<h4>Input</h4>\n<pre>2\n2 4 2 4\n3 4 4 3</pre>\n<h4>Output</h4>\n<pre>Yes\nNo</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e6438926-b9f2-4d60-9bf3-021b622f2ad2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bdoi16b-beautiful-factorial-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "BDOI16B - Beautiful Factorial Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BDOI16B - Beautiful Factorial Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"CENTER\"><strong>Beautiful Factorial Game</strong></p>\n<p>The statement of this problem is very simple. Given two number n and k, you need to find the maximum power of k (i.e. x) such that n! % k^x = 0. Here n! is the notation of n factorial. If you are not familiar with the notation,</p>\n<p align=\"CENTER\">n! = 1 * 2 * 3 * 4 * 5 * 6 &hellip;.. * n</p>\n<p><strong>Input:</strong></p>\n<p>First line of the input will contain an integer t (1 &lt;= t &lt;= 20) denoting the number of test case. The next t lines contain two integer number n and k as described above.</p>\n<p><strong>Constraints:</strong></p>\n<p>For easy version, 1 &lt;= n &lt;= 10, 2 &lt;= k &lt;= 10</p>\n<p>For harder version, 1 &lt;= n &lt;= 100000000, 2 &lt;= k &lt;= 100000000</p>\n<p><strong>Output:</strong></p>\n<p>For each test case, print &ldquo;Case t: x&rdquo; where t is the test case number and x is the maximum power of k for which n! % k^x = 0.</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"304\" /><col width=\"304\" /></colgroup>\n<tbody>\n<tr valign=\"TOP\">\n<td width=\"304\">\n<p align=\"CENTER\"><strong>Sample Input</strong></p>\n</td>\n<td width=\"304\">\n<p align=\"CENTER\"><strong>Output of sample input</strong></p>\n</td>\n</tr>\n<tr valign=\"TOP\">\n<td width=\"304\">\n<p>2</p>\n<p>5 2</p>\n<p>1000 2</p>\n</td>\n<td width=\"304\">\n<p>Case 1: 3</p>\n<p>Case 2: 994</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><br /><br /></p>\n<p><strong>Explanation of the sample:</strong></p>\n<p>In the first test case, n = 5 and k = 2. So, n! = 120.</p>\n<p align=\"CENTER\">n! % 2^0 = 0</p>\n<p align=\"CENTER\">n! % 2^1 = 0</p>\n<p align=\"CENTER\">n! % 2^2 = 0</p>\n<p align=\"CENTER\">n! % 2^3 = 0</p>\n<p align=\"CENTER\">n! % 2^4 = 8</p>\n<p align=\"CENTER\">n! % 2^5 = 24</p>\n<p align=\"CENTER\">n! % 2^6 = 56</p>\n<p align=\"CENTER\">n! % 2^7 = 120</p>\n<p>So, the answer should be 3.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c40e51c1-3080-4dfc-845b-f32c610de0ce",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bgshoot-shoot-and-kill",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BGSHOOT - Shoot and kill",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BGSHOOT - Shoot and kill</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The problem is about Mr.BG who is a great hunter. Today he has gone to a dense forest for hunting and killing animals.</p>\n<p>Sadly, he has only one bullet in his gun. He wants to kill as many animals as possible with only one bullet.</p>\n<p>He has already known the information of duration availability of all animals of the forest.</p>\n<p>So, he is planning to shoot at a time so that he could kill maximum animal.&nbsp;</p>\n<h3>Input</h3>\n<p>Input begins with an integer&nbsp;<strong>N</strong>&nbsp;denoting total numbers of animals.</p>\n<p>Next&nbsp;<strong>N</strong>&nbsp;lines contains the duration of availability of animal denoting by X (Starting time) and Y (Ending time) .</p>\n<p>Then, there will be&nbsp;<strong>Q</strong>, denoting the total numbers of queries to be answer.</p>\n<p>Each query giving two integer&nbsp;<strong>L</strong>&nbsp;and&nbsp;<strong>R</strong>,&nbsp;<strong>L</strong>&nbsp;denoting the time hunter will come to forest and begins shooting</p>\n<p>and&nbsp;<strong>R</strong>&nbsp;denoting last time upto which he will stay at forest for hunting.</p>\n<h3>Output</h3>\n<p>For each query output an integer denoting maximum numbers of animals he could kill by shooting at a time during L and R (inclusive).</p>\n<p><strong>Constraints:</strong></p>\n<p><strong>1&lt;=N,Q&lt;=100000</strong></p>\n<p><strong>1&lt;=X,Y,L,R&lt;=1000000000</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1 2\n2 3\n4 5\n6 7\n4\n1 5\n2 3\n4 7\n5 7\n\n<strong>Output:</strong>\n2\n2\n1\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/138e7712-79fa-4ef4-9298-b40abc43382a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bicolor-bicolor",
  "tags": [],
  "level": "BEGINNER",
  "title": "BICOLOR - Bicolor",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BICOLOR - Bicolor</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>When you look at a political map of the world, each country is colored in color different from its neighbors' so that you can clearly see the borders. But as you know, the are between 192 and 195 countries in the world (depending on where you live) so it is common for two countries on the map to have the same color. After all, men can see only 16 colors (\"Peach\" is not a color according to me), so it has been a hard question for a long time if it is possible to color the map of the world with just 4 colors, following the rule that you are not allowed to color neighboring countries with the same color. This problem, however, is not easy at all, and we are going to simplify it a little bit. You are a Rock Star, and you are going on a tour in the galaxy. You are looking at the map of the sky and some of the stars are connected with other stars to form oddly shaped constellations. You are wondering if the stars can be bicolored (colored with just two colors) following the rule that you can not color two stars with the same color if they are directly connected with line on the map. You are bored as you are traveling towards the first star on your tour with speeds close to the speed of light so the clock in your space ship are ticking slower. Having nothing better to do, you decide to write a computer program to solve it.</p>\n<h3>Input</h3>\n<p>The input will consist of multiple maps. Each map starts with the number of stars on the map N (1 &lt;= N &lt;= 1024). On the next line is the number M (1&lt;= M &lt;=30000), the number of lines on the map connecting the stars. The stars are numbered with integers from 0 to N-1. On the next M lines you will find 2 integers - the ID-s of two stars that are connected. To denote the end of the input, the last map will have N = 0, and at this point you should stop reading.</p>\n<h3>Output</h3>\n<p>For each map in the input case, you need to output exactly one line in the output containing either the string \"NOT BICOLORABLE\" or \"BICOLORABLE\".</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3\n0 1\n1 2\n2 0\n5\n4\n0 1\n0 2\n0 3\n0 4\n0\n\n<strong>Output:</strong>\nNOT BICOLORABLE\nBICOLORABLE</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/18f84e82-f457-4d5d-89d9-1ab46a1ed351",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bipcsmr16-team-building",
  "tags": [],
  "level": "BEGINNER",
  "title": "BIPCSMR16 - Team Building",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BIPCSMR16 - Team Building</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>To make competitive programmers of BUBT, authority decide to take regular programming contest. To make this contest more competitive and fruitful there are some rules given to balance a team:<br />1. Only 1st , 2nd and 3rd year student can participate.&nbsp;<br />2. A team must have three members.&nbsp;<br />3. All the member cannot be from same year.&nbsp;<br />You need to find out the maximum number of teams can build up according to given rules.</p>\n<h3>Input</h3>\n<p>The first line of input contain an integer&nbsp;T (1&lt;=T&lt;=10000)&nbsp;test case. Next T line contains three positive integer&nbsp;X, Y and Z (1&lt;=X, Y, Z&lt;=2*10^9)&nbsp;separated by a space which denotes the number of participants from 1st, 2nd, and 3rd year student.</p>\n<h3>Output</h3>\n<p>You need to find out the maximum number of teams can build up according to given rules.</p>\n<h3>Example</h3>\n<pre>Input<br />2<br />1 2 3<br />1 12 3</pre>\n<pre>Output<br />2<br />4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/69679195-038d-449c-8e3b-5c6709449285",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bit2-search-bit-sum",
  "tags": [],
  "level": "BEGINNER",
  "title": "BIT2 - Search Bit Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BIT2 - Search Bit Sum</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Deepan is a palantir incredible guy who once had a trip in Switzerland. He saw a weird shop where he liked a teddy. But he din have enough dollars with him to buy this teddy. But there was a scheme ongoing like solve a equation and get the teddy &amp;&amp; pay whatever we wish.Thats why this shop is weirdo. He had no eager to buy this teddy as not much of people can solve the equation, so he was sure he can get this teddy as soon as he solve the problem. He need your help to solve the equation. You will be given a number N, and you have to tell whether there exist a number K so that sum of BITS in all the numbers from 1 to K is equal to N. If there exist a K, then print it, else print \"<tt>Does Not Exist.</tt>\" without quotes.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= N &lt;= 10^15, 1 &lt;= T &lt;= 10^5.</p>\n<h3>Input</h3>\n<p>First line contains t, number of testcases. For each testcase, first line contains N.</p>\n<h3>Output</h3>\n<p>Output as described above.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6\n282657\n377636\n472615\n567594\n662573\n1992279\n\n<strong>Output:</strong>\n38050\n49299\nDoes Not Exist.\nDoes Not Exist.\n82953\n227394</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa1d7321-e50a-418d-a5c9-74efffb71eb9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bitdiff-bit-difference",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BITDIFF - Bit Difference",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BITDIFF - Bit Difference</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an integer array of N integers, find the sum of bit differences in all the pairs that can be formed from array elements. Bit difference of a pair (x, y) is the count of different bits at the same positions in binary representations of x and y. For example, bit difference for 2 and 7 is 2. Binary representation of 2 is 010 and 7 is 111 (first and last bits differ in two numbers).</p>\n<h3>Input</h3>\n<p>Input begins with a line containing an integer&nbsp;<strong>T(1&lt;=T&lt;=100)</strong>, denoting the number of test cases. Then T test cases follow. Each test case begins with a line containing an integer&nbsp;<strong>N(1&lt;=N&lt;=10000)</strong>, denoting the number of integers in the array, followed by a line containing&nbsp;<strong>N</strong>&nbsp;space separated 32-bit integers.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line in the format&nbsp;<strong>Case X: Y</strong>, where&nbsp;<strong>X</strong>&nbsp;denotes the test case number and&nbsp;<strong>Y</strong>&nbsp;denotes the sum of bit differences in all the pairs that can be formed from array elements modulo&nbsp;<strong>10000007</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n3 2 1 4\n\n<strong>Output:</strong>\nCase 1: 22</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eeb2646c-a3b4-4cd7-924a-04853605255c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "blamoeba-super-amoeba",
  "tags": [],
  "level": "BEGINNER",
  "title": "BLAMOEBA - Super Amoeba",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BLAMOEBA - Super Amoeba</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Peter has an amoeba farm with pretty much unlimited amoebae. After years of research, Peter created a device to convert some amoebae to super amoebae. However, his device can only be used once. Every day, a super amoeba will split into M super amoebae (2&nbsp;&lt;&nbsp;M&nbsp;&lt;&nbsp;100000).</p>\n<p>Now, Peter plan his amoeba selling business. Initially, Peter converts X amoebae to super amoebae (X&nbsp;&gt;&nbsp;1). Every day after the amoebae split, Peter will take Y super amoebae for sale (Y&nbsp;&gt;&nbsp;1). After N days, Peter want all of his amoebae to be completely sold out (1&nbsp;&lt;&nbsp;N&nbsp;&lt;&nbsp;100000). Since the energy needed to convert amoebae is quite massive, X must be as small as possible. Help peter plan his business!</p>\n<h3>Input</h3>\n<p>First line is T, number of test cases (T&nbsp;&lt;&nbsp;100000). Next T lines each contains M and N separated by space.</p>\n<h3>Output</h3>\n<p>For each case, output X and Y separated by space. Since X and Y can be very large, output them with modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1<br />4 3\n\n<strong>Output:</strong>\n21 64</pre>\n<h3>Explanation</h3>\n<p>Initially, Peter has 21 super amoebae.<br />After day 1, there are 4 x 21 - 64 = 20 super amoebae<br />After day 2, there are 4 x 20 - 64 = 16 super amoebae<br />After day 3, there are 4 x 16 - 64 = 0 super amoeba<br />All the super amoebae are sold out after the 3rd day just as planned.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3104b376-c4f4-4a73-98dd-d58e4bc9256e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90f9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bloper-operators",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BLOPER - Operators",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BLOPER - Operators</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a set of N integer A = {1, 2, 3, &hellip;, N} and a integer S, your task is find a way to insert an operator &lsquo;+&rsquo; or &lsquo;-&lsquo; to every neighbor pair of A, that the result of the expression after insert equal to S.</p>\n<h3>Input</h3>\n<p>A single line, N and S (1 &le; N &le; 500, |S| &le; 125250)</p>\n<h3>Output</h3>\n<p>If there are way(s) to insert, outputs any of them, otherwise outputs &ldquo;Impossible&rdquo; (without quotes).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n9 5\n\n<strong>Output:</strong>\n1-2+3-4+5-6+7-8+9</pre>\n<pre><strong>Input:</strong>\n5 6\n\n<strong>Output:</strong>\nImpossible</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/27aaae4e-17e0-4180-8ff1-fc4517ff4e0b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90fa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bobert-stick-values",
  "tags": [],
  "level": "BEGINNER",
  "title": "BOBERT - Stick values",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BOBERT - Stick values</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>On a sunny day, Stjepan and Bobert were arguing over their problem solving skill under a big apple tree. Bobert brought up a nice problem he had just recently solved and claimed that Stjepan could not solve it. Stjepan is desperate and needs your help. Here is Bobert's problem:</p>\n<p>Given an array of&nbsp;<strong>N</strong>&nbsp;(1 &lt;= N &lt;= 10^5) numbers (0 &lt;=&nbsp;<strong>ai</strong>&nbsp;&lt;= 10^9) and&nbsp;<strong>K</strong>&nbsp;(1 &lt;= K &lt;= 20) sticks of a certain length&nbsp;<strong>Li</strong>&nbsp;(0 &lt;= Li &lt;= N, &nbsp;such that the sum of all lengths is equal to N), find the best possible distribution of the sticks among the array such that:</p>\n<div>&nbsp;</div>\n<div>1) a stick of length L<sub>x</sub>&nbsp;can cover any interval of the array whose length is equal to the length of the stick (it can cover L<sub>x</sub>&nbsp;consecutive numbers of the array)</div>\n<div>&nbsp;</div>\n<div>2) all sticks must be used and can not overlap or leave the borders of the array&nbsp;</div>\n<div>&nbsp;</div>\n<div>3) the value of a stick of length L<sub>x</sub>&nbsp;covering the interval [lo, hi] is equal to: L<sub>x</sub>&nbsp;* (max[lo, hi] - min[lo, hi])</div>\n<div>Note that:&nbsp;max = largest element of the array inside the interval and&nbsp;min = smallest element of the array inside the interval</div>\n<div>&nbsp;</div>\n<div>4) the sum of all stick values must be as large as possible</div>\n<p>&nbsp;</p>\n<p><strong>Note:&nbsp;</strong>double-check your complexity</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">9</div>\n<div id=\"_mcePaste\">2 6 3 1 8 4 3 5 6</div>\n<div id=\"_mcePaste\">4</div>\n<div id=\"_mcePaste\">2 3 2 2</div>\n<p>The first line contains an integer N.&nbsp;</p>\n<p>The second line contains N numbers representing the array.</p>\n<p>The third line contains an integer K.</p>\n<p>The fourth line contains K numbers representing the stick lengths.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>The only line should contain the solution - the maximum sum of stick values as explained in the task.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n9\n2 6 3 1 8 4 3 5 6\n4\n2 3 2 2\n\n<strong>Output:</strong>\n33</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4d960f84-6958-4638-81ba-fce896f03484",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90fb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "boi7sou-sound",
  "tags": [],
  "level": "BEGINNER",
  "title": "BOI7SOU - Sound",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BOI7SOU - Sound</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In digital recording, sound is described by a sequence of numbers representing the air pressure, measured at a rapid rate with a fixed time interval between successive measurements. Each value in the sequence is called a sample. An important step in many voice-processing tasks is breaking the recorded sound into chunks of non-silence separated by silence. To avoid accidentally breaking the recording into too few or too many pieces, the silence is often defined as a sequence of m samples where the difference between the lowest and the highest value does not exceed a certain treshold c. Write a program to detect silence in a given recording of n samples according to the given parameter values m and c.</p>\n<h3>Input</h3>\n<p>The first line of the file contains three integers: n (1 &le; n &le; 1,000,000), the number of samples in the recording; m (1 &le; m &le; 10,000), the required length of the silence; and c (0 &le; c &le; 10,000), the maximal noise level allowed within silence. The second line of the file contains n integers ai (0 &le; ai &le; 1,000,000 for 1 &le; i &le; n), separated by single spaces: the samples in the recording.</p>\n<h3>Output</h3>\n<p>The file should list all values of i such that max(a[i . . . i + m &minus; 1]) &minus; min(a[i . . . i + m &minus; 1]) &le; c. The values should be listed in increasing order, each on a separate line. If there is no silence in the input file, write NONE on the first and only line of the output file.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />7 2 0<br />0 1 1 2 3 2 2<br /><strong>Output:</strong>\n2<br />6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4bf93d94-13b7-458c-9650-784c61e22c22",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90fc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bokam143sou-checking-cubes-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "BOKAM143SOU - Checking cubes.",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BOKAM143SOU - Checking cubes.</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<div id=\"_mcePaste\">&nbsp;&nbsp;Given a integer **N**. Find number of posiible ways to represent **N** as a sum of at most five cubes.</div>\n<p>Given a integer N. Find number of possible ways to represent N as a sum of at most five cubes.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>First line contains N.</p>\n<p>1&lt;=N&lt;=125000.</p>\n<h3>Output</h3>\n<p>Output the result</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n64\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/902e2513-cff8-4d6c-92c8-e635870ed3bf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90fd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bomarble-d-playing-with-marbles",
  "tags": [],
  "level": "BEGINNER",
  "title": "BOMARBLE - D - Playing with Marbles",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BOMARBLE - D - Playing with Marbles</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>PROBLEM D</strong></p>\n<p><strong>&nbsp;PLAYING WITH MARBLES</strong></p>\n<p>Pablo was assigned in his class to construct pentagons inside pentagons with marbles but he doesn&rsquo;t know how many marbles he will need. He knows that for one pentagon he needs 5 marbles</p>\n<p><img title=\"Marble . 6694\" src=\"https://www.spoj.com/content/francky:marble6694\" alt=\"Imagen2\" /></p>\n<p>The only way he knows to insert a second pentagon is putting a marble in the middle of each segment and drawing three lines as shown. He puts a marble in the intersecting lines and removes them. To insert a third pentagon inside he first divides all segments in two including the ones that are not needed, and repeats the procedure. Drawing a second pentagon will require 12 marbles. A third pentagon will require 22 marbles. Given the information of how many pentagons will be created, write a program to calculate the number of marbles needed.</p>\n<p><strong>Input</strong></p>\n<p>The input contains several test cases. Each test case contains one integer N indicating the number of pentagons to create (1&lt;=N&lt;=10<sup>3</sup>). The end of input is indicated by a line containing only one zero.</p>\n<p><strong>Output</strong></p>\n<p>For each test case in the input, your program must print a single line, containing one single integer, the number of marbles required.<strong>&nbsp;</strong></p>\n<pre><strong>Sample Input</strong>\n1\n2\n3\n0\n\n<strong>Sample Output</strong>\n5\n12\n22</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/301c377e-7183-433d-ae62-400ba0e3f409",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90fe"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "brdghrd-building-bridgeshard",
  "tags": [],
  "level": "BEGINNER",
  "title": "BRDGHRD - Building Bridges(HARD)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BRDGHRD - Building Bridges(HARD)</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The tribe soon discovers that just communication is not enough and wants to meet each other to form a joint force against the terminator.But there is a deep canyon that needs to crossed. Points have been identified on both sides on which bridge ends can be made. But before the construction could be started, a witch Chudael predicted that a bridge can only be built between corresponding end points, i.e. a bridge starting from the i<sup>th</sup>&nbsp;end point on one side can only end on the i<sup>th</sup>&nbsp;end point on the other side, where the position of end points is seen in the order in which the points were identified. If not, it would lead to the end of the tribe. The tribe just wants to make as many non-overlapping bridges as possible, with the constraint in mind.</p>\n<h3>Input</h3>\n<p>The first line of the input contains test cases t. It is followed by 3*t lines, 3 for each test case. The first line of input for each test case contains the number of end points identified on each side, n (1&lt;=n&lt;=10<sup>5</sup>). The second line contains x-coordinates of end points identified on the first side and similiarly the third line contains the x-coordinates of corresponding end points identified on the other side. The end points are inputted in the order in which they were identified. &nbsp;The x-coordinates can range between -10<sup>6</sup>&nbsp;to 10<sup>6</sup>.</p>\n<h3>Output</h3>\n<p>You are required to output a single line for each test case. The line contains a single integer &ndash; the</p>\n<p>maximum number of bridges possible with the constraints explained above.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre><strong>3</strong></pre>\n<p>4</p>\n<p>2 5 8 10</p>\n<p>6 4 1 2</p>\n<p>3</p>\n<p>5 3 10</p>\n<p>6 4 1</p>\n<p>6</p>\n<p>1 2 3 4 5 6</p>\n<pre>3 4 5 6 1 2<br /><br /><strong>Output:</strong></pre>\n<p>2</p>\n<p>2</p>\n<p>4</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2b913302-9950-4526-b620-18f4cf822f8a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef90ff"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bridge-building-bridges",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BRIDGE - Building Bridges",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BRIDGE - Building Bridges</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The tribe soon discovers that just communication is not enough and wants to meet each other to form a joint force against the terminator. But there is a deep canyon that needs to crossed. Points have been identified on both sides on which bridge ends can be made. But before the construction could be started, a witch Chudael predicted that a bridge can only be built between corresponding end points, i.e. a bridge starting from the i<sup>th</sup>&nbsp;end point on one side can only end on the i<sup>th</sup>&nbsp;end point on the other side, where the position of end points is seen in the order in which the points were identified. If not, it would lead to the end of the tribe. The tribe just wants to make as many non-cutting bridges as possible, with the constraint in mind. Bridges \"cut\" if and only if they have exactly one common point that is not an end point.</p>\n<h3>Input</h3>\n<p>The first line of the input contains test cases t (1&lt;=t&lt;=50). It is followed by 3*t lines, 3 for each test case. The first line of input for each test case contains the number of end points identified on each side, n (1&lt;=n&lt;=10<sup>3</sup>). The second line contains x-coordinates of end points identified on the first side and similiarly the third line contains the x-coordinates of corresponding end points identified on the other side. The end points are inputted in the order in which they were identified.&nbsp;The x-coordinates can range between -10<sup>3</sup>&nbsp;to 10<sup>3</sup>.</p>\n<h3>Output</h3>\n<p>You are required to output a single line for each test case. The line contains a single integer &ndash; the maximum number of bridges possible with the constraints explained above.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre><strong>3</strong></pre>\n<p>4</p>\n<p>2 5 8 10</p>\n<p>6 4 1 2</p>\n<p>3</p>\n<p>5 3 10</p>\n<p>6 4 1</p>\n<p>6</p>\n<p>1 2 3 4 5 6</p>\n<pre>3 4 5 6 1 2<br /><br /><strong>Output:</strong></pre>\n<p>2</p>\n<p>2</p>\n<p>4</p>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/476f19ea-4621-40b5-aaf1-0d29e3cd1b6a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9100"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bubblesort-bubble-sort",
  "tags": [],
  "level": "BEGINNER",
  "title": "BUBBLESORT - Bubble Sort",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BUBBLESORT - Bubble Sort</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>One of the simplest sorting algorithms, the Bubble Sort, can be expressed as (0-based array):</p>\n<p>procedure bubbleSort( A : list of sortable items )&nbsp;&nbsp;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp; n = length(A)</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp; repeat</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swapped = false</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i = 1 to n-1 inclusive do</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* if this pair is out of order */</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if A[i-1] &gt; A[i] then</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* swap them and remember something changed */</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swap( A[i-1], A[i] )</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swapped = true</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end if</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end for</p>\n<p>&nbsp;&nbsp; &nbsp; until not swapped</p>\n<p>end procedure</p>\n<p>Now, given an array of N integers, you have to find out how many swap opeartions occur if the Bubble Sort algorithm is used to sort the array.</p>\n<h3>Input</h3>\n<p>Input begins with a line containing an integer&nbsp;<strong>T(1&lt;=T&lt;=100)</strong>, denoting the number of test cases. Then T test cases follow. Each test case begins with a line containing an integer&nbsp;<strong>N(1&lt;=N&lt;=10000)</strong>, denoting the number of integers in the array, followed by a line containing&nbsp;<strong>N</strong>&nbsp;space separated 32-bit integers.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line in the format&nbsp;<strong>Case X: Y</strong>, where&nbsp;<strong>X</strong>&nbsp;denotes the test case number and&nbsp;<strong>Y</strong>&nbsp;denotes the number of swap operations needed modulo 10000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n3 2 1 4\n\n<strong>Output:</strong>\nCase 1: 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6a79e36d-1b56-4449-9f62-89f1a6a9d560",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9101"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "buildtow-build-the-tower",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BUILDTOW - Build the Tower",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BUILDTOW - Build the Tower</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"center\"><strong>8. Build the Tower</strong></p>\n<p>The president of Yanyang University has decided to build a new tower in front of the auditorium and has invited the students of SCE to help with the project. The tower is one of a kind and is made up of N cuboids one over the other. Each cuboid has a height of 1 unit and the length and breadth of a cuboid is equal. The top most cuboid&rsquo;s length is 1 unit. The cuboid below it has a length of 2. All the cuboids below it have their lengths equal to the sum of the lengths of the 2 cuboids above it.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">Cuboid</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">Length</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">Breadth</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">Height</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">1</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">1</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">2</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">2</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">2</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">3</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">3</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">3</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">4</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">5</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">5</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"102\">\n<p align=\"center\">5</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">8</p>\n</td>\n<td valign=\"top\" width=\"94\">\n<p align=\"center\">8</p>\n</td>\n<td valign=\"top\" width=\"76\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>As a token of appreciation the president has decided to give SCE a grant of</p>\n<p align=\"center\"><strong>$ ((Volume of Tower) % 1000000007)</strong></p>\n<p>Your task is to calculate the amount of grant received by SCE for a given value of N.</p>\n<h3>Input</h3>\n<p>The first line contains the number of test cases (T) followed by T lines each containing a single integer N.</p>\n<h3>Output</h3>\n<p>For each test case output the grant that SCE receives for building the tower.</p>\n<h3>Constraints</h3>\n<p>T &lt;= 20, N &lt;= 10^18</p>\n<h3>Example</h3>\n<p><strong>Sample Input</strong></p>\n<pre>2\n5\n10</pre>\n<p><strong>Sample Output</strong></p>\n<pre>$103\n$12815</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/53cf01d8-8d7f-4e6f-98ab-f5837ebb1db8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9102"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "burglary-boat-burglary",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BURGLARY - Boat Burglary",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BURGLARY - Boat Burglary</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Rachid lives on a boat, and owns only a few items, n to be precise. He takes big care of his items, and measured the weight of each of them with high precision. Item i weights W<sub>i</sub>&nbsp;micrograms. One night a thief visits his boat and steels some items. Rachid notices that the next morning, because the boat is lighter, and he could measure from the water level that this difference is D micrograms. He would like to know how many items are missing, just by examining these weights, and asks you for help.</p>\n<h3>Input</h3>\n<p>The first line of the input consists of the number of test cases, T. T test cases follow. Each case consists of two lines, the first one containing two integers N and D, separated by a space. Then second line contains n integers, representing the weights of all items, separated by space.</p>\n<p>The input satisfies the following limits.</p>\n<p>1&le;T&le;20<br />1&le;N&le;30<br />0&le;D&le;3*10<sup>10</sup><br />0&le;W<sub>i&le;</sub>10<sup>9</sup></p>\n<h3>Output</h3>\n<p><span lang=\"en\">For each test case output one line containing \"Case #x: y\", where x is the case number (starting from 1). If the number of missing items could be determined, then y is this number. If there are several answers to the problem y is the string \"AMBIGIOUS\" and if there is no answer y is the string \"IMPOSSIBLE\" (quotes added for clarity and are not part of the output).</span></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n5 10\n2 3 6 9 5\n5 20\n1 4 2 3 15\n5 20\n1 4 5 15 27\n5 16\n1 2 4 8 32\n\n<strong>Output:</strong>\nCase #1: 3\nCase #2: 3\nCase #3: AMBIGIOUS\nCase #4: IMPOSSIBLE</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/29fb34ea-5982-414c-8884-2f89485d73a6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9103"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "buyint-buying-integers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BUYINT - Buying Integers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BUYINT - Buying Integers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>Buying Integers</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p>Let's assume that you have&nbsp;<strong>n</strong>&nbsp;integers,&nbsp;<strong>A<sub>1,</sub>&nbsp;A<sub>2,</sub>&nbsp;A<sub>3</sub>&nbsp;</strong>&hellip;<strong>&nbsp;A<sub>n</sub></strong></p>\n<p>&nbsp;</p>\n<p>Let's define,</p>\n<p>&nbsp;</p>\n<p><strong>E =&nbsp;</strong>Number of pairs&nbsp;<strong>(i,j)</strong>&nbsp;such that&nbsp;<strong>i&lt;j</strong>&nbsp;and&nbsp;<strong>( A<sub>i&nbsp;</sub>+<sub>&nbsp;</sub>A<sub>j&nbsp;</sub>)&nbsp;</strong>are even .</p>\n<p><strong>O</strong>&nbsp;<strong>=</strong>&nbsp;Number of pairs&nbsp;<strong>(i,j)</strong>&nbsp;such that&nbsp;<strong>i&lt;j</strong>&nbsp;and&nbsp;<strong>( A<sub>i&nbsp;</sub>+<sub>&nbsp;</sub>A<sub>j&nbsp;</sub>)</strong>&nbsp;are odd .</p>\n<p><strong>D = | E-O |</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p>That means,&nbsp;<strong>D = (E-O)&nbsp;</strong>if&nbsp;<strong>(E-O)&nbsp;</strong><strong>&ge; 0 , -(E-O)&nbsp;</strong>otherwise .</p>\n<p>&nbsp;</p>\n<p>Unfortunately, you do have&nbsp;<strong>n&nbsp;</strong>but those&nbsp;<strong>n</strong>&nbsp;integers are lost . You will have to buy them again. Before going to the market, you have decided that you will buy&nbsp;<strong>n</strong>&nbsp;integers in such a way that the value of&nbsp;<strong>D&nbsp;</strong>will be as small as possible, as you will have to pay&nbsp;<strong>D&nbsp;</strong>golden coins, to buy them.</p>\n<p>&nbsp;</p>\n<p>Now,you are wondering, what that minimum&nbsp;<strong>D [</strong>Let's say it&nbsp;<strong>D<sub>min</sub>]&nbsp;</strong>will<strong>&nbsp;</strong>be<strong>&nbsp;</strong>.</p>\n<p>&nbsp;</p>\n<p><strong>Input</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p>First line of the input file will contain the number of test cases,&nbsp;<strong>T &le; 1000000</strong>, followed by&nbsp;<strong>T&nbsp;</strong>lines, each containing an integer&nbsp;<strong>n</strong>&nbsp;(<strong>1&nbsp;</strong>&le;&nbsp;<strong>n&nbsp;</strong>&le;&nbsp;<strong>10<sup>9</sup>)&nbsp;</strong>.</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p>For each case, print the case number starting from 1 and&nbsp;<strong>D<sub>min&nbsp;</sub></strong>for the value of&nbsp;<strong>n&nbsp;</strong>in that particular case. See the sample output for exact formatting.</p>\n<p><strong>&nbsp;</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"278\">\n<p align=\"center\"><strong>Sample Input</strong></p>\n</td>\n<td valign=\"top\" width=\"333\">\n<p align=\"center\"><strong>Output for Sample Input</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"278\">\n<p>3</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n</td>\n<td valign=\"top\" width=\"333\">\n<p>Case 1: 1</p>\n<p>Case 2: 0</p>\n<p>Case 3: 2</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e526d653-4d29-4647-ab76-f12f34877052",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9104"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "candy3-candy-iii",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CANDY3 - Candy III",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CANDY3 - Candy III</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A class went to a school trip. And, as usually, all&nbsp;<strong>N</strong>&nbsp;kids have got their backpacks stuffed with candy. But soon quarrels started all over the place, as some of the kids had more candies than others. Soon, the teacher realized that he has to step in: \"Everybody, listen! Put all the candies you have on this table here!\"</p>\n<p>Soon, there was quite a large heap of candies on the teacher's table. \"Now, I will divide the candies into&nbsp;<strong>N</strong>&nbsp;equal heaps and everyone will get one of them.\" announced the teacher.</p>\n<p>\"Wait, is this really possible?\" wondered some of the smarter kids.</p>\n<h3>Problem specification</h3>\n<p>You are given the number of candies each child brought. Find out whether the teacher can divide the candies into&nbsp;<strong>N</strong>&nbsp;exactly equal heaps. (For the purpose of this task, all candies are of the same type.)</p>\n<h3>Input specification</h3>\n<p>The first line of the input file contains an integer&nbsp;<strong>T</strong>&nbsp;specifying the number of test cases. Each test case is preceded by a blank line.</p>\n<p>Each test case looks as follows: The first line contains&nbsp;<strong>N</strong>&nbsp;: the number of children. Each of the next&nbsp;<strong>N</strong>&nbsp;lines contains the number of candies one child brought.</p>\n<h3>Output specification</h3>\n<p>For each of the test cases output a single line with a single word \"YES\" if the candies can be distributed equally, or \"NO\" otherwise.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n\n5\n5\n2\n7\n3\n8\n\n6\n7\n11\n2\n7\n3\n4\n\n<strong>Output:</strong>\nYES\nNO</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/67b2cc22-7c70-474f-8fca-1e56bdc55a08",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9105"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "catheten-shared-cathetus-easy",
  "tags": [],
  "level": "BEGINNER",
  "title": "CATHETEN - Shared cathetus (easy)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CATHETEN - Shared cathetus (easy)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>For any integer&nbsp;<strong><em>n</em></strong>, we define&nbsp;<strong><em>F</em>(<em>n</em>)</strong>&nbsp;as the number of ways in which&nbsp;<strong><em>n</em></strong>&nbsp;can be the cathetus (leg) of a Pythagorean triangle.<br />For example, there is exactly four Pythagorean triangles with 15 as a length for a cathetus.</p>\n<p><img title=\"catheten\" src=\"https://www.spoj.com/content/francky:catheten\" alt=\"catheten\" /></p>\n<p>(8&nbsp;<strong>15</strong>&nbsp;17), (<strong>15</strong>&nbsp;20 25), (<strong>15</strong>&nbsp;36 39), (<strong>15</strong>&nbsp;112 113)</p>\n<p>Thus&nbsp;<strong><em>F</em>(15) = 4</strong>.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer&nbsp;<strong><em>T</em></strong>, the number of test cases.</p>\n<p>Each of the next&nbsp;<strong><em>T</em></strong>&nbsp;lines contains a single integer&nbsp;<strong><em>n</em></strong>.</p>\n<h3>Output</h3>\n<p>For each test case, print&nbsp;<strong><em>F</em>(<em>n</em>)</strong>&nbsp;on a single line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n5\n10\n15\n</pre>\n<pre><strong>Output:</strong>\n1\n1\n4\n</pre>\n<h3>Constraints</h3>\n<pre>0 &lt; T &lt; 10^5\n0 &lt; n &lt; 10^9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/98d3867e-81aa-488a-825c-64b05faa2d52",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9106"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "catinv-cats-invitation",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CATINV - Cats Invitation",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CATINV - Cats Invitation</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In Kutus and Putus&rsquo; first marriage anniversary, they planned to invite all of their cat friends. So they invited all cats in a hall room. Due to business, all of the cats couldn&rsquo;t attend the party at the same time. Different cats attended party at different times and some of them couldn&rsquo;t stay till the end. Kutus wanted to make Putus as much happy as possible. If at any moment, there were &lsquo;L&rsquo; cats present in the hall room, then happiness level of Putus were &lsquo;L&rsquo; at that moment. Now Kutus gave you a list of every cats&rsquo; arrival and departure time at the party and asked you few queries: Maximum time segment where the happiness level of Putus was &lsquo;L&rsquo;.</p>\n<h3>Input</h3>\n<p>Input starts with an integer&nbsp;<strong>T</strong>, which denotes the number of test cases. Each case contains&nbsp;<strong>2</strong>&nbsp;space separated integer&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>Q</strong>&nbsp;denoting the number of cats came to the party&nbsp;and the number of queries to be performed. Next line contains&nbsp;<strong>N</strong>&nbsp;space separated integers &lsquo;<strong>X&rsquo;</strong>&nbsp;and &lsquo;<strong>Y</strong>&rsquo; denoting the arrival time and departure time of&nbsp;<strong>i<sub>th</sub><sup>&nbsp;</sup></strong>cat. Each of the next&nbsp;<strong>Q</strong>&nbsp;lines contains an integer &lsquo;<strong>L</strong>&rsquo; as described above.</p>\n<h3>Output</h3>\n<p>For each case print the case number and print the time segment &lsquo;<strong>X&rsquo;</strong>&nbsp;&amp; &lsquo;<strong>Y&rsquo;&nbsp;</strong>that is Putus&rsquo; level of happiness. If there are multiple solution, print the time segment that comes earliest. If there is no possible answer, print -1.</p>\n<p><strong>Constraints:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong></p>\n<p><strong>T &lt;= 10</strong></p>\n<p><strong>1 &lt;= N &lt;= 100000</strong></p>\n<p><strong>1 &lt;= Q &lt;= 100000</strong></p>\n<p><strong>1<sup>&nbsp;</sup>&lt;= X<sub>i&nbsp;&nbsp;</sub>&lt;= Y<sub>i</sub>&nbsp;&lt;= 100000</strong></p>\n<p><strong>1 &lt;= L &lt;= 100000&nbsp;</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>1</p>\n<p>5 5</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>3 5</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<pre><strong>Output:</strong></pre>\n<p>Case 1:</p>\n<p>4 4</p>\n<p>1 1</p>\n<p>2 2</p>\n<p>-1</p>\n<p>-1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fb5b4ebe-4464-44c5-b7ed-786d7ef36b9b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9107"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cdrsanj-coder-first-problem",
  "tags": [],
  "level": "BEGINNER",
  "title": "CDRSANJ - CODER FIRST PROBLEM",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CDRSANJ - CODER FIRST PROBLEM</h2>\n<div class=\"row\">&nbsp;</div>\n<div id=\"problem-body\">\n<p><strong>CODER SANJAY</strong>&nbsp;is now ready to put up his first problem in his favorite website&nbsp;<strong>SPOJ</strong>.As it is his first problem,he wanted it to be easy so that most of them could get an&nbsp;<strong>AC</strong>.</p>\n<p>&nbsp;</p>\n<p>The problem statement looks like this:</p>\n<p><strong>F(x)</strong>&nbsp;is a function whose properties are as follows.</p>\n<p>1.<strong>F(x)=0</strong>&nbsp;at x=0.</p>\n<p>2.<strong>F(x)=1</strong>&nbsp;at x=1.</p>\n<p>3.<strong>F(x)=2</strong>&nbsp;at x=2.</p>\n<p>4.<strong>F(x)=0</strong>&nbsp;if x is odd prime.</p>\n<p>5.<strong>F(a*b)=F(a)+F(b)</strong>,where a,b are two positive integers and sum of a and b is minimum.</p>\n<p>Your task is simple.You are to output the value of&nbsp;<strong>F(x)</strong>&nbsp;for the given input integer&nbsp;<strong>x</strong>.</p>\n<p>&nbsp;</p>\n<p><strong>CONSTRAINSTS:</strong></p>\n<p><strong>0 &lt; x &lt; 100001.</strong></p>\n<p><strong>Input</strong></p>\n<p>The only line of input contains a single integer&nbsp;<strong>x</strong>.&nbsp;</p>\n<p><strong>Output</strong></p>\n<p>Output the value of&nbsp;<strong>F(x).</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p><strong>Example</strong></p>\n<p>Input:</p>\n<p>4</p>\n<p>Output:</p>\n<p>4</p>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c45cad38-d7c5-4c70-adf2-60067155045b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9108"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cgboy-high-cg-boy",
  "tags": [],
  "level": "BEGINNER",
  "title": "CGBOY - High CG Boy",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CGBOY - High CG Boy</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There&nbsp; are some people with high CGPA who rarely codes, and the people who codes regularly doesn't have a handsome CGPA. However in IUT(International University Of Technology) There is a student who has a handsome CGPA but codes too. His name is Atondro Fuad. He is very serious about his CGPA. Though he had some bad results in some of his previous semesters, he is so determined that he will not miss CGPA 4 from now on in any semester.</p>\n<p>Now, Your task is to help Atondro Fuad to find what will be his CGPA while he'll be graduating(after 8 semesters) assuming that he'll get GP 4.00 on every semester from now.</p>\n<p>Given his semester and current CGPA, find the final CGPA of Atondro Fuad.</p>\n<p>Every semester in IUT has same number of credits.</p>\n<h3>Input</h3>\n<p>First line will contain an integer t&lt;=1000, the number of testcases.</p>\n<p>Then the next t lines will contain one inegers 0&lt;n&lt;=8 and one floating point number 0.00&lt;=c&lt;=4.00.</p>\n<p>Here n is the current semester Atondro Fuad is in, and c is his current CGPA.</p>\n<h3>Output</h3>\n<p>For each testcases, print a new line containing his CGPA after graduation rounded upto 2 decimal points.</p>\n<h3>Example</h3>\n<pre>Input:</pre>\n<pre>&nbsp;</pre>\n<pre>5</pre>\n<pre>3 3.95</pre>\n<pre>4 4.00</pre>\n<pre>5 2.56</pre>\n<pre>1 0.00</pre>\n<pre>8 3.98</pre>\n<pre>Output:</pre>\n<pre>&nbsp;</pre>\n<pre>3.99</pre>\n<pre>4.00</pre>\n<pre>3.28</pre>\n<pre>4.00</pre>\n<pre>3.98</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cc7e2e03-93a7-4172-9420-d7718a8e13ee",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9109"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "chargy-the-world-of-charges",
  "tags": [],
  "level": "BEGINNER",
  "title": "CHARGY - The World of Charges",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CHARGY - The World of Charges</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In the world of charges there are 3 types of charge. Positive , Negative and neutral. As always if one positive charge comes in touch with another negative charge they share charge and both of them vanishes.</p>\n<p>Some charges has become sick today in the world of hospital. So they went to the Hospital of charges for their treatment. Unfortunately, There is a long queue in front of the doctor's room. If any charge wants to meet the doctor , he have to stand in the queue. As normal in the queue a charge comes in contact with the charge right before him and the charge right after him.</p>\n<p>The doctor is having a tough day as you can guess. You have the appoinment list of the doctor. Can you determine what is the number of patient he'll have to prescribe today ? Assuming that the charges will come in the queue in the order of their appoinment.</p>\n<h3>Input</h3>\n<p>First line of input contains a number n, the number of patient. Here 0&lt;n&lt;=100000;</p>\n<p>The next line contains n space separated integers a<sub>1&nbsp;</sub>,a<sub>2</sub>,a<sub>3</sub>&nbsp;,........,a<sub>n</sub>&nbsp;. where a<sub>i</sub>=1 if the charge is positive,a<sub>i</sub>=&nbsp;-1 if the charge is negative and a<sub>i</sub>=0 if the charge is neutral.</p>\n<p>&nbsp;</p>\n<p><strong><sub>&nbsp;</sub>Output</strong></p>\n<p>In a single print the number of patient the doctor will have to prescribe.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>5</pre>\n<pre>1 -1 1 0 1</pre>\n<pre><strong>Output:</strong>\n</pre>\n<pre><strong>3</strong></pre>\n<pre><strong>Input:</strong></pre>\n<pre><strong>6</strong></pre>\n<pre><strong>1 -1 -1 1 1 -1</strong></pre>\n<pre><strong>Output:</strong></pre>\n<pre>0</pre>\n<pre>&nbsp;</pre>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/551767e9-5470-42ae-8e3f-27f8ee3797e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cinemacon-cinema-conundrum",
  "tags": [],
  "level": "BEGINNER",
  "title": "CINEMACON - Cinema Conundrum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CINEMACON - Cinema Conundrum</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Adorsho Ingreji Uccho Biddaloy has recently opened Media Studies department. Even though the name of the institute implies otherwise, it offers various courses on Bangla media too. As part of a course called Deshi Movie Analysis, the students of this department has to watch at least&nbsp;<strong>M</strong>&nbsp;minutes of movies that are being shown at various cinema halls across the city and submit their analysis report.</p>\n<p>Nadim, a student of this department, thought it would be great at first. How many students get to watch movies for education, right? Wrong! He quickly found out how gravely mistaken he was seeing movie titles like &ldquo;Toke Valobashtei Hobe&rdquo; and &ldquo;Matha Noshto&rdquo;. He decides to do away with this task as fast as possible.</p>\n<p>There are&nbsp;<strong>N</strong>&nbsp;cinema halls situated in a straight line (he lives in one of the most well planned cities in the world) one after another, each showing a defferent movie. His plan is to, given the length of each movie in minutes, select the least number of movies that will satisfy the M minutes of movie-watching requirement of the course. As he is lazy, he does not want to watch a movie in a hall and then go to a hall far away from the previous one to watch another movie. So, he decides to watch movies in halls so that the hall of a movie is situated next to the hall of the previous movie that he watched, if he watches multiple movies. A person can watch only one movie and only once at a hall any time he wishes. Once a person enters a hall, he cannnot leave before finishing the movie.</p>\n<p>As stated before, he is lazy and has asked you, his best friend, to help him. You are lazy too, but you are a good programmer. So you decide to write a program.</p>\n<h3>Input</h3>\n<p>Input begins with a line containing a single integer&nbsp;<strong>T(1&lt;=T&lt;=100)</strong>, denoting the number of test cases.&nbsp;<strong>T</strong>&nbsp;test cases follow. Each test case begins with a line containing two integers&nbsp;<strong>N(1&lt;=N&lt;=10000)</strong>&nbsp;and&nbsp;<strong>M(0&lt;=M&lt;=10^9)</strong>, denoting the number of cinema halls(and thus the number of movies) and the minimum movie-watching experience required by the course respectively. The next line contains N space separated positive integers denoting the length of movies in minutes shown in cinema halls from left to right. These integers will not exceed 10^5.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line in the format&nbsp;<strong>Case X: Y</strong>, where&nbsp;<strong>X</strong>&nbsp;denotes the test case number and&nbsp;<strong>Y</strong>&nbsp;denotes the minimum number of movies Nadim has to watch in consecutive cinema halls so that he earns at least M minutes of movie-watching experience. If he cannot complete this task, Y should be&nbsp;<strong>-1</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n10 15\n5 1 3 5 10 7 4 9 2 8\n5 11\n1 2 3 4 5\n\n<strong>Output:</strong>\nCase 1: 2\nCase 2: 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2aa74354-3155-443a-81a4-1fe8af49a748",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "circlediv-euler-puzzle",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CIRCLEDIV - Euler Puzzle",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CIRCLEDIV - Euler Puzzle</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Given some set of points on a circle, you connect every pair of them with a line, find the maximum number of sections do these lines cut the circle into?</p>\n<h3>Input</h3>\n<p>First line for each testcase file contains T denoting the no. of test queries followed by T numbers N, denoting the no. of point on a circle.</p>\n<h3>Constraints:</h3>\n<p>1&lt;= T &lt;= 100000 (10<sup>5</sup>)</p>\n<p>1&lt;= N &lt;= 100000 (10<sup>5</sup>)</p>\n<p>Note: Use fast I/O methods.</p>\n<h3>Output</h3>\n<p>For each test query, ouput the result in given format. As the result can be large answer the result modulus 1000000007 (10<sup>9</sup>&nbsp;+7).</p>\n<p>Case &lt;test_query_i&gt;: &lt;max_section_circle_cuts_into&gt;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3<br />1<br />2<br />6\n<strong>Output:</strong>\nCase 1: 1<br />Case 2: 2<br />Case 3: 31 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2ba78264-84a5-4811-9358-13904dd6c38e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "classicseq-classic-sequence-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CLASSICSEQ - Classic Sequence Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CLASSICSEQ - Classic Sequence Sum</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Find the value of sum of square of all the first N numbers in&nbsp;Fibonacci series.</p>\n<h3>Input</h3>\n<p>First line of every input test file contains T denoting the number of test cases for the file, followed by T numbers N.</p>\n<h3>Output</h3>\n<p>For every number N output the result( sum of square of first N fib, number) in the below described format.</p>\n<p>Value can overflow the standard data type, output the result modulo 1000000007 (10<sup>9</sup>&nbsp;+ 7).</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 10000 (10<sup>4</sup>)</p>\n<p>1 &lt;= N &lt;= 1000000000000000000 (10<sup>18</sup>)</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3<br />1<br />5<br />10<br /><strong>Output:</strong>\nCase 1: 1<br />Case 2: 40<br />Case 3: 4895</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/43a3bd24-53cb-4ee9-b0c7-af651a40043b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "clflarr-colorful-array",
  "tags": [],
  "level": "BEGINNER",
  "title": "CLFLARR - COLORFUL ARRAY",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CLFLARR - COLORFUL ARRAY</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You have been given an array of&nbsp;<strong>n</strong>&nbsp;unpainted elements. By unpainted, we mean that each element initially has a value of&nbsp;<strong>0</strong>. You have to process&nbsp;<strong>q</strong>&nbsp;queries of the form&nbsp;<strong>l r c</strong>, in which you paint all the elements of the array from index&nbsp;<strong>l</strong>&nbsp;to index&nbsp;<strong>r</strong>&nbsp;with color&nbsp;<strong>c</strong>. Assume that, each new color currently being applied to an element overrides its previous color. Output the color of each element after all the queries have been processed.</p>\n<p><strong>Note</strong>: The problem is guaranteed to be solved using C or C++ programming language.</p>\n<h3>Input</h3>\n<p>The first line of input consists of two integers n and q. Next q lines consists of 3 integers l, r and c denoting the starting index, ending index and the color respectively.</p>\n<ul>\n<li>1 &lt;=&nbsp;<strong>n</strong>&nbsp;&lt;= 200000</li>\n<li>1 &lt;=&nbsp;<strong>q</strong>&nbsp;&lt;= 200000</li>\n<li>1 &lt;=&nbsp;<strong>l</strong>&nbsp;&lt;=&nbsp;<strong>r</strong>&nbsp;&lt;=&nbsp;<strong>n</strong></li>\n<li>1 &lt;=&nbsp;<strong>c</strong>&nbsp;&lt;= 1 000 000 000</li>\n</ul>\n<h3>Output</h3>\n<p>Output the final color of each element starting from index 1 on a new line.</p>\n<h3>Example</h3>\n<pre><strong>Input</strong>\n4 3\n1 3 2\n2 4 6\n2 3 7</pre>\n<pre><strong>Output:</strong>\n2\n7\n7\n6</pre>\n<pre><strong>Input</strong>\n10 5\n3 9 13\n1 4 9\n2 10 14\n2 7 10\n6 9 44</pre>\n<pre><strong>Output</strong>\n9\n10\n10\n10\n10\n44\n44\n44\n44\n14</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dcada43e-866d-451d-b06b-3092a27888ac",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "closest-closest-triplet",
  "tags": [],
  "level": "BEGINNER",
  "title": "CLOSEST - Closest Triplet",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CLOSEST - Closest Triplet</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Closest pair is an old problem that asks to find, given a set of N points in the plane,<br />the pair that minimizes the distance between them. This problem can easily be solved<br />using roughly N 2 operations by testing all possible pairs of points and keeping at each<br />step the optimal pair. With a more clever approach, the problem has been solved using<br />&sim; N log N operations.<br />Closest triplet is an analogous problem which also takes a set of N points as input, and<br />asks for the triplet (group of three points) that minimizes the sum of the three distances<br />between each pair of them. In this case there is also a trivial solution that tests all possible<br />triplets using roughly N<sup>3</sup>&nbsp;operations. However, since you are a clever programmer, we<br />are confident that you are able to find a better algorithm.</p>\n<h3>Input</h3>\n<p>The input contains several test cases, each one described in several lines. The first line<br />contains an integer N indicating the number of points in the set (3 &le; N &le; 3000). Each<br />of the next N lines describes a different point of the set using two integers X and Y<br />separated by a single space (1 &le; X, Y &le; 10<sup>6</sup>&nbsp;); these values represent the coordinates of<br />the point in the XY plane. You may assume that within each test case no two points<br />have the same location. The last line of the input contains a single &minus;1 and should not<br />be processed as a test case.</p>\n<h3>Output</h3>\n<p>For each test case output a single line with a real number representing the sum of the<br />distances between each pair of points of any closest triplet of the set of points. Round<br />the result to the closest rational number with three decimal places. In case of ties, round<br />up. Always use exactly three digits after the decimal point, even if it means finishing<br />with a zero.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />4<br />1 1<br />4 1<br />1 5<br />1000 1000<br />9<br />100000 200000<br />200000 200000<br />150000 286603<br />60000 140000<br />240000 140000<br />150000 340000<br />1 340000<br />300000 340000<br />150000 87087<br />-1<br /><br /><strong>Output:</strong>\n12.000<br />300000.796</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d4043df8-2896-4f5d-b0e0-91ce6a6edc3e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef910f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cntdo-count-doubles",
  "tags": [],
  "level": "BEGINNER",
  "title": "CNTDO - Count Doubles",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CNTDO - Count Doubles</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given an array of integers. Your task will be to determine how many integers in the array are twice of some other integers in the same array. For example, consider an array</p>\n<p align=\"center\">1 3 4 7 9 2 18</p>\n<p>Here answer is 3 as 2 is twice of 1, 4 is twice of 2 and 18 is twice of 9.</p>\n<p>&nbsp;</p>\n<p>Input</p>\n<p>The first line of the input will be an integer T (T&lt;=1000) to represent the number of test cases. Each test case will contain two lines. The first line contains integer N (1&lt;=N&lt;=1000) which indicates the number of distinct integers in the given array. The second line contains N integers and each integer will not be greater than 10000 by its absolute value.</p>\n<p>Output</p>\n<p>In a single line, output the count of the integers that are double of some other integer.</p>\n<p>&nbsp;</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"312\">\n<p>Sample Input</p>\n</td>\n<td valign=\"top\" width=\"288\">\n<p>Sample Output</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"312\">\n<p>2</p>\n<p>7</p>\n<p>1 3 4 7 9 2 18</p>\n<p>3</p>\n<p>1 4 3</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n</td>\n<td valign=\"top\" width=\"288\">\n<p>3</p>\n<p>0</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2b4c5961-867e-4798-87d1-e074d2e8abe4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9110"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cntindx2-count-the-indexes-2",
  "tags": [],
  "level": "BEGINNER",
  "title": "CNTINDX2 - Count The Indexes 2",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CNTINDX2 - Count The Indexes 2</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Let's deal with an array again, the most important data structure of computer science. You will be given an array. Now you have some operations to do. There will be three types of operations:</p>\n<ul>\n<li>Type 1: Insert a number after a given index</li>\n<li>Type 2: Change the value of an index.</li>\n<li>Type 3: You will get a number and two indices i &amp; j where i &lt;= j.</li>\n</ul>\n<p>Now you will have to answer how many time the number appears in the array starting from i to j.</p>\n<h3>Input</h3>\n<p>Each file contains one test case.</p>\n<p>The first line contains and integer N, the number of initial array elements (1 &lt;= N &lt;= 100000) &amp; Q, the number of Queries (1 &lt;= Q &lt;= 100000). Second line contains N integers each in the range from 1 to 100000. Each of the next Q lines contains an opeation. The operations will appear as the formats below:</p>\n<ul>\n<li>1 x y, where 1 &lt;= x &lt;= length of the array, which means you have to insert number y after the index x.</li>\n<li>2 x y, For this operation, you have to change the value of index x to value y.</li>\n<li>3 i j x, Here, you have to find how many times x appers in the array from i to j. Here x will always be present in the array and 1 &lt;= i &lt;= j &lt;= length the array.</li>\n</ul>\n<h3>Output</h3>\n<p>For each operation of 3rd type, output the required answer in separated line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 3<br />42 18468 6335 26501 19170<br />2 4 29359<br />2 5 5706<br />3 2 5 5706</pre>\n<pre><strong>Output:</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e178361-5765-412f-8cfc-cb66358efb0a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9111"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "codecode-coder-or-noncoder",
  "tags": [],
  "level": "BEGINNER",
  "title": "CODECODE - Coder Or NonCoder",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CODECODE - Coder Or NonCoder</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The x% of the students in IUT(International University Of Technology) are Coders. Rest of them are noncoders. A new student got admitted into IUT who has lots of interest in programming. So, he wants to meet some senior coders of IUT. As he does not know who is coder and who is not, but he himself is a coder he has y% possibility of identifying a coder. eg. If he meets Zico_vai, He has a y% possibility that he will identify Zico_vai as coder and (100-y)% possibility that he'll mistake. The similar for non coders is also true. eg. If he meets a noncoder he has y% of possibility to identify him as noncoder and (100-y)% possibility that he'll mistake.</p>\n<p>Now, He met a random IUTian, given x and y find the probability that he'll think the guy he met as a coder.</p>\n<h3>Input</h3>\n<p>First line of the input contains an integer 0&lt;t&lt;10000, number of testcases.</p>\n<p>Next t lines contain two integers each x,y (0&lt;=x,y&lt;=100) described above.</p>\n<h3>Output</h3>\n<p>For each testcase in a new line, print the probabality(rounded to 2 digits after decimal point) in persentage with a persentage sign.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>5 90</pre>\n<pre>12 25\n\n<strong>Output:</strong>\n14.00%</pre>\n<pre>69.00%</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/28a5b70f-96a5-4a79-bef8-124cc0d46708",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9112"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "codem4-problem4",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CODEM4 - Problem4",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CODEM4 - Problem4</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>\"Roadies\" is back!!! In India,\"Roadies\" is a reality based tv show and is very popular among the youth.</p>\n<p>This time to get selected into \"Roadies\" they challenge you to solve the given problem....if you can solve it you will be selected!</p>\n<p>Challenge is as follows: Suppose you are given an array with even number of integers.Player 1 and player 2 take turns to pick numbers,either the leftmost element or the rightmost element.You have to find the maximum possible score (sum of numbers chosen) by player 1.Assume player1 always starts the game and plays optimally.</p>\n<p><strong>Note</strong>:when an element is picked it is removed from the array.</p>\n<p>But as usual this is \"Roadies\" hence cometh the twist.It is not known whether the second player plays like a dumb or smart.As you know result will be different if player 2 is either dumb or smart.</p>\n<p><strong>NOTE:</strong>&nbsp;when player 2 plays like a dumb&nbsp;there is no fixed strategy of how he would choose the numbers&nbsp;i.e he would choose the number either from start or end of an array without thinking...so there can be multiple answers possible when player 2 plays like a dumb...</p>\n<p><strong>So you have to tell the maximum possible score of player 1 when player 2 plays like a dumb and smart.</strong></p>\n<p><strong>Input description:</strong>&nbsp;</p>\n<div id=\"_mcePaste\"><strong>T:no of test cases(t&lt;20)</strong></div>\n<p>&nbsp;</p>\n<div id=\"_mcePaste\"><strong>For eact case two lines follow,first line contains the size of array(&lt;=30) and next line contains elements of array.</strong></div>\n<p>T:no of test cases(t&lt;20)</p>\n<p>For eact case two lines follow,first line contains the size of array(&lt;=30) and next line contains elements of array.</p>\n<p>Output description:</p>\n<p>For each case print in new line two space separated integers: score when player 2 is dumb and score when player 2 is smart.</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>2</p>\n<p>4</p>\n<p>5 8 4 2</p>\n<p>4</p>\n<p>8 5 4 2</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>13 10</p>\n<p>13 12</p>\n<p>&nbsp;</p>\n<p><strong>NOTE</strong>:All values will fit in int type.</p>\n<p><strong>Explanation</strong>:In first test case (when player 2 is dumb) then player 1 first chooses 5 then player 2 can choose 8 or 2 but chooses 2. so now player 1 can choose either 8 or 4 so chooses 8.Hence total score is 13.&nbsp;</p>\n<p>(when player 2 is smart) player 1 can choose 5 or 2 but chooses 2(so that player 2 cannot choose 8 in his turn) so now player 2 can choose 5 or 4.Irrespective of what player 2 chooses player 1 will have option to choose 8 in his next turn hence total (8+2)=10.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0c7c68ae-f2e2-445d-a876-f2328996ebe5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9113"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "codem5-problem5",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CODEM5 - Problem5",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CODEM5 - Problem5</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<h3>You are given an array of weights of n objects and your task is to select minimum number of objects whose sum of weights is exactly equals to some given k.</h3>\n<h3>Input</h3>\n<p>Input:<br />Line 1 - Number of test cases T(&lt;=10) followed by 2 lines for each test case<br />Line 2 - Number of objects n(&lt;=20) and total weight k(&lt;=10^4)<br />Line 3 - weights(&lt;=10^4) of n objects(each separated by space)</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>Minimum number of objects whose weights sums to k.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />5 9<br />10 9 4 3 5<br />3 7<br />1 2 3\n\n<strong>Output:</strong>\n1<br />impossible<br /><br /><strong>Explanation</strong>: For 1st case the two combinations are possible:<br />(9),(4,5) hence minimum no of objects is 1<br /><br />For 2nd case there is no combination possible hence impossible.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eed184f1-117a-4316-ba3d-837a93ba43db",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9114"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "codesptb-insertion-sort",
  "tags": [],
  "level": "BEGINNER",
  "title": "CODESPTB - Insertion Sort",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CODESPTB - Insertion Sort</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Insertion Sort is a classical sorting technique. One variant of insertion sort works as follows when sorting an array a[1..N] in non-descending order:</p>\n<pre>for i &lt;- 2 to N\n&nbsp; &nbsp; j &lt;- i\n&nbsp; &nbsp; while j &gt; 1 and a[j] &lt; a[j - 1]\n&nbsp;  &nbsp; &nbsp; &nbsp;swap a[j] and a[j - 1]\n &nbsp; &nbsp; &nbsp; &nbsp;j &lt;- j - 1</pre>\n<p>The pseudocode is simple to follow. In the ith step, element a[i] is inserted in the sorted sequence a[1..i - 1]. This is done by moving a[i] backward by swapping it with the previous element until it ends up in it's right position.</p>\n<p>As you probably already know, the algorithm can be really slow. To study this more, you want to find out the number of times the swap operation is performed when sorting an array.</p>\n<h3>Input</h3>\n<p>The first line contains the number of test cases T. T test cases follow. The first line for each case contains N, the number of elements to be sorted. The next line contains N integers a[1],a[2]...,a[N].</p>\n<h3>Output</h3>\n<p>Output T lines, containing the required answer for each test case.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 5<br />1 &lt;= N &lt;= 100000<br />1 &lt;= a[i] &lt;= 1000000</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n2\n5\n1 1 1 2 2\n5\n2 1 3 1 2\n\n<strong>Sample Output:</strong>\n0\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f56a6a8a-60e5-496b-81f7-e441e63f8157",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9115"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "count1it-ghost-town",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "COUNT1IT - Ghost Town",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">COUNT1IT - Ghost Town</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given&nbsp;<strong>n</strong>&nbsp;numbers initially. You have to maintain a&nbsp;<strong>multiset</strong>&nbsp;for those&nbsp;<strong>n</strong>&nbsp;numbers. Then you are given&nbsp;<strong>q</strong>&nbsp;queries. Qeuries will be one of the following types -</p>\n<p>1)&nbsp;<strong>1 x</strong>&nbsp;: Let&nbsp;<strong>a</strong>&nbsp;be the count of elements smaller than or equal to&nbsp;<strong>x</strong>. Add&nbsp;<strong>x+a</strong>&nbsp;into the multiset.&nbsp;</p>\n<p>2)&nbsp;<strong>2 y</strong>&nbsp;: report the number of numbers in the multiset that are smaller than or equal to&nbsp;<strong>y</strong>.</p>\n<p>3)&nbsp;<strong>3 z</strong>&nbsp;: report the&nbsp;<strong>z</strong>th smallest number of the multiset. Note that if any number&nbsp;<strong>d</strong>&nbsp;appears more than once, it is to be counted as many times it appears! Also, if z exceeds the number of elements in the&nbsp;<strong>multiset</strong>, that is answer for this query doesn't exist, print \"<strong>invalid\".&nbsp;</strong>Look at the sample input for clarification.</p>\n<h3>Note:</h3>\n<p><em>since it is a&nbsp;<strong>multiset</strong>, it will also store duplicates. Also, lets say our multiset has elements 1,2,2,3,3,3. then for z=3, answer would be&nbsp;<strong>2 .</strong></em></p>\n<p><strong>Constraints&nbsp;</strong></p>\n<p><strong>1&lt;=n&lt;=100000</strong></p>\n<p><strong>1&lt;=q&lt;=100000</strong></p>\n<p><strong>1&lt;=x&lt;=(10^9-2*10^5)</strong></p>\n<p><strong>1&lt;=y,z&lt;=10^9</strong></p>\n<p><strong>1&lt;=Initial elements of the multiset&lt;=</strong>(10^9-2*10^5)</p>\n<h3>Input</h3>\n<p>The first line &nbsp;will contain two integers, n and q, denoting the number of initially members of the multiset and the number of queries.</p>\n<p>Next q lines will be of he form -&nbsp;</p>\n<p><strong>Type D :&nbsp;</strong>That is, the queries will be of the one of given 3 types and accordingly, you will be given and integer D.</p>\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">10 20</div>\n<div id=\"_mcePaste\">7 35 44 25 15 10 21 42 12 33&nbsp;</div>\n<div id=\"_mcePaste\">1 6</div>\n<div id=\"_mcePaste\">1 39</div>\n<div id=\"_mcePaste\">2 47</div>\n<div id=\"_mcePaste\">2 96</div>\n<div id=\"_mcePaste\">1 29</div>\n<div id=\"_mcePaste\">2 40</div>\n<div id=\"_mcePaste\">3 27</div>\n<div id=\"_mcePaste\">3 5</div>\n<div id=\"_mcePaste\">1 22</div>\n<div id=\"_mcePaste\">1 44</div>\n<div id=\"_mcePaste\">3 32</div>\n<div id=\"_mcePaste\">1 28</div>\n<div id=\"_mcePaste\">3 2</div>\n<div id=\"_mcePaste\">2 39</div>\n<div id=\"_mcePaste\">3 23</div>\n<div id=\"_mcePaste\">2 31</div>\n<div id=\"_mcePaste\">1 13</div>\n<div id=\"_mcePaste\">1 50</div>\n<div id=\"_mcePaste\">3 38</div>\n<div id=\"_mcePaste\">2 26</div>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>You have to print the output for query numbers&nbsp;<strong>2</strong>&nbsp;and&nbsp;<strong>3.</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>10 20</p>\n<p>7 35 44 25 15 10 21 42 12 33&nbsp;</p>\n<p>1 6</p>\n<p>1 39</p>\n<p>2 47</p>\n<p>2 96</p>\n<p>1 29</p>\n<p>2 40</p>\n<p>3 27</p>\n<p>3 5</p>\n<p>1 22</p>\n<p>1 44</p>\n<p>3 32</p>\n<p>1 28</p>\n<p>3 2</p>\n<p>2 39</p>\n<p>3 23</p>\n<p>2 31</p>\n<p>1 13</p>\n<p>1 50</p>\n<p>3 38</p>\n<p>2 26</p>\n<pre>\n<strong>Output:</strong></pre>\n<p>11</p>\n<p>12</p>\n<p>10</p>\n<p>invalid</p>\n<p>15</p>\n<p>invalid</p>\n<p>7</p>\n<p>12</p>\n<p>invalid</p>\n<p>8</p>\n<p>invalid</p>\n<p>8</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5d5641e4-155a-4147-8115-5ca6d454ee51",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9116"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cprime-prime-number-theorem",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CPRIME - Prime Number Theorem",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CPRIME - Prime Number Theorem</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/CPRIME/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/CPRIME/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>In number theory, the Prime Number Theorem describes the asymptotic distribution of prime numbers. Let &pi;(x) be the number of prime numbers not greater than x. The Prime Number Theorem states that:</p>\n<p><img src=\"http://upload.wikimedia.org/math/c/9/3/c93061b930d29877a2364a62e5ecc1a5.png\" alt=\"\" /></p>\n<p>Your task is to write a program to verify how well the Prime Number Theorem can estimate &pi;(x). To be more precise, for a given x, you have to calculate the percent error |&pi;(x) - x/lnx| / &pi;(x) %.</p>\n<h3>Input</h3>\n<p>The input contains several test cases (no more than 1000). Each test case contains a value of x (2 &le; x &le; 10<sup>8</sup>) given in one line. A number 0 terminates the input.</p>\n<h3>Output</h3>\n<p>For each value of x, output the percent error of the estimation of &pi;(x), rounded to 1 decimal digit.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10000000\n2\n3\n5\n1234567\n0\n\n<strong>Output:</strong>\n6.6\n188.5\n36.5\n3.6\n7.7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a088ee9e-e5a7-429a-8adb-beb5d3286226",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9117"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "crzysmkr-crazy-smoker",
  "tags": [],
  "level": "BEGINNER",
  "title": "CRZYSMKR - Crazy Smoker",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CRZYSMKR - Crazy Smoker</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">The \"BHAI Group\" Of Every College is Famous For Many Things.</div>\n<div id=\"_mcePaste\">So One Day The Leader Of Bhai Group decided to smoke **C(N)** cigarettes each day:</div>\n<div id=\"_mcePaste\">&nbsp;- **F(N) = 34&lt;sup&gt;N&lt;/sup&gt; + (30 x N) + 32**</div>\n<div id=\"_mcePaste\">&nbsp;- **C(N) = F(N) mod (11)**, where **x mod (y)** is the remainder obtained by diving x by y.</div>\n<div id=\"_mcePaste\">But &nbsp;Bhai Group's Leader's girlfriend wants that he doesn't smoke any cigarette, so she made modifications:</div>\n<div id=\"_mcePaste\">&nbsp;- **F(N) = 34&lt;sup&gt;N&lt;/sup&gt; + (30 x N) + (32 + M)**</div>\n<div id=\"_mcePaste\">&nbsp;- **C(N) = F(N) mod (11)**</div>\n<div id=\"_mcePaste\">**Input**</div>\n<div id=\"_mcePaste\">First line of each test case is an integer **T**, total number of test cases. Next **T** lines contains a single integer **N**.</div>\n<div id=\"_mcePaste\">**Output**</div>\n<div id=\"_mcePaste\">Print the **minimum** value of **M** in single line for each test case.</div>\n<div id=\"_mcePaste\">**Constraints**&lt;br&gt;</div>\n<div id=\"_mcePaste\">&lt;b&gt;</div>\n<div id=\"_mcePaste\">&nbsp;- 1 &lt;= T &lt;= 10&lt;sup&gt;6&lt;/sup&gt;</div>\n<div id=\"_mcePaste\">&nbsp;- 1 &lt;= N &lt;= 10&lt;sup&gt;18&lt;/sup&gt;</div>\n<div id=\"_mcePaste\">&lt;/b&gt;</div>\n<p>The&nbsp;<strong>\"BHAI Group\"</strong>&nbsp;Of IIIT Allahabad is Famous For Many Things,Leading In Every Field Of College Activity</p>\n<p>So One Day The<strong>&nbsp;Leader Of Bhai Group</strong>&nbsp;decided to smoke&nbsp;<strong>C(N)&nbsp;</strong>cigarettes each day:</p>\n<p>&nbsp;-&nbsp;<strong><em>F(N) = 34^N+ (30 x N) + 32</em></strong></p>\n<p>&nbsp;-&nbsp;<strong><em>C(N) = F(N) mod (11)</em></strong>, where&nbsp;<strong>x mod (y)</strong>&nbsp;is the&nbsp;<strong>remainder obtained by diving x by y.</strong></p>\n<p>But &nbsp;Bha<strong>i</strong><strong>&nbsp;Group's Leader's Girlfriend</strong>&nbsp;wants that he doesn't smoke any cigarette, so she made modifications:</p>\n<p>&nbsp;<em>-&nbsp;<strong>F(N) = 34^N+ (30 x N) + (32 + M)</strong></em></p>\n<p><em>&nbsp;-&nbsp;<strong>C(N) = F(N) mod (11)</strong></em></p>\n<p><strong>Edit 1 : Time Limit Set To .100s</strong></p>\n<p><strong>Problem Credits : IIIT Allahabad HE Club</strong></p>\n<h3>Input</h3>\n<p>First line of each test case is an integer<strong>&nbsp;T</strong>, total number of test cases. Next<strong>&nbsp;T&nbsp;</strong>lines contains a single integer&nbsp;<strong>N.</strong></p>\n<h3>Output</h3>\n<p>Print the&nbsp;<strong>minimum</strong>&nbsp;value of&nbsp;<strong>M</strong>&nbsp;in single line for each test case.</p>\n<p><strong>Constraints</strong></p>\n<p>1 &lt;= T &lt;= 10^6</p>\n<p><strong>1 &lt;= N &lt;= 10^18</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>2\n1\n2</pre>\n<pre><strong>Output:</strong></pre>\n<pre>3\n6</pre>\n<pre><strong>Explaination :</strong></pre>\n<pre><em>For N = 1\nF(N) = 34 + 30 + 32 = 96\nSo, M = 3\nNow, C(N) = 99 mod(11) = 0\nFor N = 2\nF(N) = 1156 + 60 + 32 = 1248\nSo, M = 6\nNow, C(N) = 1254 mod(11) = 0</em></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1a8bcede-2da3-48cb-9836-88cb784b57c9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9118"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ctrick-card-trick",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CTRICK - Card Trick",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CTRICK - Card Trick</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The magician shuffles a small pack of cards, holds it face down and performs the following procedure:</p>\n<ol>\n<li>The top card is moved to the bottom of the pack. The new top card is dealt face up onto the table. It is the Ace of Spades.</li>\n<li>Two cards are moved one at a time from the top to the bottom. The next card is dealt face up onto the table. It is the Two of Spades.</li>\n<li>Three cards are moved one at a time&hellip;</li>\n<li>This goes on until the nth and last card turns out to be the n of Spades.</li>\n</ol>\n<p>This impressive trick works if the magician knows how to arrange the cards beforehand (and knows how to give a false shuffle). Your program has to determine the initial order of the cards for a given number of cards, 1 &le; n &le; 20000.</p>\n<h3>Input</h3>\n<p>On the first line of the input is a single positive integer, telling the number of test cases to follow. Each case consists of one line containing the integer n.</p>\n<h3>Output</h3>\n<p>For each test case, output a line with the correct permutation of the values 1 to n, space separated. The first number showing the top card of the pack, etc&hellip;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n5\n\n<strong>Output:</strong>\n2 1 4 3\n3 1 4 5 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/51ab153e-4b23-424c-9124-ce622231a456",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9119"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cubefr-cube-free-numbers-2",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CUBEFR - Cube Free Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CUBEFR - Cube Free Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A cube free number is a number who&rsquo;s none of the divisor is a cube number (A cube number is a cube of a integer like 8 (2 * 2 * 2) , 27 (3 * 3 * 3) ). So cube free numbers are 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18 etc (we will consider 1 as cube free). 8, 16, 24, 27, 32 etc are not cube free number. So the position of 1 among the cube free numbers is 1, position of 2 is 2, 3 is 3 and position of 10 is 9. Given a positive number you have to say if its a cube free number and if yes then tell its position among cube free numbers.</p>\n<h3>Input</h3>\n<p>First line of the test case will be the number of test case T (1 &lt;= T &lt;= 100000) . Then T lines follows. On each line you will find a integer number n (1 &lt;= n &lt;= 1000000).</p>\n<h3>Output</h3>\n<p>For each input line, print a line containing&nbsp;<tt>&ldquo;Case I: &rdquo;</tt>, where I is the test case number. Then if it is not a cube free number then print&nbsp;<tt>&ldquo;Not Cube Free&rdquo;</tt>. Otherwise print its position among the cube free numbers.</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n<strong>Sample Output:</strong>\nCase 1: 1\nCase 2: 2\nCase 3: 3\nCase 4: 4\nCase 5: 5\nCase 6: 6\nCase 7: 7\nCase 8: Not Cube Free\nCase 9: 8\nCase 10: 9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/10c53891-b2f1-4d1c-8354-aa43a1b5ae07",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cubert-cube-root",
  "tags": [],
  "level": "BEGINNER",
  "title": "CUBERT - Cube Root",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CUBERT - Cube Root</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Your task is to calculate the cube root of a given positive integer. We can not remember why exactly we need this, but it has something in common with a princess, a young peasant, kissing and half of a kingdom (a huge one, we can assure you).</p>\n<p>Write a program to solve this crucial task.</p>\n<h3>Input</h3>\n<p>The input starts with a line containing a single integer&nbsp;<strong>t</strong>&nbsp;&lt;= 20, the number of test cases.&nbsp;<strong>t</strong>&nbsp;test cases follow.</p>\n<p>The next lines consist of large positive integers of up to 150 decimal digits. Each number is on its own separate line of the input file. The input file may contain empty lines. Numbers can be preceded or followed by whitespaces but no line exceeds 255 characters.</p>\n<h3>Output</h3>\n<p>For each number in the input file your program should output a line consisting of two values separated by single space. The second value is the cube root of the given number, truncated (not rounded!) after the 10th decimal place. First value is a checksum of all printed digits of the cube root, calculated as the sum of the printed digits modulo 10.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1</pre>\n<p>8</p>\n<p>1000</p>\n<p>2 33076161</p>\n<pre><strong>Output:</strong>\n1 1.0000000000\n2 2.0000000000\n1 10.0000000000\n0 1.2599210498\n6 321.0000000000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0d7ba0e7-4881-4d1d-be64-1b6234bd269d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cubnum-cube-numbers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CUBNUM - Cube Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CUBNUM - Cube Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>For any positive integer n, n can be represented as sum of other positive cube numbers (n=a<sub>1</sub><sup>3</sup>+a<sub>2</sub><sup>3</sup>+...+a<sub>m</sub><sup>3</sup>). Your task is to print the smallest m, where m is number of cube numbers used to form n, such that n=a<sub>1</sub><sup>3</sup>+a<sub>2</sub><sup>3</sup>+...+a<sub>m</sub><sup>3</sup>. For example:</p>\n<ul>\n<ul>\n<li>n=5,n=1<sup>3</sup>+1<sup>3</sup>+1<sup>3</sup>+1<sup>3</sup>+1<sup>3</sup>&nbsp;(m=5)</li>\n<li>n=8,n=2<sup>3</sup>&nbsp;(m=1)</li>\n<li>n=35,n=2<sup>3</sup>+3<sup>3</sup>&nbsp;(m=2)</li>\n</ul>\n</ul>\n<p>&nbsp;</p>\n<strong>Note: My fastest time is 0.09s :).<br />Edit: My fastest time is 0.05s now lol<br />My Java solution is also accepted.</strong>\n<h3>Input</h3>\n<p>Input consists of several test cases separated by new lines. Each test case consists of a positive integer, denoting the number of n (1 &le; n &le; 10<sup>5</sup>). Input is terminated by end of file (EOF).<br />It is guaranteed that total test case per input file is less than 10<sup>5</sup>.<br /><br /><strong>Note: For c++ users, you can use while(scanf(\"%d\",&amp;n)!=EOF); to read input until EOF.<br />Warning: large Input/Output data, be careful with certain languages!.</strong></p>\n<h3>Output</h3>\n<p>For each case, print \"Case #X: M\", where X (1 &le; X &le; 10<sup>5</sup>) is the case number,and M is the minimum cube numbers used to form the integer n. There must be no trailing spaces at the end of printed lines, neither empty characters. Print a newline after each testcase.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2\n5\n8\n35\n\n<strong>Output:</strong>\nCase #1: 1\nCase #2: 2\nCase #3: 5\nCase #4: 1\nCase #5: 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/68b468e2-5fee-4f3a-bc3d-7f0bec689895",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "curdprod-curd-producers",
  "tags": [],
  "level": "BEGINNER",
  "title": "CURDPROD - CURD PRODUCERS",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CURDPROD - CURD PRODUCERS</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A curd manufacturing factory owns curd producing machines of different qualities. A curd producer of quality q produces 1 unit of curd in q units of time.</p>\n<p><br />For example, a curd producer of quality 5 produces 1 unit of curd at time 5, 1 unit of curd at time 10 and so on..</p>\n<p>Given the qualities of all the machines, find the minimum time required to produce T units of curd.</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>The first line consists of an integer t, the number of test cases. For each testcase, the first line consists of 2 integers n and T, the number of machines and the target amount of curd. The next n lines consists of integers representing the qualities of the producer machines.<br /><strong>&nbsp;</strong></p>\n<p><strong>Output:</strong></p>\n<p>For each test case, find the minimum time required to produce the target amount of curd.</p>\n<p>&nbsp;</p>\n<p><strong>Input Constraints:</strong></p>\n<p>1 &lt;= t &lt;= 10^2</p>\n<p>1 &lt;= n &lt;= 10^4</p>\n<p>1 &lt;= T &lt;= 10^9</p>\n<p>1 &lt;= quality of each machine &lt;= 10^9</p>\n<p>&nbsp;</p>\n<p><strong>Note:</strong>&nbsp;Note that a quality 5 producer produces only 1 curd at time 9 and not 1.8.</p>\n<div><strong>&nbsp;</strong></div>\n<p><strong>Sample Input:</strong></p>\n<p>3</p>\n<p>2 3</p>\n<p>5</p>\n<p>10</p>\n<p>3 1000000</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>1 1000000000</p>\n<p>1000000000</p>\n<p>&nbsp;</p>\n<p><strong>Sample Output:</strong></p>\n<p>10</p>\n<p>545455</p>\n<p>1000000000000000000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/433aa7c5-3794-4e63-8a75-d2a5c85f2ec0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cwc2015-cwc-2015",
  "tags": [],
  "level": "BEGINNER",
  "title": "CWC2015 - CWC-2015",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">CWC2015 - CWC-2015</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Its cricket world cup 2015. Bangladesh team coach Chandika Hathurusingha wants to choose the best team combination for the world cup. But there are so many options, because there are so many good Qualified and experienced players. So he plans several steps for choosing the best team combination. The first step is, he divided N player in two groups such that each group has the same number of players. And sum of players experience of both groups will be same. But doing this he saw it is a very difficult task. Now Chandika Hathurusingha needs your help. He know that you are a good programmer. He gives you list of N player name and experience. You have to find out, is it possible to doing this first step according to his plan.</p>\n<p>Input:</p>\n<p>Input start with an integer (T&le;100). Which denotes the number of test case. Each test case start with an integer (1&le;N&le;40) which denotes the number of player in the list. Then next line will be N space separate integer (1&le;x&le;1000000), which is player Experience.</p>\n<p>Output:</p>\n<p>For each case, print the case number and if possible print &ldquo;Yes&rdquo; or Not possible print &ldquo;No&rdquo;.</p>\n<p>&nbsp;</p>\n<p>Sample Input:<br />2<br />6<br />1 2 3 4 5 6<br />4<br />2 3 4 5</p>\n<p>Sample Output:</p>\n<p>Case 1: No<br />Case 2: Yes</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/713c35ac-fa24-447b-947c-bcff274e1111",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "daltsum-descending-alternating-sums",
  "tags": [],
  "level": "BEGINNER",
  "title": "DALTSUM - Descending Alternating Sums",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DALTSUM - Descending Alternating Sums</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an array&nbsp;<strong>A</strong>&nbsp;of&nbsp;<strong>k</strong><em><strong>&nbsp;</strong></em>integers (not necessarily distinct), we define the&nbsp;<em>descending alternating sum&nbsp;</em>of this array, denoted&nbsp;<strong>F(A)</strong>&nbsp;the following way. First, we sort the array in descending order. Suppose the elements, after sorting, are&nbsp;<strong>A<sub>1</sub></strong>&nbsp;&ge;&nbsp;<strong>A<sub>2</sub></strong>&nbsp;&ge; ... &ge;&nbsp;<strong>A<sub>k</sub></strong>&nbsp;respectively. Then the descending alternating sum of array&nbsp;<strong>A</strong>&nbsp;is</p>\n<p><strong>F(A) =</strong>&nbsp;<strong>A<sub>1</sub>&nbsp;- A<sub>2</sub>&nbsp;+ A<sub>3</sub>&nbsp;- ... + (-1)<sup>k+1</sup>&nbsp;A<sub>k</sub></strong>.</p>\n<p>For example, if&nbsp;<strong>A = [5, -3, 8, 2, 0, -5]&nbsp;</strong>then after sorting it in descending order, we find&nbsp;<strong>A = [8, 5, 2, 0, -3, -5]</strong>. So the descending alternating sum of this array is&nbsp;<strong>8 - 5 + 2 - 0 + (-3) - (-5) = 7</strong>. In particular, the descending alternating sum of an empty array is&nbsp;<strong>0</strong>.</p>\n<p>You are given an array&nbsp;<strong>A</strong>&nbsp;of&nbsp;<strong>n&nbsp;</strong>integers where&nbsp;<strong>1 &le; n &le; 10<sup>5</sup>&nbsp;</strong>and&nbsp;<strong>|A<sub>i</sub>| &le; 10<sup>18</sup></strong>. You have to print the sum of the descending alternating sums of all subsets of this array&nbsp;<strong>A</strong>&nbsp;(there are&nbsp;<strong>2</strong><sup><strong>n</strong></sup>&nbsp;of them) modulo&nbsp;<strong>M = 10<sup>9</sup>&nbsp;+ 7</strong>. In other words, if the subsets of array&nbsp;<strong>A</strong>&nbsp;are&nbsp;<strong>S<sub>1</sub>, S<sub>2,&nbsp;</sub>..., S<sub>2<sup>n</sup></sub>&nbsp;</strong>then you have to print the sum</p>\n<p><strong>F(S<sub>1</sub>) + F(S<sub>2</sub>) + ... + F(S<sub>2<sup>n</sup></sub>)&nbsp;</strong>modulo&nbsp;<strong>M =&nbsp;10<sup>9</sup>&nbsp;+ 7</strong>.</p>\n<p>Note: we consider some integer modulo a positive integer to be non-negative. In the other words, the output&nbsp;<strong>R&nbsp;</strong>must satisfy the inequality&nbsp;<strong>0 &le;</strong>&nbsp;<strong>R &lt; M</strong>.</p>\n<h3>Input</h3>\n<p>The first line of the input file contains a single integer&nbsp;<strong>n</strong>, denoting the size of the array&nbsp;<strong>A</strong>.</p>\n<p>The second line contains&nbsp;<strong>n&nbsp;</strong>integers&nbsp;<strong>A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>n</sub></strong>, the elements of the array&nbsp;<strong>A</strong>.</p>\n<h3>Output</h3>\n<p>Print a single integer, the sum of descending alternating sums of all subsets of the array&nbsp;<strong>A</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n-1 9 3<br />\n<strong>Output:</strong>\n36</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c6014051-62dc-4e72-a597-ded8dbd8b919",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef911f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dcepc12g-g-force",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DCEPC12G - G Force",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPC12G - G Force</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>Prime(<strong>n</strong>) is defined as&nbsp; number of primes less than equal to&nbsp;<strong>n</strong>.</p>\n<p>Totient(<strong>n</strong>) is defined as the number of positive integers less than or equal to&nbsp;<strong>n</strong>&nbsp;that are&nbsp;relatively prime&nbsp;to&nbsp;<strong>n</strong>.</p>\n<p>F(<strong>n</strong>) = Prime(<strong>n</strong>) &ndash; Totient(<strong>n</strong>)&nbsp;</p>\n<p>and we don&rsquo;t like negative values, so if F(<strong>n</strong>) &lt; 0, consider it as 0.</p>\n<p>G(n) = Totient(<strong>n</strong>) ^ (Factorial (F(<strong>n</strong>)))</p>\n<p>&nbsp;</p>\n<p>You are given a number&nbsp;<strong>n</strong>. You have to output G(<strong>n</strong>) % 10^9+7.</p>\n<h3>Input</h3>\n<p>First line consists of&nbsp;<strong>T</strong>, the number of test cases.</p>\n<p>Each of the next&nbsp;<strong>T</strong>&nbsp;lines contains one integer&nbsp;<strong>n</strong>.</p>\n<h3>Output</h3>\n<p>Output&nbsp;<strong>T</strong>&nbsp;lines each line containing the value of function G(<strong>n</strong>) % 10^9+7</p>\n<h3>Constraints</h3>\n<p>1&lt;=<strong>T</strong>&lt;=100</p>\n<p>1&lt;=<strong>n</strong>&lt;=10000000</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1</pre>\n<pre>2\n\n<strong>Output:</strong>\n1</pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/117e6373-e363-4d2c-8548-8bc9ced70eda",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9120"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dcepc14a-another-version-of-inversion",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DCEPC14A - Another Version of Inversion",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPC14A - Another Version of Inversion</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>DCE Coders admins are way much geekier than they actually seem! Kartik has been following that tradition lately. How? Well, he took the inversion count problem to a whole new level!</p>\n<p>Sounds pretty normal to you, huh? Wanna challenge him? Try solving his version of inversion count then!</p>\n<p>You are given a 2-d array of integers. You need to find out the inversion count of that array. A pair of integers in the 2-d array counts as an inversion pair (A,B) if and only if:</p>\n<ul>\n<li>There exists a valid path from top-left corner (0,0) to bottom right corner (r,c) such that A and B integers lie on that path.</li>\n<li>A occurs before B on that path.</li>\n<li>And, A &gt; B.</li>\n</ul>\n<p>A valid path is defined as a path that can be traversed from top-left corner (0,0) to bottom-right corner (r,c) by moving only in right or downwards direction, without moving out of the grid.</p>\n<p>Are you geekier than Kartik?</p>\n<p><strong>Constraints:</strong></p>\n<p>0 &lt; R,C &lt;= 300</p>\n<p>0 &lt; Ai &lt;= 10^5, where Ai stands for an integer in the array.</p>\n<h3>Input</h3>\n<p>First line contains space separated 2 integers, R and C, denoting the number of rows and columns.</p>\n<p>Next R lines contain C space separated integers representing the 2-d array</p>\n<h3>Output</h3>\n<p>Output the number of inversion pairs as described in the problem statement.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>4 4</p>\n<p>3 4 2 5</p>\n<p>1 7 11 16</p>\n<p>8 9 6 12</p>\n<p>10 13 15 14</p>\n<pre>\n<strong>Output:</strong></pre>\n<p>10</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dcb8c3c9-0407-4c68-8450-c2236f1afa3f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9121"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dcepc206-its-a-murder",
  "tags": [],
  "level": "BEGINNER",
  "title": "DCEPC206 - Its a Murder!",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Once detective Saikat was solving a murder case. While going to the crime scene he took the stairs and saw that a number is written on every stair. He found it suspicious and decides to remember all the numbers that he has seen till now. While remembering the numbers he found that he can find some pattern in those numbers. So he decides that for each number on the stairs he will note down the sum of all the numbers previously seen on the stairs which are smaller than the present number. Calculate the sum of all the numbers written on his notes diary.</p>\n<h3>Input</h3>\n<p>First line gives T, number of test cases.</p>\n<p>2T lines follow.<br /><br />First line gives you the number of stairs N<br /><br />Next line gives you N numbers written on the stairs.</p>\n<h3>Output</h3>\n<p>For each test case output one line giving the final sum for each test case.</p>\n<h3>Constraints</h3>\n<p>T&lt;=10<br /><br />1&lt;=N&lt;=10^5<br /><br />All numbers will be between 0 and 10^6.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1<br />5<br />1 5 3 6 4<br /><br /><strong>Output:</strong>\n15</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9ac32418-d758-4fc7-af9f-4a2a903be4af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9122"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dcepc505-bazinga",
  "tags": [],
  "level": "BEGINNER",
  "title": "DCEPC505 - Bazinga!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPC505 - Bazinga!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sheldon is very proud of his intelligence. To test his intelligence Howard designs a puzzle and asks him to solve it. The puzzle consists of special numbers which can be obtained by multiplying exactly two distinct prime numbers. Sheldon has to tell Howard what is the Kth element of this series. Help him.</p>\n<p>For Example 6, 10, 14, 15 are the&nbsp;first few members&nbsp;of this series whereas 4, 9 and 12 are not.</p>\n<h3>Input</h3>\n<p>First line specifies T, the number of test cases.</p>\n<p>Next T lines each gives 1 number, K</p>\n<h3>Output</h3>\n<p>Output 1 line for each test case giving the Kth element of this series.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 1000</p>\n<p>1 &lt;= K &lt;= 2000000</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n2\n3\n5\n7\n\n<strong>Output:</strong>\n10\n14\n21\n26</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0df8e422-ee2c-4c2b-8c10-2d2d26c3b669",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9123"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dcepca03-totient-extreme",
  "tags": [],
  "level": "BEGINNER",
  "title": "DCEPCA03 - Totient Extreme",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPCA03 - Totient Extreme</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given the value of N, you will have to find the value of H. The meaning of H is given in the following code:</p>\n<p><tt>H=0;<br />For (i=1; i&lt;=n; i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;For (j=1; j&lt;=n; j++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;H = H + totient(i) * totient(j);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</tt></p>\n<p><strong>Totient</strong>&nbsp;or phi function, &phi;(n) is an arithmetic function that counts the number of positive integers less than or equal to n that are relatively prime to n. That is, if n is a positive integer, then &phi;(n) is the number of integers k in the range 1 &le; k &le; n for which gcd(n, k) = 1</p>\n<h3>Constraints</h3>\n<p>0 &lt; T &lt;= 50<br />0 &lt; N &lt;= 10^4</p>\n<h3>Input</h3>\n<p>The first line contains T, the number of test cases. It is followed by T lines each containing a number N .</p>\n<h3>Output</h3>\n<p>For each line of input produce one line of output. This line contains the value of H for the corresponding N.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3\n10\n\n<strong>Output:</strong>\n16\n1024</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/949d1576-29e4-4b10-a20a-8100541a4666",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9124"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dcepca06-saving-bob",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DCEPCA06 - Saving BOB",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPCA06 - Saving BOB</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Alice and Bob start playing a new game. Alice writes 2 numbers - N and K. She asks Bob to find an integer which is N digits long such that the absolute difference in the adjacent digits is greater than or equal to K. Bob realizes that a lot of integers satisfy this condition. &nbsp;Can you help Bob to find the total number of N digit integers which satisfy the condition set by Alice?<br />Since the answer can be very large, print the answer modulus 1000000007.</p>\n<p>Note :</p>\n<p>The adjacent digits to a digit constitute both the left and right neighbor of the digit. Starting from the left, only the second digit is regarded as adjacent to the first digit and only the second last digit is regarded as adjacent to the last digit.</p>\n<h3>Constraints</h3>\n<p>T = 100<br />2 &lt;= N &lt;= 10^9<br />0 &lt;= K &lt;= 9</p>\n<h3>Input</h3>\n<p>First line contains T- the number of test cases. The next T lines contains two numbers N and K as given by Alice.</p>\n<h3>Output</h3>\n<p>Print T lines each containing the total number of integers of N digit mod 1000000007 which satisfy the condition set by Alice.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />2 9<br />2 8<br />&nbsp;<br /><strong>Output:</strong>\n1<br />4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1af68613-e3da-4798-bedd-f04220c72bb3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9125"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dcepca09-mmm",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DCEPCA09 - MMM",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DCEPCA09 - MMM</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Everyone knows how to find mean, median and mode of an array of numbers. For people who don&rsquo;t know this, here is the description:<br />Mean is the arithmetic average of a set of values.<br />Median of a finite list of numbers can be found by arranging all the observations from lowest value to highest value and picking the middle one. If there is an even number of observations, then there is no single middle value; the median is then usually defined to be the mean of the two middle values.<br />The mode is the value that appears most often in a set of data. If more than one number is applicable to be the mode, select the highest value number amongst them as the mode.</p>\n<p>The problem is just to find these 3 values. Given an array of numbers and two indices i and j , find the mean , median and mode of elements in the interval i to j including numbers at indices i and j. Note that i and j are 0 index based.</p>\n<h3>Constraints</h3>\n<p>2 &lt;= N &lt;= 10000<br />1 &lt;= Q &lt;= 10000<br />0 &lt;= A[i] &lt;= 10^8<br />0 &lt;= i &lt; N<br />i &lt;= j &lt; N</p>\n<h3>Input</h3>\n<p>First line contains N which is the total number of numbers in the array. The next line contains N numbers A[i] which are the elements of the array. Next line contains a number Q which defines the total number of queries we are making for the interval i to j. It is followed by Q lines each containing 2 numbers i and j which denotes the indices to be queried for.</p>\n<h3>Output</h3>\n<p>Print Q lines each containing 3 numbers Mean, Median and Mode respectively. If the answer for any case comes to be a floating point, then take the integer part of the number as the answer.<br />For example: if mean, median and mode comes up to be 6.44 7.8 9 then the final answer is 6 7 9.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5<br />6 5 3 7 7<br />2<br />1 2<br />0 4<br /><br />&nbsp;<strong>Output:</strong>\n4 4 5<br />5 6 7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9fc28284-997b-42e8-9c62-a075951aad02",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9126"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "diferenc-diferencija",
  "tags": [],
  "level": "BEGINNER",
  "title": "DIFERENC - DIFERENCIJA",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DIFERENC - DIFERENCIJA</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n<div class=\"col-lg-12 text-center\">&nbsp;</div>\n</div>\n<div id=\"problem-body\">\n<p>Mirko discovered what Slavko did in previous task, and decided to deal with something completely&nbsp;opposite to tables of letters: sequences of numbers.</p>\n<p>Let&rsquo;s define a value of a sequence as the difference between the largest and the smallest number within&nbsp;that sequence. For example, value of sequence (3, 1, 7, 2) is 6, and value of (42, 42) is 0.</p>\n<p>Find the sum of values of all subsequences of consecutive elements of a given sequence.</p>\n<p><strong>INPUT</strong></p>\n<p>The first line of input contains a single integer N (2 &le; N &le; 300 000), number of elements of the&nbsp;sequence.</p>\n<p>Next N lines contain elements of the sequence. Each element is a positive integer not greater than 100&nbsp;000 000.</p>\n<p><strong>OUTPUT</strong></p>\n<p>The first and only line of output must contain the requested sum.</p>\n<p><strong>EXAMPLE TEST DATA</strong></p>\n<p><strong>input</strong></p>\n<p>3</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>&nbsp;</p>\n<p><strong>output</strong></p>\n<p>4</p>\n<p>&nbsp;</p>\n<p><strong>input</strong></p>\n<p>4</p>\n<p>7</p>\n<p>5</p>\n<p>7</p>\n<p>5</p>\n<p>&nbsp;</p>\n<p><strong>output</strong></p>\n<p>12</p>\n<p>&nbsp;</p>\n<p><strong>input</strong></p>\n<p>4</p>\n<p>3</p>\n<p>1</p>\n<p>7</p>\n<p>2</p>\n<p><strong>output</strong></p>\n<p>31</p>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/57844312-bbc0-4e16-9b85-02f15039cd7e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9127"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "diffv-different-vectors",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DIFFV - Different Vectors",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DIFFV - Different Vectors</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given set of&nbsp;<strong>N</strong>&nbsp;vectors, each vector consists of&nbsp;<strong>K</strong>&nbsp;integers. Vector ex equals ey&nbsp;<strong>iff&nbsp;</strong>there exist function bijection&nbsp;<strong>f</strong>&nbsp;and integer&nbsp;<strong>r</strong>, such that ex[i] = f( ey[(i+r)%K] ), for each i in range [0, K&gt; Eg. (1, 2, 2, 3) == (22, 3, 4, 22), with r=2 and f(22)=2, f(3)=3 and f(4)=1. But (22,3,22,4) is not equal to (1, 2, 2, 3).</p>\n<p>How many different vectors are there in set of N given vectors ?</p>\n<p>Constraints :</p>\n<p>n &lt;= 10000</p>\n<p>k &lt;= 100</p>\n<p>vector values are from range [0, 10^9]</p>\n<h3>Input</h3>\n<p>First number contains T (T &lt;= 10), number of test cases. Each test cases consists of following. First line consists of N and K. N lines follows, the i-th containing K integers describing i-th vector.</p>\n<h3>Output</h3>\n<p>Output one number, number of different vectors.</p>\n<pre><strong>Input:</strong></pre>\n<pre>2\n3 4\n22 3 4 22\n1 2 2 3\n22 3 22 4\n5 5\n3 3 3 0 3\n8 4 4 4 0\n1 1 1 1 1\n1 1 8 6 1\n1 3 3 3 5\n</pre>\n<pre><strong>Output:</strong></pre>\n<pre>2</pre>\n<pre>3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1dc01c19-3a01-48ce-ab0e-69b34c6f5b1e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9128"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "divfact-divisors-of-factorial-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "DIVFACT - Divisors of factorial",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DIVFACT - Divisors of factorial</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a number, find the total number of divisors of the factorial of the number.</p>\n<p>Since the answer can be very large, print answer&nbsp;<strong>modulo&nbsp;</strong>10<sup>9</sup>+7.</p>\n<h3>Input</h3>\n<p>The first line contains T, number of testcases.</p>\n<p>T lines follows each containing the number N.</p>\n<h3>Output</h3>\n<p>Print T lines of output each containing the answer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n2\n3\n4\n\n<strong>Output:</strong>\n2\n4\n8\n</pre>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 500</p>\n<p>0 &lt;= N &lt;= 50000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b7a48089-f289-4fb9-9d5b-f24b90fc084d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9129"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "divfibs-divisible-fibonacci-numbers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DIVFIBS - Divisible Fibonacci Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DIVFIBS - Divisible Fibonacci Numbers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In mathematics, the&nbsp;Fibonacci sequence is calculated by adding the previous two members of the sequence. The first few fibonacci numbers are</p>\n<p>1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...</p>\n<p>Considering the indices start from 1 the 6<sup>th</sup>&nbsp;fibonacci number in this sequence is 8 and is divisible by 1, 2, 4 and 8. You are given two indices L and R (L&lt;=R) of this sequence and you have to calculate how many fibonacci numbers are divisible by M in range [L, R] inclusive.</p>\n<h3>Input</h3>\n<p>Input begins with a line containing a single integer<strong>&nbsp;T(1&lt;=T&lt;=500)</strong>, denoting the number of test cases.&nbsp;<strong>T</strong>&nbsp;test cases follow. Each test case begins with a line containing three integers&nbsp;<strong>L R (1&lt;=L&lt;=R&lt;=100000)</strong>&nbsp;and&nbsp;<strong>M (1&lt;=M&lt;=10<sup>18</sup>)</strong>.&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, output a single line containing the answer as an integer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n6 6 4\n4 18 5\n1 10 3\n</pre>\n<pre><strong>Output:</strong>\n1\n3\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7fe89ec9-4a57-4b7f-8827-670622585228",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "divseq-divseq",
  "tags": [],
  "level": "BEGINNER",
  "title": "DIVSEQ - DIVSEQ",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DIVSEQ - DIVSEQ</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You're given two numbers - N and K &nbsp;(0 &lt; N, K &lt;= 1000). You have to count the number of sequances of&nbsp;<strong>positive integers</strong>&nbsp;with length N where every element must be not greater than K and for every two consecutive elements with indeces i and i + 1 one of the conditions bellow must be true:</p>\n<ol>\n<li>a[i] is divisible by a[i + 1]</li>\n<li>a[i + 1] is divisible by a[i]</li>\n</ol>\n<h3>Input</h3>\n<p>On the only line you will be given the values of N and K.</p>\n<h3>Output</h3>\n<p>Print the number of the sequences described above modulо 1000000009.</p>\n<p>Example</p>\n<pre><strong>Input:<br /></strong>2 4\n\n<strong>Output:</strong>\n12</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f7656440-7965-4982-a732-529ca815e7aa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dol-largest-odd-divisor",
  "tags": [],
  "level": "BEGINNER",
  "title": "DOL - Largest Odd Divisor",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DOL - Largest Odd Divisor</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a non-negative integers&nbsp;<strong>N</strong>. You have to find the largest odd divisor of&nbsp;<strong>N</strong>.</p>\n<p><strong>Input</strong></p>\n<p>Input starts with an integer&nbsp;<strong>T (1&lt;=T&lt;=5000)</strong>&nbsp;denoting the number of test cases. Each test case contains an integer&nbsp;<strong>N (1&lt;=N&lt;=10<sup>12</sup>)</strong>.</p>\n<p><strong>Output</strong></p>\n<p>For each test case print the case number and the largest odd divisor of&nbsp;<strong>N</strong>.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p><strong>Sample Input</strong></p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p><strong>Output for Sample Input</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p>2<br />2<br />10</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p>Case 1: 1<br />Case 2: 5</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e675577-b600-4eee-9496-e500f795f7ff",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dpair-counting-d-pairs",
  "tags": [],
  "level": "BEGINNER",
  "title": "DPAIR - Counting d-pairs",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DPAIR - Counting d-pairs</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You're given a sequence A of N non-negative integers. Answer Q queries, where each query consists of two integers: a, b. The answer is number of pairs of integers i and j that satisfy these three conditions:<br /><br />(1) 1 &lt;= i &lt;= j &lt;= N</p>\n<p>(2) a &lt;= j-i+1 &lt;= b</p>\n<p>(3) all elements of A with indices from range [i, j] are mutually distinct. (indexing starts with 1)</p>\n<p><strong>Constraints</strong>&nbsp;:<br /><br />1 &lt;= N &lt;= 8*10^5<br />1 &lt;= Q &lt;= 2*10^5<br />0 &lt;= A[k] &lt;= 10^6, for every integer k between 1 and N, inclusive<br /><br />1 &lt;= a &lt;= b &lt;= N</p>\n<h3>Input</h3>\n<p>First line of input contains integer N. Second line contains N integers representing sequence A. Third line is integer Q, number of queries. Next Q lines have 2 integers, a and b.</p>\n<h3>Output</h3>\n<p>In the i-th line output the answer for i-th query.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />5<br />1 2 3 4 5<br />1<br />1 1<br /><br /><strong>Output:</strong><br /><br />5<br /><br /><strong>NOTE: IO is huge</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7be4c8e0-e387-417a-bf01-5c09461bca66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dracula-dracula",
  "tags": [],
  "level": "BEGINNER",
  "title": "DRACULA - Dracula",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DRACULA - Dracula</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In Transylvania, 1753, Dracula has returned from his long sleep, now, of course, all the citizens of Transylvania want to escape from the city. The only way out of the island is famous boat Hellman, and Petr is the ticket seller.</p>\n<p>All tickets available are numbered from&nbsp;<strong>A</strong>&nbsp;to&nbsp;<strong>B</strong>, inclusive, with 0 &lt;&nbsp;<strong>A</strong>,&nbsp;<strong>B</strong>&nbsp;&lt; 10<sup>18</sup>.<br />The cost of a ticket is the sum of the digits of it's numbers in gold coins, so, for an example the ticket 14 costs coins 5 (1+4).</p>\n<p>Van Helsing has&nbsp;<strong>X</strong>&nbsp;gold coins, but he does not know which tickets to buy, or how many tickets he can buy at most. Since you are the mathematician of the city, you were charged with solving this problem.</p>\n<h3>Input</h3>\n<p>The input contains an integer&nbsp;<strong>T</strong>, number of test cases. Each test case contains three integers 0 &lt;&nbsp;<strong>A</strong>,&nbsp;<strong>B</strong>,&nbsp;<strong>X</strong>&nbsp;&lt; 1018 as described in the statement.</p>\n<h3>Output</h3>\n<p>For each test case print one line containing an integer, the number of tickets to Van Helsing<br />can buy at most.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1<br />2 5 5\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/26082137-ec94-4f5d-9729-042674427631",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "drawit-can-you-draw-it-or-not-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "DRAWIT - Can you draw it or not?",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DRAWIT - Can you draw it or not?</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a graph, you have to find if the graph can be drawn without taking the hands away. Assume that you are going to draw the given graph on a paper and you have to find whether you can draw it at a single stroke, i.e, without taking the hands away. And also, you are allowed to draw the graph only once. That is, you can't draw a single edge more than once. The given graph will have N nodes, numbered from 1 to N.</p>\n<p>Consider the following graphs. For input clarity of the graphs, refer to the sample input</p>\n<p><img src=\"https://www.dropbox.com/s/5smf3qpepzn3juw/pic1.png?dl=0\" alt=\"Graph 1\" /></p>\n<p><img src=\"https://www.dropbox.com/s/ys2gmdmatq83l4s/Shp6.jpg?dl=0\" alt=\"Graph 2\" /></p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line has the number of test cases, T.</p>\n<p>Then for each test case, the first line has the integer N, the number of nodes.</p>\n<p>The second line has the integer K.</p>\n<p>Then K lines follow that, each line having three integers S, D, M denoting that there are M edges between the two nodes S and D.</p>\n<p><strong>Constraints</strong></p>\n<p>1 &lt;= T &lt;= 50</p>\n<p>1 &lt;= N &lt;= 100</p>\n<p>1 &lt;= K &lt;= (N * ( N &ndash; 1) ) / 2</p>\n<p>1 &lt;= S, D &lt;= N</p>\n<p>1 &lt;= M &lt;= 100</p>\n<h3>Output</h3>\n<div>\n<div>\n<div>\n<p>For each test case, if the graph can be drawn so, print \"YES\" followed by a single space and the node from which you have to start drawing. If there are more than one node from where it's right to start drawing, print the node with the least value.</p>\n<p>If the graph can't be drawn so, just print \"NO\".</p>\n</div>\n</div>\n</div>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>2\n\n4\n\n6\n\n1 2 2\n\n1 3 1\n\n1 4 2\n\n2 3 2\n\n2 4 1\n\n3 4 2\n\n5\n\n10\n\n1 2 1\n\n1 3 1\n\n1 4 1\n\n1 5 1\n\n2 3 1 \n\n2 4 1\n\n2 5 1\n\n3 4 1\n\n3 5 1\n\n4 5 1</pre>\n<pre><strong>Output:</strong></pre>\n<pre>NO\nYES 1</pre>\n<p><strong>Note:</strong></p>\n<p>1) If there are more than one edge between two nodes, assume that those edges are of different forms. See the above picture for more clarity.</p>\n<p>2) If there are M edges from S to D, then there are also M edges from D to S.</p>\n<p>3) If you can't view the images, go to&nbsp;</p>\n<p>IMG 1: https://www.dropbox.com/s/5smf3qpepzn3juw/pic1.png?dl=0&nbsp;</p>\n<p>IMG 2 : https://www.dropbox.com/s/ys2gmdmatq83l4s/Shp6.jpg?dl=0</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e38f83ba-b8d9-491c-8810-e32f4b20c974",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef912f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "druideoi-fata7y-ya-warda",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DRUIDEOI - Fata7y Ya Warda!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DRUIDEOI - Fata7y Ya Warda!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Druid (AKA Amr Alaa El-Deen) and little EOIers have finished their training and they are playing \"Fatta7y ya warda!\". It's a kids game when everyone holds hands with two other kids forming a circle, and they keep saying \"Fatta7y ya warda!\" (Flourish, flower!) (moving away from each other, while still holding hands, to form a huge circle), then \"2affely ya warda!\" (Die, flower!) (moving back as close to each other as possible, while still holding hands, to form a tiny circle, i.e. a point). That's it!</p>\n<p>Anyway the point is...</p>\n<p>While Eagle (AKA Mohamed Ahmed) was watching them playing he was wondering, who's the first person taller than Druid on his left? Similarly, who's the first person taller than Druid on his right? Help Eagle find the answer for each person not just Druid.</p>\n<h3>Input</h3>\n<p>The input starts with an integer&nbsp;<em>T&nbsp;</em>(1&nbsp;&le;&nbsp;<em>T</em>&nbsp;&le;&nbsp;20), the number of test cases.</p>\n<p>Each test case contains two lines. The first line contains a single integer&nbsp;<em>N</em>&nbsp;(1&thinsp;&le;&thinsp;<em>N</em>&thinsp;&le;&thinsp;10<sup>5</sup>), the number of persons playing the game. The second line contains&nbsp;<em>N</em>&nbsp;integers&nbsp;<em>h</em><sub><em>i</em></sub>&nbsp;(1&thinsp;&le;&thinsp;<em>h</em><sub><em>i</em></sub>&thinsp;&le;&thinsp;10<sup>9</sup>) the height of the&nbsp;<em>i</em>-th person. They are numbered&nbsp;1&nbsp;to&nbsp;<em>N</em>&nbsp;starting from Druid.</p>\n<h3>Output</h3>\n<p>For each test case print&nbsp;<em>N</em>&nbsp;lines, in the&nbsp;<em>i</em>-th line print 2 numbers, the index of the first person taller than the&nbsp;<em>i</em>-th person on his left, and the index of the first person taller than the&nbsp;<em>i</em>-th person on his right. If no one is taller than the&nbsp;<em>i</em>-th person print -1 -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /></strong>3\n5<br />172 170 168 171 169<br />3<br />172 169 172<strong>&nbsp;<br /></strong>1<br />172</pre>\n<pre><strong>Output:</strong>\n-1 -1<br />1 4<br />2 4<br />1 1<br />4 1<br />-1 -1<br />1 3<br />-1 -1<br />-1 -1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f6de9b68-8f0a-46f3-9226-08a1493e2dd7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9130"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dsubseq-distinct-subsequences",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DSUBSEQ - Distinct Subsequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DSUBSEQ - Distinct Subsequences</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a string, count the number of distinct subsequences of it ( including empty subsequence ). For the uninformed, A subsequence of a string is a new string which is formed from the original string by deleting some of the characters without disturbing the relative positions of the remaining characters.<br />For example, \"AGH\" is a subsequence of \"ABCDEFGH\" while \"AHG\" is not.</p>\n<h3>Input</h3>\n<p>First line of input contains an integer T which is equal to the number of test cases. You are required to process all test cases. Each of next T lines contains a string s.</p>\n<h3>Output</h3>\n<p>Output consists of T lines. Ith line in the output corresponds to the number of distinct subsequences of ith input string. Since, this number could be very large, you need to output ans%1000000007 where ans is the number of distinct subsequences.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\nAAA\nABCDEFG\nCODECRAFT\n\n\n<strong>Output:</strong>\n4\n128\n496\n</pre>\n<h3>Constraints and Limits</h3>\n<p>T &le; 100, length(S) &le; 100000<br />All input strings shall contain only uppercase letters.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7d671bdf-702a-4713-9b53-81b5dbe31b5d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9131"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dwarflog-manipulate-dwarfs",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DWARFLOG - Manipulate Dwarfs",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">DWARFLOG - Manipulate Dwarfs</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In a small village beyond seven hills and seven seas, Snow White lives together with N dwarves who spend all their time eating and playing League of Legends. Snow White wants to put an end to this, so she has organized gym classes for them.</p>\n<p>At the beginning of each class, the dwarves must stand in line, ordered by their height. For the purposes of this task, assume that the dwarves have heights 1, 2, ..., N (each exactly once) and initially all are standing in sorted order with height from 1 to N. Now Snow White play on them by issuing commands of the form:</p>\n<p>&bull; 1 X Y -- dwarves with height X and Y in the line must switch places. She also checks their ordering by issuing queries of the form:<br />&bull; 2 A B -- do dwarves with heights A, A+1, ..., B (not necessarily in that order) occupy a contiguous subsequence of the current line? Help the doofus dwarves follow Snow White's instructions and respond to her queries.</p>\n<p><strong>INPUT</strong><br />The first line of input contains the two positive integers N and M, the number of dwarves and the number of Snow White's requests, respectively (2 &le; N &le; 200 000, 2 &le; M &le; 200 000). Each of the following M lines contains a single Snow White's request, of the form \"1 X Y\" (1 &le; X, Y &le; N, X &ne; Y) or &ldquo;2 A B&rdquo; (1 &le; A &le; B &le; N), as described in the problem statement.</p>\n<p><br /><strong>OUTPUT</strong><br />The output must contain one line for each request of type 2, containing the reply to the query, either &ldquo;YES&rdquo; or &ldquo;NO&rdquo;.</p>\n<p>&nbsp;</p>\n<p><strong>Example</strong>:</p>\n<p><strong>Input</strong>&nbsp;:</p>\n<p>4 5<br />2 2 3<br />2 2 4<br />1 1 3<br />2 3 4<br />1 4 3</p>\n<p><strong>Output</strong>&nbsp;:</p>\n<p>YES</p>\n<p>YES</p>\n<p>NO</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2f099e7f-d8f3-4a95-a61c-c40b637acbb5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9132"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ec_conb-even-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "EC_CONB - Even Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">EC_CONB - Even Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Marina is a college girl who likes to play with all kinds of numbers. One day she was very bored and decided to play around with even numbers.</div>\n<div id=\"_mcePaste\">She notes N numbers on the board(odd and even numbers) and then, she modifies only even numbers (for some reason she likes the odd numbers) and inverts its binary representation and replaces each even number. But soon she gets bored and ask &nbsp;you help in order to automate the conversion process.</div>\n<p>Marina is a college girl who likes to play with all kinds of numbers. One day she was very bored and decided to play around with even numbers.</p>\n<p>She writes N numbers on the board (odd and even numbers) and then, she modifies only even numbers (for some reason she likes the odd numbers) and reversed its binary representation (from the left to the right ) and replaces each even number. But soon she gets bored and ask &nbsp;you help in order to automate the conversion process.</p>\n<h3>Input</h3>\n<p>In the first line contains the value of N. This integer is followed by N lines, every one with a positive integer a<sub>i&nbsp;</sub>(1 &lt;= a<sub>i&nbsp;</sub>&lt;= 10^7).</p>\n<h3>Output</h3>\n<p>The output will contain N lines, the numbers that are on the blackboard after the conversion process.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n10\n8\n3\n5\n2\n\n<strong>Output:</strong>\n5\n1\n3\n5\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cd47ad2c-9b63-499b-993f-bdb5425d058c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9133"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ec_esta-statistics-applied",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "EC_ESTA - Statistics Applied",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">EC_ESTA - Statistics Applied</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In this problem we will be looking for medians of data set. Median is the central element in ordered data group. For example: for the set {2,6,3,3,2} the median would be 3. In general, if we have n elements {a1, a2, a3 ... an},&nbsp;we define the&nbsp;median&nbsp;as element a<sub>(n+1)/2</sub>&nbsp;if n is odd and (a<sub>n/2</sub>+a<sub>n/2+1</sub>)/2 otherwise.</p>\n<p>You will be given N numbers and you must calculate N medians. i-th median is taken on the subset [a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, .., a<sub>i</sub>] for 1 &lt;= i &lt;= N.</p>\n<h3>Input</h3>\n<p>The first line contains the number of test cases. Each case consists of an integer N (1 &lt;= N &lt;= 100000). N integers&nbsp;a<sub>i</sub>&nbsp;(0 &lt;= a<sub>i</sub>&nbsp;&lt;2<sup>31</sup>) follow, elements in data set.</p>\n<h3>Output</h3>\n<p>For each case, print N lines with the medians. If the result is non-integral, print the exact value using decimal point (see example).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n3 5 7 3\n2\n3 4</pre>\n<pre><strong>Output:</strong>\n3\n4\n5\n4\n3\n3.5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c327d29-6047-4a9c-9b54-67191d698aa0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9134"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "eiuassembly-assembly-line",
  "tags": [],
  "level": "BEGINNER",
  "title": "EIUASSEMBLY - Assembly line",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">EIUASSEMBLY - Assembly line</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The Alternate Control Machine (ACM) Factory has a large assembly line to make a type of product. The assembly has N robots (R<sub>1</sub>, R<sub>2</sub>...R<sub>N</sub>) working sequentially. That means a semi-finished product moves from robot R<sub>1</sub>, to R<sub>2</sub>, then to R<sub>3</sub>... to R<sub>N</sub>. Each robot adds a component to the product. Each robot can complete its own job in P<sub>i</sub>&nbsp;products per one hour.</p>\n<p>The company has a budget of M VNĐ to improve productivity for the entire assembly. As a product director, you know that robot R<sub>i</sub>&nbsp;needs to invest M<sub>i</sub>&nbsp;VNĐ to contribute to the production of one more product per hour. You have to optimize the amount of money to invest to each robot to produce maximum number of products per hour.</p>\n<h3>Input</h3>\n<p>The first line of input contains one integer T (1&le;T&le;10) - the number of test cases.</p>\n<div id=\"_mcePaste\">Then T test cases are given as follows:</div>\n<div id=\"_mcePaste\">&bull; The first line of each test case contains an integer N (1&le;n&le;105) and an integer M (0&le;M&le;1012) &ndash; the number of robots and the budget</div>\n<div id=\"_mcePaste\">&bull; Line i-th of the next N lines contains two integers Pi (1&le;P&le;109) and Mi (1&le;Mi&le;109) &ndash; information of the robot i-th</div>\n<p>Then T test cases are given as follows:</p>\n<ul>\n<li>The first line of each test case contains an integer N (1&le;n&le;10<sup>5</sup>) and an integer M (0&le;M&le;10<sup>12</sup>) &ndash; the number of robots and the budget</li>\n<li>Line i-th of the next N lines contains two integers P<sub>i&nbsp;</sub>(1&le;P<sub>i</sub>&le;10<sup>9</sup>) and M<sub>i</sub>&nbsp;(1&le;M<sub>i</sub>&le;10<sup>9</sup>) &ndash; information of the robot i-th</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, output in one line the maximum number of products the assembly can make after investing at most M VNĐ.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n3 7\n1 2\n2 3\n3 1\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cbc5d26d-ea66-4f5b-8d9a-25edf876da4d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9135"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "eko-eko",
  "tags": [],
  "level": "BEGINNER",
  "title": "EKO - Eko",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">EKO - Eko</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Lumberjack Mirko needs to chop down&nbsp;<strong>M</strong>&nbsp;metres of wood. It is an easy job for him since he has a nifty&nbsp;new woodcutting machine that can take down forests like wildfire. However, Mirko is only allowed to&nbsp;cut a single row of trees.</p>\n<p>Mirko‟s machine works as follows: Mirko sets a height parameter&nbsp;<strong>H</strong>&nbsp;(in metres), and the machine raises&nbsp;a giant sawblade to that height and cuts off all tree parts higher than&nbsp;<strong>H</strong>&nbsp;(of course, trees not higher than&nbsp;<strong>H</strong>&nbsp;meters remain intact). Mirko then takes the parts that were cut off. For example, if the tree row&nbsp;contains trees with heights of 20, 15, 10, and 17 metres, and Mirko raises his sawblade to 15 metres, the&nbsp;remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Mirko will take&nbsp;5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total).</p>\n<p>Mirko is&nbsp;<strong>ecologically</strong>&nbsp;minded, so he doesn‟t want to cut off more wood than necessary. That‟s why he&nbsp;wants to set his sawblade as high as possible. Help Mirko find the&nbsp;<strong>maximum integer height</strong>&nbsp;of the&nbsp;sawblade that still allows him to cut off&nbsp;<strong>at least M</strong>&nbsp;metres of wood.</p>\n<h3>Input</h3>\n<p>The first line of input contains two space-separated positive integers,&nbsp;<strong>N</strong>&nbsp;(the number of trees, 1 &le;&nbsp;<strong>N</strong>&nbsp;&le;&nbsp;1 000 000) and&nbsp;<strong>M</strong>&nbsp;(Mirko‟s required wood amount, 1 &le;&nbsp;<strong>M</strong>&nbsp;&le; 2 000 000 000).</p>\n<p>The second line of input contains&nbsp;<strong>N</strong>&nbsp;space-separated positive integers less than 1 000 000 000, the&nbsp;heights of each tree (in metres). The sum of all heights will exceed&nbsp;<strong>M</strong>, thus Mirko will always be able to&nbsp;obtain the required amount of wood.</p>\n<h3>Output</h3>\n<p>The first and only line of output must contain the required height setting.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4 7\n20 15 10 17\n\n<strong>Output:</strong>\n15</pre>\n<pre><strong>Input:</strong>\n5 20\n4 42 40 26 46\n\n<strong>Output:</strong>\n36</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f0f7be06-6557-4d3b-9d35-f5f5b7502906",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9136"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 0,
  "scores": 10,
  "slug": "etfd-euler-totient-function-depth",
  "tags": [],
  "level": "BEGINNER",
  "title": "ETFD - Euler Totient Function Depth",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ETFD - Euler Totient Function Depth</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Lucky is fond of Number theory, one day he was solving a problem related to Euler Totient Function (phi) and found an interesting property of phi : phi(1) = 1, and for x &gt; 1: phi(x) &lt; x.<br />So if we define a sequence with a<sub>0</sub>&nbsp;= x, and for n &gt; 0: a<sub>n</sub>&nbsp;= phi(a<sub>n-1</sub>), this sequence will be constant equal to 1 starting from some point. Lets define depth(x) as minimal n such that a<sub>n</sub>&nbsp;= 1.&nbsp;<br />Now he is wondering how many numbers in a given range have depth equal to given number&nbsp;<strong>k</strong>. As you are a good programmer help Lucky with his task.</p>\n<h3>Input</h3>\n<p>Your input will consist of a single integer&nbsp;<strong>T</strong>&nbsp;&nbsp;followed by a newline and&nbsp;<strong>T</strong>&nbsp;test cases.<br />Each test cases consists of a single line containing integers&nbsp;<strong>m</strong>,&nbsp;<strong>n</strong>, and&nbsp;<strong>k</strong>.</p>\n<h3>Output</h3>\n<p>Output for each test case one line containing the count of all numbers whose depth equals to&nbsp;<strong>k</strong>&nbsp;in given range [<strong>m</strong>,&nbsp;<strong>n</strong>].</p>\n<h3>Constraints</h3>\n<pre>T &lt; 10001\n1 &le; m &le; n &le; 10^6\n0 &le; k &lt; 20\n</pre>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1 3 1\n1 10 2\n1 10 3\n1 100 3\n1 1000000 17\n\n<strong>Output:</strong>\n1\n3\n5\n8\n287876</pre>\n<p>Explanation ::suppose number is 5 ; its depth will be 3. ( 5 -&gt; 4 -&gt; 2 -&gt; 1 )</p>\n<p>Note ::Depth for 1 is 0.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/322eb4ff-0cfa-4fb3-8a12-14310b28b4c1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9137"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "factcg2-medium-factorization",
  "tags": [],
  "level": "BEGINNER",
  "title": "FACTCG2 - Medium Factorization",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FACTCG2 - Medium Factorization</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The task in this problem is to write a number in a multiplication of prime numbers separated by &ldquo; x &rdquo;. You need to put the number 1 in this multiplication.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The input consists of several lines.</p>\n<p>Each line consists of one integer N (1 &lt;= N &lt;= 10^7) .</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each line you need to output the factorization separated by &ldquo; x &rdquo; and including 1.</p>\n<h3>Sample</h3>\n<pre><strong>Input</strong>\n1\n2\n4\n8\n\n<strong>Output</strong>\n1\n1 x 2\n1 x 2 x 2\n1 x 2 x 2 x 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dddbd282-30e9-488b-b2db-340b6d9b61ad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9138"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "factmuln-product-of-factorials-easy",
  "tags": [],
  "level": "BEGINNER",
  "title": "FACTMULN - Product of factorials (easy)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FACTMULN - Product of factorials (easy)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>For n positive integer, let&nbsp;<strong><em>F(n) = 1! &times; 2! &times; 3! &times; 4! &times; ... &times; n!</em></strong>, product of factorial(i) for i in [1..n].<br /><br />Let&nbsp;<strong><em>G(n) = {i in [1..n], such that n divides F(i)}</em></strong>.<br /><br />It is obvious that&nbsp;<strong><em>n</em></strong>&nbsp;belongs to&nbsp;<strong><em>G(n)</em></strong>&nbsp;that makes it a non empty set.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer&nbsp;<strong><em>T</em></strong>, the number of test cases.<br />On each of the next&nbsp;<strong><em>T</em></strong>&nbsp;lines, your are given an integer&nbsp;<strong><em>n</em></strong>.</p>\n<h3>Output</h3>\n<p>For each test case, you have to print&nbsp;<strong><em>min(G(n))</em></strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n4\n5\n6\n</pre>\n<pre><strong>Output:</strong>\n3\n5\n3\n</pre>\n<h3>Explanation</h3>\n<p>For test case #1:<br />F(1) = 1! = 1 , not divisible by 4<br />F(2) = 1! &times; 2! = 2 , not divisible by 4<br />F(<strong>3</strong>) = 1! &times; 2! &times; 3! = 12 ,&nbsp;<strong>divisible</strong>&nbsp;by 4<br />F(4) = 1! &times; 2! &times; 3! &times; 4! = 288 , divisible by 4<br />So G(4) = {<strong>3</strong>, 4}.</p>\n<h3>Constraints</h3>\n<pre>0 &lt; T &lt; 10^4\n0 &lt; n &lt; 10^9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e0a976bf-2f97-4ce8-ad5e-ce3751c2b5df",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9139"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "farida-princess-farida",
  "tags": [],
  "level": "BEGINNER",
  "title": "FARIDA - Princess Farida",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FARIDA - Princess Farida</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Once upon time there was a cute princess called Farida living in a castle with her father, mother and uncle. On the way to the castle there lived many monsters. Each one of them had some gold coins. Although they are monsters they will not hurt. Instead they will give you the gold coins, but if and only if you didn't take any coins from the monster directly before the current one. To marry princess Farida you have to pass all the monsters and collect as many coins as possible. Given the number of gold coins each monster has, calculate the maximum number of coins you can collect on your way to the castle.</p>\n<h3>Input</h3>\n<p>The first line of input contains the number of test cases. Each test case starts with a number N, the number of monsters, 0 &lt;= N &lt;= 10^4. The next line will have N numbers, number of coins each monster has, 0 &lt;= The number of coins with each monster &lt;= 10^9. Monsters described in the order they are encountered on the way to the castle.</p>\n<h3>Output</h3>\n<p>For each test case print &ldquo;<tt>Case C: X</tt>&rdquo; without quotes. C is the case number, starting with 1. X is the maximum number of coins you can collect.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n5\n1 2 3 4 5\n1\n10\n\n<strong>Output:</strong>\nCase 1: 9\nCase 2: 10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8af7b7fe-c7fa-4799-8013-47624eb15c79",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fastpow-fast-power",
  "tags": [],
  "level": "BEGINNER",
  "title": "FASTPOW - Fast Power",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FASTPOW - Fast Power</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are asked to compute A^B (A to the power of B) (1 &lt;= A,B &lt;= 100 000 000). You surely understand that this number can be quite astonishing and i don't like big numbers unless they are on my paycheck so I'm just interested in the reminder of A^B mod C (1&lt;= C &lt;= 1000000)</p>\n<h3>Input</h3>\n<p>Three integers A B and C.</p>\n<h3>Output</h3>\n<p>Single integer - the result of the computation.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2 10 1000\n\n<strong>Output:</strong>\n24</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a4b6b824-d2c1-4885-b98f-a15bb2a2917d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fcdc-factorial-modulo",
  "tags": [],
  "level": "BEGINNER",
  "title": "FCDC - Factorial Modulo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FCDC - Factorial Modulo</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given 2 integers a, b. Find the number of i for which i! is divisble by a but not b. if i! is divisible by a and b, then you should not count that i.</p>\n<h3>Input</h3>\n<p>One line that contains a and b.</p>\n<h3>Output</h3>\n<p>Output the result in one line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2 3\n\n<strong>Output:</strong>\n1</pre>\n<h3>Constraints</h3>\n<pre> 1 &le; a &le; b &le; 10<sup>7</sup></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/af8224e0-f444-47cb-b83a-18eae4a67a6a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "fibonomial-fibonacci-polynomial",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FIBONOMIAL - Fibonacci Polynomial",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FIBONOMIAL - Fibonacci Polynomial</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p><strong>Problem description.</strong></p>\n<p>The Fibonacci numbers defined as&nbsp;<strong>f(n) = f(n-1) + f(n-2)</strong>&nbsp;where&nbsp;<strong>f0 = 0&nbsp;</strong>and&nbsp;<strong>f1 = 1</strong>.&nbsp;</p>\n<p><br />We define a function as follows&nbsp;<strong>D(n,x) = x + x^2 + 2x^3 + 3x^4 + 5x^5 + 8x^6 +...+f(n)x^n</strong><br /><br />Given two integers n and x, you need to compute&nbsp;<strong>D(n,x)&nbsp;</strong>since the output can be very large output the result modulo&nbsp;<strong>1000000007 (1e9+7)&nbsp;</strong>.</p>\n<h3>Input</h3>\n<p>Input description.</p>\n<ul>\n<li>The first line of the input contains an integer&nbsp;<strong>T</strong>&nbsp;denoting the number of test cases.<br />The description of&nbsp;<strong>T</strong>&nbsp;test cases follows.</li>\n<li>The first line of each test case contains two integers&nbsp;<strong>n&nbsp;</strong>and&nbsp;<strong>x</strong>&nbsp;as described above.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>Output description.</p>\n<ul>\n<li>For each test case, output&nbsp;<strong>D(n,x)%1000000007&nbsp;</strong>in a seperate line.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Constraints</h3>\n<p>Should contain all the constraints on the input data that you may have. Format it like:</p>\n<ul>\n<li><strong>1</strong>&nbsp;&le;&nbsp;<strong>T</strong>&nbsp;&le;&nbsp;<strong>1000</strong></li>\n<li><strong>0</strong>&nbsp;&le;&nbsp;<strong>n</strong>&nbsp;&le;&nbsp;<strong>10^15</strong></li>\n<li><strong>0</strong>&nbsp;&le;&nbsp;<strong>x</strong>&nbsp;&le;&nbsp;<strong>10^15</strong></li>\n</ul>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1 \n7 11\n\n<strong>Output:</strong>\n268357683\n</pre>\n<p>&nbsp;</p>\n<h3>Explanation</h3>\n<p><strong>D(7,11) = 11 + 11^2 + 2(11^3) + 3(11^4) + 5(11^5) + 8(11^6) + 13(11^7) = 268357683</strong></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0111f70a-2c5e-4004-969e-2c0e7b01b911",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fibtwist-fibonacci-with-a-twist",
  "tags": [],
  "level": "BEGINNER",
  "title": "FIBTWIST - Fibonacci With a Twist",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FIBTWIST - Fibonacci With a Twist</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Fibonacci numbers are given by&nbsp;</p>\n<ul>\n<li>f(n) = f(n-1) + f(n-2)</li>\n</ul>\n<p>with f(0) = 0 &amp; f(1) = 1.</p>\n<p>first number of series ------ 0 &nbsp;1 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;5 &nbsp;8 &nbsp;13&nbsp;</p>\n<p>Now let's have a new series called \"Fibonacci Twist\" which is given by&nbsp;</p>\n<ul>\n<li>ft(n) = ft(n-1) + ft(n-2) + (n-1)</li>\n</ul>\n<p>with ft(0) = 0 &amp; ft(1) = 1.</p>\n<p>with first few number in the series ----- 0 &nbsp;1 &nbsp;2 &nbsp;5 &nbsp;10 &nbsp;19 &nbsp;34 &nbsp;59&nbsp;</p>\n<p>&nbsp;</p>\n<p>Now your task is to find ft(n).</p>\n<p>Since the number can be Big you have to find the result mod M.</p>\n<h3>Input</h3>\n<p>first line having single number 't' -- number of test cases.</p>\n<p>next t lines have 2 number each 'n' and 'M'</p>\n<h3>Output</h3>\n<p>Single number given the n-th term mod M</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n5 20\n10 77\n15 111\n\n<strong>Output:</strong>\n19\n45\n69</pre>\n<h3>Constraints</h3>\n<ul>\n<li>10 &lt;= t &lt;= 100</li>\n<li>0 &lt;= n &lt;= 10^9</li>\n<li>100 &lt;= M &lt;= 10^9</li>\n</ul>\n<h3>Explanation</h3>\n<ol>\n<li>ft(5) is 19. 19 % 20 = 19</li>\n<li>ft(10) is 276. 276 % 77 = 45</li>\n<li>ft(15) is 3177. 3177 % 111 = 69</li>\n</ol>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4780b80d-263e-4b2f-9e00-335f1cf38c2d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "flib-flibonakki",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FLIB - Flibonakki",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FLIB - Flibonakki</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>G(n) is defined as</p>\n<p>G(n) = G(n-1) + f(4n-1) , for n &gt; 0</p>\n<p>and G(0) = 0</p>\n<p>f(i) is ith Fibonacci number. Given n you need to evaluate G(n) modulo 1000000007.</p>\n<h3>Input</h3>\n<p>First line contains number of test cases t (t&lt;40000). Each of the next t lines contain an integer n ( 0 &lt;= n &lt; 2^51).</p>\n<h3>Output</h3>\n<p>For each test case print G(n) modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n4</pre>\n<pre><strong>Output:</strong>\n15\n714</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bf003b0c-c4e0-4491-9e16-956f30add76e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef913f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "foodies-chickenlove",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FOODIES - ChickenLove",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FOODIES - ChickenLove</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A new grand chicken stall is about to open in Chennai. Buddy and Pre being close friends joined hands and planned to go for it.People have to serve themselves here in this stall.<br /><br />There are N-counters available and each counter has a specified number of chicken nuggets. &nbsp;<br />The cost of each nugget being bought at any counter is same as the number of nuggets that are still remaining at the counter at that point of time( Inclusive of the nugget being bought ).<br /><br />Pre wants to have M nuggets. As usual Buddy accepts to sponsor Pre with all his pocket money. He is so innocent that he obeys each and every order of Pre with no second thought. Pre being cunning wants Buddy to spend her too much money. So she directs buddy to buy nuggets at the counters which she says, so that he spends maximum money for her.<br /><br />Ofcourse you can't help Buddy :( But try to find him how much he would spend for Pre, if he obeys her like an IDIOT.</p>\n<h3>Input</h3>\n<p>The first line of the input contains the number of test cases,T<br />T test cases follow:<br />The first line of each test case contains an integer N, denoting the number of counters.<br />The next line consists of N integers: A1,A2,....,An denoting the number of nuggets available at each counter.<br />The next line consists of a single integer M,number of nuggets Pre wishes to have.</p>\n<h3>Output</h3>\n<p>For each test case output a single integer in a single line denoting the money that buddy would spend.</p>\n<p>&nbsp;</p>\n<p>Constraints:</p>\n<p>1&lt;=T&lt;=10</p>\n<p>1&lt;=N&lt;=100000</p>\n<p>1&lt;=A1,A2,..An&lt;=100000</p>\n<p>1&lt;=M&lt;=A1+A2+A3....+An</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1<br />3<br />3 5 4<br />3\n\n<strong>Output:</strong>\n13<br /><br /><br />Explanation:<br /><br />Pre would ask buddy to get two nuggets from the second counter(5+4=9), and then one from the third counter(9+4=13) </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/47a017fb-ee62-467f-8cf1-36ca0a611b08",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9140"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "freq2-most-frequent-value",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FREQ2 - Most Frequent Value",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FREQ2 - Most Frequent Value</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a sequence of&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>n-1</sub></strong>. You are also given several queries consisting of indices&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;(<em>0 &le; i &le; j &le; n-1</em>). For each query, determine the number of occurrences of the most frequent value among the integers&nbsp;<strong>a<sub>i</sub>, ..., a<sub>j</sub></strong>.</p>\n<h3>Input</h3>\n<p>First line contains two integers&nbsp;<strong>n</strong>&nbsp;and&nbsp;<strong>q</strong>&nbsp;(<em>1 &le; n, q &le; 100000</em>). The next line contains&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>a<sub>0</sub>, ... ,a<sub>n-1</sub></strong>&nbsp;(<em>0 &le; a<sub>i</sub>&nbsp;&le; 100000</em>, for each&nbsp;<em>i &isin; {0, ..., n-1}</em>) separated by spaces. The following&nbsp;<strong>q</strong>&nbsp;lines contain one query each, consisting of two integers&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;(<em>0 &le; i &le; j &le; n-1</em>), which indicates the boundary indices for the query.</p>\n<h3>Output</h3>\n<p>For each query, print one line with one integer: The number of occurrences of the most frequent value within the given range.</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /><br /></strong>5 3<br />1 2 1 3 3<br />0 2<br />1 2<br />0 4\n\n<strong>Output:</strong>\n<br />2<br />1<br />2<br /><br />NOTE - This problem is similar to a problem Frequent values.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3fb0a37c-2ae8-4dd1-bbf0-9cd4463729fd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9141"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "frequent-frequent-values",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FREQUENT - Frequent values",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FREQUENT - Frequent values</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a sequence of&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>a<sub>1</sub>&nbsp;, a<sub>2</sub>&nbsp;, ... , a<sub>n</sub></strong>&nbsp;in non-decreasing order. In addition to that, you are given several queries consisting of indices&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;(<em>1 &le; i &le; j &le; n</em>). For each query, determine the most frequent value among the integers&nbsp;<strong>a<sub>i</sub>&nbsp;, ... , a<sub>j</sub></strong>.</p>\n<h4>Input Specification</h4>\n<p>The input consists of several test cases. Each test case starts with a line containing two integers&nbsp;<strong>n</strong>&nbsp;and&nbsp;<strong>q</strong>&nbsp;(<em>1 &le; n, q &le; 100000</em>). The next line contains&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>a<sub>1</sub>&nbsp;, ... , a<sub>n</sub></strong>&nbsp;(<em>-100000 &le; a<sub>i</sub>&nbsp;&le; 100000</em>, for each&nbsp;<em>i &isin; {1, ..., n}</em>) separated by spaces. You can assume that for each&nbsp;<em>i &isin; {1, ..., n-1}: a<sub>i</sub>&nbsp;&le; a<sub>i+1</sub></em>. The following&nbsp;<strong>q</strong>&nbsp;lines contain one query each, consisting of two integers&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;(<em>1 &le; i &le; j &le; n</em>), which indicate the boundary indices for the query.</p>\n<p>The last test case is followed by a line containing a single&nbsp;<em>0</em>.</p>\n<h4>Output Specification</h4>\n<p>For each query, print one line with one integer: The number of occurrences of the most frequent value within the given range.</p>\n<h4>Sample Input</h4>\n<pre>10 3\n-1 -1 1 1 1 1 3 10 10 10\n2 3\n1 10\n5 10\n0\n</pre>\n<h4>Sample Output</h4>\n<pre>1\n4\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/feb0dffe-0f48-4045-a422-02faf53aa368",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9142"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "frndznd-friend-zoned",
  "tags": [],
  "level": "BEGINNER",
  "title": "FRNDZND - Friend Zoned",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FRNDZND - Friend Zoned</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<div>\n<p>Pavel proposed a girl. Of course, she didn&rsquo;t say yes, rather she gave him an array having N integers and asked him M queries over the array. Each query can be represented as two integers L &amp; R.</p>\n<p>For each query, Pavel should do the following:</p>\n<ol>\n<li>\n<p>First, he has to insert the numbers at index L, L+1, L+2,&hellip;&hellip;,R of the given array into a multi-set. Multi-set is a set where an element can appear multiple times. Suppose that the size of this multi-set after inserting the numbers is k. Formally, k is equal to R-L+1.</p>\n</li>\n<li>\n<p>Then he has to generate all possible subset of the multi-set which he constructed in step 1. Then for each subset he needs to xor the numbers of that subset. In this way, he will get 2^k values. Note that, for the empty set he will get 0.</p>\n</li>\n<li>\n<p>Finally, he has to xor the 2^k values which he got at step 2 and say this value to his dream girl.</p>\n</li>\n</ol>\n<p>If Pavel can answer all the queries correctly then she will reconsider his proposal. Can you help him to answer the queries?</p>\n</div>\n<h3>Input</h3>\n<p>The first line of input contains two integers N and Q. The next line contains N integers, the numbers in the array. Then each of the following Q lines contains 2 integers L &amp; R.</p>\n<h3>Output</h3>\n<p>For each query output an integer in a separate line, the answer for that query. Queries should be answered in the order given in the input.</p>\n<h3>Constraints</h3>\n<pre>1 &le;&nbsp;N &le;&nbsp;100000<br />1 &le;&nbsp;Q &le;&nbsp;100000<br />0 &le;&nbsp;Value of a number in the array &le;&nbsp;1000000000<br />1 &le;&nbsp;L &le;&nbsp;N<br />1 &le;&nbsp;R &le;&nbsp;N<br />L &le;&nbsp;R</pre>\n<h3>Example</h3>\n<pre><strong>Input:<br /></strong>4 2<br />1 3 3 3<br />1 1<br />2 4</pre>\n<pre><strong>Output</strong>:<br />1<br />0</pre>\n<pre>Explanation:<br /> In the first query, there will be only 1 element in the multi-set: {1}. There are 2 possible subset of this multi-set. They are: { }, {1}. If we xor the numbers of each subset we get 0 &amp; 1 respectively. Xor of theses two values is equal to 1.<br />In the second query, there are 3 elements in the multi-set: {3,3,3}. There are 8 possible subset of this multi-set. They are: { }, {3}, {3}, {3}, {3,3}, {3,3}, {3,3}, {3,3,3}. By applying xor operation on the numbers of each subset we get 0, 3, 3, 3, 0, 0, 0, 3 respectively. Xor of these values is equal to 0.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c43bde42-99d0-4f37-9737-84c9d1d20d40",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9143"
  },
  "memoryLimit": 1,
  "source": 2,
  "timeLimit": 1,
  "scores": 10,
  "slug": "game3-yet-another-fancy-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "GAME3 - Yet Another Fancy Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GAME3 - Yet Another Fancy Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Two girls - Ivica and Marica - play an interesting game.</p>\n<p>First, they randomly choose a natural number N. They also define M = 1.</p>\n<p>Ivica plays first, then Marica, then Ivica, then Marica and so on.</p>\n<p>In each move, a girl has to increase M by 1 or multiply M by 2 (that is, M = M+1 or M = 2*M). The resulting number&nbsp;<strong>must not be greater than N</strong>.</p>\n<p>The&nbsp;<strong>loser</strong>&nbsp;of the game is the girl who gets M = N. The other girl is, of course, the winner.</p>\n<p>Write a program to determine the winner, assuming that both girls play optimally.</p>\n<h3>Input</h3>\n<p>In the first line there is an integer T (1 &le;&nbsp;T &le; 5), the number of games.</p>\n<p>T lines follow. In i<sup>th</sup>&nbsp;line there is an integer N (2 &le; N &le; 10<sup>15)</sup>, a chosen number for i<sup>th</sup>&nbsp;game.</p>\n<h3>Output</h3>\n<p>For each of the T games print the name of the winner.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>4<br />2<br />3<br />4<br />5</pre>\n<pre><strong>Output:</strong><br /><br />Marica<br />Ivica<br />Marica<br />Marica</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ce563980-5068-4a1e-ba78-8ac0797f242a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9144"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gcds-sabbir-and-gcd-problem",
  "tags": [],
  "level": "BEGINNER",
  "title": "GCDS - Sabbir and gcd problem",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GCDS - Sabbir and gcd problem</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sabbir is a little boy. He loves math very much. one day his friend taskin gave him a very hard task. taskin gave him&nbsp;<em><strong>n</strong></em>&nbsp;numbers<em>&nbsp;<strong>a<sub>1&nbsp;</sub>,a<sub>2&nbsp;</sub>,a<sub>3&nbsp;</sub>,......a<sub>n</sub></strong></em><strong>&nbsp;</strong></p>\n<p>taskin asked for a minimum integer number&nbsp;<em><strong>x</strong></em>&nbsp;(<strong>x &gt; 1</strong>) such that&nbsp;<em><strong>gcd(x,a<sub>1</sub>) = 1, gcd(x,a<sub>2</sub>) = 1, ...... gcd(x,a<sub>n</sub>) = 1</strong></em>,</p>\n<p>in other words you have to find a minimum integer&nbsp;<em><strong>x&nbsp;( x &gt; 1 )</strong></em>&nbsp;such that&nbsp;</p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=\\forall&amp;space;i&amp;space;,\\&amp;space;i\\epsilon&amp;space;[1....n]&amp;space;,\\&amp;space;gcd(x,a_{i})&amp;space;=&amp;space;1\" target=\"_blank\" rel=\"noopener\"><strong><img title=\"\\forall i ,\\ i\\epsilon [1....n] ,\\ gcd(x,a_{i}) = 1\" src=\"https://latex.codecogs.com/gif.latex?\\forall&amp;space;i&amp;space;,\\&amp;space;i\\epsilon&amp;space;[1....n]&amp;space;,\\&amp;space;gcd(x,a_{i})&amp;space;=&amp;space;1\" alt=\"\" /></strong></a></p>\n<p><strong>Note:&nbsp;</strong><strong>gcd is&nbsp;greatest common divisor</strong></p>\n<h3>Input</h3>\n<p>In the first line there will be an integer&nbsp;<strong>T ,&nbsp;</strong>denoting the number of test cases,</p>\n<p>each test case is consists of &nbsp;2 lines..&nbsp;</p>\n<p>in the first line there will be&nbsp;<strong>n ,&nbsp;</strong>denoting the number of integers and next line contains&nbsp;<strong>n&nbsp;</strong>space separated<strong>&nbsp;</strong>integers&nbsp;<strong>a<sub>1&nbsp;</sub>,a<sub>2&nbsp;</sub>,a<sub>3&nbsp;</sub>,......a<sub>n.</sub></strong></p>\n<p>&nbsp;</p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;T&amp;space;\\leq&amp;space;10\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq T \\leq 10\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;T&amp;space;\\leq&amp;space;10\" alt=\"\" /></a></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;n&amp;space;\\leq&amp;space;10^{5}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq n \\leq 10^{5}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;n&amp;space;\\leq&amp;space;10^{5}\" alt=\"\" /></a></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;a_{i}&amp;space;\\leq&amp;space;10^{7}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq a_{i} \\leq 10^{7}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;a_{i}&amp;space;\\leq&amp;space;10^{7}\" alt=\"\" /></a></p>\n<h3>Output</h3>\n<p>for every case print one integer&nbsp;<strong>x</strong>&nbsp;in one line &nbsp;.</p>\n<p>Note:&nbsp;<strong>x</strong>&nbsp;should be greater than 1.</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /></strong>3<br />3<br />5 7 25<br />4<br />1 2 3 4<br />1<br />2<br /><br /><strong>Output:<br /></strong>2<br />5<br />3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bc46f0a6-26c9-42fa-bf84-369c906ab3e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9145"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gcpc11a-faculty-dividing-powers",
  "tags": [],
  "level": "BEGINNER",
  "title": "GCPC11A - Faculty Dividing Powers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GCPC11A - Faculty Dividing Powers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Fred Faculty and Paul Power love big numbers. Day after day Fred chooses a random integer&nbsp;<em>n</em>&nbsp;and he computes&nbsp;<em>n!</em>. His friend Paul amuses himself by computing several powers of his randomly chosen integer&nbsp;<em>k</em>&nbsp;like&nbsp;<em>k<sup>2</sup></em>,&nbsp;<em>k<sup>3</sup></em>&nbsp;and so on. On a hot summer day, Fred and Paul got really, really bored, so they decided to play a joke on their buddy Dave Divider. Fred chooses a random integer&nbsp;<em>n</em>&nbsp;while Paul chooses a random integer&nbsp;<em>k</em>. They want Dave to find the biggest integer&nbsp;<em>i</em>&nbsp;such that&nbsp;<em>k<sup>i</sup></em>&nbsp;divides&nbsp;<em>n!</em>&nbsp;without a remainder, otherwise they will throw a cake in Dave's face. Because Dave does not like cakes in his face, he wants you to help him finding that integer&nbsp;<em>i</em>.</p>\n<h3>Input</h3>\n<p>The first line contains the number of test cases&nbsp;<em>t</em>&nbsp;(<em>1 &le; t &le; 100</em>). Each of the following&nbsp;<em>t</em>&nbsp;lines contains the two numbers&nbsp;<em>n,k</em>&nbsp;(<em>2 &le; n &le; 10<sup>18</sup></em>,&nbsp;<em>2 &le; k &le; 10<sup>12</sup></em>) separated by one space.</p>\n<h3>Output</h3>\n<p>For each test case, print the maximum integer&nbsp;<em>i</em>&nbsp;on a separate line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n5 2\n10 10\n\n<strong>Output:</strong>\n3\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f88ecfd0-82fd-451a-ae5c-24d970af7e7a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9146"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "gnyr04c-lennys-lucky-lotto-lists",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GNYR04C - Lennys Lucky Lotto Lists",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GNYR04C - Lennys Lucky Lotto Lists</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Lotto is a lottery, typically with an accumulating jackpot, in which participants play numbers of their choice in a random drawing. Lenny likes to play the lotto in Lincoln county Louisiana. In the game, he picks a list of&nbsp;<em>n</em>&nbsp;numbers in the range from 1 to&nbsp;<em>m</em>. If his list matches the drawn list, he wins the big prize, a lifetime supply of large lemons.</p>\n<p>Lenny has a scheme that he thinks is likely to be lucky. He likes to choose his list so that each number in it is at least twice as large as the one before it. So, for example, if&nbsp;<em>n</em>&nbsp;= 4&nbsp;and&nbsp;<em>m</em>&nbsp;= 10, then the possible lucky lists Lenny could pick are:</p>\n<pre>    1 2 4 8\n    1 2 4 9\n    1 2 4 10\n    1 2 5 10\n</pre>\n<p>Thus Lenny has 4 lists to choose from.</p>\n<p>Your job, given&nbsp;<em>n</em>&nbsp;and&nbsp;<em>m</em>, is to count how many lucky lists Lenny has to his disposal.</p>\n<p>&nbsp;</p>\n<h1>Input</h1>\n<p>The first line of input is a single non-negative integer, which is the number of data sets to follow. All data sets should be handled identically. The next lines, one per data set, contain two integers,&nbsp;<em>n</em>and&nbsp;<em>m</em>. It is guaranteed that&nbsp;1 &lt;=&nbsp;<em>n</em>&nbsp;&lt;= 10&nbsp;and&nbsp;1 &lt;=&nbsp;<em>m</em>&nbsp;&lt;= 2000&nbsp;and&nbsp;<em>n</em>&nbsp;&lt;=&nbsp;<em>m</em>.</p>\n<p>&nbsp;</p>\n<h1>Output</h1>\n<p>For each data set, print a line like the following:</p>\n<p><tt>Data set&nbsp;<em>i</em>:&nbsp;<em>n</em>&nbsp;<em>m</em>&nbsp;<em>number</em></tt></p>\n<p>where&nbsp;<em>i</em>&nbsp;is the data set number (beginning with 1), and&nbsp;<em>number</em>&nbsp;is the maximum number of lucky lists corresponding to the provided values of&nbsp;<em>n</em>&nbsp;and&nbsp;<em>m</em>.</p>\n<p>&nbsp;</p>\n<h1>Example</h1>\n<p>Input</p>\n<pre>1\n4 10</pre>\n<p>Output</p>\n<pre>Data set 1: 4 10 4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a8510b41-0fa0-467a-824c-2805a559f39a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9147"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "goc11b-sanvi-hates-palindrome",
  "tags": [],
  "level": "BEGINNER",
  "title": "GOC11B - Sanvi Hates Palindrome",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GOC11B - Sanvi Hates Palindrome</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sanvi is very busy girl. So you have been given enough time (1000 milliseconds) to help him.</p>\n<p><br />Sanvi has a bag of marbles with different alphabets written on them. And she has become busy on playing with these marbles by putting them in N boxes placed in a row. There are exactly M distinct type of marbles, N of each type.<br /><br />Now she puts only N marbles (out of M*N) in N boxes, one by one and upon completion she writes down the letters on the marbles on a paper to form a string. As Sanvi hates palindrome strings (strings which read same from both sides e.g. MADAM), she erases palindrome string from the paper as soon as he finds one.<br /><br />Now she is wondering how many different strings she might get on her paper if she could try all possible combination of putting the marbles in the boxes. So you have to help her by answering. As there could be many strings so print it modulo 1,000,000,007.</p>\n<h3>Input</h3>\n<p>Input starts with an integer TC(&lt;=10), denoting the number of test cases. Each case starts with two non negative integers N(&lt;=100000) and M(&lt;=26) as described above.</p>\n<h3>Output</h3>\n<p>For each case, print the case number and total number of strings written on the paper modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />2 2<br />2 3\n<strong>Output:</strong>\nCase 1: 2 <br />Case 2: 6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9cce5907-d014-4bd0-8500-f9b5880d6d13",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9148"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "goit-game-of-iron-thrones",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GOIT - Game of Iron Thrones",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GOIT - Game of Iron Thrones</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Problem Statement :</div>\n<div id=\"_mcePaste\">You and your friends are playing Game of Iron Thrones. In the Game of Iron Thrones, you roll n dice together. You know that every die is a biased die. You also know how biased the dice are on each face.</div>\n<div id=\"_mcePaste\">Find the probability that you will get at least K 6's when you roll all the n dice at once.</div>\n<div id=\"_mcePaste\">Input :</div>\n<div id=\"_mcePaste\">The first line consists of an integer t, the number of test cases. For each test case, the first line consists of two integers n - the number of dice and K - as defined above. The next n lines consists of 6 decimal numbers denoting the probability of getting the corresponding face.</div>\n<div id=\"_mcePaste\">Output:</div>\n<div id=\"_mcePaste\">For each test case, find the probability to get at least K 6's when you roll all the n dice at once. Your solution's absolute or relative error must be strictly less than 10^-2. (i.e. your solution can make mistakes upto 0.01)</div>\n<div id=\"_mcePaste\">Input Constraints :</div>\n<div id=\"_mcePaste\">1 &lt;= t &lt;= 10^3</div>\n<div id=\"_mcePaste\">1 &lt;= n &lt;= 10^5</div>\n<div id=\"_mcePaste\">1 &lt;= K &lt;= 10^5</div>\n<div id=\"_mcePaste\">Example :&nbsp;</div>\n<div id=\"_mcePaste\">Sample Input :</div>\n<div id=\"_mcePaste\">Sample Output :</div>\n<p><strong>Problem Statement :</strong></p>\n<p>You and your friends are playing Game of Iron Thrones. When you play the Game of Iron Thrones, you roll n biased dice together. You know how biased the dice are on each face.</p>\n<p>Find the probability that you will get at least K 6's.</p>\n<p>&nbsp;</p>\n<p><strong>Input :</strong></p>\n<p>The first line consists of an integer t, the number of test cases. For each test case, the first line consists of two integers n - the number of dice and K - as defined above. The next n lines consists of 6 decimal numbers denoting the probability of getting the corresponding face. (face 1 to 6)</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>For each test case, find the probability to get at least K 6's when you roll all the n dice at once. Your solution's absolute or relative error must be strictly less than 10^-2. (i.e. your solution can make mistakes upto 0.01)</p>\n<p>&nbsp;</p>\n<p><strong>Input Constraints :</strong></p>\n<p>&nbsp;</p>\n<p>1 &lt;= t &lt;= 100</p>\n<p>1 &lt;= n &lt;= 1000</p>\n<p>1 &lt;= K &lt;= 1000</p>\n<p>&nbsp;</p>\n<p><strong>Time Limit :</strong></p>\n<p>3 seconds</p>\n<p>&nbsp;</p>\n<p><strong>Sample Input :</strong></p>\n<p>4</p>\n<p>6 6</p>\n<p>0 0 0 0 0 1</p>\n<p>0 0 0 0 0.5 0.5</p>\n<p>0 0 0 0 0 1</p>\n<p>0 0 0 0 0 1</p>\n<p>0 0 0 0.5 0 0.5</p>\n<p>0 0 0 0 0 1</p>\n<p>3 1</p>\n<p>0.2 0.2 0.2 0.2 0.2 0</p>\n<p>0.2 0.2 0.2 0.2 0.2 0</p>\n<p>0 0 0 0 0 1</p>\n<div>3 2</div>\n<div>\n<p>0.2 0.2 0.2 0.2 0.2 0</p>\n<p>0.2 0.2 0.2 0.2 0.2 0&nbsp;</p>\n<p>0 0 0 0 0 1</p>\n<p>2 1</p>\n<p>0.2 0.2 0.2 0.2 0 0.2</p>\n<p>0 0 0 0.5 0.25 0.25</p>\n<p>&nbsp;</p>\n<p><strong>Sample Output :&nbsp;</strong></p>\n</div>\n<p>0.25</p>\n<p>1</p>\n<p>0</p>\n<p>0.4</p>\n<p>&nbsp;</p>\n<p><strong>Explanation:</strong></p>\n<p><strong>Case 1 :</strong>&nbsp;There are 6 dice and we need at least 6 sixes. The probability to get 6 in all dice = 1*0.5*1*1*0.5*1 = 0.25.</p>\n<p><strong>Case 2:</strong>&nbsp;&nbsp;There are 3 dice and we need exactly one 6. No matter how many times you throw the dice, you will always get atleast one 6.</p>\n<p><strong>Case 3 :</strong>&nbsp;There are 3 dice and we need at least two 6s. For the given biased dice in which two of them never turns 6 the probability will be 0</p>\n<p><strong>Case 4 :</strong>&nbsp;Note that there can be more than K 6's. The probability in this case would be 0.2*0.25 + 0.2 * (1-0.25) + (1-0.2) * 0.25 = 0.4</p>\n<p>&nbsp;</p>\n<p><strong>Note :</strong>&nbsp;Avoid cout for this problem as it will print the result in scientific notation.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/71d027b4-2e27-4e92-835e-6437474a4fe5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9149"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "goo-game-of-ones",
  "tags": [],
  "level": "BEGINNER",
  "title": "GOO - Game Of Ones",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GOO - Game Of Ones</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Haba and Goba are brothers, they love binary numbers very much. Today is Haba&rsquo;s birthday so, his uncle gifted him a 3 bit binary string.&nbsp; Getting the present, both of them are very happy. Now, Goba asked Haba that using 3 bits how many different binary numbers he can write, whose 1<sup>st</sup>&nbsp;bit is 1 and total how many 1 will be needed to write those numbers. Haba answered he can write 4 different numbers using 3 bits whose first bit is 1 and those numbers are 4(100), 5(101), 6(110) and 7(111) and to write these 4 numbers in binary he will need 8 &lsquo;1&rsquo;. Now Goba told Haba that he will tell Haba the length of a binary string n and Haba will have to answer that &nbsp;using n bits how many different binary numbers he can write, whose 1<sup>st</sup>&nbsp;bit is 1 and total how many 1 will be needed to write those numbers. If Haba can answer correctly he will get more binary strings as present. Haba wants to get more binary string as present but, he doesn&rsquo;t know the answer of the question of Goba for bigger value of n, so now he wants your help. Help him to find the answer.</p>\n<h3>Input</h3>\n<p>The first line contains a positive integer number, t (1&le;t&le;50) indicating the number of test cases. Each test case contains a positive integer number, n (1&le;n&le;50) indicating the number of bits.</p>\n<h3>Output</h3>\n<p>For each test case you have to output two numbers, whose first and second number indicates the answer of Goba&rsquo;s first and second question respectively.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>2<br />2<br />3</p>\n<pre><strong>Output:</strong></pre>\n<p>2 3<br />4 8</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cd3dcbcc-ed80-4c86-9133-7e5a3f5f86ac",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gooda-good-travels",
  "tags": [],
  "level": "BEGINNER",
  "title": "GOODA - Good Travels",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GOODA - Good Travels</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">\\smallskip</div>\n<div id=\"_mcePaste\">The Team is interested in a network of N (2 &lt;= N &lt;= 10^6) cities (conveniently numbered $1..N$), interconnected by M ($1 &lt;= M &lt;= 10^6) one-way flights (similarly numbered $1..M$). Their hometown is city $S$ ($1 &lt;= S &lt;= N$), and the contest will take place in city $E$ ($1 &lt;= E &lt;= N$, $S \\neq E$). Flight $i$ goes from city $a_i$ ($1 &lt;= a_i &lt;= N$) to city $b_i$ ($1 &lt;= b_i &lt;= N$, $a_i \\neq b_i$), and no two flights connect the same pair of cities in the same direction. In general, no cities are guaranteed to be reachable from other cities by a sequence of flights. However, The Team of course knows that city $E$ is reachable from city $S$ - they're not about to break their streak of triumphant wins!</div>\n<div id=\"_mcePaste\">\\smallskip</div>\n<div id=\"_mcePaste\">Now, each city $i$ has a fun value, $f_i$ ($0 &lt;= f_i &lt;= 10^6), associated with it. Along their trip, The Team will take time to have fun at every city they visit, including the first and last. However, though they can visit a city multiple times (including cities $S$ and $E$), or even take a certain flight multiple times, surely this gets boring quickly - therefore, any city's fun can only be had up to once.</div>\n<div id=\"_mcePaste\">\\smallskip</div>\n<div id=\"_mcePaste\">The Team wants to determine the maximal amount of fun they can have on any sequence of flights that starts at city $S$ and ends at city $E$. Naturally, every member on The Team is so intelligent that they've calculated this value in their heads (and are quite excited about it) - but can you?</div>\n<p>It's that time of year again - the best ACM-ICPC team of all time is off to the World Finals! Being the best, they realize that a good performance starts before the contest itself - in order to get into the perfect mindset, they must have as much fun on the trip to the contest site as possible!</p>\n<p>The Team is interested in a network of N (2 &lt;= N &lt;= 10^6) cities (conveniently numbered 1..N), interconnected by M (1 &lt;= M &lt;= 10^6) one-way flights (similarly numbered 1..M). Their hometown is city S (1 &lt;= S &lt;= N), and the contest will take place in city E (1 &lt;= E &lt;= N, S != E). Flight i goes from city ai (1 &lt;= ai &lt;= N) to city bi (1 &lt;= bi &lt;= N, ai != bi), and no two flights connect the same pair of cities in the same direction. In general, no cities are guaranteed to be reachable from other cities by a sequence of flights. However, The Team of course knows that city E is reachable from city S - they're not about to break their streak of triumphant wins!</p>\n<p>Now, each city i has a fun value, fi (0 &lt;= fi &lt;= 10^6), associated with it. Along their trip, The Team will take time to have fun at every city they visit, including the first and last. However, though they can visit a city multiple times (including cities S and E), or even take a certain flight multiple times, surely this gets boring quickly - therefore, any city's fun can only be had up to once.</p>\n<p>The Team wants to determine the maximal amount of fun they can have on any sequence of flights that starts at city S and ends at city E. Naturally, every member on The Team is so intelligent that they've calculated this value in their heads (and are quite excited about it) - but can you?</p>\n<h3>Input</h3>\n<p>First line: 4 integers, N, M, S, and E</p>\n<p>Next N lines: 1 integer, fi, for i = 1..N</p>\n<p>Next M lines: 2 integers, ai and bi, for i = 1..M</p>\n<h3>Output</h3>\n<p>1 integer, the maximal amount of fun The Team can have on their trip.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>5 6 1 4\n5\n4\n5\n10\n2\n1 2\n1 3\n2 4\n3 4\n4 5\n5 4\n\n<strong>Output:</strong></pre>\n<pre>22</pre>\n<pre><strong>Explanation of Sample:</strong></pre>\n<p>The network of cities and flights looks like this (the fun values of cities are shown below them):</p>\n<p><img src=\"https://www.spoj.com/content/sourspinach:gooda.jpg\" alt=\"\" /></p>\n<p>The optimal route that The Team can take goes through cities 1 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 4, yielding a total fun value of 5+5+10+2+0=22.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f4658c62-8455-4b59-a597-734a9ea5fbb1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "goodb-good-predictions",
  "tags": [],
  "level": "BEGINNER",
  "title": "GOODB - Good Predictions",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GOODB - Good Predictions</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Having arrived at the ACM-ICPC contest site in a fun-filled mood, The Team continues their important pre-contest preparations. Specifically, every world-class team knows the importance of making predictions about their upcoming submissions.</p>\n<p>The Team knows that they'll get plenty of AC (Accepted) submissions, and they find those quite boring by now. As such, they'll focus on their incorrect ones. From their vast experience, The Team knows that they'll only get exactly $N$ ($1 \\leq N \\leq 300$) submissions wrong throughout the upcoming contest - in fact, they predict that, of those, exactly $W$ ($0 \\leq W \\leq 100$) will get WA (Wrong Answer), $T$ ($0 \\leq T \\leq 100$) will get TLE (Time Limit Exceeded), and the remaining $R$ ($0 \\leq R \\leq 100$) will get RE (Runtime Error). Note that $W+T+R=N$.</p>\n<p>Assuming that their predictions will certainly be correct, the members of The Team are wondering in how many ways that might occur. In other words, how many different ordered combinations of $N$ incorrect results (each being WA, TLE, or RE) exist which satisfy their predictions? Since The Team doesn't make many mistakes, surely you can calculate this value, right? However, since it can get quite large for you, compute it modulo ($10^9+7$).</p>\n<h3>Input</h3>\n<p>4 integers, $N$, $W$, $T$, and $R$</p>\n<h3>Output</h3>\n<p>1 integer, the number of valid ordered combinations of submission results, modulo ($10^9+7$).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>3 2 1 0\n\n<strong>Output:</strong></pre>\n<pre>3</pre>\n<pre>Explanation of Sample:</pre>\n<p>Out of 3 submissions, two are WA, while the third is TLE. The following 3 ordered combinations are then possible:</p>\n<p>WA, WA, TLE</p>\n<p>WA, TLE, WA</p>\n<p>or</p>\n<p>TLE, WA, WA</p>\n<p>The answer is then $3$ modulo ($10^9+7$) = $3$.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/688a8195-99c2-410c-bf3f-69cb65c1efa7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gss1-can-you-answer-these-queries-i",
  "tags": [],
  "level": "BEGINNER",
  "title": "GSS1 - Can you answer these queries I",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GSS1 - Can you answer these queries I</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a sequence A[1], A[2], ..., A[N] . ( |A[i]| &le; 15007 , 1 &le; N &le; 50000 ). A query is defined as follows:<br />Query(x,y) = Max { a[i]+a[i+1]+...+a[j] ; x &le; i &le; j &le; y }.<br />Given M queries, your program must output the results of these queries.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input file contains the integer N.</li>\n<li>In the second line, N numbers follow.</li>\n<li>The third line contains the integer M.</li>\n<li>M lines follow, where line i contains 2 numbers xi and yi.</li>\n</ul>\n<h3>Output</h3>\n<p>Your program should output the results of the M queries, one query per line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 \n-1 2 3\n1\n1 2\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ce1949b9-db5b-4cb2-ac65-1282f29d0cfe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gss3-can-you-answer-these-queries-iii",
  "tags": [],
  "level": "BEGINNER",
  "title": "GSS3 - Can you answer these queries III",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GSS3 - Can you answer these queries III</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a sequence A of N (N &lt;= 50000) integers between -10000 and 10000. On this sequence you have to apply M (M &lt;= 50000) operations:<br />modify the i-th element in the sequence or for given x y print max{Ai + Ai+1 + .. + Aj | x&lt;=i&lt;=j&lt;=y }.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer N. The following line contains N integers, representing the sequence A1..AN.<br />The third line contains an integer M. The next M lines contain the operations in following form:<br />0 x y: modify Ax into y (|y|&lt;=10000).<br />1 x y: print max{Ai + Ai+1 + .. + Aj | x&lt;=i&lt;=j&lt;=y }.</p>\n<h3>Output</h3>\n<p>For each query, print an integer as the problem required.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1 2 3 4\n4\n1 1 3\n0 3 -3\n1 2 4\n1 3 3\n\n<strong>Output:</strong>\n6\n4\n-3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e8d2b4a1-4b81-4016-b4f9-5f84e6adc247",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "gss4-can-you-answer-these-queries-iv",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GSS4 - Can you answer these queries IV",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GSS4 - Can you answer these queries IV</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a sequence A of N(N &lt;= 100,000) positive integers. There sum will be less than 10<sup>18</sup>. On this sequence you have to apply M (M &lt;= 100,000) operations:</p>\n<p>(A) For given x,y, for each elements between&nbsp;the x-th and the y-th ones (inclusively, counting from 1), modify it to its positive square root (rounded down to the nearest integer).</p>\n<p>(B) For given x,y, query the sum of all the elements between the x-th and the y-th ones (inclusively, counting from 1) in the sequence.</p>\n<h3>Input</h3>\n<p>Multiple test cases, please proceed them one by one. Input terminates by EOF.</p>\n<p>For each test case:</p>\n<p>The first line contains an integer N. The following line contains N integers, representing the sequence A<sub>1</sub>..A<sub>N</sub>.<br />The third line contains an integer M. The next M lines contain the operations in the form \"i x y\".i=0 denotes the modify operation, i=1 denotes the query operation.</p>\n<h3>Output</h3>\n<p>For each test case:</p>\n<p>Output the case number (counting from 1) in the first line of output. Then for each query, print an integer as the problem required.</p>\n<p>Print an blank line after each test case.</p>\n<p>See the sample output for more details.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1 2 3 4 5\n5\n1 2 4\n0 2 4\n1 2 4\n0 4 5\n1 1 5\n4\n10 10 10 10\n3\n1 1 4\n0 2 3\n1 1 4\n\n<strong>Output:</strong>\nCase #1:\n9\n4\n6\n\nCase #2:\n40\n26\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/73103a9d-d09b-403d-957d-049a17a7a275",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef914f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gumath-guardian-and-the-deck-of-cards",
  "tags": [],
  "level": "BEGINNER",
  "title": "GUMATH - Guardian and The Deck of Cards",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GUMATH - Guardian and The Deck of Cards</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Guardian is very weak at maths but still to compete in a certain exam he has to get good grade's in mathematics this time. In the first class of the semester the Prof. asked students to find the number of ways deck (having N cards) could be shuffled that exactly one card is at the same position as before, and the students who successfully do this will be awarded with good marks in mid terms. Help Guardian solve this problem.</p>\n<p><br />Input<br />First Line Contains an integer T, the number of test cases (T&lt;=10000). Then following T lines contain an Integer N ( N&lt;=1000000) the number of cards in the deck.<br />Output<br />For each test case you have to output the number of ways possible meeting the Prof.'s requirements modulo 10000009.</p>\n<p><br /><strong>Input:</strong><br />1<br />3<br /><strong>Output:</strong><br />3<br /><br />Let's say the initial deck configuration was {1,2,3}, then 3 Possible Shufflings are {1,3,2}, {2,1,3}, {3,2,1}</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0876ecd7-bf86-4069-8958-e2040d4efb9c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9150"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "gumath2-card-meets-medium",
  "tags": [],
  "level": "BEGINNER",
  "title": "GUMATH2 - Card Meets (medium)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">GUMATH2 - Card Meets (medium)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Guardian is very weak at maths but still to compete in a certain exam he has to get good grades in mathematics this time. In the first class of the semester the Prof. asked students to find the number of ways deck (having N cards) could be shuffled that exactly one card is at the same position as before, and the students who successfully do this will be awarded with good marks in mid terms. Help Guardian solve this problem.</p>\n<h3>Input</h3>\n<p>The input begins with the number T of test cases in a single line.<br />In each of the next T lines there are one integer N.</p>\n<h3>Output</h3>\n<p>For each test case you have to output on a single line the number of ways possible meeting the Prof.'s requirements.<br />As the answer can be a huge number, simply output it modulo 10000009.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n3\n\n<strong>Output:</strong>\n3\n</pre>\n<p>Let's say the initial deck configuration was {1,2,3}, then three possible shuffles are {1,3,2}, {2,1,3}, {3,2,1}.</p>\n<h3>Constraints</h3>\n<pre>1 &lt; T &lt; 10^4\n0 &lt; N &lt; 10^18\n</pre>\n<p>@speed addicts : my C code ran in 0.08s, and my python3 code ran in 3.2s. (Total time with Pyramid cluster)<br />Edit 19/I/2015 : Now the problem use Cube cluster, rejudge of my old code gave 0.01s with C, and 0.57s with Py3.2 (this last one ends in 0.42s with PY3.4)<br />Edit 11-02-2017, after compiler changes : 0.00s with C, 0.22s with PY3.5. New TL.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7403ba13-2d28-4846-ac2c-c1c818e71421",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9151"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hackrndm-hacking-the-random-number-generator",
  "tags": [],
  "level": "BEGINNER",
  "title": "HACKRNDM - Hacking the random number generator",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HACKRNDM - Hacking the random number generator</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You recently wrote a random number generator code for a web application and now you notice that some cracker has cracked it. It now gives numbers at a difference of some given value k more predominantly. You being a hacker decide to write a code that will take in n numbers as input and a value k and find the total number of pairs of numbers whose absolute difference is equal to k, in order to assist you in your random number generator testing.</p>\n<p>NOTE: All values fit in the range of a signed integer, n, k&gt;=1</p>\n<h3>Input</h3>\n<p>1st line contains n &amp; k.<br />2nd line contains n numbers of the set. All the n numbers are assured to be distinct.</p>\n<p>(<strong>Edited:&nbsp;</strong>n &lt;= 10^5)</p>\n<h3>Output</h3>\n<p>One integer saying the no of pairs of numbers that have a diff k.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 2<br />1 5 3 4 2\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4286b4a1-e6ad-4f7e-81e5-f86b8279f2d0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9152"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hamster1-hamster-flight",
  "tags": [],
  "level": "BEGINNER",
  "title": "HAMSTER1 - Hamster flight",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HAMSTER1 - Hamster flight</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There is a competition of flying hamsters in Hamsterburg. Each competing hamster is thrown from a sling. The judges rate the flight according to its length and height. Let X meters be the distance of the flight, and Y meters &ndash; maximum height to which the hamster rose during the flight. The hamster will receive K1*X + K2*Y points for such a flight. The initial speed of the hamsters is V0 m/s. Free fall acceleration is g = 10 m/s<sup>2</sup>. There is no air friction. The size of the hamster and the sling are negligible. When the hamster is thrown from the sling its height is 0 meters. You should determine the angle at which the hamster must be thrown so that he receives maximum points.</p>\n<h3>Input</h3>\n<p>The first line of input contains number t &ndash; the amount of tests. Then t tests follow one per line. The description of each test consists of three integers separated by single spaces. The first integer is V0, the second &ndash; K1, the third &ndash; K2.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= t &lt;= 10000<br />1 &lt;= V0 &lt;= 100<br />0 &lt;= K1, K2 &lt;= 1000<br />0 &lt; K1 + K2</p>\n<h3>Output</h3>\n<p>For each test output the angle in radians at which the hamster must be thrown, and the amount of points it will receive. The numbers should be separated with spaces. Print the numbers with exactly three digits in the fractional part.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n10 10 0\n10 0 10\n10 10 10\n\n<strong>Output:</strong>\n0.785 100.000\n1.571 50.000\n0.908 128.078</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a796e5d3-6f83-4a67-a805-0eb82d2315fe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9153"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "hg-huge-gcd",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "HG - HUGE GCD",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HG - HUGE GCD</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>RK</strong>&nbsp;has received a homework assignment to compute the&nbsp;<strong>greatest common divisor</strong>&nbsp;of the two positive integers&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>. Since the numbers are quite large, the professor provided him with&nbsp;<strong>N</strong>&nbsp;smaller integers whose product is&nbsp;<strong>A</strong>, and&nbsp;<strong>M</strong>&nbsp;integers with product&nbsp;<strong>B</strong>.</p>\n<p>RK would like to verify his result, so he has asked you to write a program to solve his problem. If the result is more than 9 digits long, output only the&nbsp;<strong>last 9</strong>&nbsp;digits.</p>\n<h3>Input</h3>\n<p>The first line of input contains the positive integer&nbsp;<strong>N</strong>&nbsp;(1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 1000).</p>\n<p>The second line of input contains&nbsp;<strong>N</strong>&nbsp;space-separated positive integers less than 10^9, whose product is the number&nbsp;<strong>A</strong>.</p>\n<p>The third line of input contains the positive integer&nbsp;<strong>M</strong>&nbsp;(1 &lt;=&nbsp;<strong>M</strong>&nbsp;&lt;= 1000).</p>\n<p>The fourth line of input contains&nbsp;<strong>M</strong>&nbsp;space-separated positive integers less than 10^9, whose product is the number&nbsp;<strong>B</strong>.</p>\n<h3>Output</h3>\n<p>The first and only line of output must contain the greatest common divisor of numbers&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>. If the result is more than 9 digits long, output only the last (least significant) 9 digits.</p>\n<h3>Example</h3>\n<p><strong>Input</strong></p>\n<pre>3\n2 3 5\n2\n4 5</pre>\n<p><strong>Output</strong></p>\n<pre>10</pre>\n<p><strong>Input</strong></p>\n<pre>3\n358572 83391967 82\n3\n50229961 1091444 8863</pre>\n<p><strong>Output</strong></p>\n<pre>000012028</pre>\n<p>First sample description: The greatest common divisor of numbers A = 30 and B = 20 equals 10.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c23151ac-d0fe-4c04-ae01-387b66afe2e3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9154"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hlp_rams-topper-rama-rao",
  "tags": [],
  "level": "BEGINNER",
  "title": "HLP_RAMS - Topper Rama Rao",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HLP_RAMS - Topper Rama Rao</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Rama Rao is the topper of his branch. One of his friends was jealous of it. So, he poses a question to test Rama Rao and is as follows:</p>\n<p>For a given&nbsp;<strong>n</strong>, find the number of even and odd numbers among the set,&nbsp;<strong>{&nbsp;<sup>n</sup>C<sub>0</sub>,&nbsp;<sup>n</sup>C<sub>1</sub>,...&nbsp;<sup>n</sup>C<sub>n&nbsp;</sub>}.</strong></p>\n<p>Rama Rao was having hard time solving it. He hopes you can help him.</p>\n<h3>Input</h3>\n<p>First line contains&nbsp;<strong>t( 1&lt;=t&lt;=10<sup>5</sup>),&nbsp;</strong>the number of test cases. Next t lines contain one integer per line, denoting&nbsp;<strong>n(0&lt;=n&lt;=10<sup>12</sup>)</strong>.&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, output two space separated integers specifying the number of even numbers and odd numbers respectively.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>3</pre>\n<pre>4\n\n<strong>Output:</strong>\n0 4</pre>\n<pre>3 2</pre>\n<pre><strong>Explaination:</strong></pre>\n<pre> for 3, values are: <strong>1 3 3 1</strong>. All are odd. Hence <strong>0 4</strong></pre>\n<pre> for 4, values are: <strong>1 4 6 4 1</strong>. Hence <strong>3 2</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e420ba3b-249b-4a91-abb4-1e142a4c50f4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9155"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "homew-homework",
  "tags": [],
  "level": "BEGINNER",
  "title": "HOMEW - Homework",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HOMEW - Homework</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>When trying to clean your old room, you find out your old notes from high school.<br />Reading the homeworks you were given then, you start thinking how much easier they<br />would have been today. However, there is a particular one that still seems to maintain<br />its difficulty.</p>\n<p>When the solution to a problem involved solving the square root of an integer, to keep<br />a fancy and clean expression, you were asked to express it as the integer part and the<br />root part. This means that if you had as solution N you were asked to express it<br />as &radic;N = A &radic;B with the part A being as high as possible. For instance, 180 can be<br />expressed as 1 &radic;180, 2 &radic;45, 3 &radic;20 or 6 &radic;5. Of course, the last expression is the correct<br />one.</p>\n<p>Now that you are grown up, you decide to write a program to perform this task for you.</p>\n<h3>Input</h3>\n<p>The input contains several test cases, each one described in a single line. The line contains<br />an integer N (1 &le; N &le; 10<sup>18</sup>&nbsp;). The last line of the input contains a single &minus;1 and should<br />not be processed as a test case.</p>\n<h3>Output</h3>\n<p>For each test case output a single line with two integers A and B separated by a single<br />space such that &radic;N = A &radic;B and A is maximum.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />180<br />17<br />1000000000000000000<br />-1<br /><br /><strong>Output:</strong>\n6 5<br />1 17<br />1000000000 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e61b3cfc-09d4-4915-95df-c2547906c59d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9156"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hs08paul-a-conjecture-of-paul-erdos",
  "tags": [],
  "level": "BEGINNER",
  "title": "HS08PAUL - A conjecture of Paul Erdős",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">HS08PAUL - A conjecture of Paul Erdős</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In number theory there is a very deep unsolved conjecture of the Hungarian Paul Erdős (1913-1996), that there exist infinitely many primes of the form&nbsp;<em>x</em><sup>2</sup>+1, where&nbsp;<em>x</em>&nbsp;is an integer. However, a weaker form of this conjecture has been proved: there are infinitely many primes of the form&nbsp;<em>x</em><sup>2</sup>+<em>y</em><sup>4</sup>. You don't need to prove this, it is only your task to find the number of (positive) primes not larger than&nbsp;<em>n</em>&nbsp;which are of the form&nbsp;<em>x</em><sup>2</sup>+<em>y</em><sup>4</sup>&nbsp;(where&nbsp;<em>x</em>&nbsp;and&nbsp;<em>y</em>&nbsp;are integers).</p>\n<h3>Input</h3>\n<p>An integer&nbsp;<em>T</em>, denoting the number of testcases (<em>T</em>&le;10000). Each of the&nbsp;<em>T</em>&nbsp;following lines contains a positive integer&nbsp;<em>n</em>, where&nbsp;<em>n</em>&lt;10000000.</p>\n<h3>Output</h3>\n<p>Output the answer for each&nbsp;<em>n</em>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1\n2\n10\n9999999\n\n<strong>Output:</strong>\n0\n1\n2\n13175</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fc6deb93-7a5f-4f13-abbe-6cc3901e9424",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9157"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iapcr2d-find-the-number",
  "tags": [],
  "level": "BEGINNER",
  "title": "IAPCR2D - Find The Number",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IAPCR2D - Find The Number</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Finding the number of all divisor of a number is too easy. But don&rsquo;t worry, this problem is also quite easy.</p>\n<p>You will be given the number of all divisor of the factorial of a number, you will have to find number. If there are multiple such number, you will have to find the smallest one. If there is no such numbers that meets the constraint print &ldquo;nai&rdquo;.</p>\n<h3>Input</h3>\n<p>The first line of the input will be T, denoting number of test cases. In the following T lines there will be only one integer N, denoting the number of all divisor of the factorial of a number X. It is guaranteed that X will be less than 10^2 + 10.</p>\n<p><strong>Constrains:</strong></p>\n<p>1 &lt;= t &lt;= 10^5</p>\n<p>0 &lt;= n &lt;= 10^18</p>\n<p>1 &lt;= X &lt; 10^2 + 10</p>\n<h3>Output</h3>\n<p>For each test case print the number X. If X does not exists or is greater than 10^4 then print \"nai\" (without the quotes) in a single line. Follow the sample input/output.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1\n2\n3\n4\n5\n\n<strong>Output:</strong>\n1\n2\nnai\n3\nnai</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dd4f0273-e975-4227-b5ff-26af4a3c5fcc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9158"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iapcr2f-summer-trip",
  "tags": [],
  "level": "BEGINNER",
  "title": "IAPCR2F - Summer Trip",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IAPCR2F - Summer Trip</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In this hot summer AIUB students decided to go on a trip to Cox&rsquo;s Bazaar sea beach. Every student has some amount of money to spend in this trip. Each student belongs to some group. If student A knows student B, B knows C then A, B and C belong to the same group. In order to utilize the budget properly students hired a travel agency to get an optimal travel plan. They submitted the information about all the student&rsquo;s money and relations among them. Now the agency wants to figure out the number of groups and the total budget of each group. Total budget of a group is the summation of all the student&rsquo;s money in that group.</p>\n<h3>Input</h3>\n<p>The first line contains an integer T (1&lt;=T&lt;=50), denoting the number of test cases.</p>\n<p>Each case starts with two integers N M. N (1&lt;=N&lt;=1000), denotes the number of students and M (0&lt;=M&lt;=(N*(N-1)/2)), denotes the number of relationships. In the next line N integers are given. The ith (1&lt;=i&lt;=N) integer a<sub>i</sub>&nbsp;(1&lt;=a<sub>i</sub>&lt;=100) denotes the money ith student has. Next M lines each contains two integers u v, (1&lt;=u,v&lt;=N and u != v) denoting that u knows v and vice versa.</p>\n<h3>Output</h3>\n<p>For each test case output &ldquo;Case X: K&rdquo; where X is the case number starting from 1 and K is the number of groups. In the next line output K integers, the total budget of all the groups in ascending order of budget.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n5 3\n5 7 4 6 8\n1 2\n1 3\n4 5\n\n<strong>Output:</strong>\nCase 1: 2\n14 16</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7cee19a9-9eab-485f-87a3-def9fdd95cc8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9159"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "iiitmstud-iiitm-student",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "IIITMSTUD - IIITM Student",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IIITMSTUD - IIITM Student</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are N groups students in IIITM each group numbered 1 to n. The ith group contains a[i] number of students.</p>\n<p>There are some classroom in IIITM and each classroom has some seats.</p>\n<div id=\"_mcePaste\">All the students of same group have to be in same class and there shouldn't be any seat left.</div>\n<div id=\"_mcePaste\">Moreover group shouldn't change their relative position while taken their seats in class room i.e group 3 take their seat if and only if group 1 and 2 took their seats.</div>\n<div id=\"_mcePaste\">Find size x of class room and number of class room y such that there is no empty seats in class room(i.e. the total number of student present inside the class room is equal to x)?There are N groups students in IIITM each group numbered 1 to n. The ith group contains a[i] number of students.</div>\n<p>All the students of same group have to be in same class and there shouldn't be any seat left.</p>\n<p>Moreover group shouldn't change their relative position while taken their seats in class room i.e group 3 take their seat if and only if group 1 and 2 took their seats.</p>\n<p>Find size x of class room and number of class room y such that there is no empty seats in class room(i.e. the total number of student present inside the class room is equal to x)?</p>\n<p><strong>Input</strong></p>\n<p>The first line contains an integer(1&lt;=n&lt;=10^5).The second line contains n space-separated integers a[0],a[1],.....,a[n-1] (1&lt;=a[i]&lt;=10^4).</p>\n<h3>Output</h3>\n<p>Print all possible sizes of the class room in an increasing order with total number of class rooms in new line.</p>\n<p><strong>Example:</strong></p>\n<p>&nbsp; &nbsp;<strong>Input</strong></p>\n<p>&nbsp; &nbsp;3</p>\n<p>&nbsp; &nbsp;2 2 4</p>\n<p>&nbsp; &nbsp;<strong>Output</strong></p>\n<p>&nbsp; &nbsp;4 2</p>\n<p>&nbsp; &nbsp;8 1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/70f0fb0f-96d7-4cb7-a480-32e065844846",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "iitkwpcd-partition-the-sticks",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "IITKWPCD - Partition the sticks",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITKWPCD - Partition the sticks</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a set of N sticks and are required to partition them into groups of exactly 3 sticks each. While doing so, you can leave out any number of sicks out of these groups (in particular, no groups may be formed). One condition needs to be met: sticks in each group need to form a triangle. A triangle can be constructed if sum of any two sticks lengths is greater than the third length.</p>\n<p>Your are required to partition the sticks so that the sum of triangle areas from all the groups is maximized.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>Very first line of the input contains integer T: number of test cases (1 &lt;= T &lt;= 5).</p>\n<p>For each test case, first line contains integer N: number of sticks. (1 &lt;= N &lt;= 15).</p>\n<p>Second line contains N space separated integers: the lengths l<sub>i</sub>&nbsp;of the sicks. (1 &lt;= l<sub>i</sub>&nbsp;&lt;= 10^3, 1 &lt;= i &lt;= N).&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, output the maximal area in a separate line. Round value to exactly 6 decimal places.&nbsp;<strong>Always</strong>&nbsp;print exactly 6 decimal places.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />3<br />3<br />7 8 5 <br />4<br />7 8 6 3 <br />3<br />7 2 1<br /><br /><strong>Output:</strong><br />17.320508<br />20.333163<br />0.000000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2b72fe25-d5fe-49c5-9929-94cd4a570294",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "iitkwpcg-help-the-old-king",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "IITKWPCG - Help the old King",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITKWPCG - Help the old King</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Once upon a time there lived a king in a far far country. In the country, there are n cities and m roads. He was severly attacked by his enemy. The enemy damaged all the cities of King's country. As the roads between the cities had been damaged, the King wanted to repair those. So he decided to launch a tender for this.<br /><br />&nbsp;&nbsp;&nbsp;&nbsp; As King's country is a well managed country. By well managed country, we mean that it is possible to go from each city to any other city. But now as the city has been destroyed by enemies, all the roads are broken, the king will like to rebuild the roads in such a way that it is still a well manged country.<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; Cost of repairing the road in the country is really wierd, it is not addition of costs but it is instead multiplication of those. What it means that if the king decides that he should repair 5 roads, then total cost of repairing those roads will be multiplication of all the 5 costs.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp; As the King's treasure has been damaged by the attack of foreign city, he would like to spend minimum amount of money and that the will want that his country still remains well managed country. Surprisingly the company that was given tender had a rule that all the costs will be in powers of two, as they were really love with binary numbers.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp; As value of the total cost can be really large. We do not want to know the actual cost, instead output number of divisors of the number.</p>\n<h3>Input</h3>\n<p>T: number of test cases (T &lt;= 5)<br />n and m (n &lt;= 10^5 &amp;&amp; m &lt;= 2 * 10^5)</p>\n<p>Next m lines will have a, b, c, which denotes that cities a and b are connected with road of cost c.</p>\n<p>(c &gt;= 2 &amp;&amp; c &lt;= 10^18 &amp;&amp; c will always be power of 2) (1 &lt;= a &lt;= n) and (1 &lt;= b &lt;= n)</p>\n<h3>Output</h3>\n<p>For each test case, output a single line containing a number as stated in the problem..</p>\n<p><strong>Example</strong></p>\n<p>Input:</p>\n<p>4</p>\n<p>2 1</p>\n<p>1 2 16</p>\n<p>3 2</p>\n<p>2 3 32</p>\n<p>1 2 16</p>\n<p>3 3</p>\n<p>2 3 32</p>\n<p>1 2 16</p>\n<p>1 3 64</p>\n<p>5 5</p>\n<p>1 2 2</p>\n<p>2 3 2</p>\n<p>1 3 4</p>\n<p>3 4 16</p>\n<p>3 5 8</p>\n<p>Output:</p>\n<p>5</p>\n<p>10</p>\n<p>10</p>\n<p>10</p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://www.spoj.com/submit/IITKWPCG/\">&nbsp;Submit solution!</a></div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/950e15c6-47cb-466d-a529-5350e802dc85",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iitkwpch-find-number-of-pair-of-friends",
  "tags": [],
  "level": "BEGINNER",
  "title": "IITKWPCH - Find Number Of Pair of Friends",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITKWPCH - Find Number Of Pair of Friends</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;&nbsp;&nbsp; You are given n numbers. Any two number are called friends if they have some digit common. eg. (11, 12) and (15, 4561) are friends but (33, 556) is not.</p>\n<p>&nbsp;&nbsp;&nbsp; Find out no of pairs which are friends.</p>\n<p>&nbsp;&nbsp; &nbsp;(Formally speaking Let us assume the n numbers be are stored in array a[]. You have to find out number of i and j pairs such that i &lt; j and a[i] and a[j] are friends.).</p>\n<h3>Input</h3>\n<p>T : no of test cases (T &gt;= 1 &amp;&amp; T &lt;= 7)&nbsp;<br />For each test case, you will be given two lines, first line will contain n &lt;= 10^6<br />then in next n line each line will contain a single integer representing a[i] (a[i] &gt;= 1 &amp;&amp; a[i] &lt;= 10^18)</p>\n<h3>Output</h3>\n<p>For every test case print a line<br />containing number of such pairs as mentioned in the problem statement.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4</pre>\n<pre>2</pre>\n<pre>12&nbsp;13</pre>\n<pre>3</pre>\n<pre>10&nbsp;12&nbsp;24</pre>\n<pre>3</pre>\n<pre>5&nbsp;6&nbsp;7</pre>\n<pre>4</pre>\n<pre>10&nbsp;11&nbsp;211&nbsp;3</pre>\n<p><strong>Output:</strong><br />1<br />2<br />0<br />3</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6619373c-c6c1-41d9-9e68-7803d7c2492d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iitwpc4b-maggu-and-triangles",
  "tags": [],
  "level": "BEGINNER",
  "title": "IITWPC4B - Maggu and Triangles",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITWPC4B - Maggu and Triangles</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Maggu has a wire of length n. He has to make triangles out of it such that the side lengths of each triangle are integers. He now wants to know the number of distinct (not congruent) triangles that he can create using the wire of length n. Note that he has to use all of the wire in making the triangle.</p>\n<h3>Input</h3>\n<p>First line contains T: number of test cases. (1 &lt;= T &lt;= 10^5)<br />For each test case, there is a single line containging an integer n (n &gt;= 1 &amp;&amp; n &lt;= 10^9)</p>\n<h3>Output</h3>\n<p>Each test case output a single integer representing the number of triangles he can create.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />3<br />5<br />7<br />9\n\n<strong>Output:</strong><br />1<br />2<br />3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cfd5bcf2-a204-4890-a16d-5a5c8e97dbc2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iitwpc4c-maggu-and-vectors",
  "tags": [],
  "level": "BEGINNER",
  "title": "IITWPC4C - Maggu and Vectors",
  "content": "<h2 style=\"font-weight: 500;\">IITWPC4C - Maggu and Vectors</h2>\n<p><em>no tags</em>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Maggu was teaching vectors using triangle diagrams to to his little brother. Now in the midst of lesson he went for a coffee and on returning finds all his triangles disassembled into constituent vectors by his naughty brother. He needs to recreate the triangles. He needs your help in doing this task quickly as he has to go for an internship interview.</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>First line will contain T (1 &lt;= T &lt;= 10), the number of test cases. Each test case will consist of first line N, number of vectors. Next line will contain N (1 &lt;= N &lt;= 1000)&nbsp; vectors of the form of a b &nbsp;-1000&lt;=a,b&lt;=1000.&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>You have to print, in a new line for every test case, &nbsp;&ldquo;YES&rdquo; &nbsp;if any 3 vectors among N form a triangle, &ldquo;NO&rdquo; otherwise.</p>\n<h3 style=\"font-weight: 500;\">Example</h3>\n<p style=\"font-weight: 400;\"><strong>Input:</strong></p>\n<p>3 5</p>\n<p>3 4 3 -4 5 0 6 0 3 5</p>\n<p>2</p>\n<p>4 5 -4 -5</p>\n<p>3</p>\n<p>1 2 3 4 -5 -6</p>\n<p style=\"font-weight: 400;\"><strong>Output:</strong></p>\n<p>YES</p>\n<p>NO NO</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a0f2ae1d-9916-4d8f-92ec-19a5425c4bb7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef915f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "iitwpc4d-arrangement-validity",
  "tags": [],
  "level": "BEGINNER",
  "title": "IITWPC4D - Arrangement Validity",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">IITWPC4D - Arrangement Validity</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>n persons are standing in a line. Height of each person is between 1 and n and height of each person is distinct.&nbsp;</p>\n<p>You a given array A where A[i] denotes how many persons are before i_th person having heights greater than H[i]. eg. For person 2, person 1 is considered before him. If A is given to be [0, 1] then one valid arrangements of height could be [2, 1] as number of persons having height &gt; 1 before 2 are 1 because H[1] &gt; H[2]</p>\n<p>You have to find out whether this array can be valid for some arrangement of persons. If you can uniquely do so, then find out the array H. Otherwise output -1.</p>\n<h3>Input</h3>\n<p>First line contains T : number of test cases. (1 &lt;= T &lt;= 20).</p>\n<p>For each test First line contains an integer n. ( 1 &lt;= n &lt;= 10^5)</p>\n<p>Next line contains n space seperated integers denoting A[i]. (0 &lt;= A[i] &lt;= n)</p>\n<h3>Output</h3>\n<p>For each test case output single line&nbsp;</p>\n<p>If there is a unique way of H. Then print n space seprated integers in the line.</p>\n<p>Otherwise output -1.</p>\n<p>In starting of each test case also put \"Test : testNumber\" (without quotes). Note that there is a space before colon and one space after colon.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />3<br />0 1 1<br />3<br />0 1 0&nbsp;</pre>\n<pre><strong>Output:</strong>\nTest : 1<br />3 1 2<br />Test : 2<br />2 1 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9912915f-1832-44e9-b2a4-82490835458b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9160"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "incdseq-distinct-increasing-subsequences",
  "tags": [],
  "level": "BEGINNER",
  "title": "INCDSEQ - Distinct Increasing Subsequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INCDSEQ - Distinct Increasing Subsequences</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a sequence of N (1 &le; N &le; 10,000) integers S<sub>1</sub>, ..., S<sub>N</sub>&nbsp;(0 &le; S<sub>i</sub>&nbsp;&lt; 1,000,000,000), compute the number of distinct increasing subsequences of S with length K (1 &le; K &le; 50 and K &le; N).</p>\n<h3>Input</h3>\n<p>The first line contains the two integers N and K. The following N lines contain the integers of the sequence in order.</p>\n<h3>Output</h3>\n<p>Print a single integer representing the number of distinct increasing subsequences of S of length K, modulo 5,000,000.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4 3\n1\n2\n2\n10\n\n<strong>Output:</strong>\n1\n</pre>\n<p>The only increasing subsequence of length 3 is 1, 2, 10.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/27480053-fac8-4f46-ab0e-d472c1346494",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9161"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "incseq-increasing-subsequences",
  "tags": [],
  "level": "BEGINNER",
  "title": "INCSEQ - Increasing Subsequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INCSEQ - Increasing Subsequences</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a sequence of N (1 &le; N &le; 10,000) integers S<sub>1</sub>, ..., S<sub>N</sub>&nbsp;(0 &le; S<sub>i</sub>&nbsp;&lt; 100,000), compute the number of increasing subsequences of S with length K (1 &le; K &le; 50 and K &le; N); that is, the number of K-tuples i<sub>1</sub>, ..., i<sub>K</sub>&nbsp;such that 1 &le; i<sub>1</sub>&nbsp;&lt; ... &lt; i<sub>K</sub>&nbsp;&le; N and S<sub>i1</sub>&nbsp;&lt; ... &lt; S<sub>iK</sub>.</p>\n<h3>Input</h3>\n<p>The first line contains the two integers N and K. The following N lines contain the integers of the sequence in order.</p>\n<h3>Output</h3>\n<p>Print a single integer representing the number of increasing subsequences of S of length K, modulo 5,000,000.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4 3\n1\n2\n2\n10\n\n<strong>Output:</strong>\n2\n</pre>\n<p>The two 3-tuples are (1, 2, 4) and (1, 3, 4), both corresponding to the subsequence 1, 2, 10.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/08c4cbfc-56a3-4122-b23b-ec42ca28f147",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9162"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ins14g-kill-them-all",
  "tags": [],
  "level": "BEGINNER",
  "title": "INS14G - Kill them All",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INS14G - Kill them All</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"cv-problem-text\">For his training, Digo is asked to solve the following challenge.<br /><br />There is a mock terrorist situation. There are N terrorists and Digo is teamed up with his friend Sharry. They have to kill all the terrorists. Since this was too easy a task for this dynamic duo, Digo decided to have some fun with this challenge. At any given instant, Digo wants that the number of terrorists killed by him should be more than those killed by Sharry. The terrorists come in a fixed order. Any terrorist can be killed by either Digo or Sharry. Give the total number of ways in which the terrorists can be killed by them such that at every instant terrorists killed by Digo is more than the number of terrorists killed by Sharry. Give your answer modulo 10^9+7.<br /><br />Input Format:-<br /><br />The first line consists of a single integer T, denoting the number of test cases.<br />T lines follow each consisting of an integer N denoting the total number of terrorists.<br /><br />Output Format:-<br /><br />For each test case print the total number of possible ways modulo 10^9 + 7.<br /><br />Constraints:-<br /><br />1 &lt;= t &lt;= 100000<br />1 &lt;= n &lt;= 1000000<br /><br />Sample Input:-<br /><br />2<br />1<br />3<br /><br />Sample Output:-<br /><br />1<br />2</div>\n<p>&nbsp;</p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://www.spoj.com/submit/INS14G/\">&nbsp;Submit solution!</a></div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c50d4891-9372-44d3-a44a-676c483b3134",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9163"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "interva2-interval-challenge",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "INTERVA2 - Interval Challenge",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INTERVA2 - Interval Challenge</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Give you N ( 1 &lt;= N &lt;= 200000 ) intervals, represented as [A, B], for example , interval s represented as [As,Bs].</p>\n<p>For two intervals s and t, we say S covered by T if&nbsp; At &lt;= As and Bs &lt;= Bt. Now my problem is easy, just tell me the question below: For each interval, how many intervals can cover it but not covered by it ?</p>\n<h3>Input</h3>\n<p align=\"left\">The input contains multiple test cases.<br />For each test case, the first line is an integer N ( 1 &lt;= N &lt;= 200000 ), which is the number of intervals. Then come N lines, the i-th of which contains two integers: A<sub>i</sub>&nbsp;and Bi ( A<sub>i&nbsp;</sub>, B<sub>i&nbsp;</sub>will not exceed the 32-bit integer) specifying the two parameters described above.</p>\n<h3>Output</h3>\n<p align=\"left\">For each test case, output one line containing n space-separated integers, the i-th of which specifying the number of intervals that can cover it but not covered by it.&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input</strong></pre>\n<p>3</p>\n<p>0 1</p>\n<p>-1 2</p>\n<p>-2 3</p>\n<p>&nbsp;</p>\n<p>2</p>\n<p>0 1</p>\n<p>0 1</p>\n<pre><strong>Output:</strong></pre>\n<p align=\"left\">2 1 0</p>\n<p align=\"left\">0 0</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e67cfb19-bc43-479e-a795-7949adf7f879",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9164"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "intsub-interesting-subset",
  "tags": [],
  "level": "BEGINNER",
  "title": "INTSUB - Interesting Subset",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INTSUB - Interesting Subset</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a set X = {1, 2, 3, 4, &hellip; , 2n-1, 2n} where n is an integer. You have to find the number of interesting subsets of this set X.</p>\n<p>A subset of set X is interesting if there are at least two integers a &amp; b&nbsp; such that b is a multiple of a, i.e. remainder of b divides by a is zero and a is the smallest number in the set.</p>\n<h3>Input</h3>\n<p>The input file contains multiple test cases. The first line of the input is an integer T(&lt;=30) denoting the number of test cases. Each of the next T lines contains an integer 'n' where 1&lt;=n&lt;=1000.</p>\n<h3>Output</h3>\n<p>For each test case, you have to output as the format below:</p>\n<p>Case X: Y&nbsp;</p>\n<p>Here X is the test case number and Y is the number of subsets. As the number Y can be very large, you need to output the number modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3</pre>\n<pre>1</pre>\n<pre>2</pre>\n<pre>3\n\n<strong>Output:</strong>\nCase 1: 1</pre>\n<pre>Case 2: 9</pre>\n<pre>Case 3: 47</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4294e738-b18f-4920-b8c4-6ea04026c808",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9165"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "inum-interesting-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "INUM - Interesting Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INUM - Interesting Numbers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Jack and Jill went up the hill. Jack proposed Jill after reaching at the top of the hill. Jill gave Jack 'N' numbers and asked him to choose a pair of numbers such that their absolute difference is minimum. She also asked him to choose a pair of numbers such that their absolute difference is maximum. Jill wondered just finding maximum and minimum values is mainstream and it will be a cakewalk for Jack, instead she asked him to find number of pairs which have minimum absolute difference and number of pairs which have maximum absolute difference.</p>\n<p>Jill will accept Jack's proposal only if he can answer her question correctly. Jack does not know programming. Fortunately Jack had his laptop with him, fully charged and with good internet connection. He mailed you the numbers and asked you to mail him the answers back, as you are known to be a good programmer. Now it's your turn to help him.</p>\n<p><strong>Input Format</strong><br />First line contains a positive integer 'N'.<br />Next line contains 'N' non-negative integers 'a[i]' separated by a single space.</p>\n<p><strong>Output Format</strong><br />Print the number of pairs having minimum and maximum difference separated by a single space.</p>\n<p><strong>Constraints</strong><br />1 &le; N &le; 105<br />0 &le; a[i] &le; 1015</p>\n<p><strong>Sample Input</strong><br />5<br />5 12 8 1 35</p>\n<p><strong>Sample Output</strong><br />1 1</p>\n<p><strong>Explanation</strong><br />It's optimal to choose the pair (5, 8) for the minimum difference.So only 1 pair.<br />It's optimal to choose the pair (1,35) for the maximum difference. Here also only 1 pair.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8ac7a42e-02cd-4134-a404-eef72d261163",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9166"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "inumber-interesting-number",
  "tags": [],
  "level": "BEGINNER",
  "title": "INUMBER - Interesting number",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INUMBER - Interesting number</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>For the given number&nbsp;<em>n</em>&nbsp;find the minimal positive integer divisable by&nbsp;<em>n</em>, with the sum of digits equal to&nbsp;<em>n</em>.</p>\n<h3>Input</h3>\n<p><em>t</em>&nbsp;&ndash; the number of test cases, then&nbsp;<em>t</em>&nbsp;test cases follow. (t &lt;= 50)<br />Test case description:<br /><em>n</em>&nbsp;- integer such that 0 &lt;&nbsp;<em>n</em>&nbsp;&lt;= 1000</p>\n<h3>Output</h3>\n<p>For each test case output the required number (without leading zeros).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1\n10\n\n<strong>Output:</strong>\n1\n190</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/28f1881a-ce0e-4194-8dee-5b82727723d2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9167"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "jarjar-helping-jar-jar-binks",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "JARJAR - Helping Jar Jar Binks",
  "content": "<h2 style=\"font-weight: 500;\">JARJAR - Helping Jar Jar Binks</h2>\n<p>&nbsp;</p>\n<p>A job has been assigned to Jar Jar Binks, it goes as follows:</p>\n<p>There are N spaceships parts, each with a weight of Wi kg. Given a weight W, he has to show how many parts can be used in order to make a ship with a weight of exactly W kg. He has to show all possible solutions, of course if possible.</p>\n<p>Everybody knows Jar Jar Binks particularly because of his clumsiness, so you have to help him. Write a program that solves his problem!</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>There will be several cases, each beginning with two integers N, Q (1&lt;=N&lt;=60, 0&lt;=Q&lt;=10000).</p>\n<p>Next there will be N positive integers representing the weights of the N spaceship parts (1&lt;=Wi&lt;=1000).</p>\n<p>Q lines will follow, each one with only one (not necessarily positive) integer W, the total weight of the spaceship.</p>\n<p>End of input will be denoted with N = 0 and Q = 0. This case should not be processed</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>Print a line with K integers per query in ascending order. They must represent the amount of pieces that can be used to make a spaceship with weight W.</p>\n<p>If there is no way to make a spaceship with weight W, output a line with the string &ldquo;That's impossible!&rdquo; (quotes to clarify)</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Example</h3>\n<p style=\"font-weight: 400;\"><strong>Input:</strong></p>\n<p>5 4</p>\n<p>1 2 3 1 1</p>\n<p>3</p>\n<p>5</p>\n<p>1</p>\n<p>9</p>\n<p style=\"font-weight: 400;\">0 0 <strong>Output:</strong></p>\n<p>1 2 3</p>\n<p>2 3 4</p>\n<p>1</p>\n<p style=\"font-weight: 400;\">That's impossible!</p>\n<p><strong>Explanation of the query W = 5</strong></p>\n<p>A spaceship with weight = 5 kg can be formed with 2, 3 and 4 parts, for example:<br />2 kg + 3 kg = 5 kg</p>\n<p>3 kg + 1 kg + 1 kg = 5 kg</p>\n<p style=\"font-weight: 400;\">1 kg + 1 kg + 1 kg + 2 kg = 5 kg</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8e10cef9-a18c-4132-9654-5338ecb2bc76",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9168"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "jgtle-jalil-got-tle",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "JGTLE - Jalil Got TLE",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">JGTLE - Jalil Got TLE</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ananta Jalil is a multi talented person. He can make any task possible which is impossible to others. Recently he has learned programming basic. In a problem, he submitted the following solution:</p>\n<pre>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &amp;t);\n    for(int tc = 1; tc &lt;= t; ++tc) {\n        int a, b, c;\n        scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n        long long result = 0;\n        for(int i = 1; i &lt;= a; ++i) {\n            for(int j = 1; j &lt;= b; ++j) {\n                for(int k = 1; k &lt;= c; ++k) {\n                    result += j * k;\n                }\n            }\n        }\n        printf(\"Case %d: %lld\\n\", tc, result);\n    }\n    return 0;\n}\n</pre>\n<p>But he got TLE (Time Limit Exceeded) as he is novice in programming. That&rsquo;s why his solution was not efficient. So you are here to write an optimized solution for Jalil which will give the same output.</p>\n<h3>Input</h3>\n<p>The first line of input will contain a positive integer T denoting the number of test cases.</p>\n<p>In each test case, there will be 3 positive integers a, b and c.</p>\n<h3>Constraints</h3>\n<ul>\n<li>T &lt;= 1000</li>\n<li>a &lt;= 30</li>\n<li>b &lt;= 100000</li>\n<li>c &lt;= 10000</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, print the output as same as the above program.</p>\n<h3>Example</h3>\n<h4>Input</h4>\n<pre>3\n1 4 3\n3 4 2\n143 342 777</pre>\n<h4>Output</h4>\n<pre>Case 1: 60\nCase 2: 90\nCase 3: 2535110464887</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/58c03671-2727-433f-be3d-e2bd62fc7c35",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9169"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kaltsum-k-alternating-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KALTSUM - k Alternating Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KALTSUM - k Alternating Sum</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sameen has:</p>\n<ol>\n<li>An array having N integers</li>\n<li>Q friends</li>\n</ol>\n<p>His friends are curious about the array. So, each of his friends asks Sameen a question about the array. Every question is described by 3 integers: i, j and k. In reply to a question, Sameen has to say the &ldquo;k alternating sum&rdquo; of the subarray starting at position i and ending at position j [1 based indexing]</p>\n<p>&nbsp;</p>\n<p>&ldquo;k alternating sum&rdquo; of a subarray starting at position i and ending at position j can be calculated in the following way:</p>\n<p>Add the first k numbers[starting from position i]</p>\n<p>Subtract the second k numbers[starting from position i+k]</p>\n<p>Add the third k numbers[starting from position i+2*k]</p>\n<p>Subtract the fourth k numbers[starting from position i+3*k]</p>\n<p>And so on till adding/subtracting the j-th number&hellip;</p>\n<p>(j-i+1) will be divisible by k.</p>\n<p>[See sample Input/output and explanation section for more details]</p>\n<p>Can you help Sameen in answering the questions?&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of input contains two integers N and Q. The next line contains N integers, the numbers in the array. Then each of the following Q lines contains 3 integers i, j &amp; k.&nbsp;</p>\n<h3>Output</h3>\n<p>For each query output an integer in a separate line, the answer for that query. Queries should be answered in the order given in the input.&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<p>1&nbsp;&le;&nbsp;k&nbsp;&le;&nbsp;100000</p>\n<p>1&nbsp;&le;&nbsp;&nbsp;N&nbsp;&le;&nbsp;&nbsp;100000</p>\n<p>1&nbsp;&le;&nbsp;&nbsp;Q&nbsp;&le;&nbsp;100000</p>\n<p>-1000000000&nbsp;&le;&nbsp;&nbsp;Value of a number in the array&nbsp;&le;&nbsp;1000000000</p>\n<p><strong>(j-i+1) will be divisible by k.&nbsp;</strong><strong>&nbsp;</strong></p>\n<p><strong>&nbsp;</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>6 6</p>\n<p>4 1 -2 -3 4 5</p>\n<p>2 5 2</p>\n<p>1 6 1</p>\n<p>1 6 3</p>\n<p>1 6 6</p>\n<p>3 3 1</p>\n<pre>3 4 1</pre>\n<pre><strong>Output:</strong></pre>\n<p>-2</p>\n<p>3</p>\n<p>-3</p>\n<p>9</p>\n<p>-2</p>\n<pre>1</pre>\n<p><strong>Explanation</strong>:</p>\n<p>In the first query, the subarray is [ 1, -2, -3, 4].</p>\n<p>So &ldquo;2 alternating sum&rdquo; is equal to: [1-2]-[-3+4] = -2</p>\n<p>For the second query, we get [4]-[1]+[-2]-[-3]+[4]-[5] = 3</p>\n<p>&nbsp;</p>\n<p>N.B: Dataset is huge. Use faster I/O method.<strong>&nbsp;</strong></p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://www.spoj.com/submit/KALTSUM/\">&nbsp;Submit solution!</a></div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a9f1501d-4444-4bb6-a325-05c208b1a934",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kaththi2-coin-fight",
  "tags": [],
  "level": "BEGINNER",
  "title": "KATHTHI2 - Coin Fight",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KATHTHI2 - Coin Fight</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Problem Statement :</p>\n<p>&nbsp;</p>\n<p>Sathish and Kathiresan are known for Coin Fight.</p>\n<p>Kathiresan kept on tossing a biased coin repeatedly. Then he decided to solve the following problem.</p>\n<p>&nbsp;</p>\n<p>Find the number of tosses for which the probability of getting exactly K heads is maximum. In case of a tie, return the minimum number of tosses.</p>\n<p>In other words, find the minimum n such that Prob (exactly K heads with n tosses) &gt;= Prob (exactly K heads with m tosses) for any m!=n.</p>\n<p>&nbsp;</p>\n<p><strong>Input :&nbsp;</strong></p>\n<p>The first line consists of an integer t, the number of test cases. For each test case you are given an integer K, the number of heads required and a float p, the probability to get a head when the coin is tossed.</p>\n<p>&nbsp;</p>\n<p><strong>Output :</strong></p>\n<p>For each test case find the number of tosses required as defined.</p>\n<p>&nbsp;</p>\n<p><strong>Input Constraints :</strong></p>\n<p>1 &lt;= t &lt;= 100</p>\n<p>1 &lt;= K &lt;= 100</p>\n<p>0.00 &lt; p &lt;= 1.00</p>\n<p>p will always contain 2 decimal places</p>\n<p>&nbsp;</p>\n<p><strong>Time Limit :</strong></p>\n<p>3 seconds</p>\n<p>&nbsp;</p>\n<p><strong>Sample Input :</strong></p>\n<p>3</p>\n<p>5 1.00</p>\n<p>1 0.50</p>\n<p>2 0.30</p>\n<p>&nbsp;</p>\n<p><strong>Sample Output :</strong></p>\n<p>5</p>\n<p>1</p>\n<p>6</p>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/659efeee-b5a4-4641-a70b-28bdbef260b1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kbit-k-bits",
  "tags": [],
  "level": "BEGINNER",
  "title": "KBIT - K-Bits",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KBIT - K-Bits</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given three integers a, b, k. Find the count of numbers in interval [a, b], which have exactly k bits with value 1, in their binary representation.</p>\n<h3>Input</h3>\n<p>Three numbers - a, b, k.</p>\n<pre>0 &lt;= a &lt;= b &lt;= 10^8, 0 &lt;= k &lt;= 30</pre>\n<h3>Output</h3>\n<p>Required count.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n35 1000 3\n\n<strong>Output:</strong>\n110</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/28ae91b1-1567-41fa-9eea-0416b48cc977",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kmoves-knight-moves",
  "tags": [],
  "level": "BEGINNER",
  "title": "KMOVES - Knight Moves",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KMOVES - Knight Moves</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A knight is located at the (black) origin of an infinite chessboard. Let&nbsp;<em>f(n)&nbsp;</em>define the number of black squares the knight can reach after making exactly&nbsp;<em>n</em>&nbsp;moves. Given&nbsp;<em>n&nbsp;</em>(0 &lt;=&nbsp;<em>n</em>&nbsp;&lt;= 10<sup>8</sup>), output&nbsp;<em>f(n)</em>.</p>\n<h3>Input</h3>\n<p>The first line of the input contains a single integer T, the number of test cases (1 &lt;= T &lt;= 10<sup>6</sup>). Each test case consists of a single positive integer&nbsp;<em>n</em>.</p>\n<h3>Output</h3>\n<p>For each value of&nbsp;<em>n</em>&nbsp;in the input, print a single line containing.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />2<br />0<br />1<br /><br /><strong>Output:</strong><br />1<br />0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ae35d8da-9b35-48fb-8bae-4f5e815ea7ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "knmd-subsequences-with-modulo",
  "tags": [],
  "level": "BEGINNER",
  "title": "KNMD - Subsequences with modulo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KNMD - Subsequences with modulo</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given sequence&nbsp;<em>A<sub>1</sub>, A<sub>2</sub>, ... A<sub>n</sub></em>&nbsp;and&nbsp;integer&nbsp;<em>k</em>. For each integer&nbsp;<em>i</em>&nbsp;<em>(0 &le; i &lt; k)</em>&nbsp;find such&nbsp;<strong>nonempty</strong>&nbsp;subsequence of&nbsp;<em>A</em>&nbsp;so that sum of numbers in this subsequence is maximal possible and remainder of integer division of this sum by&nbsp;<em>k</em>&nbsp;is equal to&nbsp;<em>i</em>.</p>\n<h3>Input</h3>\n<p>In first line numbers&nbsp;<em>n</em>&nbsp;and&nbsp;<em>k (1 &le; n &le; 10<sup>6</sup>, 1 &le; k &le; 200)</em>.</p>\n<p>In second line:&nbsp;<em>n</em>&nbsp;numbers representing sequence&nbsp;<em>A (1 &le; A<sub>i</sub>&nbsp;&le; 10<sup>9</sup>)</em>.&nbsp;</p>\n<h3>Output</h3>\n<p>Print&nbsp;<em>k</em>&nbsp;numbers in one line.&nbsp;<em>i</em>'th number represent sum of numbers in subsequence for number&nbsp;<em>i - 1</em>. If there is no such subsequence print -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 5\n2 8 10 44 15 32\n<strong>Output:</strong>\n65 111 77 103 109</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9cf6a73b-4106-4afe-ad66-2868419eba1c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "knmove-knight-move",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KNMOVE - Knight Move",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KNMOVE - Knight Move</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Daniel is a chess player. At his free time, he usually plays chess with his family or his friends. But, sometimes they have their own activities, so Daniel can't play chess. He spends his time to learn about knight's move. He has 1,000 x 1,000 chessboard, numbered from 1 to 1,000. He wants to move his knight from (a,b) to (1,1) with minimum movement. Help Daniel to solve it.</p>\n<h3>Input</h3>\n<p>The input file consists of several lines.</p>\n<p>The first line contains a single number t representing the number of question Daniel asked. [ 1&lt;=t&lt;=1,000 ]</p>\n<p>The next t lines contains a and b representing knight's position on the chessboard. [ 1&lt;= a,b &lt;= 1,000 ]</p>\n<h3>Output</h3>\n<p>The output file should contains t lines.</p>\n<p>The i-th line should contain one number &ndash; the minimum number of knight's movement.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />3 5<br />7 4<br /><br /><strong>Output:</strong>\n2<br />3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9fb56aeb-a3c9-43bd-8f59-4e56dfc35cf7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef916f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "koicost-cost",
  "tags": [],
  "level": "BEGINNER",
  "title": "KOICOST - Cost",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KOICOST - Cost</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given&nbsp;an undirected graph with N verticies and M edges, where the weights are unique.&nbsp;</p>\n<p>There is a function&nbsp;Cost(u, v), which is defined as follows:</p>\n<p>While there is a path between vertex u and v, delete the edge with the smallest weight. Cost(u,v) is the sum of the weights of the edges that were deleted in this process.</p>\n<p><img title=\"graph\" src=\"https://www.spoj.com/content/francky:cost-graph\" alt=\"graph\" width=\"287\" height=\"116\" /></p>\n<p>For example, from the graph above (same as the sample input), Cost(2,6) is 2+3+4+5+6 = 20.</p>\n<p>Given an undirected graph, your task is to calculate the sum of Cost(u,v) for all vertices u and v, where u &lt; v. Since the answer can get large, output the answer modulo 10^9.</p>\n<h3>Input</h3>\n<p>The first line of the input consists of two integers, N and M. (1 &lt;= N &lt;= 100,000, 0 &lt;= M &lt;= 100,000)</p>\n<p>The next M lines consists of three integers, u, v, and w. This means that there is an edge between vertex u and v with weight w. (1 &lt;= u, v &lt;= N, 1 &lt;= w &lt;= 100,000)</p>\n<h3>Output</h3>\n<p>Output the sum specified in the problem statement.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 7<br />1 2 10<br />2 3 2<br />4 3 5<br />6 3 15<br />3 5 4<br />4 5 3<br />2 6 6<br /><br />\n\n<strong>Output:</strong>\n256</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/21f14da6-ebd4-4843-bf56-30e4f30fe7fc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9170"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "koiline-line-up",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KOILINE - Line up",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KOILINE - Line up</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>N people are lined up in a&nbsp;straight line to enter a concert. Each person&nbsp;in this line knows how many people in front&nbsp;have&nbsp;shorter or same heights. Let's call the sequence&nbsp;representing these numbers S. So in other words, S[i] means that there are S[i] people in front of the ith person who have shorter or same heights than that of&nbsp;person i.&nbsp;</p>\n<p>Given the&nbsp;heights of N people and a sequence S, determine the correct&nbsp;order of people lined up. (left is front)&nbsp;&nbsp;&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of the input is an integer N. (1&lt;=N&lt;=100,000)</p>\n<p>The next N lines&nbsp;each consists of one integer&nbsp;H. (1&lt;=H&lt;=2*10^9) These N integers are the heights of people lined up.</p>\n<p>Then,&nbsp;sequence S is given in a single&nbsp;line, separated by a space. &nbsp;</p>\n<h3>Output</h3>\n<p>Determine the correct ordering of people lined up. Total of N lines should be output.&nbsp;The&nbsp;integer on the ith line represents&nbsp;the height of the ith person in the line.&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n12<br />120<br />167<br />163<br />172<br />145<br />134<br />182<br />155<br />167<br />120<br />119<br />156<br />0 1 0 0 3 2 6 7 4 6 9 4<br />\n<strong>Output:</strong>\n134<br />167<br />120<br />119<br />156<br />120<br />167<br />182<br />155<br />163<br />172<br />145</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1ae8967e-0a22-481e-92dd-3034fc7417fc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9171"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kopc12a-k12-building-construction",
  "tags": [],
  "level": "BEGINNER",
  "title": "KOPC12A - K12 - Building Construction",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KOPC12A - K12 - Building Construction</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Given N buildings of height h1,h2,h3...hn, the objective is to make every building has equal height. This can be done by removing bricks from a building or adding some bricks to a building.Removing a &nbsp;brick or &nbsp;adding &nbsp;a brick is done at certain cost which will be given along with the heights of the buildings.Find the minimal cost at which you can make the buildings look beautiful by re-constructing the buildings such that the N buildings satisfy&nbsp;</p>\n<p>h1=h2=h3=..=hn=k ( k can be any number).</p>\n<p>For convenience, all&nbsp;buildings are considered to be vertical piles of bricks, which are of same dimensions.&nbsp;</p>\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Given N buildings of height h1,h2,h3...hn, the objective is to make every building has equal height. This can be done by removing bricks from a building or adding some bricks to a building.Removing a &nbsp;brick or &nbsp;adding &nbsp;a brick is done at certain cost which will be given along with the heights of the buildings.Find the minimal cost at which you can make the buildings look beautiful by re-constructing the buildings such that the N buildings satisfy&nbsp;</div>\n<div id=\"_mcePaste\">h1=h2=h3=..=hn=k ( k can be any number).</div>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>The first line of input contains an integer T which denotes number of test cases .This will be followed by 3*T lines , 3 lines per test case. The first line of each test case contains an integer n and the &nbsp;second line contains n integers which denotes the heights of the buildings [h1,h2,h3....hn] and the third line contains n integers [c1,c2,c3...cn] which denotes the cost of adding or removing one unit of brick from the corresponding building.</p>\n<p>T&lt;=15;n&lt;=10000;0&lt;=Hi&lt;=10000;0&lt;=Ci&lt;=10000;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>The output must contain T lines each line corresponding to a testcase.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>1\n3\n1 2 3\n10 100 1000\n\n\n<strong>Output:</strong></pre>\n<pre><strong>120</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9ecb945d-1e65-4491-9569-31266b7c7f6b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9172"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kopc12h-k12-oe-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "KOPC12H - K12-OE Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KOPC12H - K12-OE Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Rishi loves numbers and number patterns very much. He is interested in finding OE numbers in a range [a, b]. An OE number is a number whose sum of even digits [0, 2, 4, 6, 8] is greater than sum of odd digits [1, 3, 5, 7, 9]. Help him to count how many OE numbers are in range [a, b] { a and b inclusive }</p>\n<pre>Example: \n  - 4563: O = 5+3   = 8, E = 4+6 = 10, E &gt; O, so 4563 is an OE number\n  - 1233, O = 1+3+3 = 7, E = 2,   &nbsp;   &nbsp;E &lt; O, so 1233 is not an OE number\n  -   10,&nbsp;O = 1,         E = 0 &nbsp; &nbsp; &nbsp;   E &lt; O, so 10 is not an OE number</pre>\n<h3>Input</h3>\n<p>The first line of the input file contains&nbsp;<strong>T</strong>&nbsp;which denotes the number of Test cases. The next&nbsp;<strong>T</strong>&nbsp;lines contains two space seperated integers&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>.</p>\n<p>&nbsp;</p>\n<p>1 &lt;=&nbsp;<strong>a</strong>&nbsp;&lt;=&nbsp;<strong>b</strong>&nbsp;&lt;=10^8<br /><strong>T</strong>&nbsp;&lt;= 35.</p>\n<h3>Output</h3>\n<p>Print the number of OE numbers in range [<strong>a</strong>,&nbsp;<strong>b</strong>] {one number per line}</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1 1\n2 10\n1 100000000\n\n<strong>Output:</strong>\n0\n4\n38379932</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/59e98e3c-02bd-4cfa-b708-fecf6d8198c5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9173"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "kpmatrix-matrix",
  "tags": [],
  "level": "EXPERT",
  "title": "KPMATRIX - Matrix",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KPMATRIX - Matrix</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The company you work in has got a secret job to do. Just a few persons know what it is all about. To keep a secret every programmer works on a small part of the project.</p>\n<p>Your job is as follows. You are given a matrix of integer numbers with N rows and M columns. Also two integer numbers A and B are given. Your task is to find a number of submatrices of a given matrix with the sum of elements between A and B inclusively.</p>\n<h3>Input</h3>\n<p>The first line contains two integer numbers N and M (1 &le; N, M &le; 250). After that matrix description follows. N lines with M numbers each. The last line contains two integer numbers A and B (-10^9 &le; A &le; B &le; 10^9). All numbers separated with spaces. It's guaranteed that for every submatrix the absolute value of sum of it's elements will not exceed 10^9.</p>\n<h3>Output</h3>\n<p>Write to the output the number of submatrices of a given matrix with sum of their elements between A and B inclusively.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 3\n1 0 0\n0 1 0\n0 0 1\n1 3\n\n<strong>Output:</strong>\n26</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d5facaea-830e-40a9-9e8c-214b9059818d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9174"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kpowersum-kth-power-summation",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KPOWERSUM - Kth Power Summation",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KPOWERSUM - Kth Power Summation</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Leeana Learned Few New Things Few Days Ago , Like:</p>\n<p>1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Find The Summation Of Divisors</strong>.</p>\n<p>2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Modular Arithmetic</strong></p>\n<p>So Now Her Uncle Gave Her A Task.</p>\n<p>Task Is: You Will Be Given A Number(N) And Another Number(K).&nbsp;<strong>Now You Have To Find &nbsp;K<sub>th</sub>&nbsp;Power Summation Of Divisors Of N.</strong></p>\n<p><strong> <img src=\"https://s3.amazonaws.com/hr-assets/0/1535913118-8f43ee6abc-pic.PNG\" alt=\"\" width=\"318\" height=\"89\" /></strong></p>\n<p>Summation Of All Divisors Of&nbsp;<strong>N</strong>&nbsp;Will Be Huge, &nbsp;So You Have To Print The Summation Module (M=1000000007).</p>\n<p><strong>Like: Divisors Of 6 is: ( 1 2 3 6 ) And K = 2.<br />so, summation is: 1^K+2^K+3^K+6^K = 1^2 + 2^2 + 3^2 + 6^2= 1+4+9+36 = 50%1000000007=50</strong></p>\n<p><strong>Leeana Thinks That You Are A Great Programmer, So She Needs Your Help. Can You Help Her??? :D :D :D&nbsp;</strong></p>\n<h3>Input</h3>\n<p>Input Starts With An Integer T (&le; 500), Denoting The Number Of Test Cases. Each Case Contains An Integer N (1 &le; N &le; 10<sup>15</sup>) And An Integer K (1 &le; K &le; 10<sup>5</sup>) Denoting The Power Of Divisors.</p>\n<h3>Output</h3>\n<p>For Each Test Cases, Print The Case Number And The Kth Power Summation&nbsp; Of Divisors Of N Module 1000000007. After Each Case Print A New Line. See Sample Input And Output For Better Explanation.&nbsp;<img title=\"Cool\" src=\"https://www.spoj.com/gfx/jscripts/tiny_mce/plugins/emotions/img/smiley-cool.gif\" alt=\"Cool\" border=\"0\" /></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n6 2\n6 1\n6 4\n6 3</pre>\n<pre><strong>Output:</strong>\nCase 1: 50\nCase 2: 12\nCase 3: 1394\nCase 4: 252</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9424aa92-cf4f-4455-8522-71e7d20df5ee",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9175"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kprimesb-almost-prime-numbers-again",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KPRIMESB - Almost Prime Numbers Again",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KPRIMESB - Almost Prime Numbers Again</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Almost Prime Numbers are composite numbers which are not divisible by certain prime numbers. Given K prime numbers and an integer N, find out the number of Almost Prime Numbers (ie. composite numbers not divisible by any of the given K prime numbers) that are not greater than N.</p>\n<h3>Input</h3>\n<p>First line of input consists of an integer&nbsp;<strong>T (1&lt;=T&lt;=1000)</strong>, denoting the number of test cases. Then&nbsp;<strong>T</strong>&nbsp;test cases follow. Each case begins with a line containing two integers&nbsp;<strong>N (0&lt;=N&lt;=10^6)</strong>&nbsp;and&nbsp;<strong>K (1&lt;=K&lt;=10)</strong>. The next line contains&nbsp;<strong>K</strong>&nbsp;space separated prime numbers. All the prime numbers are guaranteed to be&nbsp;<strong>less than 50</strong>.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line in the format&nbsp;<strong>Case X: Y</strong>, where&nbsp;<strong>X</strong>&nbsp;denotes the test case number and&nbsp;<strong>Y</strong>&nbsp;denotes the number of Almost Prime Numbers that are not greater than N.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1000 3\n2 3 5\n49 3\n2 3 5</pre>\n<pre><strong>Output:</strong>\nCase 1: 100\nCase 2: 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6894425d-1c87-4b93-8875-c94d5dbe78d1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9176"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kqueryo-k-query-online-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "KQUERYO - K-Query Online",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">KQUERYO - K-Query Online</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a sequence of n numbers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;and a number of k-queries. A k-query is a triple (i, j, k) (1 &le; i &le; j &le; n). For each k-query (i, j, k), you have to return the number of elements&nbsp;<strong>greater than</strong>&nbsp;k in the subsequence a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>.</p>\n<h3>Input</h3>\n<ul>\n<li>Line 1: n (1 &le; n &le; 30000).</li>\n<li>Line 2: n numbers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 10<sup>9</sup>).</li>\n<li>Line 3: q (1 &le; q &le; 200000), the number of k- queries.</li>\n<li>In the next q lines, each line contains 3 numbers a, b, c representing a k-query. You should do the following:\n<ul>\n<li>i = a xor last_ans</li>\n<li>j = b xor last_ans</li>\n<li>k = c xor last_ans</li>\n</ul>\nAfter that 1 &le; i &le; j &le; n, 1 &le; k &le; 10<sup>9</sup>&nbsp;holds.<br />Where last_ans = the answer to the last query (for the first query it's 0).</li>\n</ul>\n<h3>Output</h3>\n<p>For each k-query (i, j, k), print the number of elements greater than k in the subsequence a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>&nbsp;in a single line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6\n8 9 3 5 1 9\n5\n2 3 5\n3 3 7\n0 0 11\n0 0 2\n3 7 4\n\n<strong>Output:</strong>\n1\n1\n0\n0\n2</pre>\n<p>[<strong>Edited by EB</strong>]</p>\nThere are invalid queries. Assume the following:\n<ul>\n<li>if i &lt; 1: i = 1</li>\n<li>if j &gt; n: j = n</li>\n<li>if i &gt; j: ans = 0</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/643903de-8d7b-4ce3-ac06-b3bb8bba7d4f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9177"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastdig-the-last-digit-2",
  "tags": [],
  "level": "BEGINNER",
  "title": "LASTDIG - The last digit",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LASTDIG - The last digit</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Nestor was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His math&rsquo;s teacher gives him two numbers a and b. The problem consist of finding the last digit of the potency of base a and index b. Help Nestor with his problem. You are given two integer numbers: the base a (0 &lt;= a &lt;= 20) and the index b (0 &lt;= b &lt;= 2,147,483,000), a and b both are not 0. You have to find the last digit of a<sup>b</sup>.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer t, the number of test cases (t &lt;= 30). t test cases follow. For each test case will appear a and b separated by space.</p>\n<h3>Output</h3>\n<p>For each test case output an integer per line representing the result.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3 10\n6 2<br /><br /><strong>Output:</strong>\n9\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9e015240-05ff-4985-8987-e84b6948888d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9178"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastshot-the-last-shot",
  "tags": [],
  "level": "BEGINNER",
  "title": "LASTSHOT - THE LAST SHOT",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LASTSHOT - THE LAST SHOT</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Tony Stark is on the mission to save the world from Loki's army so he spread N bombs in the enemy region. He spread the bombs in such a way that a bomb can be in range of another bomb i.e say bomb B1 is in range of bomb B2 , when bomb B2 explodes it will trigger bomb B1 and it also get explode but vice-versa might not be true because the bombs are of different of range. As he is running out of energy so he left with one shot&nbsp;To trigger the bomb .Now he ask Jarvis to find most appropriate bomb which he can trigger to make maximum impact.</p>\n<p>Impact is basically number of bombs get explode.</p>\n<p>Can you help Jarvis to do so?</p>\n<h3>Input</h3>\n<p>First line contains two integer N and M denoting number of bombs and number of relation between the bombs.</p>\n<p>1 &le; n &le; 10000</p>\n<p>1 &le; m &le; 10000</p>\n<p>Next M lines contain two integer A and B denoting bomb B is in range of bomb A.</p>\n<p>1 &le; A &le; N</p>\n<p>1 &le; B &le; N</p>\n<h3>Output</h3>\n<p>A single line containing MAXIMUM IMPACT.</p>\n<h3>Example 1</h3>\n<pre><strong>Input:</strong>\n4 3\n1 2\n2 4\n1 3\n<strong>Output:</strong>\n4</pre>\n<h3>Example 2</h3>\n<pre><strong>Input:</strong>\n4 3\n1 2\n2 1\n2 3\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ab51510c-cef6-4242-88c1-3223605998fa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9179"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ldp-try-to-learn-properly",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LDP - Try to learn properly",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LDP - Try to learn properly</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Most of the programmers like the problem description to be as short as possible, right? I also never like the problem description to be so narrative.</p>\n<p>In this problem, you will be given an array&nbsp;<em>a</em>&nbsp;of n integers. If we multiply all the numbers of the array then we will get a result. Suppose the result is&nbsp;<em>K</em>.</p>\n<p>&nbsp;</p>\n<p>let's introduce another list of all the common multiples of an array as&nbsp;<em>cmp</em>. Definitely,&nbsp;the list has an infinite number of elements.</p>\n<p>&nbsp;</p>\n<p>Suppose, we have an array&nbsp;<em>a</em>&nbsp;= {2, 3, 6}. The result of multiplication of 2, 3 and 6 is 36. So&nbsp;<em>K</em>&nbsp;= 36.</p>\n<p>The 1st common&nbsp;multiple of&nbsp;<em>a&nbsp;</em>is 6, the 2nd common multiple is 12, 3rd is 18, and so on.</p>\n<p>So the list,&nbsp;<em>cmp = {6, 12, 18, 24, 30, 36, 42, ....... }.</em></p>\n<p>&nbsp;</p>\n<p>Now the question is what the position of&nbsp;<em>K&nbsp;in the&nbsp;cmp list</em>? (1-based indexing)</p>\n<p>As the result can be very big, you have to print&nbsp;<em>K</em>&nbsp;%&nbsp;<em>1000000009</em>(<em>10<sup>9</sup>&nbsp;+&nbsp;9)</em>, where % is modulo operator.</p>\n<p>Note: In the above-described example, the position&nbsp;of&nbsp;&nbsp;<em>K&nbsp;</em>is 6. (<em>cmp<sub>6</sub>&nbsp;= K = 36).</em></p>\n<h3>Input</h3>\n<p>The first line of the input will be&nbsp;<em>n</em>, the number of elements in the array.</p>\n<p>In the next line,&nbsp;<em>n</em>&nbsp;elements of the array&nbsp;<em>a<sub>1</sub>,&nbsp;a<sub>2</sub>,&nbsp;a<sub>3</sub>&nbsp;...&nbsp;a<sub>n</sub>&nbsp;will be given.</em></p>\n<p>&nbsp;</p>\n<h4>Constraints</h4>\n<ul>\n<li>0 &lt; n &le; 10<sup>5</sup></li>\n<li>0 &lt;&nbsp;<em>a<sub>i</sub></em>&nbsp;&le; 10<sup>9</sup>(1 &le;&nbsp;<em>i</em>&nbsp;&le; n)</li>\n</ul>\n<h3>Output</h3>\n<p>Print a single integer, the result of the problem described above with a new line.</p>\n<h3>Example</h3>\n<pre>\t\t<strong>Input:</strong>\n\t\t3\n\t\t6 10 8\n\t\t<strong>Output:</strong>\n\t\t4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7204c542-9fcb-452e-9e74-4c0318244bcd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastdig-the-last-digit-3",
  "tags": [],
  "level": "BEGINNER",
  "title": "LASTDIG - The last digit",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LASTDIG - The last digit</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Nestor was doing the work of his math class about three days but he is tired of make operations a lot and he should deliver his task tomorrow. His math&rsquo;s teacher gives him two numbers a and b. The problem consist of finding the last digit of the potency of base a and index b. Help Nestor with his problem. You are given two integer numbers: the base a (0 &lt;= a &lt;= 20) and the index b (0 &lt;= b &lt;= 2,147,483,000), a and b both are not 0. You have to find the last digit of a<sup>b</sup>.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer t, the number of test cases (t &lt;= 30). t test cases follow. For each test case will appear a and b separated by space.</p>\n<h3>Output</h3>\n<p>For each test case output an integer per line representing the result.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3 10\n6 2<br /><br /><strong>Output:</strong>\n9\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/faf09bbf-2a43-4e49-ae6c-78641a3aaf44",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lopov-lopov-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "LOPOV - Lopov",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LOPOV - Lopov</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">The difficult economic situation in the country and reductions in government agricultural subsidy&nbsp;</div>\n<div id=\"_mcePaste\">funding have caused Mirko to change his career again, this time to a thief. His first professional&nbsp;</div>\n<div id=\"_mcePaste\">endeavour is a jewellery store heist.&nbsp;</div>\n<div id=\"_mcePaste\">The store contains N pieces of jewellery, and each piece has some mass Mi</div>\n<div id=\"_mcePaste\">&nbsp;and value Vi</div>\n<div id=\"_mcePaste\">. Mirko has K&nbsp;</div>\n<div id=\"_mcePaste\">bags to store his loot, and each bag can hold some maximum mass Ci</div>\n<div id=\"_mcePaste\">. He plans to store all his loot in&nbsp;</div>\n<div id=\"_mcePaste\">these bags, but at most one jewellery piece in each bag, in order to reduce the likelihood of damage&nbsp;</div>\n<div id=\"_mcePaste\">during the escape.&nbsp;</div>\n<div id=\"_mcePaste\">Find the maximum total jewellery value that Mirko can &ldquo;liberate&rdquo;.&nbsp;</div>\n<p>The difficult economic situation in the country and reductions in government agricultural subsidy funding have caused Mirko to change his career again, this time to a thief. His first professional endeavour is a jewellery store heist.&nbsp;</p>\n<p>The store contains N pieces of jewellery, and each piece has some mass Mi and value Vi. Mirko has K bags to store his loot, and each bag can hold some maximum mass Ci. He plans to store all his loot in these bags, but at most one jewellery piece in each bag, in order to reduce the likelihood of damage during the escape.&nbsp;</p>\n<p>Find the maximum total jewellery value that Mirko can &ldquo;liberate&rdquo;.&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of input contains two numbers, N and K (1 &le; N, K &le; 300 000).&nbsp;</p>\n<p>Each of the following N lines contains a pair of numbers, Mi and Vi (1 &le; Mi, Vi &le; 1 000 000).</p>\n<p>Each of the following K lines contains a number, Ci (1 &le; Ci &le; 100 000 000).&nbsp;</p>\n<p>All numbers in the input are positive integers.&nbsp;</p>\n<h3>Output</h3>\n<p>The first and only line of output must contain the maximum possible total jewellery value.&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n \n2 1 \n5 10 \n100 100 \n11 \n\n<strong>Output:</strong>\n10</pre>\n<pre><strong>&nbsp;</strong></pre>\n<pre><strong>Input:</strong>\n \n3 2 \n1 65 \n5 23 \n2 99 \n10 \n2 \n\n<strong>Output:</strong>\n164</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fab1aa5d-2b06-41f4-a758-bc82161d552d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lostbox-width-of-the-lost-box",
  "tags": [],
  "level": "BEGINNER",
  "title": "LOSTBOX - Width of The Lost Box",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LOSTBOX - Width of The Lost Box</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Minas had a box of marble which is lost last week. About that box Minas only know that length and height of the box was&nbsp;<strong>L</strong>&nbsp;and&nbsp;<strong>H</strong>, and box contains&nbsp;<strong>K</strong>&nbsp;marbles. But he forget the width of the box. But he remember that&nbsp;<strong>width = 2 * radius</strong>&nbsp;of marble and width is also an integer. You can assume that all marble are same.</p>\n<p>Now, Minas will give you<strong>&nbsp;L, H&nbsp;</strong>and<strong>&nbsp;K</strong>. You need to tell him the width of the box. If the width is less than 1 then print&nbsp;<strong>-1</strong>.</p>\n<h3>Input</h3>\n<p>Input starts with an integer&nbsp;<strong>T (1&lt;=T&lt;=1000)</strong>, denoting the number of test cases.<br />Each case contains 3 integer&nbsp;<strong>L (1 &le; L &le; 10^9)</strong>,&nbsp;<strong>H (1 &le; H &le; 10^9)</strong>&nbsp;and&nbsp;<strong>K (1 &le; K &le; 10^9)</strong>.</p>\n<h3>Output</h3>\n<p>For each case of input, print the case number as&nbsp;<strong>\"Case #: x\"</strong>,&nbsp;<strong>#</strong>&nbsp;is replaced by the case number starting from 1 and&nbsp;<strong>x</strong>&nbsp;is replaced by the&nbsp;<strong>maximum possible</strong>&nbsp;width of the box.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2 2 4\n\n<strong>Output:</strong>\nCase 1: 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5b921e3a-be90-40bd-b664-32fb1be10352",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lovebirds-she-was-in-love-with-bst",
  "tags": [],
  "level": "BEGINNER",
  "title": "LOVEBIRDS - She was in Love with BST",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LOVEBIRDS - She was in Love with BST</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Devo!&nbsp;<br />She has broken up with him again!<img title=\"Frown\" src=\"https://www.spoj.com/gfx/jscripts/tiny_mce/plugins/emotions/img/smiley-frown.gif\" alt=\"Frown\" border=\"0\" /></p>\n<p>And after a series of break ups and patch ups , she is done with him!</p>\n<p>Being a geek to keep herself distracted, she picks up her favourite topic of dynamic programming where she comes across this idiot problem which says</p>\n<p>Given a integer N , you have to tell the sum of number of structurally unique Binary search trees built on different permutations of the set{x , x such &nbsp;that x belongs to [1,N] and x is an integer}.</p>\n<p>A Binary Search tree is said to be built on a permutation iff the inorder traversal of that BST is same as the permutation.&nbsp;</p>\n<p>A permutation is said to be distinct from another &nbsp;if there exists a position i such that the i th &nbsp;element of both the permutations is different.&nbsp;</p>\n<p>Now, her inability to solve the problem is quite stressful to her!&nbsp;<br />Help her in Solving the problem! &nbsp;</p>\n<p>NOTE: She observes that this number can be very large so output this number Modulo 1908 .</p>\n<p>Morover she tells you that there inorder traversal of a Binary search tree is Unique.&nbsp;</p>\n<p>For Binary Search Tree Read https://en.wikipedia.org/wiki/Binary_search_tree</p>\n<h3>Input</h3>\n<p>The first line of the input consists of T , the number of test cases.</p>\n<p>The following T lines consists of a single integer N&nbsp;</p>\n<p>(N can be at max 1000 , T can be at max 1000)</p>\n<h3>Output&nbsp;</h3>\n<p>You have to Output T lines each consisting of the answer to the problem Modulo 1908</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<p>&nbsp;</p>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>1</pre>\n<pre>2</pre>\n<pre><strong>Output:</strong>\n1\n</pre>\n<pre>2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5a1f6d1f-1d73-4c7f-beff-7a41381cec51",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lucky713-lucky-7-unlucky-13",
  "tags": [],
  "level": "BEGINNER",
  "title": "LUCKY713 - Lucky 7, Unlucky 13",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">LUCKY713 - Lucky 7, Unlucky 13</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The &nbsp;numbers &nbsp;7 &nbsp;and &nbsp;13 &nbsp;are &nbsp;always &nbsp;fighting &nbsp;with &nbsp;each &nbsp;other. &nbsp;7 &nbsp;says &nbsp;he&rsquo;s &nbsp;lucky, &nbsp;and &nbsp;calls &nbsp;13 unlucky &nbsp;and &nbsp;upsets &nbsp;him. &nbsp;One &nbsp;day, &nbsp;7 &nbsp;decided &nbsp;not &nbsp;to &nbsp;fight &nbsp;with &nbsp;13 &nbsp;anymore. &nbsp;He &nbsp;called &nbsp;13 and &nbsp;said, &nbsp;&ldquo;Let&rsquo;s &nbsp;work &nbsp;together &nbsp;and &nbsp;not &nbsp;fight &nbsp;anymore. &nbsp;Let&rsquo;s &nbsp;find &nbsp;the &nbsp;sum &nbsp;of &nbsp;our Your &nbsp;job &nbsp;is &nbsp;to &nbsp;find &nbsp;the &nbsp;sum &nbsp;of &nbsp;the &nbsp;multiples &nbsp;of &nbsp;7 &nbsp;and &nbsp;13, &nbsp;lower &nbsp;than &nbsp;the &nbsp;specified &nbsp;input number.</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>The first line in the data set is an integer T (1&lt;=T&lt;=100) that represents the</p>\n<p>number of test cases that follow. Each test case contains one integer N (1&lt;=N&lt;=10^8).</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case print the summation. See sample input and output for exact format.</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /><br /></strong>3<br />256<br />100<br />38</pre>\n<pre>Output:<br /><br />Case 1: 6859<br />Case 2: 1008<br />Case 3: 144</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f18f820b-b8e8-4ce8-b79f-b4397abfe645",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef917f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "lvader-luke-vs-darth-vader",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LVADER - Luke vs. Darth Vader",
  "content": "<h2 style=\"font-weight: 500;\">LVADER - Luke vs. Darth Vader</h2>\n<p>&nbsp;</p>\n<p>You know one of the most dangerous villain of all time, it's Darth Vader. It's time to stop him and Master Luke is looking forward to fight against him. They both are in an infinite two-dimensional grid. Each cell is denoted by (x, y). Here x denotes the row number and y denotes the column number of that cell. Please have a look on that picture of 5*7 grid to understand.</p>\n<p>&nbsp;</p>\n<p>0,0 0,1 0,2 0,3 0,4 0,5 0,6</p>\n<p>&nbsp; &nbsp;1,0</p>\n<p>2,0</p>\n<p>3,0</p>\n<p>4,0</p>\n<table>\n<tbody>\n<tr>\n<td width=\"62\">\n<p>0,0</p>\n</td>\n<td width=\"74\">\n<p>0,1</p>\n</td>\n<td width=\"74\">\n<p>0,2</p>\n</td>\n<td width=\"74\">\n<p>0,3</p>\n</td>\n<td width=\"74\">\n<p>0,4</p>\n</td>\n<td width=\"74\">\n<p>0,5</p>\n</td>\n<td width=\"74\">\n<p>0,6</p>\n</td>\n</tr>\n<tr>\n<td width=\"62\">\n<p>&nbsp;&nbsp; 1,0</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td width=\"62\">\n<p>2,0</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td width=\"62\">\n<p>3,0</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td width=\"62\">\n<p>4,0</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n<td width=\"74\">\n<p>&nbsp;</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>Luke stays at a cell (x1, y1) and Vader stays at another cell (x2, y2). It is guaranteed that x1&lt;=x2 and y1&lt;=y2. Master Luke need to reach to the Vader&rsquo;s cell. Each time Luke can move one step below horizontally or vertically or diagonally. That means, if his position is (x, y) then he can move to (x+1, y) or (x, y+1) or (x+1, y+1) cell in a single move. Given Luke and Vader&rsquo;s position you have to determine in how many ways Luke can reach to the Vader&rsquo;s cell. As the answer can be very large output the solution modulo 10^9 + 7.</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>Input starts with an integer (T&lt;=50) which denotes the number of test case. Each test case consists four integer x1, y1, x2, y2 (0&lt;=x1&lt;=x2&lt;=100000 and 0&lt;=y1&lt;=y2&lt;=100000), the position of Luke and Vader.</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>For each test case, print the number of ways Luke can reach to the Vader&rsquo;s cell modulo 10^9 + 7.</p>\n<h3 style=\"font-weight: 500;\">Example</h3>\n<p style=\"font-weight: 400;\"><strong>Input:</strong></p>\n<p>3</p>\n<p>1 2 2 3</p>\n<p>2 2 3 3</p>\n<p style=\"font-weight: 400;\">3 4 3 5 <strong>Output:</strong></p>\n<p>Case 1: 3</p>\n<p>Case 2: 3</p>\n<p style=\"font-weight: 400;\">Case 3: 1<strong>Explanation:</strong>In the first case he can move from (1, 2) to (2, 3) in the following 3 ways, (1, 2) --&gt; (1, 3) --&gt; (2, 3) (1, 2) --&gt; (2, 2) --&gt; (2, 3) (1, 2) --&gt; (2, 3)</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1d568cf7-91be-4993-90fa-e14e13f52424",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9180"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "m_seq-mosty-find-gn",
  "tags": [],
  "level": "BEGINNER",
  "title": "M_SEQ - Mosty! Find Gn",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">M_SEQ - Mosty! Find Gn</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Omar want to examine Mostafa in math , Mostafa asked to give G(n) that defined as :</p>\n<p><img title=\"G(n) = sqrt( F(n) - ( (n-1)^2 * F(n-1) / n^2 ) + 1/n^2  )\" src=\"https://www.spoj.com/content/simes:M_SEQ-1.jpg\" alt=\"G(n) = sqrt( F(n) - ( (n-1)^2 * F(n-1) / n^2 ) + 1/n^2  )\" width=\"248\" height=\"61\" /></p>\n<p>while :</p>\n<p>&nbsp;</p>\n<p><img title=\"F(n) = 8 + (   ((n-2)^2 )*(F(n-2)) /n^2  )\" src=\"https://www.spoj.com/content/simes:M_SEQ-1.jpg\" alt=\"F(n) = 8 + (   ((n-2)^2 )*(F(n-2)) /n^2  )\" width=\"195\" height=\"56\" /></p>\n<p>&nbsp;</p>\n<p>Mostafa need your help to find G(n) ( n : givin integer)</p>\n<p>assume that : F(1) = 8 , F(2) = 8;</p>\n<h3>Input</h3>\n<p>T number of test cases in the first line , T line follow with an integer n .</p>\n<h3>Output</h3>\n<p>Print G(n) for each test case with 8 decimal digits after the point ( 0 &lt; G(n) &lt; 3)</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3<br />5<br />7<br />42<br /><br /><strong>Output:</strong></pre>\n<pre>2.20000000\n2.14285714\n2.02380952</pre>\n<pre>T &lt; 10^4<br />2 &lt; n &lt; 10^9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/25682c0d-2e82-49e9-a4e2-285da92bcebe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9181"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "machcool-machine-cooling",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MACHCOOL - Machine Cooling",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MACHCOOL - Machine Cooling</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Duck is a buzy guy who has&nbsp;<strong>N</strong>&nbsp;tasks to do in a single day. The i-th task&nbsp;is scheduled at the&nbsp;<strong>D<sub>i</sub></strong>&nbsp;second starting from 00:00:00, for example, 65 is 00:01:05 and 82800 is 23:00:00. He recently bought&nbsp;<strong>M</strong>&nbsp;machines to help him complete the tasks automatically. Machines are very powerful that they can complete a task in 0 second, or you can say each machine can complete unlimited number of tasks scheduled at the same second.</p>\n<p>\"Unused machine is wasted machine\", so Duck wants to use exactly M machines to complete all tasks. However, he also wants to maximize the cooling time of each machine whenever it completes a task, in order to make it more durable. Given that the maximum cooling time of each machine is 86400, no matters at what second a machine completes a task, but the cooling time must be the same for all machines. What is the maximum cooling time that every machine can have if you distribute all machines optimally?</p>\n<h3>Input</h3>\n<p>The first line is the number of test cases&nbsp;<strong>T</strong>. (1 &le; T &le; 50)</p>\n<p>For each test case, it starts with the number of tasks&nbsp;<strong>N</strong>&nbsp;and the number of machines&nbsp;<strong>M</strong>. (1 &le; N &le; 100, 1 &le; M &le; N)</p>\n<p>The next line has N integers,&nbsp;<strong>D<sub>i</sub></strong>&nbsp;is the second counting from 00:00:00 that the i-th task is scheduled at. (0 &le; D<sub>i</sub>&nbsp;&le; 86399)</p>\n<h3>Output</h3>\n<p>Output the maximum cooling time that every machine can have.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n14 8\n20 450 1 23605 1002 80727 5360 30000 623 40000 623 8888 959 902\n6 6\n9328 2018 80012 5840 33333 1024\n3 2\n727 727 727\n8 2\n2400 201 65003 73099 123 86399 86399 79821\n</pre>\n<pre><strong>Output:</strong>\n5359\n86400\n0\n2277</pre>\n<h3>Explanation</h3>\n<pre>In case 1, we can distribute the i-th machines responsible for different tasks as follows:\n[1, 5360, 23605, 80727], [20, 8888, 30000, 40000], [450], [1002], [623], [623], [959], [902]\nAnd now the maximum cooling time of each machine is 5359, 8886, 86400, 86400, 86400, 86400, 86400 and 86400 respectively, hence for all machines the answer is 5359.\n\nIn case 2, one machine for one task and both can have the cooling time of 86400.\n\nIn case 3, one machine for [727, 727] and another for [727], we then have the cooling time of 0 and 86400, hence the final answer is 0.\n\nIn case 4, we can have [123, 2400, 65003, 86399] and [201, 73099, 79821, 86399], we choose 2277 from 2277 and 6578.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6e1288a2-035b-41d7-9cc0-3fa3dbfe1540",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9182"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "main72-subset-sum",
  "tags": [],
  "level": "BEGINNER",
  "title": "MAIN72 - Subset sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MAIN72 - Subset sum</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given an array of N integers. Now you want to find the sum of all those integers which can be expressed as the sum of at least one subset of the given array.</p>\n<h3>Input</h3>\n<p>First line contains T the number of test case. then T test cases follow, first line of each test case contains N (1 &lt;= N &lt;= 100) the number&nbsp;of integers, next line contains N integers, each of them is between 0 and 1000 (inclusive). &nbsp;</p>\n<h3>Output</h3>\n<p>For each test case print the answer in a new line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n0 1\n3\n2 3 2\n\n<strong>Output:</strong>\n1\n21</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/209ef446-1ad8-48cc-a266-b6b63987e813",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9183"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "main74-euclids-algorithm-revisited",
  "tags": [],
  "level": "BEGINNER",
  "title": "MAIN74 - Euclids algorithm revisited",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MAIN74 - Euclids algorithm revisited</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Consider the famous euclid algoithm to calculate the GCD of two integers (a, b):</p>\n<pre>int gcd(int a, int b) {\n    while (b != 0) {\n        int temp = a;\n        a = b;\n        b = temp % b;\n    }\n    return a;\n}</pre>\n<p>for input (7, 3) the 'while' loop will run 2 times as follows: (7, 3) =&gt; (3, 1) =&gt; (1, 0)</p>\n<p>Now given an integer N you have to find the smallest possible sum of two non-negative integers a, b (a &gt;= b) such that the while loop in the above mentioned function for (a, b) will run exactly N times.</p>\n<h3>Input</h3>\n<p>First line of input contains T (1 &lt;= T &lt;= 50) the number of test cases. Each of the following T lines contains an integer N (0 &lt;= N &lt;= 10^18).</p>\n<h3>Output</h3>\n<p>For each test case print the required answer modulo 1000000007 in a seperate line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n1\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e2847cd2-5724-4630-9522-2adf928017e3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9184"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "main111-strictly-not-a-prime",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MAIN111 - Strictly not a Prime",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MAIN111 - Strictly not a Prime</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Tim defines an integer as \"Strictly not a Prime\", if no subsequence(considering the integer as a string of digits) of the integer is a prime. He needs your help in finding how many such integers are present between two given integers A and B(including A and B).</p>\n<h3>Input</h3>\n<p>First line contains an integer T(1 &lt;= T &lt;= 100000) which denotes the total number test cases. Each test case consists of two integers A and B (1 &lt;= A, B &lt;= 100000) on a single line.</p>\n<h3>Output</h3>\n<p>For each test case, print the total count of integers which are \"Strictly not a prime\" between A and B(including A and B) as per tim.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>3 6</pre>\n<pre>7 10</pre>\n<pre><strong>Output:</strong>\n2\n</pre>\n<pre>3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/638a4f45-9719-42a2-a866-4db7b442db62",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9185"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "marscol-martian-colony",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MARSCOL - Martian Colony",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MARSCOL - Martian Colony</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Martian Colony is one of the best single player strategy games developed by a renowned game development company. The player has to destroy several colonies on Mars while playing the game.</p>\n<p>The planet Mars has&nbsp;<strong>N</strong>&nbsp;villages numbered from&nbsp;<strong>1</strong>&nbsp;to&nbsp;<strong>N</strong>. Among the villages, the village numbered&nbsp;<strong>i</strong>&nbsp;has&nbsp;<strong>di</strong>&nbsp;amount of Diamonds. There are&nbsp;<strong>E</strong>&nbsp;one-way roads between some pair of villages, that is, if there is a road from village&nbsp;<strong>u</strong>&nbsp;to village&nbsp;<strong>v</strong>, Martians can only move from village&nbsp;<strong>u</strong>&nbsp;to village&nbsp;<strong>v</strong>. A number of villages make a colony when for every pair of villages&nbsp;<strong>u</strong>&nbsp;and&nbsp;<strong>v</strong>&nbsp;of that colony, there is a path from village&nbsp;<strong>u</strong>&nbsp;to the village&nbsp;<strong>v</strong>&nbsp;and the opposite. A path is a sequence of several roads. Each colony has some hit points which is the sum of the lengths of the roads inside that colony. A colony can be destroyed by using marsa points equal to the hit points of that colony. Destroying a colony will add the total number of diamonds of the villages of that colony to the player&rsquo;s score.</p>\n<p>Alon is your best friend. He loves to play strategy games and trying this new one. He loves to score the maximum always. At some stage of the game he is stuck with&nbsp;<strong>M</strong>&nbsp;amount of marsa points. He wonders, what is the highest score he can gain using maximum&nbsp;<strong>M</strong>&nbsp;marsa points. As a best friend of Alon, he seeks your help to calculate the exact score.</p>\n<h3>Input</h3>\n<p>The first line of input will contain&nbsp;<strong>T</strong>&nbsp;denoting the number of test cases. Before every test case there will be a blank line. The first line of the test cases will contain 3 integers&nbsp;<strong>N, E</strong>&nbsp;and&nbsp;<strong>M ( 1 &le; N &le; 100, 0 &le; E &le; N^2, 1 &le; M &le; 5000 )</strong>. The next line will contain&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>di ( -100 &le; di &le; 100)</strong>&nbsp;that represent the number of diamonds in the ith village. Each of the next E lines will contain three integers&nbsp;<strong>u</strong>,&nbsp;<strong>v</strong>&nbsp;and&nbsp;<strong>w</strong>&nbsp;<strong>( 1 &le; u, v &le; N, 1 &le; w &le; 1000 )</strong>&nbsp;which means there is a road from village&nbsp;<strong>u</strong>&nbsp;to village&nbsp;<strong>v</strong>&nbsp;of length&nbsp;<strong>w</strong>.</p>\n<h3>Output</h3>\n<p>For each test case print a single line containing&nbsp;<strong>&ldquo;Case X: S&rdquo;</strong>, where X is the case number and&nbsp;<strong>S</strong>&nbsp;is the maximum score Alon can score.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n\n3 3 3\n3 3 3\n1 2 3\n2 3 3\n2 1 3\n\n<strong>Output:</strong>\nCase 1: 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c5f56d92-9e3f-4787-8479-30395ef4cd8d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9186"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "marybmw-bmw",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MARYBMW - BMW",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MARYBMW - BMW</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">&nbsp;</p>\n<div id=\"_mcePaste\">Mary is very very happy. You would be happy too if your parents give you the latest model BMW for your birthday. She wants to try out her new car and that's why she is going to visit her grandma.</div>\n<div id=\"_mcePaste\">There is a graph with N vertices representing N cities and M edges representing bidirectional roads between some pairs of cities. We can assume that Mary lives in city 1 and her grandma lives in city N. Unfortunately, not everything is so good in life and examples are the speed limits. Mary decided to drive with permanent speed. Each of these M roads has a maximum permissible speed V that Mary can't exceed. Well, her whims don't end here. As a lover of the extreme experiences she wants to drive her expensive car as fast as possible.</div>\n<div id=\"_mcePaste\">You are to write a program to find the maximum speed that Mary can reach her grandma's city without having arguments with the policemen(for their own good).</div>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;Mary is very very happy. You would be happy too if your parents give you the latest model BMW for your birthday. She wants to try out her new car and that's why she is going to visit her grandma.</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;There is a graph with N vertices representing N cities and M edges representing bidirectional roads between some pairs of cities. We can assume that Mary lives in city 1 and her grandma lives in city N. Unfortunately, not everything is so good in life and examples are the speed limits. Mary decided to drive with permanent speed. Each of these M roads has a maximum permissible speed V that Mary can't exceed. Well, her whims don't end here. As a lover of the extreme experiences she wants to drive her expensive car as fast as possible.</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;You are to write a program to find the maximum speed that Mary can reach her grandma's city without having arguments with the policemen (for their own good).</p>\n<p><strong>&nbsp; &nbsp; &nbsp; &nbsp;Note: There may be more than one road between two cities.</strong></p>\n<h3>Input</h3>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;The first line of the input contains the number of tests &ndash; T (T &lt;= 5). On the first line of each test case there are two integers &ndash; N (2 &lt;= N &lt;= 50000) and M (1 &lt;= M &lt;= 100000). On the next M lines there are three integers A, B, and V representing a bidirectional road between cities A and B with speed limit V where 1 &lt;= V &lt;= 10^18 (It's a BMW after all).</p>\n<h3>Output</h3>\n<p align=\"justify\">&nbsp;&nbsp;&nbsp;&nbsp;On a single line print the maximum possible speed Mary can reach. If she can't reach her grandma's house, print -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p align=\"justify\">1</p>\n<p align=\"justify\">4 5</p>\n<p align=\"justify\">1 2 80</p>\n<p align=\"justify\">3 1 20</p>\n<p align=\"justify\">2 3 60</p>\n<p align=\"justify\">4 3 300</p>\n<p align=\"justify\">2 4 90</p>\n<pre>\n<strong>Output:</strong></pre>\n<p align=\"justify\">80</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4e50184c-3d9d-4e44-be32-63c306a78c5c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9187"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mathlove-math-is-love",
  "tags": [],
  "level": "BEGINNER",
  "title": "MATHLOVE - Math is Love",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MATHLOVE - Math is Love</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"center\">&nbsp;</p>\n<p>Rashid loves mathematics. He recently started to learn how the various function works in mathematics. On his journey through the math world, he came in touch with a function named Y.</p>\n<p>He also came to know that, here Y means the summation of number from 0 to n. For example if n = 5, then&nbsp;</p>\n<p>Y = 0+1+2+3+4+5 = 15.</p>\n<p>Now he is wondering if the knows the value of Y, can he find the value of n for the above equation?</p>\n<p>Being so very new to the math world, he could not figure out how to approach this new problem. So he came to you for help. Can you help him?</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>First line of input will be&nbsp;<strong>T(1&lt;=T&lt;=100000)</strong>, denoting the number of test cases.</p>\n<p>Next&nbsp;<strong>T</strong>&nbsp;lines will contain the number&nbsp;<strong>Y(1&lt;=Y&lt;=3*10^9)</strong>, value of the above function.</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>For each test case, if there is exist a value of&nbsp;<strong>n</strong>&nbsp;for which the above function gives the output&nbsp;<strong>Y</strong>&nbsp;then print</p>\n<p>that value of&nbsp;<strong>n</strong>, otherwise if print &ldquo;<strong>NAI</strong>&rdquo;. (quotes for clarification).</p>\n<p>&nbsp;</p>\n<p>Note: Data set is huge, use scanf,printf for faster input, output.&nbsp;</p>\n<p>&nbsp;</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"312\">\n<p>Sample Input</p>\n</td>\n<td valign=\"top\" width=\"312\">\n<p>Sample Output</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"312\">\n<p>5</p>\n<p>11</p>\n<p>15</p>\n<p>21</p>\n<p>1</p>\n<p>7626</p>\n</td>\n<td valign=\"top\" width=\"312\">\n<p>NAI</p>\n<p>5</p>\n<p>6</p>\n<p>1</p>\n<p>123</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/01ed90c6-7047-461f-a721-c54009bbeaa3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9188"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maxln-the-max-lines",
  "tags": [],
  "level": "BEGINNER",
  "title": "MAXLN - THE MAX LINES",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MAXLN - THE MAX LINES</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In this problem you will be given a half-circle. The half-circle&rsquo;s radius is&nbsp;<em>r</em>. You can take any point A on the half-circle and draw 2 lines from the point to the two sides of the diameter(AB and AC). Let the sum of square of one line&rsquo;s length and the other line&rsquo;s length is&nbsp;<em>s</em></p>\n<center><img src=\"http://www.spoj.com/content/min_25:maxln.png\" width=\"346px;\" height=\"200px;\" /></center>\n<p>Like in the figure&nbsp;<em>s</em>&nbsp;=&nbsp;<em>AB</em><sup>2</sup>&nbsp;+&nbsp;<em>AC</em>. And&nbsp;<em>BC</em>&nbsp;= 2<em>r</em>.</p>\n<p>Now given&nbsp;<em>r</em>&nbsp;you have to find the maximum value of&nbsp;<em>s</em>. That is you have to find point A such that&nbsp;<em>AB</em><sup>2</sup>&nbsp;+&nbsp;<em>AC</em>&nbsp;is maximum.</p>\n<h3>Input</h3>\n<p>First line of the test case will be the number of test case T (1 &lt;= T &lt;= 1000). Then T lines follows. On each line you will find a integer number&nbsp;<em>r</em>&nbsp;(1 &lt;=&nbsp;<em>r</em>&nbsp;&lt;= 1000000); each representing the radius of the half-circle.</p>\n<h3>Output</h3>\nFor each input line, print a line containing&nbsp;<tt>\"Case I: \"</tt>, where I is the test case number and the maximum value of&nbsp;<em>s</em>. Print 2 digit after decimal (Errors should be less then .01).\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n1\n1\n\n<strong>Sample Output:</strong>\nCase 1: 4.25</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/76fa3c63-5445-43c7-a032-4c24ae9be28e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9189"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maxsumsq-maximum-sum-sequences",
  "tags": [],
  "level": "BEGINNER",
  "title": "MAXSUMSQ - Maximum Sum Sequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MAXSUMSQ - Maximum Sum Sequences</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an array A having n elements, let X be the maximum sum of any contiguous sequence in the array. How many contiguous sequences in A sum up to X ?</p>\n<h3>Input</h3>\n<p>The first line contains T the number of test cases. There follow 2T lines, 2 for each test case. The first line contains the n, the number of elements in the array. The second line contains n space seperated integers Ai.</p>\n<h3>Output</h3>\n<p>Output T lines, one for each test case. On each line, output two space seperated integers; the maximum sequence sum, and the number of sequences which obtain this maximum sum.</p>\n<h3>Example</h3>\n<p><strong>Sample Input</strong></p>\n<pre>2<br />3<br />-1 -1 -1<br />4<br />2 0 -2 2</pre>\n<p><strong>Sample Output</strong></p>\n<pre>-1 3<br />2 4</pre>\n<h3>Constraints</h3>\n<p><br />1 &lt;= T &lt;= 35<br />1 &lt;= n &lt;= 100000<br />-1000 &lt;= Ai &lt;= 1000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0bff37b3-5051-4954-bf4a-feb7f69834f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mb1-pp-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "MB1 - PP numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MB1 - PP numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>PP numbers are prime numbers and palindromes in decimal notation at once. Your task is to find&nbsp;<em>n</em>-th PP number in ascending order. Then calculate product of its non-zero digits - let's call it&nbsp;<em>m</em>&nbsp;- and find&nbsp;<em>m</em>-th prime number in ascending order.</p>\n<h3>Input</h3>\n<p>In the first line of input there is one positive integer&nbsp;<em>Z</em>&nbsp;(1 &le;&nbsp;<em>Z</em>&nbsp;&le; 1000) which states the number of test cases. Following&nbsp;<em>Z</em>&nbsp;lines contain test cases.</p>\n<p>Each test case consists of one positive integer&nbsp;<em>n</em>&nbsp;(1 &le;&nbsp;<em>n</em>&nbsp;&le; 113) which states the number of PP number to find.</p>\n<h3>Output</h3>\n<p>For each test case print in separate line two numbers:&nbsp;<em>n</em>-th PP number and&nbsp;<em>m</em>-th prime number.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<pre>3\n1\n5\n2\n</pre>\n<p><strong>Output:</strong></p>\n<pre>2 3\n11 2\n3 5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/098d7688-ed8a-4e12-b98b-bc1b935ca0d4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mcoins-coins-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "MCOINS - Coins Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MCOINS - Coins Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><a href=\"https://www.spoj.com/problems/tag/dynamic-programming\"><span class=\" tag-algorithm-datastructure- tag-link problem-tag\" data-tagid=\"45\">#dynamic-programming</span></a></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MCOINS/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MCOINS/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>Asen and Boyan are playing the following game. They choose two different positive integers K and L, and start the game with a tower of N coins. Asen always plays first, Boyan &ndash; second, after that &ndash; Asen again, then Boyan, and so on. The boy in turn can take 1, K or L coins from the tower. The winner is the boy, who takes the last coin (or coins). After a long, long playing, Asen realizes that there are cases in which he could win, no matter how Boyan plays. And in all other cases Boyan being careful can win, no matter how Asen plays.</p>\n<p>So, before the start of the game Asen is eager to know what game case they have. Write a program coins which help Asen to predict the game result for given K, L and N.</p>\n<h3>INPUT</h3>\n<p>The input describes m games.</p>\n<p>The first line of the standard input contains the integers K, L and m, 1 &lt; K &lt; L &lt; 10, 3 &lt; m &lt; 50. The second line contains m integers N1, N2, &hellip;, Nm, 1 &le; Ni &le; 1 000 000, i = 1, 2, &hellip;., m, representing the number of coins in each of the m towers</p>\n<pre>SAMPLE INPUT<br />2 3 5 <br />3 12 113 25714 88888</pre>\n<h3>OUTPUT</h3>\n<p>The standard output contains a string of length m composed of letters A and B. If Asen wins the ith game (no matter how the opponent plays), the ith letter of the string has to be A. When Boyan wins the ith game (no matter how Asen plays), the ith letter of the string has to be B.</p>\n<pre>SAMPLE OUTPUT<br />ABAAB</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0c796dba-8a13-4e55-addd-3dd081e13212",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "median3-the-famous-icpc-team-again",
  "tags": [],
  "level": "BEGINNER",
  "title": "MEDIAN3 - The Famous ICPC Team Again",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MEDIAN3 - The Famous ICPC Team Again</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>When Mr. B, Mr. G and Mr. M were preparing for the 2012 ACM-ICPC World Final Contest, Mr. B had collected a large set of contest problems for their daily training. When they decided to take training, Mr. B would choose one of them from the problem set. All the problems in the problem set had been sorted by their time of publish. Each time Prof. S, their coach, would tell them to choose one problem within a particular publish time interval. That is to say, if problems had been sorted in a line, each time they will choose one of them from a specified segment of the line.</p>\n<p>Moreover, when collecting the problems, Mr. B had also known an estimation of the difficulty of each problem. When he was asked to choose a problem, if he chose the easiest one, Mr. G would complain that &ldquo;Hey, what a trivial problem!&rdquo;; if he chose the hardest one, Mr. M would grumble that it took too much time to finish it. For addressing this dilemma, Mr. B decided to take the one with the medium difficulty. Therefore he needed a way to know the median number in the given interval of the sequence.</p>\n<h3>Input</h3>\n<p>For each test case, the first line contains a single integer&nbsp;<strong>n</strong>&nbsp;(1 &lt;=&nbsp;<strong>n</strong>&nbsp;&lt;= 100,000) indicating the total number of problems. The second line contains&nbsp;<strong>n</strong>&nbsp;integers&nbsp;<strong>x<sub>i</sub></strong>&nbsp;(0 &lt;=&nbsp;<strong>x<sub>i</sub></strong>&nbsp;&lt;= 1,000,000,000), separated by single space, denoting the difficulties of each problem, already sorted by publish time. The next line is a single integer&nbsp;<strong>m</strong>&nbsp;(1 &lt;=&nbsp;<strong>m</strong>&nbsp;&lt;= 100,000), specifying number of queries. Then m lines follow, each line contains a pair of integers,&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>&nbsp;(1 &lt;=&nbsp;<strong>A</strong>&nbsp;&lt;=&nbsp;<strong>B</strong>&nbsp;&lt;=&nbsp;<strong>n</strong>), denoting that Mr. B needed to choose a problem between positions&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>&nbsp;(inclusively, positions are counted from 1). It is guaranteed that the number of items between&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>&nbsp;is odd.</p>\n<h3>Output</h3>\n<p>For each query, output a single line containing an integer which denotes the difficulty of the problem that Mr. B should choose.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n5 3 2 4 1\n3\n1 3\n2 4\n3 5\n5\n10 6 4 8 2\n3\n1 3\n2 4\n3 5\n\n<strong>Output:</strong>\nCase 1:\n3\n3\n2\nCase 2:\n6\n6\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1588577f-2966-4dd3-92c5-935cfbd4ae94",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mincount-move-to-invert",
  "tags": [],
  "level": "BEGINNER",
  "title": "MINCOUNT - Move To Invert",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MINCOUNT - Move To Invert</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A triangle made of coins of height h is as follows<br />It has h coins at the base and h-1 coins one level above base and so on.(Coins are placed as shown in the figure below)<br />And at the top most level there will be only one coin<br />Now given h the task is to invert this triangle by moving minimum number of coins. For example when h=4 triangle is<br /><img src=\"https://www.spoj.com/content/abhilash_i:invert\" alt=\"Invert\" width=\"600\" hspace=\"8\" vspace=\"3\" /><br />For h=4 at least 3 coins must be moved to invert it.</p>\n<h3>Input</h3>\n<p>In the first line N will be given and then N lines follow with each line having a integer which is the height of triangle in that test case.00&le;h&lt;10<sup>10</sup>;</p>\n<h3>Output</h3>\n<p>For each test case output in a seperate line the minimum number of moves required to invert the triangle. Output fits in long long data type</p>\n<h3>Example</h3>\n<pre><strong>Inputt:</strong>\n1\n3\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/01c8d99b-9aaf-46ac-ad7c-28c3d4cd8768",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mindiff-all-about-sorting",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MINDIFF - All about Sorting!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MINDIFF - All about Sorting!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You will be given three sorted arrays. Let&rsquo;s denote the three arrays as A, B and C.</p>\n<p>Your task is fairly very simple. You just have to find one element from each of the three arrays so that&nbsp;<strong>(|A<sub>i</sub>-B<sub>j</sub>| + |B<sub>j</sub>-C<sub>k</sub>| + |C<sub>k</sub>-A<sub>i</sub>|)</strong>&nbsp;is the smallest. Here A<sub>i</sub>&nbsp;is an element from array A. B<sub>j</sub>&nbsp;is an element form array B. C<sub>k</sub>&nbsp;is an element form array C.</p>\n<h3>Input</h3>\n<p>The first line of the input will be an integer T denote the number of test cases.</p>\n<p>For each of the test cases there will three integers&nbsp;<strong>Na Nb Nc</strong>&nbsp;in the first line. Na will denote the size of array A, Nb will denote the size of array B, Nc will denote the size of array C.</p>\n<p>In the second line of each test case there will be Na number of integers denoting the elements of array A.</p>\n<p>In the third line of each test case there will be Nb number of integers denoting the elements of array B.</p>\n<p>In the fourth line of each test case there will be Nc number of integers denoting the elements of array C.</p>\n<h3>Output</h3>\n<p>For each test case print the desired result.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= t &lt;= 100<br />1 &lt;= Na, Nb, Nc &lt;= 1000<br />Each elements of the arrays will be a non-negative number less than 10^9.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3 2 3\n2 4 6\n5 7\n1 3 5\n3 5 4\n1 3 5\n7 8 9 10 11\n2 14 20 36\n</pre>\n<pre><strong>Output:</strong>\n2\n10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4053d982-8749-44d4-8de7-f48951e000bd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef918f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mkequal-make-them-equal-2",
  "tags": [],
  "level": "BEGINNER",
  "title": "MKEQUAL - Make them equal !",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MKEQUAL - Make them equal !</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You have an array containing&nbsp;<strong>N</strong>&nbsp;elements. At any move, you choose two indices&nbsp;<strong>i</strong>&nbsp;and&nbsp;<strong>j</strong>&nbsp;( 0 &lt;=&nbsp;<strong>i</strong>,&nbsp;<strong>j</strong>&nbsp;&lt;&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>i</strong>&nbsp;!=&nbsp;<strong>j</strong>&nbsp;) and increment value at one index and decrement value at other index. You can make this move any number of times. What is the maximum number of elements which can have the same value (after any number of moves) ?</p>\n<h3>Input</h3>\n<p>First line consists of&nbsp;<strong>T</strong>, the number of test cases. (1 &lt;=&nbsp;<strong>T</strong>&nbsp;&lt;= 100)</p>\n<p><strong>T</strong>&nbsp;sets follow. Each set contains&nbsp;<strong>N</strong>, the number of elements in the array, in the first line. (1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 100000)</p>\n<p>Next line of each set consists of&nbsp;<strong>N</strong>&nbsp;space separated integers (0 &lt;= value &lt;= 100000)</p>\n<h3>Output</h3>\n<p>Output&nbsp;<strong>T</strong>&nbsp;lines each containing the required answer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n1 2 3 4\n\n<strong>Output:</strong>&nbsp;\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/95614aba-85b2-41ed-acf7-c4fabab31f00",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9190"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mnered-nered",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MNERED - NERED",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MNERED - NERED</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MNERED/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MNERED/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>In the nearby kindergarten they recently made up an attractive game of strength and agility that kids love. The surface for the game is a large flat area divided into N&times;N squares. The children lay large spongy cues onto the surface. The sides of the cubes are the same length as the sides of the squares. When a cube is put on the surface, its sides are aligned with some square. A cube may be put on another cube too. Kids enjoy building forts and hiding them, but they always leave behind a huge mess. Because of this, prior to closing the kindergarten, the teachers rearrange all the cubes so that they occupy a rectangle on the surface, with exactly one cube on every square in the rectangle. In one moving, a cube is taken off the top of a square to the top of any other square.</p>\n<p>Write a program that, given the state of the surface, calculates the smallest number of moves needed to arrange all cubes into a rectangle.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>The first line contains the integers N and M (1 &le; N &le; 100, 1 &le; M &le; N^2), the dimensions of the surface and the number of cubes currently on the surface.</p>\n<p>Each of the following M lines contains two integers R and C (1 &le; R, C &le; N), the coordinates of the square that contains the cube.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>Output the smallest number of moves. A solution will always exist.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>input<br />4 3<br />2 2<br />4 4<br />1 1<br />output<br />2<br /><br />input<br />5 8<br />2 2<br />3 2<br />4 2<br />2 4<br />3 4<br />4 4<br />2 3<br />2 3<br />output<br />3<br /><br />In the second example, a cube is moved from (2, 3) to (3, 3), from (4, 2)<br />to (2, 5) and from (4, 4) to (3, 5).</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/932708c5-ad82-43f3-8973-62044d49b579",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9191"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mnnitar-arya-rage",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MNNITAR - Arya Rage",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MNNITAR - Arya Rage</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Arya is very fond of fibonacci numbers.He claimed he can solve any problem on fibonacci number.His clever friend golu gave him a challenge&Acirc;</p>\n<p>to prove his skills.He gave him a sequence which he called exponacci.The sequence is given by<br /><strong>g(n)=2^f(n-1)</strong>for n&gt;0<br /><strong>g(0)=1</strong>for n==0<br />f(n) denotes the nth fibonacci number where<br />f(0)=1<br />f(1)=1(Obviously golu is not as good as arya in fibonacci numbers so he believes f(0)=1,anyways we have chosen not to disturb him)<br />f(n)=f(n-1)+f(n-2)for n&gt;1<br />Help arya to find the nth exponacci number.Since the numbers can be very large take mod 10^9+7</p>\n<p><strong>Input :</strong>&Acirc;<br />The first line of the input will be the number of test cases(T&lt;=2000). For each test case first line contains one integers n 0 &lt;= n &lt;= 10^15</p>\n<p><strong>Output :</strong><br />The value of g(n)%(10^9+7)</p>\n<p><strong>Warning: value of n won't fit in int,use long long int instead</strong></p>\n<pre>Sample Cases :\nInput:\n2\n3\n5\n \nOutput:\n4\n32</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ad153de6-045a-4174-a347-ec007fb7aa91",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9192"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mse08g-another-lucky-numbers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MSE08G - Another Lucky Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MSE08G - Another Lucky Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<table class=\"problems\" width=\"100%\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MSE08G/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/MSE08G/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>John has recently arrived in Bucharest for the South Eastern European Regional Contest. John is famous for his theory of lucky numbers. That&rsquo;s why all the contestants and spectators are very happy. According to that theory 4 and 7 are lucky digits, and all the other digits are not lucky. A lucky number is a number that contains only lucky digits in decimal notation. A very lucky number is a number that can be expressed as a product of several lucky numbers. A lucky number by itself is considered to be very lucky. For example, numbers 47, 49, 112 are very lucky.</p>\n<p>Your task is to calculate the number of very lucky numbers that are not less than A and not greater than B. Of course, numbers A and B are given by John.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>The first line of the input contains a single integer T &ndash; a number of test cases. Each of the next T lines contains two integers separated by a single space &ndash; A and B.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>Output must contain T lines &ndash; answers for the test cases. Constrains:</p>\n<p>1 &le; T &le; 7777,</p>\n<p>1 &le; A &le; B &le; 1000000000000 (10^12).</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>Input :\n4 \n1 2 \n88 99 \n112 112 \n1 100 \nOuput: \n0 \n0 \n1 \n10 \n\n \nHint: \nVery lucky numbers for the last case are 4, 7, 16, 28, 44, 47, 49, 64, 74 and 77. </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa5cac89-d7f8-4e26-90d8-4e48261cb437",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9193"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mnnitar-arya-rage-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MNNITAR - Arya Rage",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MNNITAR - Arya Rage</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Arya is very fond of fibonacci numbers.He claimed he can solve any problem on fibonacci number.His clever friend golu gave him a challenge&Acirc;</p>\n<p>to prove his skills.He gave him a sequence which he called exponacci.The sequence is given by<br /><strong>g(n)=2^f(n-1)</strong>for n&gt;0<br /><strong>g(0)=1</strong>for n==0<br />f(n) denotes the nth fibonacci number where<br />f(0)=1<br />f(1)=1(Obviously golu is not as good as arya in fibonacci numbers so he believes f(0)=1,anyways we have chosen not to disturb him)<br />f(n)=f(n-1)+f(n-2)for n&gt;1<br />Help arya to find the nth exponacci number.Since the numbers can be very large take mod 10^9+7</p>\n<p><strong>Input :</strong>&Acirc;<br />The first line of the input will be the number of test cases(T&lt;=2000). For each test case first line contains one integers n 0 &lt;= n &lt;= 10^15</p>\n<p><strong>Output :</strong><br />The value of g(n)%(10^9+7)</p>\n<p><strong>Warning: value of n won't fit in int,use long long int instead</strong></p>\n<pre>Sample Cases :\nInput:\n2\n3\n5\n \nOutput:\n4\n32</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c798b4b1-d65e-4094-af4a-77543c45a92e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9194"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "multq3-multiples-of-3",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MULTQ3 - Multiples of 3",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">MULTQ3 - Multiples of 3</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are N numbers a[0],a[1]..a[N - 1]. Initally all are 0. You have to perform two types of operations :<br /><br />1) Increase the numbers between indices A and B (inclusive) by 1. This is represented by the command \"0 A B\"<br />2) Answer how many numbers between indices A and B (inclusive) are divisible by 3. This is represented by the command \"1 A B\".</p>\n<h3>Input</h3>\n<p>The first line contains two integers, N and Q. Each of the next Q lines are either of the form \"0 A B\" or \"1 A B\" as mentioned above.</p>\n<h3>Output</h3>\n<p>Output 1 line for each of the queries of the form \"1 A B\" containing the required answer for the corresponding query.</p>\n<h3>Sample</h3>\n<pre><strong>Sample Input :</strong>\n4 7\n1 0 3\n0 1 2\n0 1 3\n1 0 0\n0 0 3\n1 3 3\n1 0 3\n\n<strong>Sample Output :</strong>\n4\n1\n0\n2</pre>\n<h3>Constraints</h3>\n<p>1 &lt;= N &lt;= 100000<br />1 &lt;= Q &lt;= 100000<br />0 &lt;= A &lt;= B &lt;= N - 1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5cdca38a-3b8d-4ee6-b7d7-64a2870999fb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9195"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nacci-nacci-fear",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NACCI - Nacci Fear",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NACCI - Nacci Fear</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>We all know about the classical fibonaaci series, Fibonacci series is F(n)=F(n-1)+F(n-2). For this question we call it a 2-Nacci series as a new element is calculated as the sum of the last 2 terms of the series. For fibonaaci we assume F(0)=0 and F(1)=1. We define as new series N-Nacci where F(n) is the sum of the last n terms and here we assume that F(0)=0, F(1)=1,F(2)=2... F(n-1)=(n-1). Your task is to calculate the last K digits of the Lth term of the N-Nacci series(no leading zeros needed).</p>\n<p>&nbsp;</p>\n<p>Constraints</p>\n<p>&nbsp;</p>\n<p>2&lt;=N&lt;=30</p>\n<p>K&lt;=8</p>\n<p>L&lt;=1000000000</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of the input denotes the number of test cases t(atmost 10). Each line denotes a test case consisting of N,K,L.</p>\n<h3>Output</h3>\n<p>For each test case print the last K digits of the Lth term of the N-Nacci series.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n2 1 5\n3 6 12\n4 1 10\n4 2 10\n\n<strong>Output:</strong></pre>\n<pre>5\n778\n6\n16</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb482207-b322-4e50-9e46-10f95d027a5d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9196"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "naj0001-divisible-number-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NAJ0001 - Divisible Number Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NAJ0001 - Divisible Number Sum</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Hazzat is a new guys in computer science.&nbsp; Now he read in 4rd semester. Recently he completed the course data structure. After finished data structure course he can realize that those are not enough for his. Every day he fall in a new (data structure) problem and want solve it, but those problem he can&rsquo;t solve&nbsp; using his know data structure. He want to establish new data structure. But he always failed to establish it. Now help hazzat to establish a new data structure following problems.</p>\n<p>You will be given an array&nbsp;<strong>A</strong>&nbsp;of&nbsp;<strong>N</strong>&nbsp;integers. You need to answer&nbsp;<strong>M</strong>&nbsp;queries.<br />Each query is of the form&nbsp;<strong>V x y</strong>.</p>\n<p>For each query, find the sum of set S which is a sub set of array A index x to y and fully divisible by V.</p>\n<p>That means find sum of set S (subset of A), where A[i] is included in S if x &le; i &le; y and A[i]%V==0.</p>\n<p>&nbsp;</p>\n<p><strong>Input:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p>First&nbsp; line consists of a number T (1 &le; T &le; 5) test cases.</p>\n<p>For each case given two integer number&nbsp; N M,&nbsp; (1&le; N&le; 10^5, 1&le;M &le; 2*10^5)</p>\n<p>Next line has N integers representing the elements of array A. 1&le;A[]&le; 10^6</p>\n<p>&nbsp;M lines follow, one per query.</p>\n<p>Each line has 3 integers V, x and y&nbsp; (1&le; V &le; 1000 , 1&le; x &le; y &le;N)</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>&nbsp;</p>\n<p>For each case print Case No and query answer.</p>\n<p>There will be a blank line between two cases.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Sample:</strong></p>\n<p>&nbsp;</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"258\">\n<p>Input</p>\n</td>\n<td valign=\"top\" width=\"198\">\n<p>Output</p>\n</td>\n</tr>\n<tr>\n<td width=\"258\">\n<p>2<br />5 2<br />1 2 3 4 6<br />2 1 5<br />5 1 4<br />&nbsp;<br />5 2<br />2 3 5 3 7<br />3 2 4<br />5 1 5</p>\n</td>\n<td valign=\"top\" width=\"198\">\n<p>Case #1<br />12<br />0<br />&nbsp;<br />Case #2<br />6<br />5</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Hints:</p>\n<p>&nbsp;</p>\n<p>Query 1:<br />In array index 1 to 5 the set S is {2,4,6} because those are fully divisible by 2. so sum is 12</p>\n<p>Query 2:<br />In array index 1 to 4&nbsp; the set S is {} because there are not any number which fully divisible by 5. so sum is 0<br /><br /></p>\n<p>&nbsp;</p>\n<p>Data set is so huge. Use faster I/O</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/21b172cc-dbc1-4110-b055-691edbbb60f9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9197"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nbin-new-binary",
  "tags": [],
  "level": "BEGINNER",
  "title": "NBIN - New Binary",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NBIN - New Binary</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">One day Chandrima decided to make a list of all numbers in binary format, the list would be like 0,1,10,11,100,... and so on.&nbsp;</div>\n<div id=\"_mcePaste\">Now she get bored of this list and decide to remove any pattern having atleast two consecutive ones and prepare a new list.</div>\n<div id=\"_mcePaste\">The new list will be like 0,1,10,100,101,... and so on. She then thought if a number n is given to her can she find the nth</div>\n<div id=\"_mcePaste\">member of the new list. After trying for some time she comes to you for help. Can you help her by writing a program for her that</div>\n<div id=\"_mcePaste\">coud do the specified task</div>\n<p>One day Chandrima decided to make a list of all numbers starting from 1 in binary format, the list would be like 1,10,11,100,... and so on. Now she get bored of this list and decide to remove any pattern having atleast two consecutive ones and prepare a new list. The new list will be like 1,10,100,101,... and so on. She then thought if a number n is given to her can she find the n<sup>th</sup>&nbsp;member of the new list. After trying for some time she comes to you for help. Can you help her by writing a program for her that coud do the specified task</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains T(&lt;=1000) test cases. The next T lines each contain one integer N(&lt;=10^15) for which you need to find the Nth member of the list.</p>\n<h3>Output</h3>\n<p>Output T lines each containing the required answer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3</pre>\n<pre>1</pre>\n<pre>2</pre>\n<pre>3\n\n<strong>Output:</strong>\n1</pre>\n<pre>10</pre>\n<pre>100</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/36ba25c8-6d68-4c34-b71d-7dd2b5e57c83",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9198"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ndiv-n-divisors",
  "tags": [],
  "level": "BEGINNER",
  "title": "NDIV - n-divisors",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NDIV - n-divisors</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>We all know about prime numbers, prime number is a natural number greater than 1 that has no positive&nbsp;divisors other than 1 and itself.</p>\n<p>We can Classify the numbers by its number of divisors, as n-divisors-numbers, for example number 1 is 1-divisor number,&nbsp;number 4 is 3-divisors-number... etc.</p>\n<p><strong>Note</strong>: All prime numbers are 2-divisors numbers.</p>\n<p><strong>Example:</strong><br />8 is a 4-divisors-number [1, 2, 4, 8].</p>\n<h3>Input</h3>\n<p>Three integers a, b, n.</p>\n<h3>Output</h3>\n<p>Print single line the number of n-divisors numbers between a and b inclusive.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1 7 2\n\n<strong>Output:</strong>\n4</pre>\n<h3>Constraints</h3>\n<p>1 &lt;= a, b &lt;=10^9<br />0 &lt;= b - a &lt;= 10^4<br />1 &lt;= n &lt;= 100</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5f5b3a5c-f440-4b20-8c02-985482e57992",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9199"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nds-increasing-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "NDS - Increasing numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NDS - Increasing numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Subham and Dewang both are playing with numbers. Subham gives Dewang an array of numbers and asks him to tell the minimum possible last number of a increasing sequence of length&nbsp;<strong>L</strong>.</p>\n<p><strong>Note:&nbsp;</strong>Check the sample I/O for more clarity.</p>\n<h3>Input</h3>\n<p>Input consists of number of test cases&nbsp;<strong>T</strong>. Each test case contains size of array i.e&nbsp;<strong>N</strong>. Next line contains&nbsp;<strong>N</strong>&nbsp;space separated elements of array. Next line contains length of the increasing sequence i.e.&nbsp;<strong>L</strong>.</p>\n<h3>Constraignts</h3>\n<p>1 &le; T &le; 100<br />0 &le; N &le; 10<sup>6</sup><br />0 &le; a[i] &le; 10<sup>6</sup></p>\n<h3>Output</h3>\n<p>You have to print the minimum possible last number of a sequence and if their is no increasing sequence of length&nbsp;<strong>L</strong>, then print \"-1\" without the quotes.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n7\n9 7 2 5 4 11 12 \n3\n\n<strong>Output:</strong>\n11</pre>\n<h3>Explanation</h3>\n<p>In sample input, possible increasing sequences of length L = 3 are (9, 11, 12), (7, 11, 12), (2, 5, 11), (2, 4, 11), (2, 5, 12), (2, 4, 12), (2, 11, 12), (5, 11, 12), (4, 11, 12) and the minimum last number is 11 for the sequences (2, 5, 11) and (2, 4, 11). Hence, the answer is 11.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/929d6f7c-81af-419b-964f-c8fb5c2b409e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ndt-new-data-type",
  "tags": [],
  "level": "BEGINNER",
  "title": "NDT - New Data Type",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NDT - New Data Type</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Little boy maze invented a brand new data type that can store data from 1 to M enclusive. The speciality of the invented data type is if you want to store a data out of the range it can round the data and map with invented data type.</p>\n<p>for example if the range is 1 to 7 and you want to store 9 then the system round 9 and map with 2.</p>\n<p>&nbsp;</p>\n<p>Now you're given a number in the format&nbsp; A<sup>B</sup>&nbsp;and the upper limit M of range. Can you round the number to map with new data type?</p>\n<h3>Input</h3>\n<p>Input starts with T &lt;= 100000.</p>\n<p>in the next T lines there will be three integers(1 &lt;= A, B &lt;= 1000000000000000000, 1 &lt; M &lt; 1000000000).</p>\n<h3>Output</h3>\n<p>For each case print the desire output.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />\n2 3 5<br />\n4 2 15\n</pre>\n<pre><strong>Output:</strong><br />3<br />1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b5e727f8-9734-4469-bb72-4f999562de05",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NDT input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ngirl-namit-in-trouble",
  "tags": [],
  "level": "BEGINNER",
  "title": "NGIRL - Namit In Trouble",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NGIRL - Namit In Trouble</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Namit's girlfriend birthday is coming next week.He went to a gift shop and saw&nbsp;<strong>(N)</strong>&nbsp;gifts are arranged in a single row in such a way that the position at which the gift is placed is equal to its price.<strong>(Position starts from 1.)</strong></p>\n<p>Namit's girlfriend being a maths student like those numbers which have exactly 3 divisors, so Namit &nbsp;decide to buy only those gifts which are placed at a position which have only 3 divisors, but Namit's girlfriend likes gifts whose price are above a certain amount<strong>(K).</strong></p>\n<p>Now Namit wants to know total choices he have and how many gifts his girlfriend like for a given value of N.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>Input starts with<strong>&nbsp;1&lt;=T&lt;=1000&nbsp;</strong>(number of test cases). Then T lines follows each containing two integer&nbsp;<strong>1&lt;=N&lt;10^10</strong>&nbsp;(number of gifts at gift shop) and&nbsp;<strong>1&lt;=K&lt;=10^10</strong>.</p>\n<h3>Output</h3>\n<p>You program should output two values indicating total number of choices and the number of gifts Namit's girlfriend like.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3</pre>\n<pre>10 2</pre>\n<pre>20 7</pre>\n<pre>10 4</pre>\n<pre><strong>Output:</strong>\n2 2</pre>\n<pre>2 1</pre>\n<pre>2 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/39e321e1-b422-4f63-81b9-cf3feb5e6c53",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ngm2-another-game-with-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "NGM2 - Another Game With Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NGM2 - Another Game With Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Little Chikoo likes to play with numbers. Often he plays the following game:</p>\n<ol>\n<li>He chooses a number N and a set of positive integers.</li>\n<li>He writes down all the numbers from 1 to N.</li>\n<li>He chooses the first number (say x) from the set and cancels out all the multiples of x from 1 to N, including x.</li>\n<li>He repeats step 3 for all the numbers from the set.</li>\n</ol>\n<p>One day Little Chikoo was in a mood to play pranks. So his brother asked him to play the game with a certain challenge. He made the game a little harder and asked him to find out the number of integers which aren't cancelled after he completes step 4. If he does that then Little Chikoo gets to play on his brother's Nintendo for one full day. Now Little Chikoo is in a hurry and wants to finish the job as soon as possible. He has asked for your help.</p>\n<h3>Input</h3>\n<p>The first line of the input contains N and K. (N &lt;= 10^9, K &lt;= 15)</p>\n<p>Then K numbers follow all in a single line. All numbers are &lt;= 100.</p>\n<h3>Output</h3>\n<p>The output file must contain the number of integers that&nbsp;aren't cancelled&nbsp;after he finishes step 4 of the game.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10 3\n2 4 5\n\n<strong>Output:</strong>\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c4cfd55b-4ddc-45f4-a93b-06c0d6d082a5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "niceday-the-day-of-the-competitors",
  "tags": [],
  "level": "BEGINNER",
  "title": "NICEDAY - The day of the competitors",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NICEDAY - The day of the competitors</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The International Olympiad in Informatics is coming and the leaders of the Vietnamese Team have to choose the best contestants all over the country. Fortunately, the leaders could choose the members of the team among N very good contestants, numbered from 1 to N (3 &le; N &le; 100000). In order to select the best contestants the leaders organized three competitions. Each of the N contestants took part in all three competitions and there were no two contestants with equal results on any of the competitions. We say that contestant А is better than another contestant В when А is ranked before В in all of the competitions. A contestant A is said to be excellent if no other contestant is better than A. The leaders of the Vietnamese Team would like to know the number of excellent contestants.</p>\n<h3>Input</h3>\n<p>First line of the input contains an integer t (1 &le; t &le; 10 ), equal to the number of testcases. Then descriptions of t testcases follow. First line of description contains the number of competitors N . Each of the next N lines describes one competitor and contains integer numbers ai, bi, ci (1 &le; ai, bi , ci &le; N ) separated by spaces, the order of i-th competitor's ranking in the first competition , the second competition and the third competition.</p>\n<h3>Output</h3>\n<p>For each test case in the input your program should output the number of excellent contestants in one line.</p>\n<p><strong>Note:</strong>&nbsp;Because the input is too large so we have 4 input files and the total time limit is 4s ( not 1s ).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n3\n1 2 3\n2 3 1\n3 1 2\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3f600ea3-d371-4eea-9a73-ffc8e6fe08b1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NICEDAYinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ninja1-related-or-not",
  "tags": [],
  "level": "BEGINNER",
  "title": "NINJA1 - Related or not",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NINJA1 - Related or not</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Problem statement:</p>\n<p>&nbsp;</p>\n<p>You are given two DNA sequences A and B. It is said that these two DNA sequences are related if there exists a non-decreasing sequence C of the same length, such that C<sub>i&nbsp;</sub><strong>=&nbsp;</strong>A<sub>i</sub>&nbsp;or C<sub>i</sub>&nbsp;= B<sub>i</sub>. Find if the given sequences are related.</p>\n<p>&nbsp;</p>\n<p>Input format:</p>\n<p>The first line contains an integer, T, the number of test cases.</p>\n<p><a name=\"MathJax-Span-199\"></a><a name=\"MathJax-Span-198\"></a><a name=\"MathJax-Span-197\"></a><a name=\"MathJax-Element-34-Frame\"></a><a name=\"MathJax-Span-202\"></a><a name=\"MathJax-Span-201\"></a><a name=\"MathJax-Span-200\"></a><a name=\"MathJax-Element-35-Frame\"></a><a name=\"MathJax-Span-205\"></a><a name=\"MathJax-Span-204\"></a><a name=\"MathJax-Span-203\"></a><a name=\"MathJax-Element-36-Frame\"></a>For each test case:<br />The first line contains an integer,N, the length of the DNA sequence.<br />The second line contains a sequence of space-separated integers describing species&nbsp;A.<br />The third line contains a sequence of space-separated integers describing species&nbsp;B.</p>\n<p>&nbsp;</p>\n<p><strong>Output Format</strong></p>\n<p>On a new line for each test case, print<strong>YES&nbsp;</strong>if a non-decreasing sequence of the same length can be found or&nbsp;<strong>NO&nbsp;</strong>if it cannot.</p>\n<p>&nbsp;</p>\n<p>Constraints:</p>\n<p><a name=\"MathJax-Element-37-Frame\"></a><a name=\"MathJax-Span-206\"></a><a name=\"MathJax-Span-207\"></a><a name=\"MathJax-Span-208\"></a><a name=\"MathJax-Span-209\"></a><a name=\"MathJax-Span-210\"></a><a name=\"MathJax-Span-211\"></a><a name=\"MathJax-Span-212\"></a><a name=\"MathJax-Span-219\"></a><a name=\"MathJax-Span-220\"></a><a name=\"MathJax-Element-39-Frame\"></a><a name=\"MathJax-Span-222\"></a><a name=\"MathJax-Span-223\"></a><a name=\"MathJax-Span-224\"></a><a name=\"MathJax-Span-225\"></a><a name=\"MathJax-Span-226\"></a><a name=\"MathJax-Span-227\"></a><a name=\"MathJax-Span-228\"></a><a name=\"MathJax-Span-229\"></a><a name=\"MathJax-Span-230\"></a><a name=\"MathJax-Span-231\"></a><a name=\"MathJax-Span-232\"></a><a name=\"MathJax-Span-233\"></a><a name=\"MathJax-Span-234\"></a><a name=\"MathJax-Span-237\"></a><a name=\"MathJax-Span-238\"></a><a name=\"MathJax-Span-239\"></a>1 &le; T &le; 5&nbsp;<br />1 &lt;= N &lt;= 10 ^ 5<br />0 &le; Ai, Bi&nbsp;&le;&nbsp;10 ^ 10</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Sample input:</p>\n<pre><br />\n</pre>\n<pre>3</pre>\n<pre>3</pre>\n<pre>1 2 3</pre>\n<pre>4 4 4</pre>\n<pre>3</pre>\n<pre>3 2 1</pre>\n<pre>6 5 4</pre>\n<pre>2</pre>\n<pre>1 0</pre>\n<pre>10 2</pre>\n<pre><br />\n</pre>\n<pre>Sample Output:</pre>\n<pre>YES</pre>\n<pre>NO</pre>\n<pre>YES</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ab620b52-f9a1-4bd2-b30a-26c143ce8a91",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NINJA1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef919f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ninja5-k-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "NINJA5 - K NUMBERS",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NINJA5 - K NUMBERS</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>Problem statement:</strong></p>\n<p>&nbsp;</p>\n<p>You are given N numbers from 1 to N. Now, your task is to choose some numbers from the N numbers&nbsp;(including 1 &amp; N)&nbsp;such that no two numbers are&nbsp;<strong>consecutive</strong><strong>.</strong>&nbsp;As this is easy, you are given an extra task. You have to definitely choose K numbers which are given. Find the maximum number of numbers that you can choose in such a way.</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>&nbsp;</p>\n<p>The first line has an integer T, the number of test cases.</p>\n<p>Then for each test case, the first line has two integers N and K.</p>\n<p>Then the next line has K numbers which you should definitely chooose.</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>&nbsp;</p>\n<p>For each test case, print the maximum number of numbers that you can choose.</p>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<p>&nbsp;</p>\n<p>1 &lt;= T &lt;= 100</p>\n<p>2 &lt;= N &lt;= 2 x 10 ^ 6</p>\n<p>1 &lt;= K &lt;= N / 2</p>\n<p>1 &lt;= X[1...K] &lt;= N</p>\n<p>&nbsp;</p>\n<p><strong>Sample input:</strong></p>\n<p>&nbsp;</p>\n<p>1</p>\n<p>8 2</p>\n<p>6 2</p>\n<p>&nbsp;</p>\n<p><strong>Sample output:</strong></p>\n<p>4</p>\n</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4ce77335-b5f8-404c-b278-60e36cf17833",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NINJA5 input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ninja7-two-sequences-problem",
  "tags": [],
  "level": "BEGINNER",
  "title": "NINJA7 - TWO SEQUENCES PROBLEM",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NINJA7 - TWO SEQUENCES PROBLEM</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>Problem statement:</strong></p>\n<p>&nbsp;</p>\n<p><a name=\"MathJax-Span-351\"></a><a name=\"MathJax-Span-350\"></a><a name=\"MathJax-Span-349\"></a><a name=\"MathJax-Element-70-Frame\"></a><a name=\"MathJax-Span-354\"></a><a name=\"MathJax-Span-353\"></a><a name=\"MathJax-Span-352\"></a><a name=\"MathJax-Element-71-Frame\"></a><a name=\"MathJax-Span-360\"></a><a name=\"MathJax-Span-359\"></a><a name=\"MathJax-Span-358\"></a><a name=\"MathJax-Element-73-Frame\"></a>Given two lists&nbsp;Aand&nbsp;B&nbsp;having the same length, find the length of longest subsequence of list&nbsp;A, whose sum is greater than or equal to the corresponding subsequence of list&nbsp;B. Corresponding subsequence means indices chosen in both of the lists must be the same.</p>\n<p>&nbsp;</p>\n<p><strong>Input format:</strong></p>\n<p>&nbsp;</p>\n<p>The first line contains an integer&nbsp;<strong>T</strong>&nbsp;, the number of test cases.</p>\n<p>Then for each test cases, there are 3 lines.</p>\n<p>The first line has an integer N, the number of elements in the lists A&amp; B.</p>\n<p>The second line contains N integers of the list A.</p>\n<p>The third line contains N integers of the list B.</p>\n<p>&nbsp;</p>\n<p><strong>Output format:</strong></p>\n<p>For each test case, print the answer in a single line.</p>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<p>1 &lt; T &lt; 50</p>\n<p><a name=\"MathJax-Span-378\"></a><a name=\"MathJax-Span-377\"></a><a name=\"MathJax-Span-376\"></a><a name=\"MathJax-Element-79-Frame\"></a><a name=\"MathJax-Span-379\"></a><a name=\"MathJax-Span-380\"></a><a name=\"MathJax-Span-381\"></a><a name=\"MathJax-Span-383\"></a><a name=\"MathJax-Span-382\"></a><a name=\"MathJax-Span-387\"></a><a name=\"MathJax-Span-386\"></a><a name=\"MathJax-Span-385\"></a><a name=\"MathJax-Element-80-Frame\"></a><a name=\"MathJax-Span-388\"></a><a name=\"MathJax-Span-389\"></a><a name=\"MathJax-Span-390\"></a><a name=\"MathJax-Span-391\"></a><a name=\"MathJax-Span-392\"></a><a name=\"MathJax-Span-393\"></a><a name=\"MathJax-Span-395\"></a><a name=\"MathJax-Span-394\"></a><a name=\"MathJax-Span-396\"></a><a name=\"MathJax-Span-399\"></a><a name=\"MathJax-Span-398\"></a><a name=\"MathJax-Span-397\"></a><a name=\"MathJax-Element-81-Frame\"></a><a name=\"MathJax-Span-400\"></a><a name=\"MathJax-Span-401\"></a><a name=\"MathJax-Span-402\"></a><a name=\"MathJax-Span-403\"></a><a name=\"MathJax-Span-404\"></a><a name=\"MathJax-Span-405\"></a><a name=\"MathJax-Span-407\"></a><a name=\"MathJax-Span-406\"></a>1 &le; N &le; 10^5<br />0&le;A[i]&le;10^7<br />0&le;B[i]&le;10^7</p>\n<p><strong>Sample input:</strong></p>\n<p>1</p>\n<p>3</p>\n<p>100 100 5</p>\n<p>2 2 1000</p>\n<p>&nbsp;</p>\n<p>Output:</p>\n<p>2</p>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5784df45-5cb3-4946-a7d6-05eaee10348f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NINJA7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nnum-one-of-the-simpsons-symbols",
  "tags": [],
  "level": "BEGINNER",
  "title": "NNUM - One of the Simpsons symbols",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NNUM - One of the Simpsons symbols</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Problem Statement:</p>\n<p>It&rsquo;s one of the boring days, and coach Ali decided to turn his TV on and to see something amusing, to his luck they were showing the famous Simpsons series, so he made popcorn and sat to watch it, the episode name was &ldquo;Marge and Homer Turn a Couple Play&rdquo; from 2006 season, the episode took part at a baseball court, in the big screen they asked the following multi-choice question:</p>\n<p>Can you guess the number of the audience?? With answers:</p>\n<p>A) 8128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B) 8208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C) 8191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D) I can&rsquo;t guess.</p>\n<p>&ldquo;Numbers???&rdquo; Shouted Coach Ali, &ldquo;I wonder are they chosen randomly, or do they refer to something???&rdquo; You know Simpsons and its weird symbols.</p>\n<p>That made him curious so he decided to investigate it, as Ali always says: &rdquo;Google is stupid&rdquo; He decided to use the Syrian search engine, Shamra.sy and Shamra gave him the answer in a blink of eye!!! and &nbsp;guess what? Each of these numbers belong to a family of numbers!!!</p>\n<p>8128 is called an &ldquo;Ideal number&rdquo; (expect to see a problem about this family J )</p>\n<p>8191 is called a &ldquo;prime number&rdquo; (primes are well known to all)</p>\n<p>8208 is called a &ldquo;Narcissistic number&rdquo;</p>\n<p>As Coach Ali loves Greek Methodology he remembered the famous myth of god &ldquo;Narcisse&rdquo; so he decided to make extra search about this family, again Shamra gave him the answer in a blink of eye!!! According to Wikipedia: it is a&nbsp;<strong>number</strong>&nbsp;that is the sum of its own digits each raised to the power of the&nbsp;<strong>number</strong>&nbsp;of digits.</p>\n<p>For example: 8208=8^4+2^4+0^4+8^4=4096+16+0+4096</p>\n<p>Now Ali is wondering, how many positive Narcissistic numbers consisting of N digits??? As he is busy in studding for the expected &ldquo;Principles of Electronics&rdquo; test, he decided to give the problem to his contestants, as part of their training for coming TCPC 2016.</p>\n<p>Input:</p>\n<p>One line, containing N,&nbsp;&nbsp; 1&lt;=N&lt;=8</p>\n<p>Output:</p>\n<p>One line, containing the number of positive Narcissistic numbers consisting of N digits.</p>\n<p>Sample Input:</p>\n<p>1</p>\n<p>Sample Output:</p>\n<p>9</p>\n<p>Note: As Coach Ali is impatient, the time limit per test for every test case is just 0.1 Seconds.</p>\n</div>\n<div class=\"text-center\">&nbsp;</div>\n<div id=\"ccontent\"></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a5e97f21-3252-423e-934b-02ce7557b27f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NNUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "notatri-not-a-triangle",
  "tags": [],
  "level": "BEGINNER",
  "title": "NOTATRI - Not a Triangle",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NOTATRI - Not a Triangle</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You have N (3 &le; N &le; 2,000) wooden sticks, which are labeled from 1 to N. The i-th stick has a length of L<sub>i</sub>&nbsp;(1 &le; L<sub>i</sub>&nbsp;&le; 1,000,000). Your friend has challenged you to a simple game: you will pick three sticks at random, and if your friend can form a triangle with them (degenerate triangles included), he wins; otherwise, you win. You are not sure if your friend is trying to trick you, so you would like to determine your chances of winning by computing the number of ways you could choose three sticks (regardless of order) such that it is impossible to form a triangle with them.</p>\n<h3>Input</h3>\n<p>The input file consists of multiple test cases. Each test case starts with the single integer N, followed by a line with the integers L<sub>1</sub>, ..., L<sub>N</sub>. The input is terminated with N = 0, which should not be processed.</p>\n<h3>Output</h3>\n<p>For each test case, output a single line containing the number of triples.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n4 2 10\n3\n1 2 3\n4\n5 2 9 6\n0\n\n<strong>Output:</strong>\n1\n0\n2</pre>\n<p>For the first test case, 4 + 2 &lt; 10, so you will win with the one available triple. For the second case, 1 + 2 is equal to 3; since degenerate triangles are allowed, the answer is 0</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ae05060c-ba48-43d5-950d-d59f88c5ddd9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NOTATRIinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "novice62-match-the-words",
  "tags": [],
  "level": "BEGINNER",
  "title": "NOVICE62 - Match the words",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NOVICE62 - Match the words</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You may have come across questions like, Match-The-Following words with their synonyms in the second column and alike. Ted also stumbled upon one such question. Being weak at english, he tried guessing the answers. While he guessed, he thought about how unlucky he was at guessing.</p>\n<p>Being also weak at math, he needs help from you for a slightly different task. Find the total number of ways of completing the solution to this question in which he gets none of the matches correct.</p>\n<p><strong>Note:</strong>&nbsp;In the match-the-following problem, there are two columns of words. Each column contains N words. Words in the first column have to be matched with words in the second column. A valid solution to this question requires every word in the first column to be matched with only one word in the second column and vice-versa.</p>\n<h3>Input</h3>\n<p>First line contains a single integer T(1 &lt;= T &lt;= 1000) denoting the total number of test cases. Each test case contains a single integer N (1 &lt;= N &lt;= 1000000).</p>\n<h3>Output</h3>\n<p>For each test case, print a single integer the required number of ways modulo 1000000007</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1\n2\n7\n</pre>\n<pre><strong>Output:</strong>\n0\n1\n1854</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92275553-0b3e-452f-822e-9a00acac56d3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NOVICE62input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "npc2014d-general-joke",
  "tags": [],
  "level": "BEGINNER",
  "title": "NPC2014D - General Joke",
  "content": "<h2 style=\"font-weight: 500;\">NPC2014D - General Joke</h2>\n<p>&nbsp;</p>\n<p>A long time ago, there was a big war. This war have two sides, one is The Schematics and the other one is The Unschematicszan. Joke is a respected general of The Schematics and is feared by The Unschematicszan. On every battle, Joke and his minions always win so the elite soldiers of The Unschematicszan can't fight him.</p>\n<p>This war goes on until one day General Joke decides to end the war. At the same time, there are still N town that are under control of The Unschematicszan, numbered from 1 to N. In each town, there are Pi&nbsp;elite soldiers of The Unscehmaticszan that stands guard 24 hours a day. To take over a town, General Joke must bring at least the same number of minion as the number of elite soldiers guarding that town. After taking over a town, General Joke must leave at least a minion so that town doesn't get taken back by the Unschematicszan. The winner of the fight doesn't lose any soldier/minion in the fight. After a long thought, General Joke decides to take over the town starting from town number 1 to N and asks you to count the minimum number of minions that he must bring to successfully take over all the towns.</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>First line is T, the number of test cases. For each test case, the first line is N, the number of towns occupied by The Unschematicszan. The next line is N numbers, representing Pi which is the number of elite soldiers on town i, starting from 1 to N.</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>Minimum number of minions that Joke must bring to win.</p>\n<h3 style=\"font-weight: 500;\">Sample Input</h3>\n<p style=\"font-weight: 400;\">1 5 1 2 5 4 2</p>\n<h3 style=\"font-weight: 500;\">Sample Output</h3>\n<p style=\"font-weight: 400;\">7</p>\n<h3 style=\"font-weight: 500;\">Constraint</h3>\n<ul>\n<li>1 &le; T &le; 100</li>\n<li>1 &le; N &le; 100000</li>\n<li>1 &le; Pi&nbsp;&le; 1000000</li>\n</ul>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/25b2d2a7-8143-47aa-9f0e-513f6650a075",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NPC2014D input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nr2-bhagat-the-bit-man",
  "tags": [],
  "level": "BEGINNER",
  "title": "NR2 - Bhagat The Bit Man",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NR2 - Bhagat The Bit Man</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<div id=\"problem-body\">\n<p>Bhagat is student of CSE at ISM Dhanbad. In mid-semsester exam somehow he was able to score full marks in Boolean algebra. So his profs doubt how can he score full marks. So profs decided to check his ability. They gave Bhagat a list student&rsquo;s admission number and ask him to find total kaptiness (K) of list.</p>\n<p>Kaptiness is defined as or operation on every dukkerness(d<sub>i</sub>) value. Dukkerness value is xor operation on every pair of number in list.As we all know Bhagat is not good in Boolean algebra. Can you help him to prove his profs that he can score full out of full in boolean algebra.</p>\n<p>Example:-</p>\n<p>If list contain three number 10, 15 &amp; 17.Then there will be total 3 pairs.</p>\n<p>d<sub>1</sub>&nbsp;= 10 ^ 15 = 5;</p>\n<p>d<sub>2</sub>&nbsp;= 10 ^ 17 = 27;</p>\n<p>d<sub>3</sub>&nbsp;= 17 ^ 15 = 30;</p>\n<p>k = d<sub>1</sub>&nbsp;| d<sub>2</sub>&nbsp;| d<sub>3 ;</sub></p>\n<p>K = 31;</p>\n<h3>Input</h3>\n<p>First line of input contain&nbsp;<strong>N</strong>&nbsp;(2 &lt;= N &lt;= 10<sup>6</sup>).&nbsp;<strong>N</strong>&nbsp;is total number of admission number(<strong>a<sub>i</sub></strong>) in list.</p>\n<p>Then following&nbsp;<strong>N</strong>&nbsp;line will contain admission number. (0 &lt;= a<sub>i&nbsp;</sub>&lt;=10<sup>18</sup>)</p>\n<h3>Output</h3>\n<p>Output only one line containing&nbsp;<strong>K</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n10\n15\n17\n\n<strong>Output:</strong>\n31</pre>\n<p><strong>NOTE: Large input data.</strong></p>\n<p><strong>test cases have been updated and all solutions are rejudged</strong></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/93e91e85-330a-4868-8283-99aed2321f8a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NR2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ntg-nt-games",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NTG - NT Games",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NTG - NT Games</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Katniss Everdeen after participating in Hunger Games now wants to participate in NT Games (Number Theory Games).</p>\n<p>As she begins President Snow provides her a number&nbsp;<strong>k</strong>. Then, she has to defend&nbsp;<strong>t</strong>&nbsp;back to back attacks from Haymitch Abernathy for practice. In each attack Haymitch Abernathy gives two numbers&nbsp;<strong>l</strong>&nbsp;and&nbsp;<strong>r</strong>, for defense she has to compute :</p>\n<p><img title=\"IMAGE\" src=\"https://s3.amazonaws.com/hr-assets/0/1508967582-cde6f15a97-NTG.PNG\" alt=\"IMAGE\" width=\"363\" height=\"107\" /></p>\n<p>As she is new to number theory, help her by computing given expression.</p>\n<p><strong>Input Format</strong></p>\n<p>First line contain an integer, i.e.&nbsp;<strong>k</strong>.</p>\n<p>Second line contain an integer, i.e.&nbsp;<strong>t</strong>.</p>\n<p>Each of next t lines contain two integers, i.e.&nbsp;<strong>l</strong>&nbsp;&amp;&nbsp;<strong>r</strong>.</p>\n<p><strong>Constraints</strong></p>\n<p>1&lt;=<strong>k</strong>&lt;=10^5</p>\n<p>1&lt;=<strong>t</strong>&lt;=10^5</p>\n<p>1&lt;=<strong>l</strong>&lt;=10^5</p>\n<p><strong>l</strong>&lt;=<strong>r</strong>&lt;=10^5</p>\n<p><strong>Output Format</strong></p>\n<p>For each attack output the value of expression.</p>\n<p><strong>Sample Input</strong></p>\n<p>1</p>\n<p>1</p>\n<p>1 5</p>\n<p><strong>Sample Output</strong></p>\n<p>26</p>\n<p><strong>Explanation</strong>&nbsp;: Just evaluate the expression.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/351df044-0005-4bdb-9a24-ab5a446cad32",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NTGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nthsum-xaviers-fight",
  "tags": [],
  "level": "BEGINNER",
  "title": "NTHSUM - Xavier’s Fight",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NTHSUM - Xavier&rsquo;s Fight</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Professor X has declared a fight against Magneto. He is gathering all his X-Men. But he doesn&rsquo;t want to risk anyone&rsquo;s life. That&rsquo;s why rather than sending alone, he has decided to send each one of them in a group of 3 members. To select a group he is following a simple rule. A group will consist of 3 members with same unit of power. The total power of each group will be the&nbsp;<strong>product</strong>&nbsp;of all of their powers.</p>\n<p>Now there are&nbsp;<strong>3*N</strong>&nbsp;X-Men. Power of all the members of&nbsp;<strong>i</strong>th (1 &lt;= i &lt;= N) group is&nbsp;<strong>i</strong>.</p>\n<p>Given&nbsp;<strong>N</strong>, our task is to determine what will be sum of powers for all group. Sum can be very large that&rsquo;s why you need to print the square root of sum.</p>\n<h3>Input</h3>\n<p>First line of input is T (1 &lt;= T &lt;= 10000). Next T lines will contain an integer N (1 &lt;= N &lt;= 1000000000).</p>\n<h3>Output</h3>\n<p>For each case there will be a single number which is the square root for sum of&nbsp;<strong>N</strong>&nbsp;groups&rsquo; total power. Output should be rounded to&nbsp;<strong>3 digits after decimal point</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2\n\n<strong>Output:</strong>\n3.000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b30b6fde-f52d-4a0c-b6a5-2372ea49d762",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NTHSUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "numpath-gutibazi-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "NUMPATH - Gutibazi",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">NUMPATH - Gutibazi</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Xunayed is furious. He found out that his friend Nurulla who is just like his brother (tore ami bae bhabsilam), did some gutibazi with him. Xunayed can forgive anything, but gutibazi is something he can never forgive. But to give Nurulla a lesson Xunayed first has to go to Nurulla through some path. Then the problem occurs. Roads belong to a very powerful individual named Rizvi and everyone has to take permission from him to pass those roads. Rizvi will give permission to Xunayed only if Xunayed can solve a riddle.</p>\n<p>Path is some 2d grid. Xunayed is currently on upper left cell (cell (1,1) in the figure below) which is source. Nurulla is now on lower right cell (cell (3,3) in the figure below) which is destination. Xunayed can only go down/right from his current cell.&nbsp;<strong>In how many ways there exists a path where Xunayed can reach Nurulla.</strong></p>\n<p><strong><img title=\"example grid\" src=\"https://2.bp.blogspot.com/-DdOeWcMdcHM/VvP2X-ERMQI/AAAAAAAABDI/VFp5Y5MKmso-s7EgwFIjwVStq0RVotaZA/s1600/img.jpg\" alt=\"grid\" width=\"163\" height=\"154\" /></strong></p>\n<p>Solve this riddle to help innocent Xunayed and bring forth justice.</p>\n<h3>Input</h3>\n<p>Input starts with an integer&nbsp;<strong>T (&lt;= 50)</strong>, denoting the number of test cases.</p>\n<p>Each case starts with a line containing two integers&nbsp;<strong>R C (1 &lt;= R, C &lt;= 7)</strong>, where&nbsp;<strong>R</strong>&nbsp;denotes the number of rows and&nbsp;<strong>C</strong>&nbsp;denotes the number of columns of the grid respectively.</p>\n<h3>Output</h3>\n<p>For every test case, output an integer which represents the number of ways Xunayed can reach Nurulla.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1 1\n2 2\n</pre>\n<pre><strong>Output:</strong>\n1\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9d6b101d-dd28-459f-827a-a3a6bccf8c2b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NUMPATHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91a9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "oae-oae",
  "tags": [],
  "level": "BEGINNER",
  "title": "OAE - OAE",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">OAE - OAE</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Having joined forces and preparing for the war with the terminators the humans do know that it will be a tough battle. They plan to strike each base of the terminator and destroy them one by one. A genius computer engineer UD willing to extend his help to his fellow humans found out that each base of the terminator has password protected doors. He was able to recognise the pattern between the passwords. The password is an n character string having even number of zeroes. As you know many strings of this type exist. Help him to find out the total number of such strings. Each character in the password string is a digit from 0 to 9.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer t &lt;= 50, the number of test cases. Then t test cases follow each containing a line with a single integer n (1 &lt;= n &lt;= 10<sup>6</sup>).</p>\n<h3>Output</h3>\n<p>A single line for each test case, containing the answer modulo 314159.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n1\n\n<strong>Output:</strong>\n82\n9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6d121488-e6f7-4e41-ab5d-349fade4cb95",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OAEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91aa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ohaniser-ohani-and-the-series",
  "tags": [],
  "level": "BEGINNER",
  "title": "OHANISER - Ohani And The Series",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">OHANISER - Ohani And The Series</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Now a days, Ohani has become very expert in mathematics. Her teachers like her very much because of her excellent performance.&nbsp;</p>\n<p>One day, one of her teacher gave her a problem to solve. He will give Ohani a number N. This will represent a table of N rows. The first row contains number from 1 to N. Then the next line will contain N-1 numbers, In the second row, the first number will be the summation of the first two numbers (1 + 2) of the previous row, the second number will be the summation of the second two numbers (2 + 3) of the previous row and so on. Row 3 will have N-2 numbers with same procedures. Same procedure follows for row 4, row 5, .... , row N. On the last row, there will be only a single number. Ohani has to tell that only number of the Nth row.</p>\n<p>For example: If N = 4, then the table is:</p>\n<p>1 &nbsp; 2 &nbsp; 3 &nbsp; 4</p>\n<p>&nbsp;3 &nbsp; &nbsp;5 &nbsp; &nbsp;7</p>\n<p>&nbsp; &nbsp; 8 &nbsp; 12</p>\n<p>&nbsp; &nbsp; &nbsp;20</p>\n<p>So Ohani has to answer the last remaining number: 20.</p>\n<p>She can answer when N is small, but can't when N is large. Can you help her?</p>\n<h3>Input</h3>\n<p>The first line contains the number of testcases T (T &lt;= 100000).</p>\n<p>Each of the test cases contain a number N where 1 &lt;= N &lt;= 100000.</p>\n<h3>Output</h3>\n<p>You have to output the case number and the required answer. As the number can be very large, output the answer modulo 1000000007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />1<br />2\n\n<strong>Output:</strong>\nCase 1: 1<br />Case 2: 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fb787cde-9833-45c3-92ba-712231fb4cd8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OHANISERinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ab"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ololo-onotole-needs-your-help",
  "tags": [],
  "level": "BEGINNER",
  "title": "OLOLO - Onotole needs your help",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">OLOLO - Onotole needs your help</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<table border=\"0\" cellspacing=\"10\">\n<tbody>\n<tr>\n<td><img src=\"http://spoj.com/content/pyshnograev:onotole\" alt=\"\" align=\"left\" /></td>\n<td valign=\"top\">\n<p>Onotole has a lot of pyani. Each pyani has a number, writing on it. Pyanis with equal numbers are&nbsp;<span id=\"result_box\" lang=\"en\"><span title=\"Нажмите, чтобы увидеть альтернативный перевод\">indistinguishable.</span></span>&nbsp;Onotole knows everything, so, he knows that each pyani appeared twice, and only one pyani is unique. He wants to get вздръжни эффект, and he needs the unique pyani. Given the list of&nbsp;pyanis&nbsp;denote which one of them appeared once (it is guaranteed that other&nbsp;pyanis&nbsp;appeared twice).</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h3>Input</h3>\n<p>First line of input contains number of pyanis N &lt;= 500 000. Next&nbsp;N lines contain a single positive integer 1 &lt;=&nbsp;Pi &lt;= 10^9.</p>\n<h3>Output</h3>\n<p>Output one positive integer on pyani,&nbsp;which appeared once.</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /></strong>3<strong><br /></strong>1<br />8<br />1<br /><br /><strong>Output:</strong>\n8</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2ca313f6-6a9d-4889-9d25-9d08d03515a4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OLOLOinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ac"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "onezero-ones-and-zeros-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "ONEZERO - Ones and zeros",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ONEZERO - Ones and zeros</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Certain positive integers have their decimal representation consisting only of ones and zeros, and having at least one digit one, e.g. 101. If a positive integer does not have such a property, one can try to multiply it by some positive integer to find out whether the product has this property.</p>\n<h3>Input</h3>\n<p>Number&nbsp;<em>K</em>&nbsp;of test cases (<em>K</em>&nbsp;is approximately 1000);<br />in each of the next&nbsp;<em>K</em>&nbsp;lines there is one integer&nbsp;<em>n</em>&nbsp;(<em>1 &lt;= n &lt;= 20000)</em></p>\n<h3>Output</h3>\n<p>For each test case, your program should compute the smallest multiple of the number&nbsp;<em>n</em>&nbsp;consisting only of digits 1 and 0 (beginning with 1).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n17\n11011\n17\n<strong>Output:</strong>\n11101\n11011\n11101</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ec03ba84-2ede-4d5d-94cb-7718a46cb549",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ONEZEROinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ad"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ordsum23-sums-of-2-and-3",
  "tags": [],
  "level": "BEGINNER",
  "title": "ORDSUM23 - Sums of 2 and 3",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ORDSUM23 - Sums of 2 and 3</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Changu and Mangu are brothers. Changu likes 2 and Mangu likes 3. They decided to express each number as sum of 2 and 3.</p>\n<p>They need your help. They want you to tell them the number of ways of writing a number as ordered sums of 2 and/or 3.</p>\n<p>For example,&nbsp;&nbsp;there are 4 ways to write 8 as an ordered sum of 2s and/or 3s:</p>\n<p>&nbsp;2 + 2 + 2 + 2</p>\n<p>&nbsp;2 + 3 + 3</p>\n<p>3 + 2 + 3</p>\n<p>3 + 3 + 2</p>\n<h3>Input</h3>\n<p>The first line contains T, the number of test cases. It is followed by T lines, each containg a number N.</p>\n<h3>Output</h3>\n<p>You have to print the number of ways of writing N as ordered sum of 2 and/or 3. You have to print the answer mod 1000000007.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<p>3</p>\n<p>2</p>\n<p>3</p>\n<p>8</p>\n<p>Output:</p>\n<p>1</p>\n<p>1</p>\n<p>4</p>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<p>T&lt;=100000</p>\n<p>1&lt;=N&lt;=1000000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/97185fd2-7edd-446b-9a43-a8be8e0d8201",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ORDSUM23input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ae"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "osprob1-operating-system-problems-task-scheduling",
  "tags": [],
  "level": "BEGINNER",
  "title": "OSPROB1 - Operating System Problems (Task Scheduling)",
  "content": "<h2 style=\"font-weight: 500;\">OSPROB1 - Operating System Problems (Task Scheduling)</h2>\n<p><em>no tags</em>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>As you all know, Operating System (OS) is a software that controls the execution of computer programs and may provide various services. Although modern operating systems are very easy to use and give us lots of services, their designing is not so easy. It needs lots of work and time to design a good OS. But no OS is perfect. Either they are not so usable or they are not so secure (got tons of viruses). Lingates, as an excellent programmer, wants perfection in all things. So he decided to not use this OSs and write his own OS. But he found out this work is not so easy to do alone even for a programmer like him. So he needs your help.&nbsp;</p>\n<p>As a programmer with honor he won&rsquo;t let you do&nbsp;<em>equal or more</em>&nbsp;work in a turn then him (Means Lingates has to do more work then you on each turn). Each turn you both divide the works between yourself. But the works are related so it&rsquo;s better to take works which are adjacent. Like if there are&nbsp;<strong>5</strong>&nbsp;works&nbsp;<strong>5, 2, 7, 1, 3</strong>&nbsp;then Lingates would take 1st work and give you the 2nd work. But you can't take 2nd and 3rd work because that sum to&nbsp;<strong>7+2 = 9</strong>&nbsp;which is more than his work (<strong>5</strong>). Again you can't take 2nd and 4th work because they are not adjacent. After you both finish your work you both will again distribute your works. There is no limit how much work you both can take on a turn. Like Lingates can take 1st and 2nd work on first turn and give you&nbsp;<em>no work</em>&nbsp;on that turn or he can take 1st, 2nd and 3rd turn (total&nbsp;<strong>5+2+7=14</strong>) and give you only 4th (<strong>1</strong>) or both works (<strong>1+3=4</strong>). As you are helping him he let you to divide the works but it has to be that Lingates has to do more work on each turn. As you are also a programmer with honor you also like to take the turns and divide the work on each turn such that it&nbsp;<strong><em>maximizes</em></strong>&nbsp;<strong><em>your total works</em></strong>.</p>\n<p>Write a program which will take the list of work and give the total amount of work done by Lingates and you if you make the list optimally. Again Lingates will do any amount of work you will give him in any turn as long as your work on that turn is less than his.<br /><br /></p>\n<p><strong>Input</strong></p>\n<p>The first line will be number of test cases (<strong>T&lt;=500</strong>) and each case will start with an integer n (<strong>0&lt;=n&lt;=100</strong>). In the flowing line n numbers will given as the amount of works (all will be&nbsp;<strong>non negative integer &lt;1000</strong>)</p>\n<p><strong>Output</strong></p>\n<p>A single line for each test case first the total work of Lingates and second the work of your.</p>\n<p><strong>Example</strong></p>\n<p><strong>Input:</strong><br />4<br />3<br />1 2 3<br />5<br />5 2 7 1 3<br />5<br />6 6 6 6 6<br />7<br />4 9 5 7 6 5 1<br /><strong>Output:</strong><br />6 0<br />12 6<br />18 12<br />20 17</p>\n<p><br /><strong>Explanation:</strong></p>\n<p>In 1st case you have to give Lingates all 3 works because 1&lt; (2+3) and (1+2) =3, so you can't take any work.</p>\n<p>In 2nd case you can give Lingates 1st work (5) and you can take 2nd (2). Then you can give Lingates the 3rd (7) and you can take the rest (1+3).</p>\n<p>In 3rd case you can give Lingates 1st to 3rd work (6+6+6=18). You can take the left two works (6+6=12).</p>\n<p>In 4th case you can give Lingates 4 and 9 and you will take 5 and 7. Then in next turn you can give him 6 and you own take 5. Then you can give him 1.<br />So totaling (4+9+6+1) =20 and (5+7+5) =17.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e662b99d-3ab4-4d9b-a664-009026a14495",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OSPROB1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91af"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ovgdel-good-elements",
  "tags": [],
  "level": "BEGINNER",
  "title": "OVGDEL - Good Elements",
  "content": "<h2 style=\"font-weight: 500;\">OVGDEL - Good Elements</h2>\n<p><em>no tags</em>&nbsp;</p>\n<p>&nbsp;</p>\n<p>You are given a sequence consisting of integers <strong>a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, &hellip;, a<sub>n</sub></strong>. Any element <strong>a<sub>i</sub></strong> is called <strong>good </strong>if there exists another element <strong>a<sub>j</sub></strong> in the sequence (<strong>i&ne;j</strong>) such that <strong>a<sub>j</sub></strong> is a <strong>non-negative power</strong> of <strong>a<sub>i</sub></strong>. In other words <strong>a<sub>i</sub></strong> is called <strong>good</strong> if there exists an element <strong>a<sub>j</sub></strong> where <strong>i&ne;j</strong> and <strong>a<sub>j</sub>=a<sub>i</sub><sup>k</sup></strong> for some <strong>k&gt;=0</strong>.</p>\n<p>For example, consider the following sequence: <strong>[2, 4, 4, 6, 3, 8]</strong>. This sequence contains <strong>3</strong> good elements. The <strong>1st</strong>, <strong>2nd</strong> and <strong>3rd</strong> elements are good.</p>\n<p>1st element &ldquo;<strong>2</strong>&rdquo; is good because there exists &ldquo;<strong>4</strong>&rdquo; and &ldquo;<strong>8</strong>&rdquo; in the different positions of the sequence which are non negative power of &ldquo;<strong>2</strong>&rdquo; (<strong>2<sup>2</sup>=4</strong>, <strong>2<sup>3</sup>=8</strong>). 2nd element &ldquo;<strong>4</strong>&rdquo; is good because there exists another &ldquo;<strong>4</strong>&rdquo; in a different position of the sequence which is a non-negative power of &ldquo;<strong>4</strong>&rdquo; (<strong>4<sup>1</sup>=4</strong>). Same applies for the 3rd element.</p>\n<p><br />Given the sequence, now you have to find out <strong>total number of good elements</strong> in the sequence.</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>The first line contains an integer <strong>t</strong> denoting the number of test cases.</p>\n<p>For every test case the first line contains the integer <strong>n </strong>the length of the given sequence. The second line contains the sequence of integers <strong>a[1], a[2], a[3], &hellip;, a[n].</strong></p>\n<h3 style=\"font-weight: 500;\">Constraints</h3>\n<p><strong>1&lt;=t&lt;=10</strong></p>\n<p><strong>1&lt;=n&lt;=10<sup>4</sup></strong></p>\n<p><strong>1&lt;=a<sub>i</sub>&lt;=10<sup>6</sup></strong></p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>For each test case print the case number followed by the result in a single line according to the following format \"<strong>Case X: R\"</strong> (without quotes), where <strong>X </strong>denotes the case number and <strong>R</strong> denotes the result. See the sample for further clarification.</p>\n<h3 style=\"font-weight: 500;\">Example</h3>\n<p style=\"font-weight: 400;\"><strong>Input:</strong></p>\n<p>3</p>\n<p>6</p>\n<p>2 4 4 6 3 8</p>\n<p>2</p>\n<p>1 2</p>\n<p>2</p>\n<p>10 100</p>\n<p style=\"font-weight: 400;\"><strong>Output:</strong></p>\n<p>Case 1: 3</p>\n<p>Case 2: 1</p>\n<p>Case 3: 1</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bad243e7-0f00-4cfd-940d-a6c976c0f9f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OVGDELinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pairsum-sum-of-pairwise-products",
  "tags": [],
  "level": "BEGINNER",
  "title": "PAIRSUM - Sum of Pairwise Products",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PAIRSUM - Sum of Pairwise Products</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given N non negative numbers, the task is to answer M queries.</p>\n<p>Each query is as follows:&nbsp;</p>\n<p>Given u,v you need to find the pairwise product sum (u and v are zero indexed)</p>\n<p>a<sub>u</sub>a<sub>u</sub>&nbsp;+ a<sub>u+1</sub>a<sub>u+1</sub>&nbsp;+ a<sub>u+1</sub>a<sub>u</sub>&nbsp;+ a<sub>u+2</sub>a<sub>u+2</sub>&nbsp;+ a<sub>u+2</sub>a<sub>u+1</sub>&nbsp;+ a<sub>u+2</sub>a<sub>u</sub>&nbsp;+ ... + a<sub>v</sub>a<sub>v</sub>&nbsp;+ a<sub>v</sub>a<sub>v-1</sub>&nbsp;+ ... + a<sub>v</sub>a<sub>u</sub></p>\n<h3>Input</h3>\n<pre>N\na<sub>0</sub> a<sub>1</sub> ... a<sub>N-1</sub>\nM\nu<sub>1</sub> v<sub>1</sub>\nu<sub>2</sub> v<sub>2</sub>\n...\nu<sub>M</sub> v<sub>M</sub></pre>\n<h3>Output</h3>\n<p>Print the answer for each query in a separate line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n2 0 1 3 3\n3\n0 2\n1 2\n3 4\n\n<strong>Output:</strong>\n7\n1\n27</pre>\n<h3>Constraints</h3>\n<p>0 &lt;= u &lt;= v &lt; N<br />N &lt;= 100000<br />M &lt;= 100000<br />0 &lt;= a<sub>i</sub>&nbsp;&lt;= 1000000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a1d6f04c-d3c5-4512-bbad-27a482cc3921",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PAIRSUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "parag-paragliding-trip",
  "tags": [],
  "level": "BEGINNER",
  "title": "PARAG - Paragliding Trip",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PARAG - Paragliding Trip</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Ever heard of paragliding? It's a recreational sport in which one jumps off an elevated position, and then soars through the sky equipped with a 'paraglider' (a parachute of sorts). Although air currents might help you out, gravity will relentlessly pull you towards the ground eventually.</p>\n<p>As all good sports, paragliding has a group of enthusiasts in Slovakistan, who call themselves 'Klub Slovakistansk&yacute;ch Paraglidistov' (KSP). And as all real enthusiast groups, KSP organizes club activities - group tours to the most prestigious paragliding centers, where all members of the club can paraglide to their hearts' content in the most luxurious mountain ranges. Of course, every upcoming tour must be more awesome than the last, and so the selection of the right destination is key. It will be extra important this year, as the Slovakistan paragliding superstar Syseľ agreed to come along. With his dedication and love for the sport, he is recognized on the worldwide paragliding scene.</p>\n<p>In his bestseller autobiography the members of KSP have read that Syseľ enjoys long flights the most - such that the difference of the heights of the mountain he jumps from and lands on is greater than&nbsp;<strong>m</strong>. In the context of an exclusive interview he mentioned that what he most dislikes about paragliding is the need to climb up onto a mountain after every jump; hence, he usually likes to jump from a tall mountain, land on a smaller one, and immediately jump again from this smaller mountain, and so on. If he does this&nbsp;<strong>s-1</strong>&nbsp;times, he is satisfied. Lastly from an intercepted phone call KSP members concluded that Syseľ likes to paraglide after lunch, but only in the eastwards direction, as when he paraglides to the west the sun shines into his eyes.</p>\n<p>KSP does not want to disappoint Syseľ, and hence they are looking for such a mountain range which has the most possible trips which satisfy Syseľ. Help them!</p>\n<h3>Task</h3>\n<p>Every mountain range consisting of&nbsp;<strong>n</strong>&nbsp;mountains can be described as an array of&nbsp;<strong>n</strong>&nbsp;numbers, representing the heights of these mountains from west to east.</p>\n<p>A trip is an arbitrary sequence of several, not necessarily neighbouring mountains, which satisfies Syseľ if and only if it contains exactly&nbsp;<strong>s</strong>&nbsp;mountains, and between each two consecutive mountains in this sequence the difference in elevation is greater than&nbsp;<strong>m</strong>&nbsp;- that is if a mountain's height is&nbsp;<strong>x</strong>, and the nearest mountain to the east on the trip has a height of&nbsp;<strong>y</strong>, then&nbsp;<strong>x-y&gt;m</strong>.</p>\n<p>For a given mountain range consisting of&nbsp;<strong>n</strong>&nbsp;mountains and the values of&nbsp;<strong>m</strong>&nbsp;and&nbsp;<strong>s</strong>, find the number of trips which exist in this mountain range that satisfy Syseľ.</p>\n<h3>Input</h3>\n<p>There are multiple test cases - their number<strong>&nbsp;1 &le; T &le; 70</strong>&nbsp;will be on the first line.</p>\n<p>The first line of each test case contains the integers&nbsp;<strong>1 &le;&nbsp;</strong><strong>n &le; 10<sup>5</sup></strong>,&nbsp;<strong>0 &le;&nbsp;</strong><strong>m &le; 10<sup>18</sup></strong>&nbsp;and&nbsp;<strong>2 &le;&nbsp;</strong><strong>s &le; 20</strong>: the number of mountains in the mountain range, the required difference in elevation, and the number of mountains in a trip which satisfies Syseľ.</p>\n<p>The second line of each test case contains&nbsp;<strong>n</strong>&nbsp;numbers - the heights of the mountains in the mountain range, from west to east. The heights of mountains are positive integers not greater than&nbsp;<strong>10</strong><sup><strong>18</strong></sup>.</p>\n<p>The sum of&nbsp;<strong>n</strong>&nbsp;within one input file does not exceed&nbsp;<strong>400,000</strong>.</p>\n<h3>Output</h3>\n<p>For each test case output the string \"Case&nbsp;<strong>x</strong>:&nbsp;<strong>y</strong>\", where&nbsp;<strong>x</strong>&nbsp;is the number of the test case, starting from 1, and&nbsp;<strong>y</strong>&nbsp;is the number of trips in the mountain range that satisfy Syseľ, modulo&nbsp;<strong>10<sup>9</sup>+7</strong>. We consider two trips distinct if there exists at least one mountain which belongs to one trip but not the other.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n4 0 2\n5 4 3 1\n4 1 2\n5 4 3 1\n8 3 3\n11 15 15 10 10 7 1 1\n<strong>Output:</strong>\nCase 1: 6\nCase 2: 4\nCase 3: 14</pre>\n<p>In the first case, any pair of mountains is a trip which satisfies Syseľ. In the second case, the pairs of mountains with heights (5,4) and (4,3) no longer have a great enough elevation difference.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6d2862d3-1b0b-43c8-b53a-b351314784e0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PARAGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "patheads-patting-heads",
  "tags": [],
  "level": "BEGINNER",
  "title": "PATHEADS - Patting Heads",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PATHEADS - Patting Heads</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>It's Bessie's birthday and time for party games! Bessie has instructed the N (1 &le; N &le; 100,000) cows conveniently numbered 1..N to sit in a circle (so that cow i [except at the ends] sits next to cows i-1 and i+1; cow N sits next to cow 1). Meanwhile, Farmer John fills a barrel with one billion slips of paper, each containing some integer in the range 1..1,000,000.</p>\n<p>Each cow i then draws a number A<sub>i</sub>&nbsp;(1 &le; A<sub>i</sub>&nbsp;&le; 1,000,000) (which is not necessarily unique, of course) from the giant barrel. Taking turns, each cow i then takes a walk around the circle and pats the heads of all other cows j such that her number A<sub>i</sub>&nbsp;is exactly divisible by cow j's number A<sub>j</sub>; she then sits again back in her original position.</p>\n<p>The cows would like you to help them determine, for each cow, the number of other cows she should pat.</p>\n<h3>Input</h3>\n<ul>\n<li>Line 1: A single integer: N.</li>\n<li>Lines 2..N+1: Line i+1 contains a single integer: A<sub>i</sub>.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Lines 1..N: On line i, print a single integer that is the number of other cows patted by cow i.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n2\n1\n2\n3\n4\n\n<strong>Output:</strong>\n2\n0\n2\n1\n3\n</pre>\n<p>The first cow pats the second and third cows; the second cows pats no cows; etc.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/45899d56-f15d-4656-a50f-8e33eeaa8a35",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PATHEADSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "patuljci-snow-white-and-the-n-dwarfs",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PATULJCI - Snow White and the N dwarfs",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PATULJCI - Snow White and the N dwarfs</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Snow White and the N dwarfs live in the forest. While the dwarfs mine away Snow White hangs&nbsp;around social networks.</p>\n<p>Each morning the dwarfs form a long line and go whistling away to the mine. Snow White runs around&nbsp;them and snaps pictures to upload onto her favorite social network.</p>\n<p>When dwarfs enter the mine, Snow White goes back to their house and goes through the pictures,&nbsp;selecting pretty ones. Each dwarf has a colored cap, and there are C different colors. A picture is pretty&nbsp;if more than half caps on it are of the same color. In other words, if there are K dwarfs on the picture,&nbsp;it is pretty if strictly more than K / 2 dwarfs have same colored caps.</p>\n<p>Write a program that will check for a set of M pictures if they are pretty, and what color is dominating&nbsp;if they are.</p>\n<h3><strong>Input</strong></h3>\n<p>First line contains two integers N and C (3 &le; N &le; 300000, 1 &le; C &le; 100000) number of dwarfs and&nbsp;number of colors.</p>\n<p>Second line contains N integers between 1 and C (inclusive), colors of dwarves hats, ordered the way&nbsp;they formed the line that morning.</p>\n<p>Third line contains M (1 &le; M &le; 100000), number of pictures.</p>\n<p>Next M lines contain two integers A and B (1 &le; A &le; B &le; N). Each line describes one picture. On it&nbsp;there are all dwarves starting from A-th all the way to the B-th.</p>\n<h3>Output</h3>\n<p>Output M lines. For each picture output &ldquo;no&rdquo; if Snow White doesn't think the picture is pretty, and&nbsp;&ldquo;yes X&rdquo;, where X is the color dominating on the picture, if she does.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10 3\n1 2 1 2 1 2 3 2 3 3\n8\n1 2\n1 3\n1 4\n1 5\n2 5\n2 6\n6 9\n7 10\n\n<strong>Output:</strong>\nno\nyes 1\nno\nyes 1\nno\nyes 2\nno\nyes 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/51cafded-9511-4ae5-a16f-02ca5e07b292",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PATULJCIinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pie-pie",
  "tags": [],
  "level": "BEGINNER",
  "title": "PIE - Pie",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PIE - Pie</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><img src=\"https://www.spoj.com/content/overwise:pie1.jpg\" /></p>\n<p>My birthday is coming up and traditionally I'm serving pie. Not just one pie, no, I have a number&nbsp;<em>N</em>&nbsp;of them, of various tastes and of various sizes.&nbsp;<em>F</em>&nbsp;of my friends are coming to my party and each of them gets a piece of pie. This should be one piece of one pie, not several small pieces since that looks messy. This piece can be one whole pie though.</p>\n<p>My friends are very annoying and if one of them gets a bigger piece than the others, they start complaining. Therefore all of them should get equally sized (but not necessarily equally shaped) pieces, even if this leads to some pie getting spoiled (which is better than spoiling the party). Of course, I want a piece of pie for myself too, and that piece should also be of the same size.</p>\n<p>What is the largest possible piece size all of us can get? All the pies are cylindrical in shape and they all have the same height 1, but the radii of the pies can be different.</p>\n<h3>Input</h3>\n<p>One line with a positive integer: the number of test cases. Then for each test case:</p>\n<ul>\n<li>One line with two integers&nbsp;<em>N</em>&nbsp;and&nbsp;<em>F</em>&nbsp;with 1 &le;&nbsp;<em>N, F</em>&nbsp;&le; 10000: the number of pies and the number of friends.</li>\n<li>One line with&nbsp;<em>N</em>&nbsp;integers&nbsp;<em>r<sub>i</sub></em>&nbsp;with 1 &le;&nbsp;<em>r<sub>i</sub></em>&nbsp;&le; 10000: the radii of the pies.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, output one line with the largest possible volume&nbsp;<em>V</em>&nbsp;such that me and my friends can all get a pie piece of size&nbsp;<em>V</em>. The answer should be given as a floating point number with an absolute error of at most 10<sup>-3</sup>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3 3\n4 3 3\n1 24\n5\n10 5\n1 4 2 3 4 5 6 5 4 2\n\n<strong>Output:</strong>\n25.1327\n3.1416\n50.2655</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6ee937ea-bd4f-4666-8e93-80d8e1be31c3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PIEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pihu1-love-story-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "PIHU1 - Love Story 1",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PIHU1 - Love Story 1</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Rancho is in love with Pihu. So on the Valentine&rsquo;s Day they decided to spend time together at Assi Ghat, but Rancho, as we all know is very busy with his work, so he failed. It was now Pihu&rsquo;s turn to go mad with anger. But there&rsquo;s something which you can do.</p>\n<p>Rancho tells Pihu that he is a novice programmer and is generally busy in solving problems at spoj. So Pihu decides to check his algorithmic skills. She puts forward an array of&nbsp;<strong>N</strong>&nbsp;integers. She gives him a number&nbsp;<strong>P</strong>&nbsp;and asks if he can find three (strictly three) integers&nbsp;<strong>A<sub>i</sub>&nbsp;A<sub>j</sub>&nbsp;A<sub>k&nbsp;&nbsp;</sub>( i &ne; j &ne; k )&nbsp;</strong>in the array, whose sum is equal to number&nbsp;<strong>P</strong>, i.e.</p>\n<p><strong>A<sub>i</sub>&nbsp;+ A<sub>j&nbsp;</sub>+ A<sub>k&nbsp;&nbsp;</sub>=P</strong>.</p>\n<p>Now, sooner Rancho answers her query in&nbsp;<strong>YES</strong>&nbsp;or&nbsp;<strong>NO</strong>, sooner he gets a kiss.<strong>&nbsp;</strong></p>\n<h3>Input</h3>\n<p>The first line of input consists of an integer&nbsp;<strong>T</strong>, number of test cases.</p>\n<p>The second line of input consists of an integer&nbsp;<strong>N,&nbsp;</strong>denoting the size of array.</p>\n<p>The third line consists of&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>A<sub>1,&nbsp;</sub>A<sub>2</sub>&nbsp;A<sub>3&nbsp;</sub>&hellip;&hellip;&hellip;&hellip;&hellip;. A<sub>N</sub></strong><sub>&nbsp;</sub>, separated with space<sub>&nbsp;</sub>.</p>\n<p>The fourth line consists of number&nbsp;<strong>P</strong>.</p>\n<p><strong>CONSTRAINTS</strong></p>\n<p>1&lt;=<strong>T</strong>&lt;=15</p>\n<p>3&lt;=<strong>&nbsp;N</strong>&nbsp;&lt;= 1000</p>\n<p>1&lt;=&nbsp;<strong>A</strong><sub>i</sub>&nbsp;&lt;= 10^9&nbsp;&nbsp;&nbsp; where 1&lt;= i &lt;=N</p>\n<p>1&lt;=&nbsp;<strong>P</strong>&nbsp;&lt;= 3*10^9</p>\n<h3>Output</h3>\n<p>If you find three numbers<strong>&nbsp;A<sub>i</sub>&nbsp;,A<sub>j</sub>&nbsp;,A<sub>k&nbsp;</sub>&nbsp;,&nbsp; ( i &ne; j &ne; k )&nbsp;<sub>&nbsp;</sub></strong>in the array such that&nbsp;<strong>A<sub>i</sub>&nbsp;+ A<sub>j&nbsp;</sub>+ A<sub>k&nbsp;&nbsp;</sub>=P</strong>, print &ldquo;<strong>YES</strong>&rdquo; else print &ldquo;<strong>NO</strong>&rdquo; ( quotes for clarification only).&nbsp;</p>\n<p><strong>Example</strong></p>\n<p><strong>Input</strong></p>\n<p>1</p>\n<p>3</p>\n<p>1 2 3</p>\n<p>6</p>\n<p><strong>Output</strong></p>\n<p>YES</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8c3b0fa8-76e2-4b2c-a484-5d3cdbe1213e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PIHU1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "playgame-playgame",
  "tags": [],
  "level": "BEGINNER",
  "title": "PLAYGAME - PLAYGAME",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PLAYGAME - PLAYGAME</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Hemlata and Ragini were playing a game from a number of coins. Hemlata was jealous of Ragini. She wanted to win at all cost. A stack consists of&nbsp;<strong>n</strong>&nbsp;coins. Any player can take either 1, 2 or 5 (anyone number of coins) coins from stack at a time. Both Hemlata and Ragini play their moves alternatively.</p>\n<p>Hemlata always starts first. Both play optimally. Your job is to predict the output beforehand. A player who can't take any coin loses the game. A player can take only one of 1, 2, 5 number of coins at a time in a move.</p>\n<h3>Input</h3>\n<p>First line contains number of testcases&nbsp;<strong>t</strong>. 0 &lt;&nbsp;<strong>t</strong>&nbsp;&lt;= 10^5</p>\n<p>An integer&nbsp;<strong>n</strong>&nbsp;denoting number of coins. 0 &lt;=&nbsp;<strong>n</strong>&nbsp;&lt;= 10^18</p>\n<h3>Output</h3>\n<p>For each testcase printf \"Hemlata\" if Hemlata wins, else print \"Ragini\" if Ragini wins (without quotes) in different lines .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1\n2\n3</pre>\n<pre><strong>Output:</strong>\nHemlata\nHemlata\nRagini</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/30e7793f-248f-4bd3-8f80-8e89af06fcff",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PLAYGAMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "posters-election-posters",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "POSTERS - Election Posters",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">POSTERS - Election Posters</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A parliamentary election was being held in Byteland. Its enterprising and orderly citizens decided to limit the entire election campaign to a single dedicated wall, so as not to ruin the panorama with countless posters and billboards. Every politician was allowed to hang exactly one poster on the wall. All posters extend from top to bottom, but are hung at different points of the wall, and may be of different width. The wall is divided horizontally into sections, and a poster completely occupies two or more adjacent sections.</p>\n<p>With time, some of the posters were covered (partially or completely) by those of other politicians. Knowing the location of all the posters and the order in which they were hung, determine how many posters have at least one visible section in the end.</p>\n<h3>Input</h3>\n<p>The input begins with the integer t, the number of test cases. Then t test cases follow.</p>\n<p>Each test case begins with a line containing integer n - the number of posters (1 &lt;= n &lt;= 40000). Then n lines follow, the i-th (1 &lt;= i &lt;= n) containing exactly two integers l<sub>i</sub>&nbsp;r<sub>i</sub>, denoting the numbers of the leftmost and rightmost sections covered by the i-th poster (1 &lt;= l<sub>i</sub>&nbsp;&lt; r<sub>i</sub>&nbsp;&lt;= 10<sup>7</sup>). The input order corresponds to the order of hanging posters.</p>\n<h3>Output</h3>\n<p>For each test case output a line containing one integer&nbsp;- the number of posters with visible sections.</p>\n<h3>Example</h3>\n<pre><strong>Sample input:</strong>\n1\n5\n1 4\n2 6\n8 10\n3 4\n7 10\n\n<strong>Sample output:</strong>\n4\n</pre>\n<p>An illustration of the sample input is given below.<br /><br /><img src=\"https://www.spoj.com/content/adrian:sampleio.png\" alt=\"The wall with posters\" /></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3f4952bf-77c8-4a36-ae30-6b07be86887c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "POSTERSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "powersum-sum-of-subsets",
  "tags": [],
  "level": "BEGINNER",
  "title": "POWERSUM - Sum of Subsets",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">POWERSUM - Sum of Subsets</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The sum of a set is defined as the sum of all elements in the set. You are given a set of integers, each between 0 and 10**9. Find the total sum of the sums of each subset of the set.</p>\n<h3>Input</h3>\n<p>There are several testcases.&nbsp;The first line will contain T, the number of testcases.&nbsp;</p>\n<p>Each of the next T testcases begin with a single integer , n, on the first line, the number of elements in the set.</p>\n<p>The second line of each test case will contain n space separated integers, the elements of the given set.</p>\n<p>Output</p>\n<p>For each testcase, you are required to print the total sum of the sums of each subset of the set. As the answer can be quite large, print it %(10**9+7).</p>\n<h3><strong>Constraints</strong></h3>\n<p>1&lt;=T&lt;=100.</p>\n<p>1&lt;=n&lt;=10**4</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>3</pre>\n<pre>1 4 8</pre>\n<pre>2</pre>\n<pre>3 6\n\n<strong>Output:</strong>\n52</pre>\n<pre>18</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0e6198a6-2f5c-4b1f-a990-25f68fc912f9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "POWERSUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91b9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "powfib-fibo-and-non-fibo",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "POWFIB - Fibo and non fibo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">POWFIB - Fibo and non fibo</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The problem is simple.</p>\n<p>Find &nbsp;<strong>(a^b) % MOD</strong></p>\n<p>where ,</p>\n<p>a = Nth&nbsp;<strong>non-fibonacci</strong>&nbsp;number</p>\n<p>b = (Nth&nbsp;<strong>fibonacci</strong>&nbsp;number)%MOD</p>\n<p>MOD = 10^9+7</p>\n<p>Consider fibonacci series as 1,1,2,3,....</p>\n<p><strong>Note :</strong>&nbsp;It is guaranteed that Nth non-fibonacci number will always be less than MOD value for every value of N used.</p>\n<h3>Input</h3>\n<div id=\"_mcePaste\">First line contains T , the number of test cases</div>\n<div id=\"_mcePaste\">Each next T lines contains a &nbsp;number N.</div>\n<p>First line contains&nbsp;<strong>T</strong>&nbsp;, the number of test cases.</p>\n<p>Each next T lines contains a &nbsp;number&nbsp;<strong>N</strong>.</p>\n<h3>Output</h3>\n<p>Print T lines of output where each line corresponds to the required answer.&nbsp;</p>\n<p><strong>Announcement:&nbsp;</strong>Constraints are updated. Sorry for inconvenience occurred.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>3\n3\n2\n1</pre>\n<pre><strong>Output:</strong></pre>\n<pre>49\n6\n4\n</pre>\n<pre><strong>Explanation</strong></pre>\n<pre>For N=3 : 3rd non fibo number =7, 3rd fibo number=2. ans= (7^2) %MOD =49</pre>\n<pre>For N=2 : 2nd non fibo number =6, 2nd fibo number=1. ans=(6^1) %MOD=6</pre>\n<pre>For N=1 : 1st non fibo number =4, 1st fibo number=1.  ans= (4^1) %MOD =4</pre>\n<pre><strong>Constraints</strong></pre>\n<pre>1&lt;=T&lt;=100000</pre>\n<pre><strong>1&lt;=N&lt;=9*10^8</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/16e56bcb-678c-44ed-b883-30d8423d62cf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "POWFIBinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ba"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ppbrjb-red-john-is-back",
  "tags": [],
  "level": "BEGINNER",
  "title": "PPBRJB - Red John is Back",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PPBRJB - Red John is Back</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Red John has committed another murder. But this time, he doesn't leave a red smiley behind. What he leaves behind is a puzzle for Patrick Jane to solve. He also texts Teresa Lisbon that if Patrick is successful, he will turn himself in. The puzzle begins as follows.</p>\n<p>There is a wall of size 4xN in the victim's house where. The victim also has an infinite supply of bricks of size 4x1 and 1x4 in her house. There is a hidden safe which can only be opened by a particular configuration of bricks in the wall. In every configuration, the wall has to be completely covered using the bricks. There is a phone number written on a note in the safe which is of utmost importance in the murder case. Gale Bertram wants to know the total number of ways in which the bricks can be arranged on the wall so that a new configuration arises every time. He calls it M. Since Red John is back after a long time, he has also gained a masters degree in Mathematics from a reputed university. So, he wants Patrick to calculate the number of prime numbers (say P) up to M (i.e. &lt;= M). If Patrick calculates P, Teresa should call Red John on the phone number from the safe and he will surrender if Patrick tells him the correct answer. Otherwise, Teresa will get another murder call after a week.</p>\n<p>You are required to help Patrick correctly solve the puzzle.</p>\n<p><strong>&nbsp;</strong></p>\n<p><strong>Input</strong></p>\n<p>The first line of input will contain an integer T followed by T lines each containing an integer N.&nbsp;<strong>1&lt;=T&lt;=20, 1&lt;=N&lt;=40</strong></p>\n<p><strong>&nbsp;</strong></p>\n<p><strong>Output</strong></p>\n<p>Print exactly one line of output for each test case. The output should contain the number P.</p>\n<p><strong>Sample test(s)</strong></p>\n<p><strong>input</strong></p>\n<p>2<br />1<br />7</p>\n<p><strong>output</strong></p>\n<p>0<br />3</p>\n<p><strong>Note</strong></p>\n<p>For N = 1, the brick can be laid in 1 format only</p>\n<p>The number of primes &lt;= 1 is 0 and hence the answer.</p>\n<p>For N = 7, one of the ways in which we can lay the bricks is</p>\n<p>There are 5 ways of arranging the bricks for N = 7 and there are 3 primes &lt;= 5 and hence the answer 3.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dfbdfd39-5ec9-4c70-bd3b-6c9d679c4c72",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PPBRJBinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91bb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "prata-roti-prata",
  "tags": [],
  "level": "BEGINNER",
  "title": "PRATA - Roti Prata",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PRATA - Roti Prata</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>IEEE is having its AGM next week and the president wants to serve cheese prata after the meeting. The subcommittee members are asked to go to food connection and get P(P&lt;=1000) pratas packed for the function. The stall has L cooks(L&lt;=50) and each cook has a rank R(1&lt;=R&lt;=8). A cook with a rank R can cook 1 prata in the first R minutes 1 more prata in the next 2R minutes, 1 more prata in 3R minutes and so on(he can only cook a complete prata) ( For example if a cook is ranked 2.. he will cook one prata in 2 minutes one more prata in the next 4 mins an one more in the next 6 minutes hence in total 12 minutes he cooks 3 pratas in 13 minutes also he can cook only 3 pratas as he does not have enough time for the 4th prata). The webmaster wants to know the minimum time to get the order done. Please write a program to help him out.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line tells the number of test cases. Each test case consist of 2 lines. In the first line of the test case we have P the number of prata ordered. In the next line the first integer denotes the number of cooks L and L integers follow in the same line each denoting the rank of a cook.</p>\n<h3>Output</h3>\n<p>Print an integer which tells the number of minutes needed to get the order done.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br /><br />3<br />10<br />4 1 2 3 4<br />8<br />1 1<br />8<br />8 1 1 1 1 1 1 1 1<br /><strong>Output:</strong><br />12<br />36<br />1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dfd7e7b0-3337-499d-8e67-0aafa0599ee8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRATAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91bc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "print-prime-intervals",
  "tags": [],
  "level": "BEGINNER",
  "title": "PRINT - Prime Intervals",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PRINT - Prime Intervals</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In this problem you have to print all primes from given interval.</p>\n<h3>Input</h3>\n<p><em>t</em>&nbsp;- the number of test cases, then&nbsp;<em>t</em>&nbsp;lines follows. [<em>t</em>&nbsp;&lt;= 150]<br />On each line are written two integers&nbsp;<em>L</em>&nbsp;and&nbsp;<em>U</em>&nbsp;separated by a blank.&nbsp;<em>L</em>&nbsp;- lower bound of interval,&nbsp;<em>U</em>&nbsp;- upper bound of interval. [2 &lt;=&nbsp;<em>L</em>&nbsp;&lt;&nbsp;<em>U</em>&nbsp;&lt;= 2147483647] [<em>U-L</em>&nbsp;&lt;= 1000000].</p>\n<h3>Output</h3>\n<p>For each test case output must contain all primes from interval&nbsp;<em>[L; U]</em>&nbsp;in increasing order.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<pre>2\n2 10\n3 7\n</pre>\n<p><strong>Output:</strong></p>\n<pre>2\n3\n5\n7\n3\n5\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/41991d95-cc40-405f-9cc8-aa750d63cb74",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRINTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91bd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "prjan15b-birthday-gift-for-sj",
  "tags": [],
  "level": "BEGINNER",
  "title": "PRJAN15B - Birthday Gift for SJ",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PRJAN15B - Birthday Gift for SJ</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p dir=\"ltr\">Today is your best friend SJ&rsquo;s birthday. You want to buy a birthday present for her. You want to buy such a present that she likes the most. You are very superstitious. You think that, SJ will love your gift, if the price of the present you buy is an&nbsp;interesting number&nbsp;( pretty weird isn&rsquo;t it :P ).</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><img src=\"https://lh6.googleusercontent.com/UR3fwio_RWIoQNRR06ltW7EQgW7yBCRxLvz1VbNLLJlhvv1EBmFJAw_Hg3s4ulkurvjmdfZGHuor_FSKraWuZQaC77NE98p5tv95xG0PWd63dqc6DgcaNww4DeFNQXIMi6zz7ABfBYk\" alt=\"birthdayGift.jpg\" width=\"293px;\" height=\"159px;\" /></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">Interesting numbers are :</p>\n<p>&nbsp;</p>\n<ol>\n<li>A number of the format&nbsp;<strong>x<sup>y</sup></strong>. Where&nbsp;x&gt;=2&nbsp;and&nbsp;y&gt;=2&nbsp;.&nbsp;For example,&nbsp;4=&nbsp;2<sup>2</sup>,&nbsp;8&nbsp;=&nbsp;2<sup>3</sup>,&nbsp;9&nbsp;=&nbsp;3<sup>2</sup>&nbsp;etc. are interesting&nbsp;numbers. Here&nbsp;x&nbsp;and&nbsp;y&nbsp;are integers.</li>\n<li>Summation of&nbsp;two or more&nbsp;interesting numbers is also an&nbsp;interesting number. For example&nbsp;13 = 9 + 4,&nbsp;17 = 9+4+4&nbsp;etc. are interesting numbers.</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">Input</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">The first line of the input is an integer&nbsp;t&nbsp;denoting the number of test cases. Then&nbsp;t&nbsp;line follows. Each line has two integers&nbsp;a&nbsp;and&nbsp;b.</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">Output</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">For each case you have to print a single line denoting the number of&nbsp;interesting numbers&nbsp;between&nbsp;a&nbsp;and&nbsp;b (inclusive).</p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">Constraints</p>\n<p>&nbsp;</p>\n<ul>\n<li>1 &le; t &le;10<sup>5</sup></li>\n<li>1 &le; a &le; b &le;&nbsp;10<sup>18</sup></li>\n</ul>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div dir=\"ltr\">\n<table border=\"0\"><colgroup><col width=\"319\" /><col width=\"319\" /></colgroup>\n<tbody>\n<tr>\n<td>\n<p dir=\"ltr\">Sample Input</p>\n</td>\n<td>\n<p dir=\"ltr\">Output for Sample Input</p>\n</td>\n</tr>\n<tr>\n<td>\n<p dir=\"ltr\">3</p>\n<p dir=\"ltr\">1 4</p>\n<p dir=\"ltr\">7 10</p>\n<p dir=\"ltr\">15 20</p>\n</td>\n<td>\n<p dir=\"ltr\">1</p>\n<p dir=\"ltr\">2</p>\n<p dir=\"ltr\">4</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>&nbsp;</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/95203e72-929b-44f8-98f4-0aa05cb613a7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PRJAN15Binput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91be"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "psychon-psycho",
  "tags": [],
  "level": "BEGINNER",
  "title": "PSYCHON - Psycho",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PSYCHON - Psycho</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>Problem Statement:</strong></p>\n<p>Given an integer N, the number N is called &ldquo;<strong>Psycho Number</strong>&rdquo; . Psycho Number is calculated as follows:</p>\n<p>First, If we factorize N , then we have some prime and their power. Assume that, there are M powers. From M powers , you should count the number of even and odd powers. Then if the number of even power is strictly greater than odd power , then we call the number N is &ldquo;<strong>Psycho Number</strong>&rdquo;, otherwise the number N is call &ldquo;<strong>Ordinary Number</strong>&rdquo;.</p>\n<p>As for example, if N = 67500 then prime factorization,&nbsp;</p>\n<p>67500 = 2<sup>2&nbsp;</sup>x 3<sup>3&nbsp;</sup>x 5<sup>4</sup>.&nbsp;</p>\n<pre>Count even powers and odd powers . This number have 2 even power(2,4) and 1 odd power ( 3 ). Since even power 2 (2,4) is greater than odd power 1 (3), so the number 67500 is a Psycho Number.</pre>\n<p><strong>Input:</strong></p>\n<p>An integer&nbsp;<strong>T</strong>&nbsp;(1 &lt;=&nbsp;<strong>T</strong>&nbsp;&lt;= 10<sup>6</sup>) denoting the number of test cases followed by T lines. Each containing a single integer&nbsp;<strong>N</strong>&nbsp;( 1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 10<sup>7</sup>&nbsp;) .</p>\n<p><strong>Output:</strong></p>\n<p>For each case print &nbsp;&ldquo;<strong>Psycho Number</strong>&rdquo; or &ldquo;<strong>Ordinary Number</strong>&rdquo;.</p>\n<p>&nbsp;</p>\n<p><strong>Sample Input/Output:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"326\">\n<p><strong>Sample Input</strong></p>\n</td>\n<td valign=\"top\" width=\"326\">\n<p><strong>Sample Output</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"326\">\n<pre>2\n3\n4</pre>\n</td>\n<td valign=\"top\" width=\"326\">\n<pre>Ordinary Number\nPsycho Number</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d102fcd3-12d1-4fac-a32d-717119f252b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PSYCHONinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91bf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pt07x-vertex-cover",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PT07X - Vertex Cover",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PT07X - Vertex Cover</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given an unweighted, undirected tree. Write a program to find a vertex set of minimum size in this tree such that each edge has as least one of its end-points in that set.</p>\n<h3>Input</h3>\n<p>The first line of the input file contains one integer&nbsp;<em>N</em>&nbsp;--- number of nodes in the tree (0 &lt;&nbsp;<em>N</em>&nbsp;&lt;= 100000). Next&nbsp;<em>N</em>-1 lines contain&nbsp;<em>N</em>-1 edges of that tree --- Each line contains a pair (<em>u</em>,&nbsp;<em>v</em>) means there is an edge between node&nbsp;<em>u</em>&nbsp;and node&nbsp;<em>v</em>&nbsp;(1 &lt;=&nbsp;<em>u</em>,<em>v</em>&nbsp;&lt;=&nbsp;<em>N</em>).</p>\n<h3>Output</h3>\n<p>Print number of nodes in the satisfied vertex set on one line.</p>\n<h3>Example 1</h3>\n<pre><strong>Input:</strong>\n3\n1 2\n1 3\n\n<strong>Output:</strong>\n1\n\n<strong>Explanation:</strong>\nThe set can be {1}\n</pre>\n<h3>Example 2</h3>\n<pre><strong>Input:</strong>\n3\n1 2\n2 3\n\n<strong>Output:</strong>\n1\n\n<strong>Explanation:</strong>\nThe set can be {2}</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f45c8b5c-bd31-4353-8cc9-e77a5a79c1bf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "inputPT07X.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pwrarr-power-of-array",
  "tags": [],
  "level": "BEGINNER",
  "title": "PWRARR - Power of Array",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">PWRARR - Power of Array</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given an array of N integers. The power of this array is the sum of power of every element of the array. The power of any element is the total number of element (including it) in the array that are not greater than this element. For example:</p>\n<p>If the array contains 3 elements and they are 1, 2, 3 then the power of this array is 1 + 2 + 3 = 6.</p>\n<h3>Input</h3>\n<p>First line contains test cases t (1 &lt;= t &lt;= 100). Each of the test case contains two lines. First line contains the value of N (1 &lt;= N &lt;= 50000) and second line contains N space separated positive integers less than or equal to 50000.</p>\n<h3>Output</h3>\n<p>For each test case print the power of the array.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n1 2\n3\n1 2 3\n\n<strong>Output:</strong>\n3\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e5a6219e-e6e8-4eda-926c-3398b5b9597b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PWRARRinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qn02-seating-arrangement",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QN02 - Seating Arrangement",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">QN02 - Seating Arrangement</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<h3>Problem Statement</h3>\n<p>In DA-IICT, the end sems are just around the corner and it seems like all the students are working very hard. But it's not just students, the professors are hard at work too. In particular, the Dean (Students) is very busy working out the exam seating arrangements for all the students.<br /><br />Now normally, as we all know, the benches in each of the exam halls can seat exactly 2 students. Also, it is ensured that every bench contains exactly 2 students from different batches (so that there is no copying). But inspite of this, the Dean has noticed that even if the 2 students are from totally different batches, if they are friends, then they tend to help each other (or atleast try to, depending on how much they both know). The Dean wants to prevent this, so the seating arrangement is such that no two friends sit side by side during any exam, so that the students prepare well for the exams. But he is falling short of ideas to work this out.<br /><br />Please help him out. You are given a list of pairs of IDs ( A, B ), such that the student with ID A is friends with the student with ID B. For every query ( C, D ) please print out whether or not these 2 students are friends ( meaning they cannot be seated with each other ).<br /><br /><strong>Note</strong>: In this case, please assume friendship to be both&nbsp;<strong>symmetric</strong>&nbsp;and&nbsp;<strong>transitive</strong>. That is, if A is friends with B, B is also friends with A. Moreover, if A and B are friends and B and C are friends, this implies that A and C are also friends.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The input comprises of several lines. The first line contains 2 integers - n and m, where n is the number of students who will be writing the exam ( 2 &lt;= n &lt;= 100000 ) and m is the number of pairs of student IDs in the input. ( 0 &lt;= m &lt;= 100000. Also m &lt;= n*( n+1 ) / 2&nbsp; ).<br /><br />This is followed by m lines of the form : A B<br /><br />This indicates that the student with ID A is friends with the student with ID B. ( 0 &lt;= A,B &lt; n ).<br />&nbsp;<br />This is followed by a line containing a single integer q ( 1 &lt;= q &lt;= 100000 ) indicating the number of queries you have to answer. q lines of queries follow. Each query consists of a single line containing 2 space separated integers C and D. ( 0 &lt;= C,D &lt; n ). These are the 2 student IDs for which you have to state whether or not they are friends.<br /><strong><br />Note</strong>&nbsp;: All student IDs are unique, and range from 0 to n-1.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each query, output a single line with \"YES\" if the 2 students are friends, and \"NO\" otherwise. Please note that the quotes are just for clarity, and that the output is case-sensitive.</p>\n&nbsp;\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n<br />7 4<br />1 2<br />2 3<br />1 3<br />4 5<br />4<br />1 3<br />4 6<br />5 1<br />5 4<br /><br /><strong>Output:</strong><br /><br />YES<br />NO<br />NO<br />YES</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f237625d-357f-4bdd-9f63-668932b5fe64",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QN02input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "que2-queue-pro",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QUE2 - Queue (Pro)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">QUE2 - Queue (Pro)</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are&nbsp;<strong>N</strong>&nbsp;people standing in a Queue. You are given the height of each person and the number of people who are taller and standing ahead of him. You have to find the position of each person.</p>\n<h3>Input</h3>\n<p>First line conatins a single integer&nbsp;<strong>T</strong>, the number of test cases. It is followed by&nbsp;<strong>T</strong>&nbsp;test cases each of which contains 3 lines. First line of each test case contains a single integer&nbsp;<strong>N</strong>. Second line contains&nbsp;<strong>N</strong>&nbsp;integers representing the heights of these&nbsp;<strong>N</strong>&nbsp;people. Third line also contains&nbsp;<strong>N</strong>&nbsp;integers denoting the number of taller people standing ahead of him.</p>\n<h3>Output</h3>\n<p>Output one line for each test case which contains the heights of the&nbsp;<strong>N</strong>&nbsp;people in the order in which they are standing.</p>\n<h3>Constraints</h3>\n<p>0 &lt; T &lt;= 20<br />0 &lt; N &lt;= 10000</p>\n<p>&nbsp;</p>\n<p>Expected Time Complexity = O(N log N)</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n5\n33 11 22 44 55\n0 2 1 1 0\n\n<strong>Output:</strong>\n33 22 11 55 44</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/19b8b6c8-cb01-4486-95f1-48966216bee9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QUE2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "r6pl-harbinger-vs-sciencepal",
  "tags": [],
  "level": "BEGINNER",
  "title": "R6PL - Harbinger vs Sciencepal",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">R6PL - Harbinger vs Sciencepal</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Rainbow 6 is a very popular game in colleges. There are 2 teams, each having some members and the 2 teams play some matches against each other. The team which wins the maximum number of matches wins the game! Two of my friends Ashank and Aditya (better known as Harbinger and Sciencepal) are great gamers and they want to compete. So they decide to form their own teams.</div>\n<div id=\"_mcePaste\">There are 2*N players who are interested to be a part of their team. Each player has some rating (based on his performance) and Akarsh(Nimbus) is responsible for forming their teams. Being a good friend of both, he wants to form two teams such that the difference of total ratings of the players between the teams becomes minimum. The players come to him in pairs and he has to put one of them in Harbinger's team and the other in Sciencepal's team at that instant. This is a tedious task for him and therefore he needs your help!</div>\n<p>Rainbow 6 is a very popular game in colleges. There are 2 teams, each having some members and the 2 teams play some matches against each other. The team which wins the maximum number of matches wins the game! Two of my friends Ashank and Aditya (better known as Harbinger and Sciencepal) are great gamers and they want to compete. So they decide to form their own teams.</p>\n<p>There are 2*N players who are interested to be a part of their team. Each player has some rating (based on his performance) and Akarsh(Nimbus) is responsible for forming their teams. Being a good friend of both, he wants to form two teams such that the difference of total ratings of the players between the teams becomes minimum. The players come to him in pairs and he has to put one of them in Harbinger's team and the other in Sciencepal's team at that instant. This is a tedious task for him and therefore he needs your help!</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line of the input contains an integer&nbsp;T&nbsp;denoting the number of the test cases. (1&nbsp;&le;&nbsp;T&nbsp;&le;&nbsp;10)</p>\n<p>First line of each test case contains a number&nbsp;N&nbsp;denoting the number of pair of players. (1&nbsp;&le;&nbsp;N&nbsp;&le;&nbsp;200)</p>\n<p>Next&nbsp;N&nbsp;lines contains rating of the persons in pairs as&nbsp;x&nbsp;and&nbsp;y. (0&nbsp;&le;&nbsp;x , y&nbsp;&le;&nbsp;250)</p>\n<h3>Output</h3>\n<p>For each test case, print a single integer denoting the minimum possible absolute rating difference between Sciencepal's and Harbinger's team.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>1<br />2<br />2 3<br />4 5</p>\n<pre><strong>Output:</strong>\n0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82808041-9f44-4b6b-808e-fed8bca5a97d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "R6PLinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rangesum-range-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RANGESUM - Range Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RANGESUM - Range Sum</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<h3>Problem Statement</h3>\n<p>You are initially given an array of N integers ( 1&lt;=N&lt;=10<sup>5</sup>&nbsp;). Given this array, you have to perform 2 kinds of operations :<br /><br />(i) Operation 1 : Op1( l, r )<br /><br />You are given 2 integers l and r. ( 1 &lt;= l &lt;= r &lt;= current size of the array ). You need to return the sum of all the elements with indices between l and r ( both inclusive ). That is, if the elements currently in the array are a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>.... a<sub>n</sub>, you need to return the following sum : a<sub>l</sub>&nbsp;+ a<sub>l+1</sub>&nbsp;+ a<sub>l+2</sub>&nbsp;... + a<sub>r</sub>.<br /><br />(ii) Operation 2 : Op2( x )<br /><br />You are given a single integer x ( |x| &lt;= 10<sup>9</sup>&nbsp;). Add this element to the&nbsp;beginning&nbsp;of the array. After this operation, x will now become a<sub>1</sub>, the old a<sub>1</sub>&nbsp;will now become a<sub>2</sub>, and so on. The size of the array will increase by 1.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains a single integer N ( 1 &lt;= N &lt;= 10<sup>5</sup>&nbsp;), the number of elements initially in the array.<br /><br />This is followed by a line containing N space separated integers, a<sub>1</sub>&nbsp;a<sub>2</sub>&nbsp;.... a<sub>N</sub>. ( |a<sub>i</sub>| &lt;= 10<sup>9</sup>&nbsp;)<br /><br />The next line contains a single integer Q, the number of operations you will be asked to perform. ( 1 &lt;= Q &lt;= 10<sup>5</sup>&nbsp;)<br /><br />Q lines of input follow. Each such line starts with either the number 1 or the number 2. This indicates the type of operation that you are required to perform. The format of these queries are as follows :<br /><br />1 l r : Carry out operation 1 with arguments l and r. ( 1 &lt;= l &lt;= r &lt;= current size of the array )<br />That is, return the sum of the following array elements : a<sub>l</sub>&nbsp;+ a<sub>l+1</sub>&nbsp;... + a<sub>r</sub><br /><br />2 x : Carry out operation 2 with the argument x. ( |x| &lt;= 10<sup>9</sup>&nbsp;)<br />That is, add the value x at the beginning of the array.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each query of type 1, output the return value on a new line. No output needs to be printed for queries of type 2.</p>\n&nbsp;\n<h3>Example</h3>\n<pre><strong>Input #1:</strong>\n10<br />1 2 3 4 5 6 7 8 9 10<br />4<br />1 1 10<br />1 1 1<br />1 10 10<br />1 2 7<br /><br /><strong>Output #1:</strong><br />55<br />1<br />10<br />27<br /><strong><br /><br />Input #2:</strong><br />5<br />6 7 8 9 10<br />9<br />2 5<br />2 4<br />1 2 7<br />2 3<br />2 2<br />2 1<br />1 1 10<br />1 1 1<br />1 10 10<br /><strong><br /><br />Output #2:</strong><br />45<br />55<br />1<br />10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/437683f3-0fa4-43cb-ae0f-5ccf37e6c213",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RANGESUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rating-coder-ratings",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RATING - Coder Ratings",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RATING - Coder Ratings</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Some of the more elite (and not-so-elite) coders around take part in a certain unnamed programming contest. In said contest, there are multiple types of competitions. Here, we consider the Open and High School competition types. For each type, each competitor receives a&nbsp;<em>rating</em>, an integer between 1 and 100000, inclusive. A coder's rating is based upon his or her level of performance in matches and is calculated using a complicated formula which, thankfully, you will not be asked to implement.<br /><br />Although the Open and High School ratings for a coder who has participated in both competition types lately are usually close, this is not always the case. In particular, High School matches are more about speed, since many coders are able to solve all the problems, whereas Open matches require more thinking and there is a steeper curve in terms of problem difficulty.<br /><br /><strong>Problem Statement</strong><br />You are given&nbsp;<em>N</em>&nbsp;coders (1 &le;&nbsp;<em>N</em>&nbsp;&le; 300000), conveniently numbered from 1 to&nbsp;<em>N</em>. Each of these coders participates in both High School and Open matches. For each coder, you are also given an Open rating&nbsp;<em>A<sub>i</sub></em>&nbsp;and a High School rating&nbsp;<em>H<sub>i</sub></em>. Coder&nbsp;<em>i</em>&nbsp;is said to be&nbsp;<em>better</em>&nbsp;than coder&nbsp;<em>j</em>&nbsp;if and only if both of coder&nbsp;<em>i</em>'s ratings are greater than or equal to coder&nbsp;<em>j</em>'s corresponding ratings, with at least one being greater. For each coder&nbsp;<em>i</em>, determine how many coders coder&nbsp;<em>i</em>&nbsp;is better than.<br /><br /><strong>Input Format</strong><br />On the first line of input is a single integer&nbsp;<em>N</em>, as described above.<br /><em>N</em>&nbsp;lines then follow. Line&nbsp;<em>i</em>+1 contains two space-separated integers,&nbsp;<em>A<sub>i</sub></em>&nbsp;and&nbsp;<em>H<sub>i</sub></em>.<br /><br /><strong>Output Format</strong><br />Line&nbsp;<em>i</em>&nbsp;should contain the number of coders that coder&nbsp;<em>i</em>&nbsp;is better than.<br /><br /><strong>Sample Input</strong></p>\n<pre>8\n1798 1832\n862 700\n1075 1089\n1568 1557\n2575 1984\n1033 950\n1656 1649\n1014 1473\n</pre>\n<p>&nbsp;</p>\n<p><strong>Sample Output</strong></p>\n<pre>6\n0\n2\n4\n7\n1\n5\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d9b6419c-81d0-48fa-8c7b-472a107afe95",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RATINGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "realno-real-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "REALNO - Real Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">REALNO - Real Numbers</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<pre>&nbsp;</pre>\n<p>Find whether there exists a pair of real nos. whose sum is in range<strong>&nbsp;(1,2)</strong>&nbsp;in an array consisting of real nos. in the range&nbsp;<strong>(0,2)</strong>. If there exists such a pair print \"found\" else print \"not found\". (double quotes for clarity)</p>\n<p><strong>Note: all intervals given above are open intervals.</strong></p>\n<p><strong>INPUT:</strong></p>\n<p>First line is the number of test cases t (t&lt;=6),</p>\n<p>then for each case no. of real nos. in the array is given (n)</p>\n<p>then in the next line the real nos. are given.</p>\n<p><strong>OUTPUT:</strong>print the required ans, i.e., \"<strong>found</strong>\" or \"<strong>not found</strong>\"</p>\n<p>&nbsp;</p>\n<p>Constraints:</p>\n<p><strong>1 &lt;= n &lt;= 3*10^5</strong></p>\n<p>e.g.,</p>\n<p>&nbsp;</p>\n<p>Input:</p>\n<p>2</p>\n<p>3</p>\n<p>0.7 0.5 1.2</p>\n<p>5</p>\n<p>1.2 1.3 1.22 0.999 1.5</p>\n<p>&nbsp;</p>\n<p>Output:</p>\n<p>found</p>\n<p>not found</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ec15bfcd-6a3b-436a-8004-3acdb3f6bbaf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "REALNOinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "reayzcodetst-coding-test",
  "tags": [],
  "level": "BEGINNER",
  "title": "REAYZCODETST - Coding Test",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">REAYZCODETST - Coding Test</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Great programmer &ldquo;Tourist&rdquo; is attending a coding test. In this test he is asked to solve an easy problem. The problem description is,</p>\n<p><em>There is an array&nbsp;<strong>a</strong>&nbsp;consists of&nbsp;<strong>n</strong>&nbsp;integers and another nonnegative integer<strong>&nbsp;x</strong>. He need to find the number of pair (i, j) where&nbsp;<strong>i!=j</strong>&nbsp;&amp;&nbsp;<strong>a<sub>i&nbsp;</sub>&ndash; a<sub>j</sub>&nbsp;= x.</strong></em></p>\n<p>As it is very easy for him, he gave you this problem and start trying another hard problem. Can you solve this for him?</p>\n<h3>Input</h3>\n<p>Input starts with an integer&nbsp;<strong>t (1 &le; t &le; 10),</strong>&nbsp;number of test case.</p>\n<p>Each case contains two integer&nbsp;<strong>n (1 &le; n &le; 10<sup>5</sup>),</strong>&nbsp;and&nbsp;<strong>x (0 &le; x &le; 10<sup>9</sup>).</strong></p>\n<p>Next line contains n separated integers&nbsp;<strong>a<sub>i</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 10<sup>9</sup>).</strong></p>\n<h3>Output</h3>\n<p>For each case, print the case number and the number of pairs which meet the above condition.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>2</p>\n<p>5 3</p>\n<p>5 1 4 2 3</p>\n<p>10 2</p>\n<pre>12 17 19 13 17 11 17 12 15 14\n\n<strong>Output:</strong></pre>\n<p>Case 1: 2</p>\n<pre>Case 2: 10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e13912db-165c-4681-8f04-0d89539d8ebd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "REAYZCODETSTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "redarr2-reduce-the-array",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "REDARR2 - Reduce the array",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">REDARR2 - Reduce the array</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an array of size n, you need to reduce the array. In one step, remove any two elements from the array and add their sum instead. Continue addition and removal until no further reduction possible. Output the minimum cost of reduction possible for the given array.&nbsp;</p>\n<h3>Input</h3>\n<p>First line contains a positive integer T representing number of testcases.</p>\n<p>Next line contains a number n denoting the size of array.</p>\n<p>Next line contains N space separated positive integers (A[i])</p>\n<p>1 &le; T &le; 50</p>\n<p>1 &le; n &le; 10<sup>6</sup></p>\n<p>1 &le; A[i] &le; 10<sup>6</sup></p>\n<h3>Output</h3>\n<p>Output minimum cost of reduction.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />2<br />4<br />1 6 3 20<br />3<br />2 2 2</pre>\n<pre><strong>Output:</strong><br />44<br />10</pre>\n<pre><strong>Explanation:</strong><br />Example 1:<br />Remove {1,3} and insert 1+3=4, array becomes [4 6 20], cost=1+3=4<br />Next remove {4,6} and insert 4+6=10, array becomes [10 20], cost=4+6=10 and overall cost=4+10=14<br />Next remove {10,20} and insert 10+20=30, array becomes [30], cost=10+20=30 and overall cost=14+30=44<br />Array cannot be reduced further, hence reduction cost is 44. This sequence of reduciton also gives the minimum possible cost. You will see all other sequences give greater or equal cost.<br /><br />Example 2:<br />Remove {2,2} and insert 2+2=4, array becomes [4 2 ], cost=2+2=4<br />Next remove {4,2} and insert 4+2=6, array becomes [6], cost=4+2=6 and overall cost=4+6=10<br />Array cannot be reduced further, hence reduction cost is 10.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9e172d58-79d3-4ed3-9dfa-9d2a07d42790",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "REDARR2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91c9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "redronesia-counting-words",
  "tags": [],
  "level": "BEGINNER",
  "title": "REDRONESIA - Counting Words",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">REDRONESIA - Counting Words</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>On the islands of Redronesia, there are many languages spoken. Each language is made up of a number of words. And some of the islands are very particular about how the words are formed in their language.</p>\n<p>Each language specifies how long a word can be, and how many letters there will be in the alphabet. But they all insist:</p>\n<ul>\n<li>that each letter in the word must be at least as big as the previous letter</li>\n<li>that doubles of any letter are allowed, but 3 or more of the same letter are not allowed.</li>\n</ul>\n<p>The aim of the problem is to count the number of possible words. Since the number may be large, please give the answer mod 1000000007.<br /><br />As an example, on the island of Imosua, they have an alphabet of 4 letters (we'll call them a, b, c and d), and 6 letters in each word. The following words are not allowed on Imosua:</p>\n<ul>\n<li>aabbc (not 6 letters long)</li>\n<li>aabbab (each letter is not at least as big as the previous letter)</li>\n<li>aaabbc and aaaabc (triples and longer are not allowed)</li>\n</ul>\n<p>Some of the 10 allowable words are:</p>\n<ul>\n<li>aabbcc</li>\n<li>aabcdd</li>\n<li>bbccdd</li>\n</ul>\n<h3>Input</h3>\n<p>The first line of input contains one integer: T the number of test cases.</p>\n<p>On each of the next T lines, your are given two integers: S (the length of each word) and C (the number of characters in the alphabet).</p>\n<h3>Output</h3>\n<p>For each test case, you have to print the number of possible words.</p>\n<p>As the result may be a big number, simply output your result modulo 10^9+7</p>\n<h3>Example</h3>\n<pre><strong>Input:<br />3<br />6 4<br />6 3<br />6 2</strong>\n\n\n<strong>Output:<br />10<br />1<br />0<br /><br /></strong></pre>\n<h3><strong>Constraints<br /></strong></h3>\n<p>1 &lt; T &lt; 100</p>\n<p>1 &lt; S, C &lt; 500</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d3db05f3-9b5b-4268-9a7d-dba8d6475f83",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "REDRONESIAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ca"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rent-rent-your-airplane-and-make-money-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RENT - Rent your airplane and make money",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RENT - Rent your airplane and make money</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>\"ABEAS Corp.\" is a very small company that owns a single airplane. The customers of ABEAS Corp are large airline companies which rent the airplane to accommodate occasional overcapacity.</p>\n<p>Customers send renting orders that consist of a time interval and a price that the customer is ready to pay for renting the airplane during the given time period. Orders of all the customers are known in advance. Of course, not all orders can be accommodated and some orders have to be declined. Eugene LAWLER, the Chief Scientific Officer of ABEAS Corp would like to maximize the profit of the company.</p>\n<p>You are requested to compute an optimal solution.</p>\n<h4>Small Example</h4>\n<p>Consider for instance the case where the company has 4 orders:</p>\n<ul>\n<li>Order 1 (start time 0, duration 5, price 10)</li>\n<li>Order 2 (start time 3, duration 7, price 8)</li>\n<li>Order 3 (start time 5, duration 9, price 7)</li>\n<li>Order 4 (start time 6, duration 9, price 8)</li>\n</ul>\n<p>The optimal solution consists in declining Order 2 and 3 and the gain is 10+8 = 18.<br />Note that the solution made of Order 1 and 3 is feasible (the airplane is rented with no interruption from time 0 to time 14) but non-optimal.</p>\n<h3>Input</h3>\n<p>The first line of the input contains a number T &le; 30 that indicates the number of test cases to follow. The first line of each test case contains the number of orders n (n &le; 10000). In the following n lines the orders are given. Each order is described by 3 integer values: The start time of the order st (0 &le; st &lt; 1000000), the duration d of the order (0 &lt; d &lt; 1000000), and the price p (0 &lt; p &lt; 100000) the customer is ready to pay for this order.</p>\n<h3>Output</h3>\n<p align=\"justify\">You are required to compute an optimal solution. For each test case your program has to write the total price paid by the airlines.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n0 5 10\n3 7 14\n5 9 7\n6 9 8\n\n<strong>Output:</strong>\n18</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/388f438a-4532-4dab-8762-58c9870023e9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RENTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91cb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "rhood-robin-hood",
  "tags": [],
  "level": "BEGINNER",
  "title": "RHOOD - Robin Hood",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RHOOD - Robin Hood</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>I think all of you have seen the popular television series&nbsp;<strong>Robin Hood.&nbsp;</strong>You&rsquo;ve heard about<strong>&nbsp;Robin Hood.&nbsp;</strong>He is a brave &amp; kind hearted man. He loves people very much. He wants to help the poor people. But he is working with&nbsp;<strong>Robin Hood</strong>&nbsp;team at this moment. So, he is too busy for shooting TV series. Although he&rsquo;s a star and wants to help the poor, he is not rich as you think. Suddenly he took a decision about robbing a bank. He will rob the World Bank and distribute the money to poor countries. But the problem is how much money a country should be given. Some countries are developed, and some are developing. So, he sets a condition. Every country will be marked by a number (<strong>N</strong>) that represents countries&rsquo; ranks (<strong>if a rank is smaller that means those countries are developed or rich enough</strong>) and Robin Hood will take a number&nbsp;<strong>M</strong>&nbsp;randomly to calculate M^<sup>N</sup>. Since M^<sup>N</sup>&nbsp;can be much bigger, so calculate (M^<sup>N</sup>) modulo 1000000007(10<sup>9</sup>+7). And finally he will calculate the sum of divisor of that number. Then he will give the money to that country.</p>\n<p>Since&nbsp;<strong>Robin Hood</strong>&nbsp;is weak in programming. So, he asks for your help.</p>\n<h3>Input</h3>\n<p>The first line in the data set is an integer&nbsp;<strong>T (1&lt;=T&lt;=200)&nbsp;</strong>that represents the number of data collections that follow. Each data set contains two integers&nbsp;<strong>M, N (1&lt;=M, N&lt;=100)</strong></p>\n<h3>Output</h3>\n<p>For each test case print the money that John Snow can give to the specific country. Since the power of M^<sup>N</sup>&nbsp;can be much bigger, (M^<sup>N</sup>) modulo&nbsp;<strong>1000000007(10<sup>9</sup>+7)</strong>. But don&rsquo;t modulo the final sum of divisor. See sample input and output for exact format.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p><strong>3</strong></p>\n<p><strong>2 5</strong></p>\n<p><strong>14 11</strong></p>\n<pre><strong>63 60</strong></pre>\n<pre><strong>Output:</strong></pre>\n<p><strong>Case 1: 63</strong></p>\n<p><strong>Case 2: 565976772</strong></p>\n<p><strong>Case 3: 1174118400</strong></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ea9759f0-246f-41f1-bc9d-0f81b834ada2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RHOODinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91cc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "righttri-right-triangle-counting",
  "tags": [],
  "level": "BEGINNER",
  "title": "RIGHTTRI - Right Triangle Counting",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RIGHTTRI - Right Triangle Counting</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/RIGHTTRI/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://www.spoj.com/problems/RIGHTTRI/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>N points are placed in the coordinate plane. Write a program which calculates in how many ways a right triangle can be formed by three of the given points. A right triangle is one in which one of the angles is 90 degrees.</p>\n<pre>&nbsp;</pre>\n<h1>Input</h1>\n<pre>&nbsp;</pre>\n<p>The first line of input contains an integer N (3 &lt;= N &lt;= 1500), the number of points. Each of the following N lines contains the coordinates of one point, two integers separated by a space. The coordinates will be between -10^9 and 10^9. No two points will be located at the same coordinates.</p>\n<pre>&nbsp;</pre>\n<h1>Output</h1>\n<p>Output the number of right triangles.</p>\n<pre>&nbsp;</pre>\n<h3>Sample</h3>\n<pre>&nbsp;</pre>\n<pre>Sample input<br /> <br />input <br /> <br />5 <br />-1 1 <br />-1 0 <br />0 0 <br />1 0 <br />1 1 <br /> <br />output <br /> <br />7 <br /><br />input <br /> <br />4 <br />5 0 <br />2 6 <br />8 6 <br />5 7 <br /> <br />output <br /> <br />0  </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/23ddde8e-1cbd-4738-a055-c819f8dfc599",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RIGHTTRIinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91cd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rks-rk-sorting",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RKS - RK Sorting",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RKS - RK Sorting</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>RK</strong>&nbsp;is a great code breaker. He knows any cipher in the world can be broken by frequency analysis. He intercepted an enemy message. The message consists of&nbsp;<strong>N</strong>&nbsp;numbers, smaller than or equal to&nbsp;<strong>C</strong>. RK belives freqency analysis consists of sorting this sequence so that more frequent numbers appear before less frequent ones.</p>\n<p>Formally, the sequence must be sorted so that given any two numbers X and Y , X appears before Y if the number of times X appears in the original sequence is larger than the number of time Y does. If the number of appearances is equal, the number whoes value appears sooner in the input should appear sooner in the sorted sequence.<br />Help RK by creating a \"frequency sorter\".</p>\n<h3>Input</h3>\n<p>First line of input contains two integers, N (1 &lt;= N &lt;= 1000), length of message, and C (1 &lt;= C &lt;= 10^9), the number from task description. Next line contains N integers smaller than or equal to C, message itself.</p>\n<h3>Output</h3>\n<p>First and only line of output should contain N numbers, the sorted sequence.</p>\n<h3>Sample</h3>\n<pre><strong>Input</strong>\n9 3\n1 3 3 3 2 2 2 1 1\n\n<strong>Output</strong>\n1 1 1 3 3 3 2 2 2</pre>\n<pre><strong>Input</strong>\n5 2\n2 1 2 1 2\n\n<strong>Output</strong>\n2 2 2 1 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/637a96e6-c36c-4160-9645-e21974fc15c2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RKSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ce"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rmid-running-median",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RMID - Running Median",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RMID - Running Median</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You will be given some integers in non decreasing order and each time the median is queried you have to report and remove it. Take the smaller element as median in case of even elements.</p>\n<h3>Input</h3>\n<p>The input contains many test cases. Read until End Of File.</p>\n<p>Each test case contains n (n &le; 100000) positive integers in non-decreasing order,&nbsp;along with m queries indicated by -1, all on separate lines. (See the example.)</p>\n<p>For a query, print the current median on a single line and remove it from the list.&nbsp;</p>\n<p>Each test case ends with 0 on a single line, and two test cases will be separated by an empty line. All integers are guaranteed to fit in a signed 32-bit container.&nbsp;A query can only occur if the list is non-empty.&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case output m lines containing the answers to the corresponding queries.&nbsp;Print an empty line after each test case.&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2\n3\n4\n-1\n-1\n5\n6\n7\n-1\n0\n\n2\n3\n-1\n0\n\n<strong>Output:</strong>\n2\n3\n5\n\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/12f35a8d-8a5a-408f-876d-ff76e76f6b58",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RMIDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91cf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rplb-blueberries",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RPLB - Blueberries",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RPLB - Blueberries</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Teresa picked up enough strawberries, now she wants to pick blueberries from the magical blueberry bush from Rainbowland.</p>\n<p>Knowing her previous experience with the strawberries, Teresa wants to pick up the blueberries in a way that she may not exceed the limit proposed.</p>\n<p>When picking the blueberries, she noticed that if she pick from the bush i, she couldn't pick the blueberries at the bush i+1 (some sort of magic in rainbowland).</p>\n<p>Worried about this, Teresa wants to know the maximum blueberries she can pick, given the number of bushes and the number of blueberries in each bush.</p>\n<h3>Input</h3>\n<p>Will contain an integer T, then, T cases will follow, each case starts with a number N and K, being N the number of bushes and K the number of blueberries Teresa will pick as maximum, the next line contains N integers, each one representing the blueberries there is on the i-th bush.</p>\n<h3>Output</h3>\n<p>You will output for each test case the string:&nbsp;<tt>&ldquo;Scenario #i: &ldquo;</tt>&nbsp;where i is the test case you are analyzing, then, an integer denoting the maximum number of blueberries you can grab.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n5 100\n50 10 20 30 40\n5 87\n21 45 30 12 14\n\n<strong>Output:</strong>\nScenario #1: 90\nScenario #2: 65</pre>\n<h4>Output explanation (first scenario)</h4>\n<p>Teresa picks the 1<sup>st</sup>&nbsp;blueberry bush (50), she cannot pick the 2<sup>nd</sup>, she decides not to pick until the 5<sup>th</sup>&nbsp;one where she picks the &ldquo;40&rdquo; blueberry, she could pick the 3<sup>rd</sup>&nbsp;bush, but she would exceed the limit (100).</p>\n<h4>Output explanation (second scenario)</h4>\n<p>Teresa picks the 1<sup>st</sup>, the 3<sup>rd</sup>&nbsp;and the 5<sup>th</sup>&nbsp;bush, total of (21+30+14 = 65) blueberries</p>\n<h3>CONSTRAINTS</h3>\n<p>1 &lt;= N &lt;= 1000<br />1 &lt;= K &lt;= 1000</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78722827-9a4a-4cce-8f9a-3e4f4ec50d51",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RPLBinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "rrange-ranges",
  "tags": [],
  "level": "BEGINNER",
  "title": "RRANGE - Ranges",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RRANGE - Ranges</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are N contiguous cells numbered from 1 to N. Initially, each cell contains a 0 in it. A sub-contiguous group of cells can be updated this way:</p>\n<p>1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A range [i,j] is defined such that i &lt; j</p>\n<p>2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The cell numbered i is added 1; the cell numbered i + 1 is added 2, and so on until the cell numbered j is reached and added j &ndash; i + 1</p>\n<p>For example, if N = 7 and the updates [3, 6] and [4,7] were performed, this is what would happen.</p>\n<p>Initially: {0,0,0,0,0,0,0}</p>\n<p>Update [3,6]: {0,0,1,2,3,4,0}</p>\n<p>Update [4,7]: {0,0,1,3,5,7,4}</p>\n<p>&nbsp;</p>\n<p>After performing some update operations, it would be amazing to answer questions like the following:</p>\n<p>1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A range [u,v] is defined such that u &lt; v</p>\n<p>2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The answer is the sum of every cell in the range [u,v] (both u and v are included) modulus 10,000</p>\n<p>&nbsp;</p>\n<p>Given N and U updates ranges. You have to write a program capable of answering Q questions.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains three integers: N (1 &lt;= N &lt;= 1,000,000,000), U and Q (1 &lt;= U, Q &lt;= 1,000), representing the number of cells, the number of update operations, and the number of questions respectively.</p>\n<p>&nbsp;</p>\n<p>Each of the following U lines contains two integers i and j (1 &lt;= i &lt; j &lt;= N) separated by a single space indicating an update operation.</p>\n<p>Each of the following Q lines contains two integers u and v (1 &lt;= u &lt; v &lt;= N) separated by a single space indicating a question.</p>\n<h3>Output</h3>\n<p>For each question [u,v] you must print the sum of all contiguous cells starting at u and ending at v modulus 10,000.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7 2 2\n3 6\n4 7\n4 6\n1 7\n\n<strong>Output:</strong>\n15\n20</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c36aa801-7091-46fb-b92a-b9e4dbe77215",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RRANGE input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rrsched-round-robin-scheduling",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "RRSCHED - Round-Robin Scheduling",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">RRSCHED - Round-Robin Scheduling</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A computer processor is given N tasks to perform (1 &le; N &le; 50,000). The i-th task requires T<sub>i</sub>&nbsp;seconds of processing time (1 &le; T<sub>i</sub>&nbsp;&le; 1,000,000,000). The processor runs the tasks as follows: each task is run in order, from 1 to N, for 1 second, and then the processor repeats this again starting from task 1. Once a task has been completed, it will not be run in later iterations. Determine, for each task, the total running time elapsed once the task has been completed.</p>\n<h3>Input</h3>\n<p>The first line of the input contains the integer N, and the next N lines contain the integers T<sub>1</sub>&nbsp;through T<sub>N</sub>.</p>\n<h3>Output</h3>\n<p>Output N lines, the i-th of which contains an integer representing the time elapsed when task i has been processed.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n8\n1\n3\n3\n8\n\n<strong>Output:</strong>\n22\n2\n11\n12\n23\n</pre>\n<p>The second task is completed during the first iteration, finishing 2 seconds in. On the third iteration, the third and fourth tasks complete at 11 seconds and 12 seconds, respectively. Finally, on the eighth iteration, the first and last tasks complete at 22 seconds and 23 seconds, respectively.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f3f28125-e311-4727-b0ab-51b68a64fe9f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RRSCHEDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "seq-recursive-sequence",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SEQ - Recursive Sequence",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SEQ - Recursive Sequence</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sequence&nbsp;<em>(a<sub>i</sub>)</em>&nbsp;of natural numbers is defined as follows:<br /><br />&nbsp;&nbsp;&nbsp;<em>a<sub>i</sub>&nbsp;= b<sub>i</sub></em>&nbsp;(for&nbsp;<em>i &lt;= k</em>)<br />&nbsp;&nbsp;&nbsp;<em>a<sub>i</sub>&nbsp;= c<sub>1</sub>a<sub>i-1</sub>&nbsp;+ c<sub>2</sub>a<sub>i-2</sub>&nbsp;+ ... + c<sub>k</sub>a<sub>i-k</sub></em>&nbsp;(for&nbsp;<em>i &gt; k</em>)<br /><br />where&nbsp;<em>b<sub>j</sub></em>&nbsp;and&nbsp;<em>c<sub>j</sub></em>&nbsp;are given natural numbers for&nbsp;<em>1&lt;=j&lt;=k</em>. Your task is to compute&nbsp;<em>a<sub>n</sub></em>&nbsp;for given&nbsp;<em>n</em>&nbsp;and output it modulo&nbsp;<em>10<sup>9</sup></em>.</p>\n<h3>Input</h3>\n<p>On the first row there is the number&nbsp;<em>C</em>&nbsp;of test cases (equal to about 1000).<br />Each test contains four lines:</p>\n<p><em>k</em>&nbsp;- number of elements of&nbsp;<em>(c)</em>&nbsp;and&nbsp;<em>(b)</em>&nbsp;(<em>1 &lt;= k &lt;= 10</em>)<br /><em>b<sub>1</sub>,...,b<sub>k</sub></em>&nbsp;-&nbsp;<em>k</em>&nbsp;natural numbers where&nbsp;<em>0 &lt;= b<sub>j</sub>&nbsp;&lt;= 10<sup>9</sup></em>&nbsp;separated by spaces<br /><em>c<sub>1</sub>,...,c<sub>k</sub></em>&nbsp;-&nbsp;<em>k</em>&nbsp;natural numbers where&nbsp;<em>0 &lt;= c<sub>j</sub>&nbsp;&lt;= 10<sup>9</sup></em>&nbsp;separated by spaces<br /><em>n</em>&nbsp;- natural number (<em>1 &lt;= n &lt;= 10<sup>9</sup></em>)</p>\n<h3>Output</h3>\n<p>Exactly&nbsp;<em>C</em>&nbsp;lines, one for each test case:&nbsp;<em>a<sub>n</sub></em>&nbsp;modulo&nbsp;<em>10<sup>9</sup></em></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 \n3 \n5 8 2 \n32 54 6 \n2 \n3 \n1 2 3 \n4 5 6 \n6 \n3 \n24 354 6 \n56 57 465 \n98765432\n\n<strong>Output:</strong>\n8 \n714 \n257599514</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5591593b-9925-4316-9dfb-7b45eb1e26e6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SEQinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sfn-square-free-number",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SFN - Square Free Number",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SFN - Square Free Number</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A Square free number is a number whose sum of every adjacent two digits is not a perfect square and dosen't contain digit 0. For example, 123 is a square free number cause sum of first two adjacent digits 1 + 2 = 3 is not a perfect square and sum of last two adjacent digits 2 + 3 = 5 is not a perfect square.</p>\n<p>You are given an integer n. You have to calculate the number of n-digit square free number.</p>\n<p>As the result can be very big, output the result modulo 1000000007 (1e9 + 7) ;</p>\n<h3>Input</h3>\n<p>First line of the input contains a number T, the number of testcase.</p>\n<p>Each of the next T lines will contain an integer n .</p>\n<h3>Output</h3>\n<p>Output the number of square free numbers of length n .</p>\n<p>Constraints:</p>\n<p>T &lt;= 1000.</p>\n<p>1 &lt;= n &lt;= 10<sup>18 .</sup></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre><strong>3</strong></pre>\n<pre><strong>1</strong></pre>\n<pre><strong>2</strong></pre>\n<pre><strong>3</strong></pre>\n<pre><strong>Output:</strong></pre>\n<pre><strong>6</strong></pre>\n<pre><strong>67</strong></pre>\n<pre><strong>501</strong></pre>\n<pre><strong>Note: By definition 1, 4, 9 is not square free number.</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/604b7068-baff-412a-9b13-94e10255e8ca",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SFNinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sgift-sabbir-and-gifts",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SGIFT - Sabbir and gifts",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SGIFT - Sabbir and gifts</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sabbir is a little boy. he went to a gift shop with his mother. there were&nbsp;<strong>n&nbsp;</strong>different types of gifts in the shop . all gifts were attractive to sabbir. he wanted to buy all the gifts which are in price range &nbsp;<a href=\"https://www.codecogs.com/eqnedit.php?latex=a&amp;space;\\leq&amp;space;p&amp;space;\\leq&amp;space;b\" target=\"_blank\" rel=\"noopener\"><img title=\"a \\leq p \\leq b\" src=\"https://latex.codecogs.com/gif.latex?a&amp;space;\\leq&amp;space;p&amp;space;\\leq&amp;space;b\" alt=\"\" /></a>&nbsp; . you are given prices of all the gifts and &nbsp;<strong>a&nbsp;</strong>,&nbsp;<strong>b&nbsp;</strong>. sabbir's mother need your help. &nbsp;please calculate the total amount of price of all gifts of that range for sabbir's mother.&nbsp;</p>\n<h3>Input</h3>\n<p>in the first line there will be&nbsp;<strong>n .&nbsp;</strong>number of gifts in the shop.<br />in the next line there will be&nbsp;<strong>n&nbsp;</strong>integers&nbsp;<strong>p</strong><sub>1</sub><strong>, p</strong><sub>2&nbsp;</sub><strong>, p</strong><sub>3&nbsp;</sub><strong>... p</strong><sub><strong>n &nbsp;&nbsp;</strong></sub>denoting&nbsp;price of every gift</p>\n<p>in the 3rd line there will be&nbsp;<strong>Q</strong><strong>&nbsp;</strong>number of queries.</p>\n<p>next&nbsp;<strong>Q</strong>&nbsp;lines contain two integes&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b<br />&nbsp;</strong></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;n&amp;space;\\leq&amp;space;10^{5}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq n \\leq 10^{5}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;n&amp;space;\\leq&amp;space;10^{5}\" alt=\"\" /></a></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;p_{i}&amp;space;\\leq&amp;space;10^{9}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq p_{i} \\leq 10^{9}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;p_{i}&amp;space;\\leq&amp;space;10^{9}\" alt=\"\" /></a></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;Q&amp;space;\\leq&amp;space;10^{5}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq Q \\leq 10^{5}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;Q&amp;space;\\leq&amp;space;10^{5}\" alt=\"\" /></a></p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=1&amp;space;\\leq&amp;space;a,b&amp;space;\\leq&amp;space;10^{9}\" target=\"_blank\" rel=\"noopener\"><img title=\"1 \\leq a,b \\leq 10^{9}\" src=\"https://latex.codecogs.com/gif.latex?1&amp;space;\\leq&amp;space;a,b&amp;space;\\leq&amp;space;10^{9}\" alt=\"\" /></a></p>\n<h3>Output</h3>\n<p>print&nbsp;<strong>Q&nbsp;</strong>lines . every line contains one integer , sum of all prices for that range given in the query.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7<br />1 3 2 1 5 2 2<br />4<br />1 2<br />1 5<br />3 5<br />4 5\n\n<strong>Output:</strong>\n8<br />16<br />8<br />5<br /><br /><strong>NOTE: for first query sabbir will buy all the gifts of prices 1 , 2 , 1 , 2, 2 . so, sum is 8<br /></strong><strong>for second query sabbir will buy all the gifts . so the sum is 16</strong><br />&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bf1a59da-cc8d-4620-9fcb-6c19bc0768e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SGIFTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "shakti-shaktiman-and-kilwish",
  "tags": [],
  "level": "BEGINNER",
  "title": "SHAKTI - SHAKTIMAN AND KILWISH",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SHAKTI - SHAKTIMAN AND KILWISH</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Since very long time shaktiman and kilwish have been fighting with each other but the fight never came to end . So finally I came to rescue . I decided that the result of the fight will be decided by a mathematical game, in which I will write a number (N) . Kilwish and shaktiman will play the game alternatively and each of them would subtract a number(n) [n is less than N] such that N modulo n gives zero. The game is repeted turn by turn until the one, who now cannot make a further move looses the game</p>\n<p>Shaktiman being weak at mathematics asks you for help, whether or not he can win in that particular case. If Shaktimaan wins that game then print \"Thankyou Shaktiman\" otherwise print \"Sorry Shaktiman\".The game begins with shaktimaan playing first move.It is well understood that both of them will make moves in optimal way.</p>\n<h3>INPUT</h3>\n<p>Input contains test cases t (&lt; 10^5) and followed by t numbers (1 &lt;= N &lt;= 10^6 ).</p>\n<h3>OUTPUT</h3>\n<p>If Shaktimaan wins that game then print&nbsp;<tt>\"Thankyou Shaktiman\"</tt>&nbsp;otherwise print&nbsp;<tt>\"Sorry Shaktiman\"</tt>.</p>\n<pre><strong>Sample Input:</strong>\n2\n212\n424\n\n<strong>Sample Output:</strong>\nThankyou Shaktiman\nThankyou Shaktiman</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5956e7ed-2c72-4947-aaad-325b7b97c9fb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SHAKTIinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sineggs-sinha-and-eggs",
  "tags": [],
  "level": "BEGINNER",
  "title": "SINEGGS - Sinha and Eggs",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SINEGGS - Sinha and Eggs</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sinha is a naughty kid , who always irritates Shukla with his activities. One day Sinha bought some eggs, but indulged in his pranks, forgets them in Shukla's room. Shukla being a considerate friend wanted to teach Sinha a lesson. He puts a condition in front of Sinha, he will give him a number and Sinha has to tell if it has an \"Odd\" number of factors. If Sinha answers the questions correctly, he shall return the eggs. Since, Sinha can't focus on the problem due to his mischievous nature, he asks you to help him.</p>\n<h3>Input</h3>\n<p>You are given a number 't' in first&nbsp; line depicting number of test cases. The next n lines contain a number 'n' each.</p>\n<p>Input Constraints:</p>\n<p>1&lt;=T&lt;=100000</p>\n<p>1&lt;=N&lt;=10^11</p>\n<h3>Output</h3>\n<p>You have to print \"YES\" if the number 'n' has an odd number of factors, else print \"NO\".</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3<br />10<br />4<br />6<br /><strong>Output:</strong>\nNO<br />YES<br />NO </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/691d527e-8e56-4a91-b7d2-6740a4792041",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SINEGGSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sk_001-rightful-distribution",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SK_001 - Rightful Distribution",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SK_001 - Rightful Distribution</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Akash , the director of the famous Timus Coaching Institute was very happy after the results of the Entrance Examination, and decided to distribute sweets to the students according to their test scores . He shall distribute sweets according to the following conditions :</p>\n<p>i) Every student must get atleast one sweet.</p>\n<p>ii) A student with higher score gets more number of sweets than all students who scored less than him.</p>\n<p>Help Akash to find out the minimum number of sweets that need to be distributed. Since the answer can be very large output it modulo 10<sup>9</sup>&nbsp;+ 7.</p>\n<h3>Input</h3>\n<p>The input consists of 3 lines. The first line contains T (1&lt;=T&lt;=10) denoting the number of test cases. The second line consists of a single interger N (1 &lt;= N &lt;= 10<sup>5</sup>) denoting the number of students.</p>\n<p>The next line consists of N space separated integers a<sub>1,</sub>a<sub>2,</sub>a<sub>3...</sub>a<sub>n</sub>&nbsp;where a<sub>i&nbsp;</sub>denotes the test score of the i<sup>th</sup>&nbsp;student (0&lt;=a<sub>i</sub>&lt;=10<sup>9</sup>) .</p>\n<h3>Output</h3>\n<p>Output a single integer denoting the minimum number of sweets to be distributed by Akash.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>2\n2\n1 2\n3\n100 200 50</pre>\n<pre><strong>Output:</strong></pre>\n<pre>3\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/caebe557-6740-4996-a365-f449946affe3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SK_001input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "slide-team-slide-treasure-hunt-race",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SLIDE - Team Slide Treasure Hunt Race",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SLIDE - Team Slide Treasure Hunt Race</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>Alice and Bob are participating in an exciting new Olympic event, the Team Slide Treasure Hunt Race! This event takes place on a slide with various treasures on it, which is up to 10m wide and 10km long. Yes, that's kilometers.</p>\n<p>The slide can be represented as a grid of cells, with $N$ ($2 \\leq N \\leq 10^4$) rows and $M$ ($2 \\leq M \\leq 10$) columns. The rows are numbered $1, 2, \\ldots, N$ from top to bottom, and the columns are numbered $1, 2, \\ldots, M$ from left to right. The cell in row $i$ and column $j$ is referred to as cell ($i$, $j$), and contains a treasure with value $G_{i,j}$ ($1 \\le G_{i,j} \\le 10^5$).</p>\n<p>The two friends will each get to travel once down the slide, one after another. First, Alice will slide from the top-left corner of the slide (cell ($1$, $1$)) down to the bottom-left corner (cell ($N$, $1$)). Then, Bob will slide from the top-right corner (cell ($1$, $M$)) down to the bottom-right corner (cell ($N$, $M$)). Whenever a person moves in the slide, they move from their current row to the next row down, and they can also guide themselves left or right by one column if desired. This means that they can go from cell ($i$, $j$) to either cell ($i+1$, $j-1$), ($i+1$, $j$), or ($i+1$, $j+1$), as long as they don't exit the slide. Throughout the race, both Alice and Bob collect the treasure in each cell they slide through - this includes their respective starting and ending cells. However, if Bob goes through any cell that Alice has already visited, he can't collect the treasure in it again.</p>\n<p>Alice and Bob would like to determine a sliding plan to allow them to collect as much treasure as possible, and win the gold medal! They've asked you to determine the maximum total value of treasure that they can collect, out of all valid strategies.</p>\n<h3>Input</h3>\n<p>The first line of the input will contain two integers $N$ and $M$, separated by a space. Each of the next $N$ lines, for $i$ from $1$ to $N$, will contain the $M$ space-separated integers $G_{i,1} \\,\\,\\, G_{i,2} \\,\\,\\, \\dots \\,\\,\\, G_{i,M}$.</p>\n<h3>Output</h3>\n<p>Output one number on a line by itself: the maximum combined treasure value that Alice and Bob can collect.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>5 4<br />3 6 8 2<br />5 2 4 3<br />1 1 20 10<br />1 1 20 10<br />1 1 20 10\n\n<strong>Output:</strong></pre>\n<pre>73</pre>\n<pre><strong>Explanation of Sample:</strong></pre>\n<p>The single optimal sliding plan involves Alice sliding down-right, down-right, down-left, and down-left, followed by Bob sliding down-left, down-right, down-left, and down-right. The treasures collected are shown in bold on the following grid:</p>\n<p><img src=\"https://www.spoj.com/content/sourspinach:slide.bmp\" alt=\"\" /></p>\n<p>Alice collects a total treasure value of $3+2+20+1+1=27$, while Bob collects $2+4+10+20+10=46$. Their total is then $27+46=73$.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/23d5f46a-4e1b-490e-8e74-8bd8d4d1d42b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SLIDEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91d9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "smallm-smallest-number-medium",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SMALLM - Smallest Number (medium)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SMALLM - Smallest Number (medium)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>60 is divisible by 2, 3, 4 and 5. No smaller number than 60 have this property.</p>\n<h3>Input</h3>\n<p>On the first line, you will be given two integers&nbsp;<em>T</em>&nbsp;(the number of test cases), and&nbsp;<em>M</em>&nbsp;(an integer).<br />Each of the next&nbsp;<em>T</em>&nbsp;lines contains an integer&nbsp;<em>N</em>.</p>\n<h3>Output</h3>\n<p>For each test case, output on one line, the smallest number that is divisible by all integers from 1 to&nbsp;<em>N</em>&nbsp;(inclusive).<br />As the answer may be a big number, output it modulo&nbsp;<em>M</em>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1 1000000007\n5\n<strong>Output:</strong>\n60\n</pre>\n<h3>Constraints</h3>\n<pre>T &lt;= 10^5\n10^8 &lt;= M &lt;= 2&times;10^9, a prime number\n0 &lt; N &lt; 10^8\n</pre>\n<h3>Information</h3>\n<p>There's one easy input file, and several harder ones. Time limit allows unoptimized code with fast languages to get AC ; for slower languages it may be hard.<br /><strong>Good luck and have fun ;-)</strong></p>\n<p>Edit(2017-02-11) : New time limit (after compiler changes).</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a6b1f505-c786-4cc1-a264-c1cba283a57a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SMALLMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91da"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sngint-encode-integer",
  "tags": [],
  "level": "BEGINNER",
  "title": "SNGINT - Encode Integer",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SNGINT - Encode Integer</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an integer N&nbsp;<strong>(0 &lt;= N &lt; 10<sup>7</sup>)</strong>, find the smallest positive integer M&nbsp;<strong>(M &gt; 0)</strong>&nbsp;such that the product of digits of M equals N.</p>\n<h3>Input</h3>\n<p>The first line of input is T&nbsp;<strong>(the total number of test cases)</strong>, followed by T&nbsp;<strong>(T &lt; 10001)</strong>&nbsp;lines, each containing an integer N.</p>\n<h3>Output</h3>\n<p>For each integer N, output in a separate line the integer M, or -1&nbsp;<strong>(if encoding is not possible)</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n24\n5\n11\n\n<strong>Output:</strong>\n38\n5\n-1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/541a22d5-0516-4792-b5b1-e7808f720375",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SNGINTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91db"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "snowgame-snowball-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "SNOWGAME - Snowball Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SNOWGAME - Snowball Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Farmer John's N (1 &lt;= N &lt;= 10<sup>18</sup>) cows went for a trip around the world. Now they are at the North Pole. They decided to play a snowball game. Each of the cows made one snowball. As it is known, heavier snowballs make more harm. FJ is sure that cows' snowballs are of the same weight except one snowball, which is heavier. FJ has one balance scale. With it he can know which of two snowball groups is heavier. Snowballs get damaged when weighed, so each snowball can take part in a weighing at most K (1 &lt;= K &lt;= 10000) times. Help FJ find the minimal number of weighings after which he can find the heaviest snowball.</p>\n<h3>Input</h3>\n<p>The only line of input file contains numbers N and K.</p>\n<h3>Output</h3>\n<p>The only line of output file contains minimum number of weighings.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n19 2</pre>\n<pre><strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a801bef7-f627-48e8-a0f7-2c2515cc4b9e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SNOWGAMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91dc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "socnetc-social-network-community",
  "tags": [],
  "level": "BEGINNER",
  "title": "SOCNETC - Social Network Community",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SOCNETC - Social Network Community</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Your friend came up with an idea of starting a social network-SOCNET. Since,he is not as good a programmer as you are he needs your help to build certain features.</p>\n<p>You need to build an ADD friend feature. if 'x' sends a friend request to 'y',he may accept it or deny it.</p>\n<p>SOCNET has a special feature called 'community'.When two people 'x' and 'y' becomes friends,the communities of two are merged together.(If 'x' has no friends,it's community consist of only himself,size-1)</p>\n<p>Since,your friend is low on funds,the data center he uses has a restriction-the MAXIMUM size of any community cannot exceed 'm'.</p>\n<p>You need to work on following three types of queries-</p>\n<ul>\n<li>A x y - x sends a friend request to y</li>\n<li>E x y - check whether x and y are present in same community(print 'Yes' or 'No')</li>\n<li>S x - prints the size of the community 'x' belongs to.</li>\n</ul>\n<p>NOTE- A friend requested is accepted only if the merger of the two communities results in a community not greater than 'm'.</p>\n<h3>Input</h3>\n<p>The first line of input consists of two positive integers - n and m(n is the number of registered users and m is the maximum size of any community).</p>\n<p>Next line consist of a positive integer q(number of queries).</p>\n<p>q lines follows(Each line consist of a query as described in the problem statement).</p>\n<p>The queries follows 1-indexing.</p>\n<p>&nbsp;</p>\n<h3>Constraints</h3>\n1&lt;=n,m&lt;=100000, 1&lt;=q&lt;=200000\n<h3>Output</h3>\nFor each query of Type - 'E',output in a single line-'Yes' or 'No'. For each query of Type - 'S',output the size of the community to which 'x' belongs. For further clarification,read the example given.\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 3\n8\nS 2\nA 2 3\nE 2 3\nS 2\nA 4 5\nA 3 5\nE 3 5\nS 3\n\n\n<strong>Output:</strong>\n1\nYes\n2\nNo\n2\n\n\nExplanation-Initially no one has any friend.So community of '2' consist of only '2' i.e size-1. Then '2' and '3' becomes friends .This forms a community of 2 people. '4' and '5' also becomes friends.This forms another community of 2 people. '5' is unable to accept friend request of '3' (because it would result in a community of 4 people(&gt;3).</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/05ddb578-80df-420f-bf2e-0f4bd91d4036",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SOCNETCinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91dd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "solveit-solveit",
  "tags": [],
  "level": "BEGINNER",
  "title": "SOLVEIT - SOLVEIT",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SOLVEIT - SOLVEIT</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Problem setter of INSOMNIA , MNNIT Allahabad decided to set a easy problem for all coders so that they can easily solve the problem and boost their confidence for rest of INSOMNIA.</div>\n<div id=\"_mcePaste\">The problem is a follows: You are given an array of size n while is initialized with 0.You will be given q queries of two types&nbsp;</div>\n<div id=\"_mcePaste\">Type 1: set in (input value)index k to -1</div>\n<div id=\"_mcePaste\">Type 2: print the index which has value -1 and is &nbsp;greater or equal to input index y</div>\n<div id=\"_mcePaste\">If there is no such value print -1&nbsp;</div>\n<div id=\"_mcePaste\">Note: Indexing is 1 based;</div>\n<p>Problem setter of INSOMNIA , MNNIT Allahabad decided to set a easy problem for all coders so that they can easily solve the problem and boost their confidence for rest of INSOMNIA.</p>\n<p>The problem is a follows: You are given an array of size n while is initialized with 0.You will be given q queries of two types&nbsp;</p>\n<p>Type 1: set in (input value)index k to -1</p>\n<p>Type 2: print the index which has value -1 and is &nbsp;greater or equal to input index y</p>\n<p>If there is no such value print -1&nbsp;</p>\n<p>Note: Indexing is 1 based;</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>First line contains two integers n and q separated by spaces</p>\n<p>Next q lines contains type of query and for type 1 query integer k separated by a space &nbsp;and for type 2 integer y separated by a space;</p>\n<p>1&lt;=n&lt;=10^6</p>\n<p>1&lt;=q&lt;=10^6</p>\n<p>1&lt;=y,k&lt;=n</p>\n<h3>Output</h3>\n<p>Print a single line for each query type 2 containing &nbsp;index which has value -1 and is &nbsp;greater or equal to input index y</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 5</pre>\n<pre>2 3</pre>\n<pre>1 2</pre>\n<pre>2 1</pre>\n<pre>2 3</pre>\n<pre>2 2\n\n<strong>Output:</strong>\n-1</pre>\n<pre>2</pre>\n<pre>-1</pre>\n<pre>2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/786ef9eb-3e78-4838-91d4-1857767671d3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SOLVEITinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91de"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "spcm-gopu-and-function",
  "tags": [],
  "level": "BEGINNER",
  "title": "SPCM - Gopu and function",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SPCM - Gopu and function</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Once Gopu was reading a maths problem which had a weird looking function f as follows.</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1, if n is a prime number.<br /><strong>f(n) &nbsp;=</strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f (sum of prime divisors of n) + number of distinct prime divisors of n, &nbsp;otherwise.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p>\n<p>Compute f (n) for a given value of n.&nbsp;</p>\n<h3>Input</h3>\n<p>First line contains T : number of test cases. (1 &lt;= T &lt;= 20)</p>\n<p>For each test case, there is a single line containing integer n. (2 &lt;= n &lt;= 10^12).</p>\n<h3>Output</h3>\n<p>For each test case, output value of f (n) in a single line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6<br />2<br />3<br />4<br />5<br />20<br />123456&nbsp;</pre>\n<pre><strong>Output:<br /></strong>1<br />1<br />2<br />1<br />3<br />6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eaa824d9-2e5b-44ed-9cbb-61589289c9ff",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SPCMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91df"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "spp-recursive-sequence-version-ii",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SPP - Recursive Sequence (Version II)",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SPP - Recursive Sequence (Version II)</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<h2 class=\"text-center\">&nbsp;</h2>\n<div id=\"problem-body\">\n<p>Sequence&nbsp;<em>(a<sub>i</sub>)</em>&nbsp;of natural numbers is defined as follows:<br /><br /><em>a<sub>i</sub>&nbsp;= b<sub>i</sub></em>&nbsp;(for&nbsp;<em>i &lt;= k</em>)<br /><em>a<sub>i</sub>&nbsp;= c<sub>1</sub>a<sub>i-1</sub>&nbsp;+ c<sub>2</sub>a<sub>i-2</sub>&nbsp;+ ... + c<sub>k</sub>a<sub>i-k</sub></em>&nbsp;(for&nbsp;<em>i &gt; k</em>)<br /><br />where&nbsp;<em>b<sub>j</sub></em>&nbsp;and&nbsp;<em>c<sub>j</sub></em>&nbsp;are given natural numbers for&nbsp;<em>1&lt;=j&lt;=k</em>. Your task is to compute&nbsp;<em>a<sub>m</sub></em>&nbsp;+&nbsp;<em>a<sub>m+1</sub></em>&nbsp;+&nbsp;<em>a<sub>m+2</sub></em>&nbsp;+ ... +&nbsp;<em>a<sub>n</sub></em>&nbsp;for given&nbsp;<em>m</em>&nbsp;&lt;=&nbsp;<em>n</em>&nbsp;and output it modulo a given positive integer p.</p>\n<h3>Input</h3>\n<p>On the first row there is the number&nbsp;<em>C</em>&nbsp;of test cases (equal to about 50).<br />Each test contains four lines:<br /><em>k</em>&nbsp;- number of elements of&nbsp;<em>(c)</em>&nbsp;and&nbsp;<em>(b)</em>&nbsp;(<em>1 &lt;= k &lt;= 15</em>)<br /><em>b<sub>1</sub>,...,b<sub>k</sub></em>&nbsp;-&nbsp;<em>k</em>&nbsp;natural numbers where&nbsp;<em>0 &lt;= b<sub>j</sub>&nbsp;&lt;= 10<sup>9</sup></em>&nbsp;separated by spaces<br /><em>c<sub>1</sub>,...,c<sub>k</sub></em>&nbsp;-&nbsp;<em>k</em>&nbsp;natural numbers where&nbsp;<em>0 &lt;= c<sub>j</sub>&nbsp;&lt;= 10<sup>9</sup></em>&nbsp;separated by spaces<br /><em>m</em>,&nbsp;<em>n</em>,&nbsp;<em>p</em>&nbsp;- natural numbers separated by spaces (<em>1 &lt;= m &lt;= n &lt;= 10<sup>18</sup></em>,&nbsp;<em>1&lt;= p &lt;= 10<sup>8</sup></em>)</p>\n<h3>Output</h3>\n<p>Exactly&nbsp;<em>C</em>&nbsp;lines, one for each test case: (<em>a<sub>m</sub></em>&nbsp;+&nbsp;<em>a<sub>m+1</sub></em>&nbsp;+&nbsp;<em>a<sub>m+2</sub></em>&nbsp;+ ... +&nbsp;<em>a<sub>n</sub></em>) modulo&nbsp;<em>p</em>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2\n1 1\n1 1\n2 10 1000003\n\n<strong>Output:</strong>\n142</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f0a670a7-19f8-4587-b600-08660e66280e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SPCUinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sqrminsum-minimum-sum",
  "tags": [],
  "level": "BEGINNER",
  "title": "SQRMINSUM - Minimum Sum",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SQRMINSUM - Minimum Sum</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Suppose you have a list of integers, and a&nbsp;<strong><em>move</em>&nbsp;</strong>is defined as taking one of the integers from the list and replacing it with its square root, rounded down to the nearest integer.</p>\n<p>Given an integer&nbsp;<code>l</code>&nbsp;and an integer&nbsp;<code>k</code>, start with the array&nbsp;<code>[1, 2, 3, ..., l]</code>&nbsp;and find the minimal sum of the array after&nbsp;<code>k</code>&nbsp;<em>moves</em>.</p>\n<p><strong>Example</strong></p>\n<p>For&nbsp;<code>l = 5</code>&nbsp;and&nbsp;<code>k = 2</code>, the output should be<br /><code>squareRoots(l, k) = 10</code>.</p>\n<p>We start with&nbsp;<code>[1, 2, 3, 4, 5]</code>.<br />After square rooting&nbsp;<code>5</code>&nbsp;to get&nbsp;<code>[1, 2, 3, 4, 2]</code>&nbsp;and then square rooting&nbsp;<code>3</code>&nbsp;to get<code>[1, 2, 1, 4, 2]</code>, we end up with a sum of&nbsp;<code>10</code>.</p>\n<p><em>Constraints:</em></p>\n<p><code>1 &le; l &le; 10<sup>4&nbsp;</sup></code></p>\n<p><code>1 &le; k &le; 10<sup>4</sup></code></p>\n<p><code><sup>&nbsp;T=10000</sup></code></p>\n<p><strong>Input :&nbsp;</strong></p>\n<p>The first line contains T the number of test cases followed by 2*T lines containing l and k.</p>\n<p><strong>Output:</strong></p>\n<p>For every test case, output one line containing an integer, i.e. the minimal possible sum.</p>\n<p>Sample Input:</p>\n<p>2</p>\n<p>5</p>\n<p>2</p>\n<p>2327</p>\n<p>4895</p>\n<p>&nbsp;</p>\n<p>Sample Output:</p>\n<p>10</p>\n<p>10647</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f42f0aa5-9b22-4814-a981-71e0442b475d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SQRMINSUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "stablemp-stable-marriage-problem",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "STABLEMP - Stable Marriage Problem",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">STABLEMP - Stable Marriage Problem</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There are given&nbsp;<em>n</em>&nbsp;men and&nbsp;<em>n</em>&nbsp;women. Each woman ranks all men in order of her preference (her first choice, her second choice, and so on). Similarly, each man sorts all women according to his preference. The goal is to arrange&nbsp;<em>n</em>&nbsp;marriages in such a way that if a man&nbsp;<em>m</em>&nbsp;prefers some woman&nbsp;<em>w</em>&nbsp;more than his wife, then&nbsp;<em>w</em>&nbsp;likes her husband more than&nbsp;<em>m</em>. In this way, no one leaves his partner to marry somebody else. This problem always has a solution and your task is to find one.</p>\n<h3>Input</h3>\n<p>The first line contains a positive integer&nbsp;<em>t</em>&nbsp;&lt;= 100 indicating the number of test cases. Each test case is an instance of the stable marriage problem defined above. The first line of each test case is a positive integer&nbsp;<em>n</em>&nbsp;&lt;= 500 (the number of marriages to find). The next&nbsp;<em>n</em>&nbsp;lines are the&nbsp;<strong>woman</strong>'s preferences:&nbsp;<em>i</em>th line contains the number&nbsp;<em>i</em>&nbsp;(which means that this is the list given by the&nbsp;<em>i</em>th woman) and the numbers of men (the first choice of&nbsp;<em>i</em>th woman, the second choice,...). Then, the&nbsp;<strong>men</strong>'s preferences follow in the same format.</p>\n<h3>Output</h3>\n<p>For each test case print&nbsp;<em>n</em>&nbsp;lines, where each line contains two numbers&nbsp;<em>m</em>&nbsp;and&nbsp;<em>w</em>, which means that the&nbsp;<strong>man</strong>&nbsp;number&nbsp;<em>m</em>&nbsp;and the&nbsp;<strong>woman</strong>&nbsp;number&nbsp;<em>w</em>&nbsp;should get married.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n1 4 3 1 2\n2 2 1 3 4\n3 1 3 4 2\n4 4 3 1 2\n1 3 2 4 1\n2 2 3 1 4\n3 3 1 2 4\n4 3 2 4 1\n7\n1 3 4 2 1 6 7 5\n2 6 4 2 3 5 1 7\n3 6 3 5 7 2 4 1\n4 1 6 3 2 4 7 5\n5 1 6 5 3 4 7 2\n6 1 7 3 4 5 6 2\n7 5 6 2 4 3 7 1\n1 4 5 3 7 2 6 1\n2 5 6 4 7 3 2 1\n3 1 6 5 4 3 7 2\n4 3 5 6 7 2 4 1\n5 1 7 6 4 3 5 2\n6 6 3 7 5 2 4 1\n7 1 7 4 2 6 5 3\n\n<strong>Output:</strong>\n1 3\n2 2\n3 1\n4 4\n1 4\n2 5\n3 1\n4 3\n5 7\n6 6\n7 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5d8f34aa-d46a-4901-9297-74eca5d5da83",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "STABLEMPinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "subseq-counting-subsequences",
  "tags": [],
  "level": "BEGINNER",
  "title": "SUBSEQ - Counting Subsequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SUBSEQ - Counting Subsequences</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>\"47 is the quintessential random number,\"</strong>&nbsp;states the 47 society. And there might be a grain of truth in that.</p>\n<p>For example, the first ten digits of the Euler's constant are:</p>\n<pre>2 7 1 8 2 8 1 8 2 8\n</pre>\n<p>And what's their sum? Of course, it is 47.</p>\n<p>Try walking around with your eyes open. You may be sure that soon you will start discovering occurences of the number 47 everywhere.</p>\n<h3>Problem specification</h3>\n<p>You are given a sequence&nbsp;<strong>S</strong>&nbsp;of integers we saw somewhere in the nature. Your task will be to compute how strongly does this sequence support the above claims.</p>\n<p>We will call a&nbsp;<strong>continuous</strong>&nbsp;subsequence of&nbsp;<strong>S</strong>&nbsp;interesting if the sum of its terms is equal to 47.</p>\n<p>E.g., consider the sequence&nbsp;<strong>S</strong>&nbsp;= (24, 17, 23, 24, 5, 47). Here we have two interesting continuous subsequences: the sequence (23, 24) and the sequence (47).</p>\n<p>Given a sequence&nbsp;<strong>S</strong>, find the count of its interesting subsequences.</p>\n<h3>Input specification</h3>\n<p>The first line of the input file contains an integer&nbsp;<strong>T</strong>&nbsp;specifying the number of test cases. Each test case is preceded by a blank line.</p>\n<p>The first line of each test case contains the length of a sequence&nbsp;<strong>N</strong>. The second line contains&nbsp;<strong>N</strong>&nbsp;space-separated integers : the elements of the sequence.</p>\n<h3>Output specification</h3>\n<p>For each test case output a single line containing a single integer : the count of interesting subsequences of the given sentence.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n\n13\n2 7 1 8 2 8 1 8 2 8 4 5 9\n\n7\n2 47 10047 47 1047 47 47\n\n<strong>Output:</strong>\n3\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dc4c3229-39dc-4ccc-912f-bda5e3ff6507",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUBSEQinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "subsums-subset-sums",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SUBSUMS - Subset Sums",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SUBSUMS - Subset Sums</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given a sequence of N (1 &le; N &le; 34) numbers S<sub>1</sub>, ..., S<sub>N</sub>&nbsp;(-20,000,000 &le; S<sub>i</sub>&nbsp;&le; 20,000,000), determine how many subsets of S (including the empty one) have a sum between A and B (-500,000,000 &le; A &le; B &le; 500,000,000), inclusive.</p>\n<h3>Input</h3>\n<p>The first line of standard input contains the three integers N, A, and B. The following N lines contain S<sub>1</sub>&nbsp;through S<sub>N</sub>, in order.</p>\n<h3>Output</h3>\n<p>Print a single integer to standard output representing the number of subsets satisfying the above property. Note that the answer may overflow a 32-bit integer.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 -1 2\n1\n-2\n3\n\n<strong>Output:</strong>\n5\n</pre>\n<p>The following 5 subsets have a sum between -1 and 2:</p>\n<ul>\n<li>0 = 0 (the empty subset)</li>\n<li>1 = 1</li>\n<li>1 + (-2) = -1</li>\n<li>-2 + 3 = 1</li>\n<li>1 + (-2) + 3 = 2</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3f425b5c-235a-48b7-880f-f36b883795bd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUBSUMSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "subxor-subxor",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SUBXOR - SubXor",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SUBXOR - SubXor</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>A straightforward question. Given an array of positive integers you have to print the number of subarrays whose XOR is less than&nbsp;<strong>K</strong>. Subarrays are defined as a sequence of continuous elements&nbsp;<strong>A<sub>i</sub>, A<sub>i+1</sub>, ..., A<sub>j</sub>&nbsp;</strong>. XOR of a subarray is defined as&nbsp;<strong>A<sub>i</sub>&nbsp;^ A<sub>i+1</sub>&nbsp;^ ... ^ A<sub>j</sub></strong>. Symbol&nbsp;<strong>^</strong>&nbsp;is Exclusive Or. You can read more about it here:<br /><a href=\"http://en.wikipedia.org/wiki/Exclusive_or\">http://en.wikipedia.org/wiki/Exclusive_or</a></p>\n<h3>Input Format:</h3>\n<p>First line contains<strong>&nbsp;T</strong>, the number of test cases. Each of the test case consists of<strong>&nbsp;N</strong>&nbsp;and&nbsp;<strong>K</strong>&nbsp;in one line, followed by<strong>&nbsp;N</strong>&nbsp;space separated integers in next line.</p>\n<h3>Output Format:</h3>\n<p>For each test case, print the required answer.</p>\n<h3>Constraints:</h3>\n<p><strong>1 &le; T &le; 10<br />1 &le; N &le; 10^5<br />1 &le; A[i] &le; 10^5<br />1 &le; K &le; 10^6<br />Sum of N over all testcases will not exceed 10^5.</strong></p>\n<h3>Sample Input:</h3>\n<pre>1\n5 2\n4 1 3 2 7\t</pre>\n<h3>Sample Output:</h3>\n<pre>3</pre>\n<h3>Explanation:</h3>\n<p>Only subarrays satisfying the conditions are [1], [1,3,2] and [3,2].</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d6b41c7a-1f2c-4446-aa52-06b4195c4440",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUBXORinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "summation-summation",
  "tags": [],
  "level": "BEGINNER",
  "title": "SUMMATION - SUMMATION",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SUMMATION - SUMMATION</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given an array of integer. You have to find the sum of all possible subsuquences sum of the array. For example: The given array of length n = 3 is {1,2,3}. All the sequence of this array with the corresponding array Summations are:</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">Subsequence</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">Summation</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{}&nbsp;</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">0</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{1}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{2}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">2</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{3}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">3</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{1,2}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">3</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{1,3}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">4</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{2,3}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">5</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">{1,2,3}</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">6</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">Total</p>\n</td>\n<td valign=\"top\" width=\"319\">\n<p align=\"center\">24</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><br class=\"_&lt;span id=\" />&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>The answer &nbsp;is 24.</p>\n<p><strong>Input</strong></p>\n<p>The first line of input will contain the test case&nbsp;<strong>T (1 &lt;= T &lt;=&nbsp;10)</strong>.There will be two lines for each test case. First line will contain the value of&nbsp;<strong>n(1&lt;=n&lt;=1000)</strong>&nbsp;and the next line will contain the array elements space sperated intergers. Each integer will be between 1 and 1000000000.</p>\n<p><strong>Output</strong></p>\n<p>For each case of input, output the answer of the problem in the format \"<strong>Case X: Y</strong>\" where&nbsp;<strong>X</strong>&nbsp;denotes the number of test case and&nbsp;<strong>Y</strong>&nbsp;denotes the answer.&nbsp;Answer could be very large so output the answer modulo&nbsp;<strong>100000007</strong>.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<p>2</p>\n<p>3</p>\n<p>1 2 3</p>\n<p>3</p>\n<p>4 1 2</p>\n<p><strong>Output:</strong></p>\n<p>Case 1: 24</p>\n<p>Case 2: 28</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/12d202c4-f74a-42bd-86ee-eb3a07984200",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SUMMATIONinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "svarea11-save-area-11",
  "tags": [],
  "level": "BEGINNER",
  "title": "SVAREA11 - Save Area 11",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SVAREA11 - Save Area 11</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In the year 2010 of the Imperial Calendar, the Holy Britannian Empire invaded Japan and overpowered the defending forces. Japan became a dominion of the Empire. The country was stripped off her freedom, her rights and her name. The defeated and once proud nation was given a mere number as a name - Area 11.</p>\n<p>After many years, Lelouch vi Britannia, the leader of the Black Knights, is making plans for some important battles against the Holy Britannian Empire army in his quest to free Area 11. He is assigning soldiers of the Black Knights to various strategically advantageous positions on the battlefields.</p>\n<p>Lelouch assigns a soldier to a position from T<sub>1&nbsp;</sub>second to T<sub>2</sub>&nbsp;second. The soldier leaves to fight at the beginning of T<sub>1&nbsp;</sub>second and returns at the end of T<sub>2&nbsp;</sub>second. During this time, this soldier is unavailable for any other assignments. After returning, he is available for future assignments. A complete plan includes several of these assignments.</p>\n<p>The Black Knights does not have unlimited number of soldiers. Lelouch has made plans for several battles and now he is trying to distribute his soldiers to carry out these plans. He takes a plan and allocates&nbsp;<strong>N</strong>&nbsp;soldiers for it. Then he asks you to check if the plan can be carried out successfully with N soldiers.</p>\n<p>Help Lelouch make the plans. The fate of Area 11 depends on you!</p>\n<h3>Input</h3>\n<p>Input begins with an integer&nbsp;<strong>P (1 &le; P&nbsp;</strong>&le;&nbsp;<strong>105)</strong>, indicating the number of plans. Then follows the P plans. Each plan begins with two integers&nbsp;<strong>N (0 &le; N &le; 10<sup>9</sup>)</strong><strong>&nbsp;</strong>and&nbsp;<strong>A (0 &le; A&nbsp;</strong>&le;&nbsp;<strong>10<sup>4</sup>)</strong>,<strong>&nbsp;</strong>indicating the number of soldiers allocated for that plan and the number of assignments that plan has respectively. The next A lines each contains two integers&nbsp;<strong>S</strong>&nbsp;and&nbsp;<strong>E (1 &le; S &le; E &le; 10<sup>4</sup>)</strong>, indicating the starting and the ending time of an assignment.</p>\n<h3>Output</h3>\n<p>For each plan, print a single line in the format&nbsp;<strong>Plan X: Y</strong>, where X is the plan number and Y is either&nbsp;<strong>Yes&nbsp;</strong>or&nbsp;<strong>No</strong>, indicating whether the plan can be completed successfully or not.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>2</p>\n<p>3 3</p>\n<p>1 3</p>\n<p>1 4</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>1 3</p>\n<p>1 4</p>\n<pre>1 2\n\n<strong>Output:</strong></pre>\n<p>Plan 1: Yes</p>\n<pre>Plan 2: No</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/18058272-b57c-49ee-af6d-023c8a6b2b68",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SVAREA11input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "swapdiff1-difference-one-swaps",
  "tags": [],
  "level": "BEGINNER",
  "title": "SWAPDIFF1 - Difference One Swaps",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">SWAPDIFF1 - Difference One Swaps</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>You are given an array of size&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">N</span></span></span></span>&nbsp;containing the integers&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">1, 2, \\ldots, N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mpunct\">,</span><span class=\"mord mathrm\">2</span><span class=\"mpunct\">,</span><span class=\"minner\">&hellip;</span><span class=\"mpunct\">,</span><span class=\"mord mathit\">N</span></span></span></span>&nbsp;in some order.</p>\n<p>A&nbsp;<em>move</em>&nbsp;consists of swapping the integers&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">k</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">k</span></span></span></span>&nbsp;and&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">k+1</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">k</span><span class=\"mbin\">+</span><span class=\"mord mathrm\">1</span></span></span></span>&nbsp;for some&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">1 \\le k \\lt N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mrel\">&le;</span><span class=\"mord mathit\">k</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">N</span></span></span></span>. In other words, you may swap any pair of integers that has a difference of one.</p>\n<p>Find the minimum number of moves required to sort the given array in ascending order.</p>\n<h3>Input</h3>\n<p>The first line contains&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">T</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">T</span></span></span></span>&nbsp;(<span class=\"katex\"><span class=\"katex-mathml\">1 \\le T \\le 1000</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mrel\">&le;</span><span class=\"mord mathit\">T</span><span class=\"mrel\">&le;</span><span class=\"mord mathrm\">1</span><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">0</span><span class=\"mord mathrm\">0</span></span></span></span>), the number of test cases.</p>\n<p>Each test case contains&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">N</span></span></span></span>&nbsp;(<span class=\"katex\"><span class=\"katex-mathml\">2 \\le N \\le 10^5</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">2</span><span class=\"mrel\">&le;</span><span class=\"mord mathit\">N</span><span class=\"mrel\">&le;</span><span class=\"mord mathrm\">1</span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist\"><span class=\"\"><span class=\"fontsize-ensurer reset-size5 size5\">​</span><span class=\"reset-textstyle scriptstyle uncramped mtight\"><span class=\"mord mathrm mtight\">5</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span class=\"\">​</span></span>​</span></span></span></span></span></span></span>) followed by&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">N</span></span></span></span>&nbsp;distinct integers (<span class=\"katex\"><span class=\"katex-mathml\">1 \\le x_i \\le N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mrel\">&le;</span><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"msupsub\"><span class=\"vlist\"><span class=\"\"><span class=\"fontsize-ensurer reset-size5 size5\">​</span><span class=\"reset-textstyle scriptstyle cramped mtight\"><span class=\"mord mathit mtight\">i</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span class=\"\">​</span></span>​</span></span></span></span><span class=\"mrel\">&le;</span><span class=\"mord mathit\">N</span></span></span></span>).</p>\n<p>The sum of&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">N</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">N</span></span></span></span>&nbsp;over all test cases will not exceed&nbsp;<span class=\"katex\"><span class=\"katex-mathml\">10^5</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">1</span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist\"><span class=\"\"><span class=\"fontsize-ensurer reset-size5 size5\">​</span><span class=\"reset-textstyle scriptstyle uncramped mtight\"><span class=\"mord mathrm mtight\">5</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span class=\"\">​</span></span>​</span></span></span></span></span></span></span>.</p>\n<h3>Output</h3>\n<p>For each test case, output the number of moves required to sort the array.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n2 1 2\n2 2 1\n3 3 2 1\n4 4 2 3 1\n6 2 1 4 3 6 5\n\n<strong>Output:</strong>\n0\n1\n3\n5\n3\n</pre>\n<h3>Note</h3>\n<p>Below is one optimal sequence of moves that sorts [4,2,3,1].</p>\n<ul>\n<li>Swap 1 and 2: [4,<strong>2</strong>,3,<strong>1</strong>] &rarr; [4,<strong>1</strong>,3,<strong>2</strong>].</li>\n<li>Swap 2 and 3: [4,1,<strong>3</strong>,<strong>2</strong>] &rarr; [4,1,<strong>2</strong>,<strong>3</strong>].</li>\n<li>Swap 3 and 4: [<strong>4</strong>,1,2,<strong>3</strong>] &rarr; [<strong>3</strong>,1,2,<strong>4</strong>].</li>\n<li>Swap 2 and 3: [<strong>3</strong>,1,<strong>2</strong>,4] &rarr; [<strong>2</strong>,1,<strong>3</strong>,4].</li>\n<li>Swap 1 and 2: [<strong>2</strong>,<strong>1</strong>,3,4] &rarr; [<strong>1</strong>,<strong>2</strong>,3,4].</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a4695c07-aa3b-4a09-a156-55c6d9d132a4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SWAPDIFF1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "take4-take-away-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "TAKE4 - Take Away Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TAKE4 - Take Away Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Two players play the following game:<br />a) A number N is chosen<br />b) players move alternately starting from player1<br />c) On his turn, a player may subtract either 1, 2 , 3 .. or M ( M &lt;= N ) from N.<br />d) The player to make N equal to 0, wins.<br />e) Both play optimally. That is, if there is a move which makes a player win, he is sure to find it.<br />Given the starting value N, determine who wins the game.<br />&nbsp;<br />Input:<br />First line consists of the number of test cases T (T &lt;= 1000). Each of the next T lines consists of two integers, the numbers N and M (1 &lt;= N &lt;= 2000).<br />&nbsp;<br />Output:<br />You must ouput T lines. Output \"player 1 wins\" (without quotes) if the first player wins, else output \"player 2 wins\"<br />&nbsp;<br />Example:<br />input:<br />2<br />4 4<br />2 1<br />&nbsp;<br />&nbsp;<br />output:<br />player1 wins<br />player2 wins</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/faf1f337-d1cf-4622-9024-55cdccbecae3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TAKE4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91e9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "takin-taskin-and-apple-tree",
  "tags": [],
  "level": "BEGINNER",
  "title": "TAKIN - Taskin and apple tree",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TAKIN - Taskin and apple tree</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Taskin has an apple orchard Every morning he goes to pick apples from orchard. He has a basket which can carry&nbsp;<strong>not more than</strong>&nbsp;<strong><em>M</em></strong>&nbsp;apples. Taskin pick apples, and put them into the basket. Taskin goes to each tree and either pick all the apples from that tree or skips that tree.</p>\n<p>What is the maximum number of apples taskin can pick.</p>\n<h3>Input</h3>\n<p>In the first line there will be an integer&nbsp;<strong>T&nbsp;</strong>number of testcases.</p>\n<p>For every test case there will be 2 integers in the first line&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>M</strong>, number of apple tree in the orchard and capacity of basket respectively.</p>\n<p>Next line contains&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>a<sub>1</sub>&nbsp;a<sub>2</sub>&nbsp;a<sub>3</sub>&nbsp;a<sub>n</sub></strong>&nbsp;where&nbsp;<strong>a<sub>i</sub></strong>&nbsp;is the number of apples in the&nbsp;<strong>i-th</strong>&nbsp;tree.</p>\n<p>T &lt;= 10<br />N &lt;= 20<br />M &lt;= 2 * 10^10<br />Ai &lt;= 10^9</p>\n<h3>Output</h3>\n<p>Print an integer, the maximum number of apples.</p>\n<h3>Example</h3>\n<h4>Input</h4>\n<pre>2\n5 6\n2 1 2 7 8\n5 10\n1 2 4 4 6\n</pre>\n<h4>Output</h4>\n<pre>5\n10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f61449b2-391c-455b-812b-90e6dcaf1861",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TAKINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ea"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tap2013g-war",
  "tags": [],
  "level": "BEGINNER",
  "title": "TAP2013G - War",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TAP2013G - War</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong><em>[The original version of this problem (in Spanish) can be found at&nbsp;<a title=\"http://www.dc.uba.ar/events/icpc/download/problems/tap2013-problems.pdf\" href=\"http://www.dc.uba.ar/events/icpc/download/problems/tap2013-problems.pdf\">http://www.dc.uba.ar/events/icpc/download/problems/tap2013-problems.pdf</a>]</em></strong></p>\n<p>War, an event worthy only of appearance in literature, movies or perhaps programming contests, has reached the Nlogonian empire, which is facing the neighboring empire of Quadradonia.</p>\n<p>War protocols agreed upon by both parties indicate that the war will be waged in successive battles, in each of which a different soldier from each empire will face one another, so that each soldier will take part in exactly one battle. The empire that wins more battles will then win the war.</p>\n<p>Each empire has an army formed by&nbsp;<strong>S</strong>&nbsp;soldiers, and each soldier has a certain combat skill. In each battle between two soldiers, the one with greatest combat skill wins the battle. If both soldiers have the same combat skills, the battle is declared a draw and technically no side claims victory. The spies of Nlogonia have intercepted secret information concerning the combat skill of each soldier of Quadradonia's army, so Nlogonia's queen requires your assistance in order to calculate the maximum number of battles that can be won during the war if her soldiers are sent in the appropriate order.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains an integer number&nbsp;<strong>S</strong>&nbsp;representing the number of soldiers in each army (<strong>1 &le;&nbsp;S&nbsp;</strong><strong>&le;</strong><strong>&nbsp;10<sup>5</sup></strong>). The second line contains&nbsp;<strong>S</strong>&nbsp;integer numbers&nbsp;<strong>Q<sub>i</sub></strong>&nbsp;representing the combat skills of the different soldiers of Quadradonia's army, in the order in which the battles shall take place (<strong>1&nbsp;</strong><strong>&le;</strong><strong>&nbsp;Q<sub>i</sub>&nbsp;</strong><strong>&le;</strong><strong>&nbsp;10<sup>9</sup></strong>&nbsp;for&nbsp;<strong>i = 1, ..., S</strong>). The third line contains&nbsp;<strong>S</strong>&nbsp;integer numbers&nbsp;<strong>N<sub>i</sub></strong>&nbsp;representing the combat skills of the different soldiers in Nlogonia's army, in an arbitrary order (<strong>1&nbsp;</strong><strong>&le;</strong><strong>&nbsp;N<sub>i</sub>&nbsp;</strong><strong>&le;</strong><strong>&nbsp;10<sup>9</sup></strong>&nbsp;for&nbsp;<strong>i = 1, ..., S</strong>).</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>Print a line containing a single integer number representing the maximum number of battles that Nlogonia can win during the war.</p>\n<p>&nbsp;</p>\n<h3>Example 1</h3>\n<pre><strong>Input:</strong>\n3\n2 1 1000000000\n1 1 2\n\n<strong>Output:</strong>\n1</pre>\n<h3>Example 2</h3>\n<pre><strong>Input:</strong>\n4\n6 3 1 4\n2 7 4 3\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4ab6b4a0-ee32-4260-a5ef-02697f2ddbed",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TAP2013Ginput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91eb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tap2015h-hugo-s-homework",
  "tags": [],
  "level": "BEGINNER",
  "title": "TAP2015H - Hugo s homework",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TAP2015H - Hugo s homework</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>[Due to SPOJ restrictions, this problem has been modified with respect to the original version used in the Argentinian Programming Tournament of 2015 in order to have multiple test cases per input file. The original version of this problem (in Spanish) can be found at&nbsp;<a href=\"http://torneoprogramacion.com.ar/wp-content/uploads/2015/09/pruebaTAP2015.pdf\">http://torneoprogramacion.com.ar/wp-content/uploads/2015/09/pruebaTAP2015.pdf</a>&nbsp;]</p>\n<p>Hugo goes to primary school, but he is convinced that not enough homework is being given to him. Specifically, he was recently taught how to subtract two numbers, but each day he is given a single subtraction to perform at home. Hugo knows that in order to master such a complex technique he should practice much more, so he has decided to take matters into his own hands and create his own homework.</p>\n<p>It's not easy for Hugo to invent exercises about a subject he does not fully comprehend, so he has devised the following method to perform multiple subtractions. He starts by asking his mother for a number&nbsp;<strong>N</strong>, and then forms the number&nbsp;<strong>M</strong>&nbsp;containing the same digits as&nbsp;<strong>N</strong>&nbsp;in increasing order from left to right, after which he finally performs the subtraction&nbsp;<strong>N-M</strong>. For example, if his mother chooses the number&nbsp;<strong>N = 321</strong>&nbsp;then&nbsp;<strong>M = 123</strong>&nbsp;and the subtraction Hugo must perform is&nbsp;<strong>N - M = 321-123 = 198</strong>.</p>\n<p>Hugo wouldn't want to bother his mother too often, so he will repeat this procedure using the result of the subtraction&nbsp;<strong>N-M</strong>&nbsp;in one step as the number&nbsp;<strong>N</strong>&nbsp;he starts with in the next step. This will end only when at some point he reaches the value&nbsp;<strong>N = 0</strong>, as this case is useless to practice subtractions because he would have&nbsp;<strong>M = 0</strong>: Hugo already knows perfectly well that if he has no candies he cannot eat any candies, and will therefore continue to not have or eat candies forever.</p>\n<p>Now Hugo's mother would like to know, given a number&nbsp;<strong>N</strong>, how many subtractions Hugo can perform if she gives him that number to start his homework. In the previous example, in the second step Hugo would have&nbsp;<strong>N = 198</strong>&nbsp;so that&nbsp;<strong>M = 189</strong>&nbsp;and&nbsp;<strong>N - M = 198 - 189 = 9</strong>. Then in the third step&nbsp;<strong>N = 9</strong>,&nbsp;<strong>M = 9</strong>&nbsp;and&nbsp;<strong>N - M = 0</strong>, so here the fun ends because in the fourth step he would have&nbsp;<strong>N = 0</strong>. Thus, starting with the number&nbsp;<strong>N = 321</strong>&nbsp;Hugo will perform&nbsp;<strong>3</strong>&nbsp;subtractions.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>There are multiple test cases in the input file. Each test case consists of one line containing an integer&nbsp;<strong>N</strong>, representing the number Hugo's mother will give him to start his homework (<strong>1 &le; N &le; 10<sup>9</sup></strong>).</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, print one line containing one integer representing the number of subtractions Hugo will perform if he starts his homework with number&nbsp;<strong>N</strong>.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n321\n20\n960687301\n\n<strong>Output:</strong>\n3\n2\n91</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4c28a7dd-098a-4e29-a4e4-081db774d4f7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TAP2015Hinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ec"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tbattle-thor-vs-frost-giants",
  "tags": [],
  "level": "BEGINNER",
  "title": "TBATTLE - Thor vs Frost Giants",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TBATTLE - Thor vs Frost Giants</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Thor is caught up in a fierce battle with Loki's army. This army consists of frost giants that have magical powers with them. Their strength levels gets multiplied when they are together. Giants are not highly skilled in the arts of combat, but their sheer size and strength make them formidable opponents even for the Asgardian gods. Thor is no exception. They recover very fast from physical injury but their recovery slows down when they are exposed to extreme heat.<br />Thor's hammer can generate heat only in multiples of heat quantum&nbsp;<strong>N</strong>. Frost giants get killed only when their combined strength level is exactly equal to the heat level of the hammer. Thor is interested in killing a continuous stretch of frost enemies with a throw of his hammer with a preference to kill closer enemies first.<br /><strong>Continuous stretch</strong>&nbsp;is defined as a set of consecutive elements.<br />Help Thor to determine the minimum stretch of frost giants that could be killed in a throw. In case of multiple minimal stretches, output the indices of that stretch that has lowest starting index. If there is no such continuous stretch possible then print -1.</p>\n<h3>Input</h3>\n<p>The first line will contain&nbsp;<strong>N</strong>, the number of Frost Giants in Loki's army and the Heat quantum.<br />The second line will contain&nbsp;<strong>N</strong>&nbsp;integers<strong>&nbsp;(a_0, a_2....., a_n-1)</strong>&nbsp;- the strength of each frost giant.<br />Minimum stretch of the army should be 1.</p>\n<ul>\n<li><strong>1</strong>&nbsp;&le;&nbsp;<strong>N</strong>&nbsp;&le;&nbsp;<strong>100000</strong></li>\n<li><strong>1</strong>&nbsp;&le;&nbsp;<strong>a_i</strong>&nbsp;&le;&nbsp;<strong>100000</strong></li>\n</ul>\n<h3>Output</h3>\n<p>Output the range of the minimum stretch of frost giants that could be killed in a throw. In case of multiple minimal stretches, output the indices of that stretch that has lowest starting index.<br />If there is no such continuous stretch possible then print -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1 2 9\n<strong>Output:</strong> <br />2 2<strong><br /><br />Input:</strong> <br />5 <br />2 3 4 8 9\n<strong>Output:</strong><br />-1<strong><br /><br />Input:</strong>\n10\n2 4 3 5 17 4 7 5 2 15<br /><strong>Output:</strong><br />7 8<br /><br />\n</pre>\n<h3>Explanation</h3>\n<p>Input #1:<br />Thor can only kill the stretch [2,2] as this is the minimum length range with strength, multiple of 3.</p>\n<p>Input #2:<br />There is no stretch of frost giants that have combined strength as a multiple of 5.</p>\n<p>Input #3:<br />There are many stretches of frost giants that have strength as multiple of 10. But the minimal stretch with the least indices is from [7,8]. Minimum size stretches are [7, 8] and [8, 9]. Out of them we select [7,8].</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/73f402f8-7482-4546-83a0-015cf05163cf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TBATTLEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ed"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "thrbl-catapult-that-ball",
  "tags": [],
  "level": "BEGINNER",
  "title": "THRBL - Catapult that ball",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">THRBL - Catapult that ball</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Bob has unusual problem. In Byteland we can find a lot of hills and cities. King of Byteland ordered Bob to deliver magic balls from one city to another. Unfortunately, Bob has to deliver many magic balls, so walking with them would take too much time for him. Bob came up with great idea - catapulting them.</p>\n<p>Byteland is divided into intervals. Each interval contains city and hill.</p>\n<p>Bob can catapult magic ball accurately from city A to city B, if between them there isn't higher hill than A's hill.</p>\n<h3>Input</h3>\n<p>Every test case contains N and M (N&lt;=50000) (M&lt;=50000), number of intervals and number of balls.</p>\n<p>In next line there's N numbers H(H&lt;=10^9) separated by one space.</p>\n<p>In next M lines numbers A and B (1&lt;=A,B&lt;=N), number of city from which we want to catapult the ball and number of city to which we want to catapult the ball.</p>\n<h3>Output</h3>\n<p>Write one number - number of magic balls that Bob can catapult successfully.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />7 3<br />2 3 5 4 2 1 6<br />3 5<br />2 5<br />4 6<br /><br /><strong>Output:</strong><br />2<br /><br />Bob can catapult ball number 1 and 3. </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/666e6ccc-2566-4200-881a-d782c58206c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "THRBLinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ee"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "threenumbers-nth-number",
  "tags": [],
  "level": "BEGINNER",
  "title": "THREENUMBERS - nth number",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">THREENUMBERS - nth number</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given two numbers a and b, you have to find n-th number which is divisible by a or b.</p>\n<h3>Input</h3>\n<p>First line contains an integer T (&lt;= 100000), denoting number of test cases.</p>\n<p>Second line contains 3 positive integers a, b and n. (a, b &lt;= 10000, n &lt;= 1000000000)</p>\n<h3>Output</h3>\n<p>Print n-th number in a new line.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n2 3 10</pre>\n<pre><strong>Output:</strong>\n15</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f4a29c77-77cd-4b36-9a68-ae10386b8f28",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "THREENUMBERSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ef"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "tough-bits-exponents-and-gcd",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TOUGH - Bits. Exponents and Gcd",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TOUGH - Bits. Exponents and Gcd</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Rastas's has been given a number n. Being weak at mathematics, she has to consider all the numbers from 1 to&nbsp;2<em>n</em>&thinsp;-&thinsp;1&nbsp;so as to become perfect in calculations. (You can assume each number is consider as a soldier).</p>\n<p>We define the strength of number&nbsp;<em>i</em>&nbsp;as the number of set bits (bits equal to 1) in binary representation of number&nbsp;<em>i</em>.</p>\n<p>If the greatest common divisor of numbers&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;is&nbsp;<em>gcd</em>(<em>a</em>,&thinsp;<em>b</em>),</p>\n<p>Rastas would like to calculate the function&nbsp;<em>S</em>&nbsp;which is equal to:&nbsp;<img src=\"http://codeforces.com/predownloaded/bd/dd/bddd9799fddbf872fab11671cb68def7273de8da.png\" alt=\"\" align=\"middle\" /></p>\n<p>As the friend of Rastas, it's your duty to calculate&nbsp;<em>S</em>&nbsp;modulo&nbsp;109&thinsp;+&thinsp;7.</p>\n<h3>Input</h3>\n<p>The first line of the input contains the number of test cases,&nbsp;<strong>T</strong>. Each of the next&nbsp;<strong>T&nbsp;</strong>lines contains an integer&nbsp;<strong>n</strong>, as mentioned in the question</p>\n<h3>Output</h3>\n<p>For each value of&nbsp;<strong>n</strong>&nbsp;given, find the value of the function&nbsp;<strong>S</strong>.</p>\n<h3>Constraints</h3>\n<p>Sum of&nbsp;<strong>n&nbsp;</strong>over all test cases doesn't exceed<strong>&nbsp;2500</strong>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3&nbsp;</pre>\n<pre>1&nbsp;</pre>\n<pre>2&nbsp;</pre>\n<pre>5</pre>\n<pre><strong>Output:&nbsp;</strong></pre>\n<pre>0&nbsp;</pre>\n<pre>3</pre>\n<pre>680</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a6b200cb-34d5-4ecf-be0b-ea4a6d4e3cd1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TOUGHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "tpgame-the-permutation-game",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TPGAME - The Permutation Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TPGAME - The Permutation Game</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">&nbsp;\n<p>YoMamaSoFat(Ankit), Kira(Akash) and Blackhood(Rohit) were playing Mini-Militia. Since YoMamaSoFat is a Mini-Militia pro ,to defeat him Kira and Blackhood teamed up together for a battle vs YoMamaSoFat. But still Kira and Blackhood ended up on the losing side :/ . So, Kira and Blackhood decided to humiliate YoMamaSoFat in return. Since YoMamaSoFat is a noob in coding, Kira and Blackhood asked one question each from YoMamaSoFat. First it was Blackhood's turn to ask. He gave YoMamaSoFat a permutation of N distinct integers from 1 to N and asked him to find for each integer (say K) in the permutation - the no of integers in its left and having value greater than K. YoMamaSoFat answered this instantly and gave Blackhood an array (say A) as the answer. Formally A[i] , (1&lt;=i&lt;=N) contains the no of elements which are greater than permutation[i] and in the left of the ith position in the permutation, where permutation[i] is the element at the ith position in the permutation. eg. for the permutation&nbsp; 5 4 3 1 2 , the array would be 0 1 2 3 3. Since YoMamaSoFat was able to answer this , Kira aked him just the reverse of this problem, i.e. Kira gave him the array A and asked him to find the permutation corresponding to the array. Since YoMamaSoFat has always been winning, he wants to continue his winning legacy and asks you for help. (as he is not such a pro in coding as he is in Mini-Militia :p.)</p>\n<p><strong>HELP HIM!</strong></p>\n<p><strong>IT IS GUARANTEED THAT THE INPUT IS VALID AND THE PERMUTATION WILL BE UNIQUE.</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n<h3>Input</h3>\n<p>First line of the input contains t, the no of testcases. (1&lt;=t&lt;=5)</p>\n<p>Each testcase starts with N , the no of integers in the permutation.(1&lt;=N&lt;=100000)</p>\n<p>Next line contains N space separated integers| A[i] (1&lt;=i&lt;=N) , representing the array A.</p>\n<h3>Output</h3>\n<p>For each testcase , print N space separated integers in a single line, representing the permutation.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 <br />2<br />0 0 <br />3<br />0 1 2 <br />5 <br />0 1 1 3 1 <br /><strong>Output:</strong>\n1 2 <br />3 2 1 <br />5 2 3 1 4 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a37ea7b8-ba61-4114-b6ba-50c439cb7aae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TPGAMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tripinv-mega-inversions",
  "tags": [],
  "level": "BEGINNER",
  "title": "TRIPINV - Mega Inversions",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TRIPINV - Mega Inversions</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The n^2 upper bound for any sorting algorithm<br />is easy to obtain: just take two elements<br />that are misplaced with respect to each other<br />and swap them. Conrad conceived an algorithm<br />that proceeds by taking not two, but three misplaced<br />elements. That is, take three elements<br />ai &gt; aj &gt; ak with i &lt; j &lt; k and place them in<br />order ak; aj ; ai. Now if for the original algorithm<br />the steps are bounded by the maximum number<br />of inversions n(n-1)/2, Conrad is at his wits' end as<br />to the upper bound for such triples in a given sequence. He asks you to write a program<br />that counts the number of such triples.</p>\n<h3>Input</h3>\n<p>The \frst line of the input is the length of the sequence, 1 &lt;= n &lt;= 10^5.<br />The next line contains the integer sequence a1; a2..an.<br />You can assume that all ai belongs [1; n].</p>\n<h3>Output</h3>\n<p>Output the number of inverted triples.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4<br />3 3 2 1\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7bb656aa-a1fc-42b4-9839-5ab6f08573de",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRIPINVinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "trngl-make-triangle",
  "tags": [],
  "level": "BEGINNER",
  "title": "TRNGL - Make Triangle",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TRNGL - Make Triangle</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Chayanika loves Mathematics. She is learning a new chapter geometry. While reading the chapter a question came in her mind. Given a convex polygon of n sides. In how many ways she can break it into triangles, by cutting it with (n-3) non-adjacent diagonals and the diagonals do not intersect.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>First line of the input will be an integer t (1&lt;=t&lt;=100000) which is the no of test cases. Each test case contains a single integer n (3&lt;=n&lt;=1000) which is the size of the polygon.</p>\n<h3>Output</h3>\n<p>For each test case output the no of ways %100007.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />3<br />5<br /><br />&nbsp;<strong>Output:</strong>\n1<br />5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/948f6bb4-4064-4f52-9f1e-b72328edd368",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRNGLinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "trspace-true-space",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TRSPACE - True Space",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TRSPACE - True Space</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In some filesystems, the disk space used by a file is not always equal to the file's size. This is because the disk is divided into clusters of equal size, and each cluster can only be used by a single file. For example, if the cluster size is 512 bytes, and we have a file of size 600 bytes, it would have to be stored in two clusters. Those two clusters cannot be shared with any other files, so the file ends up using 1024 bytes of disk space.</p>\n<p>Note that we don't need any clusters for a file of size 0.</p>\n<p>Given&nbsp;<strong>N</strong>&nbsp;single files and the cluster size, you have to print the total disk space used by the given files.</p>\n<h3>Input</h3>\n<p>The first line of input will contain&nbsp;<strong>T</strong>&nbsp;denoting the number of test cases. The first line of each test case contains two integers&nbsp;<strong>N</strong>, denoting the number of files and&nbsp;<strong>S</strong>, denoting the cluster size of the file system. The second line of each test case contains&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>a<sub>i</sub>&nbsp;(1 &lt;= i &lt;= N)</strong>&nbsp;denoting the size of the&nbsp;<strong>ith</strong>&nbsp;file.</p>\n<p><strong>Constraints:</strong></p>\n<p>1 &lt;= T &lt;= 1000<br />1 &lt;= N &lt;= 100<br />1 &lt;= S &lt;= 1048576<br />0 &lt;= a<sub>i</sub>&nbsp;&lt;= 10^9</p>\n<h3>Output</h3>\n<p>For each test case print a single line containing&nbsp;<strong>&ldquo;Case X: S&rdquo;</strong>&nbsp;without the quotes, where&nbsp;<strong>X</strong>&nbsp;is the case number and&nbsp;<strong>S</strong>&nbsp;is the total disk space used by the given files.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1 512\n600\n4 32768\n16 32 128 128\n\n<strong>Output:</strong>\nCase 1: 1024\nCase 2: 131072</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7987953b-a627-443e-9032-b322f7210975",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRSPACEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dynamic-programming",
  "tags": [],
  "level": "BEGINNER",
  "title": "TRT - Treats for the Cows",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TRT - Treats for the Cows</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>FJ has purchased N (1 &lt;= N &lt;= 2000) yummy treats for the cows who get money for giving vast amounts of milk. FJ sells one treat per day and wants to maximize the money he receives over a given period time. The treats are interesting for many reasons:</p>\n<ul>\n<li>The treats are numbered 1..N and stored sequentially in single file in a long box that is open at both ends. On any day, FJ can retrieve one treat from either end of his stash of treats.</li>\n<li>Like fine wines and delicious cheeses, the treats improve with age and command greater prices.</li>\n<li>The treats are not uniform: some are better and have higher intrinsic value. Treat i has value v(i) (1 &lt;= v(i) &lt;= 1000).</li>\n<li>Cows pay more for treats that have aged longer: a cow will pay v(i)*a for a treat of age a.</li>\n</ul>\n<p>Given the values v(i) of each of the treats lined up in order of the index i in their box, what is the greatest value FJ can receive for them if he orders their sale optimally?</p>\n<p>The first treat is sold on day 1 and has age a=1. Each subsequent day increases the age by 1.</p>\n<h3>Input</h3>\n<p>Line 1: A single integer, N</p>\n<p>Lines 2..N+1: Line i+1 contains the value of treat v(i)</p>\n<h3>Output</h3>\n<p>The maximum revenue FJ can achieve by selling the treats</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1\n3\n1\n5\n2\n\n<strong>Output:</strong>\n43</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e64b156a-cd1f-4a8c-bc10-c1593da0b58c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "truetwin-finding-true-twins",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TRUETWIN - Finding true twins",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TRUETWIN - Finding true twins</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In every university there is a group of N students that like to run parties, and there are M friendships among the students. Friendship among the students is reciprocal: if A is friend with B then B is also friend with A. Hence the pairs A,B and B,A count as a single friendship. Every Saturday evening one of the students would invite all his/her friends to his home.&nbsp; At some universities it was observed that there are two students A, B which are always invited together or not invited at all at every party run by the other students. Such students are called&nbsp;<em>twins</em>. When the twins are friends they are called<em>&nbsp;true twins</em>&nbsp;and when they are not friends they are called&nbsp;<em>false twins</em>.</p>\n<h3>Input</h3>\n<p>The first line of the input contains an integer&nbsp;<strong>T</strong>&nbsp;&ndash; the amount of test cases. Then&nbsp;<strong>T</strong>&nbsp;test descriptions follow. The first line of each test consists of two integers&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>M</strong>&nbsp;separated with a space. Then&nbsp;<strong>M</strong>&nbsp;lines follow, each containing two integers&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>&nbsp;separated with a space, describing friendships. No testcase will contain twice the same friendship&nbsp;<strong>A, B</strong>.</p>\n<p>The limits are 1&le;<strong>T</strong>&le;10, 1&le;<strong>N</strong>&le;10000, 0&le;<strong>M</strong>&le;100050, 1&le;<strong>A</strong>&lt;<strong>B</strong>&le;<strong>N</strong>.</p>\n<h3>Output</h3>\n<p>For each test case, output a line</p>\n<pre>Case #<strong>X</strong>: <strong>Y</strong></pre>\n<p>where&nbsp;<strong>X</strong>&nbsp;is the test case number, starting from 1, and&nbsp;<strong>Y</strong>&nbsp;is either the string \"No twins\" without the quotes if there are no true twins, otherwise it is the string \"<strong>A B</strong>\" where&nbsp;<strong>A, B</strong>&nbsp;is the lexicographical smallest true twin pair.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />6 8<br />1 2<br />1 4<br />1 5<br />2 3<br />2 4<br />3 4<br />3 6<br />5 6<br />6 7<br />1 2<br />1 4<br />1 5<br />2 3<br />3 4<br />3 6<br />5 6\n\n<strong>Output:</strong>\nCase #1: 2 4<br />Case #2: No twins</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/587bc0c7-95be-4fe4-9ff5-8c7b5c38b94c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRUETWINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "tug-tug-of-war",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TUG - Tug of War",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TUG - Tug of War</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>We want to pick a certain number of people from a group of N people and make them play a game of&nbsp;tug of war!</p>\n<p>Then, we would like to split these people into two teams.</p>\n<p>Afterwards, an intense game of tug of war would start.</p>\n<p>However, when the strength of each team is not equivalent, the game is not very fun.&nbsp;A team's strength is the sum of the strengths of the people in the team.</p>\n<p>Since you want the game that is fun, it is necessary to determine if it is possible to pick some people and split them into two teams such that the two teams' strengths are equal.</p>\n<h3>Input</h3>\n<p>The input consists of a number of test cases.</p>\n<p>The first line is the number of test case, T. (1&lt;=T&lt;=200)</p>\n<p>Each case starts with N (1&lt;=N&lt;=100,000), the total&nbsp;number of people.</p>\n<p>The next line consists of N integers, separated by a space. The ith integer indicates the strength of the ith person. These integers&nbsp;are less than 100, but larger than 0.&nbsp;</p>\n<h3>Output</h3>\n<p>For each test case, output \"YES\" if it is possible to pick some people from the group and separate into two teams of equal strengths. If not, output \"NO\". Refer to the&nbsp;sample test cases for further clarifications.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />4<br />10 20 30 40<br />3<br />10 18 15<br /><br /><br />\n<strong>Output:</strong>\nYES<br />NO </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a4c749b5-0a02-4885-a9cd-1f9cadd84c3c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TUGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "twosqrs-two-squares-or-not-two-squares",
  "tags": [],
  "level": "BEGINNER",
  "title": "TWOSQRS - Two squares or not two squares",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">TWOSQRS - Two squares or not two squares</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Given integer n decide if it is possible to represent it as a sum of two squares of integers.</p>\n<h3>Input</h3>\n<p align=\"justify\">First line of input contains one integer c &lt;= 100 - number of test cases. Then c lines follow, each of them consisting of exactly one integer 0 &lt;= n &lt;= 10^12.</p>\n<h3>Output</h3>\n<p align=\"justify\">For each test case output Yes if it is possible to represent given number as a sum of two squares and No if it is not possible.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10\n1\n2\n7\n14\n49\n9\n17\n76\n2888\n27\n\n<strong>Output:</strong>\nYes\nYes\nNo\nNo\nYes\nYes\nYes\nNo\nYes\nNo</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78bc182f-0ff8-458d-a25a-6edb451ad1ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TWOSQRSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ucbintc-good",
  "tags": [],
  "level": "BEGINNER",
  "title": "UCBINTC - Good",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">UCBINTC - Good</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">You are given a sequence A consisting of N integers (not to be confused with the sequence from a previous</div>\n<div id=\"_mcePaste\">task). We will call the ith sequence element good if it equals the sum of some three elements in positions</div>\n<div id=\"_mcePaste\">strictly smaller than i (an element can be used more than once in the sum). How many good elements</div>\n<div id=\"_mcePaste\">does the sequence contain?</div>\n<p>You are given a sequence A consisting of N integers (not to be confused with the sequence from a previous</p>\n<p>task). We will call the i<sup>th</sup>&nbsp;sequence element good if it equals the sum of some three elements in positions</p>\n<p>strictly smaller than i (an element can be used more than once in the sum). How many good elements</p>\n<p>does the sequence contain?</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The fi\frst line of input contains the positive integer N (1 &le;\u0014 N &le;\u0014 5000), the length of the se-</p>\n<p>quence A. The second line of input contains N space separated integers representing the sequence</p>\n<p>A (&minus;100000 &le;\u0014 A<sub>i</sub>&nbsp;&le;\u0014 100000).</p>\n<h3>Output</h3>\n<p>The \ffirst and only line of output must contain the number of good elements in the sequence.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1 3\n\n<strong>Output:</strong>\n1\n</pre>\n<pre><strong>Input:</strong>\n6\n1 2 3 5 7 10\n\n<strong>Output:</strong>\n4\n</pre>\n<pre><strong>Input:</strong>\n3\n-1 2 0\n\n<strong>Output:</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bd03eb00-bb03-4771-8e9c-15ba82069d05",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UCBINTCinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91f9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ufpr14d-inquire",
  "tags": [],
  "level": "BEGINNER",
  "title": "UFPR14D - Inquire",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">UFPR14D - Inquire</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><strong>(EN:)</strong></p>\n<p>Every tourist visiting our city must visit the May 4 avenue. There are&nbsp;<strong>N</strong>&nbsp;houses, numbered from 1 to&nbsp;<strong>N</strong>. There are&nbsp;<strong>P</strong><sub>i</sub>&nbsp;people living at house&nbsp;<em>i</em>.</p>\n<p>The statistic institute is procedding with the survey this year. They will make many queries about the avenue's population. For each query, two numbers&nbsp;<strong>A&nbsp;</strong>and&nbsp;<strong>B</strong>, with&nbsp;<strong>A</strong>&nbsp;&lt;=&nbsp;<strong>B</strong>, are given. You must determine the total number of people living in all houses from house&nbsp;<strong>A</strong>&nbsp;to house&nbsp;<strong>B</strong>, inclusive.</p>\n<h3>Input</h3>\n<p>First line contains the number&nbsp;&nbsp;<strong>N</strong>&nbsp;(1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 10<sup>5</sup>). Second line contains&nbsp;<strong>N</strong>&nbsp;integers&nbsp;<strong>P</strong><sub>1</sub>,&nbsp;<strong>P</strong><sub>2</sub>, ...,&nbsp;<strong>P</strong><sub>N</sub>, indicating how many people live at each house (for each 1 &lt;= i &lt;=&nbsp;<strong>N</strong>, 0 &lt;=&nbsp;<strong>P</strong><sub>i</sub>&nbsp;&lt;= 100). Next line contains the integer&nbsp;<strong>Q</strong>&nbsp;(1 &lt;=&nbsp;<strong>Q</strong>&nbsp;&lt;= 10<sup>4</sup>), the number of queries to be processed. Each of the next&nbsp;<strong>Q</strong>&nbsp;lines describes a query with two integers&nbsp;<strong>A</strong>&nbsp;and&nbsp;<strong>B</strong>&nbsp;(1 &lt;=&nbsp;<strong>A</strong>&nbsp;&lt;=&nbsp;<strong>B</strong>&nbsp;&lt;=&nbsp;<strong>N</strong>).</p>\n<h3>Output</h3>\n<p>For each query, print a line with its result.</p>\n<p><strong>(PT-BR:)</strong></p>\n<p>Todo turista que visita a cidade deve conhecer a Avenida Quatro de Maio. H&aacute;&nbsp;<strong>N</strong>&nbsp;casas na avenida, numeradas sequencialmente de 1 a&nbsp;<strong>N</strong>. H&aacute;&nbsp;<strong>P</strong><sub>i</sub>&nbsp;pessoas morando na casa de n&uacute;mero&nbsp;<em>i</em>&nbsp;da avenida.<br /><br />O instituto de estat&iacute;stica est&aacute; realizando o censo deste ano. Para tal, o instituto ir&aacute; realizar diversas consultas sobre a popula&ccedil;&atilde;o da avenida. Em cada consulta, s&atilde;o dados dois n&uacute;meros&nbsp;<strong>A</strong>&nbsp;e&nbsp;<strong>B</strong>, com&nbsp;<strong>A</strong>&nbsp;&lt;=&nbsp;<strong>B</strong>. Para cada consulta, &eacute; necess&aacute;rio determinar o n&uacute;mero total de pessoas que moram entre as casas&nbsp;<strong>A</strong>&nbsp;e&nbsp;<strong>B</strong>, inclusive.<br /><br />Sua tarefa &eacute;, dada a popula&ccedil;&atilde;o de cada casa e as consultas que o instituto ir&aacute; fazer, determinar a resposta para cada consulta dada.</p>\n<h3>Entrada</h3>\n<p>A primeira linha da entrada cont&eacute;m o inteiro&nbsp;<strong>N</strong>&nbsp;(1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 10<sup>5</sup>). A segunda linha cont&eacute;m&nbsp;<strong>N</strong>&nbsp;inteiros&nbsp;<strong>P</strong><sub>1</sub>,&nbsp;<strong>P</strong><sub>2</sub>, ...,&nbsp;<strong>P</strong><sub>N</sub>, indicando a popula&ccedil;&atilde;o de cada casa da avenida (Para cada 1 &lt;= i &lt;=&nbsp;<strong>N</strong>, 0 &lt;=&nbsp;<strong>P</strong><sub>i</sub>&nbsp;&lt;= 100). A terceira linha cont&eacute;m um inteiro&nbsp;<strong>Q</strong>&nbsp;(1 &lt;=&nbsp;<strong>Q</strong>&nbsp;&lt;= 10<sup>4</sup>), indicando o n&uacute;mero de consultas a serem realizadas. Por fim, cada uma das pr&oacute;ximas&nbsp;<strong>Q</strong>&nbsp;linhas descreve uma consulta. Cada linha cont&eacute;m dois inteiros&nbsp;<strong>A</strong>&nbsp;e&nbsp;<strong>B</strong>&nbsp;(1 &lt;=&nbsp;<strong>A</strong>&nbsp;&lt;=&nbsp;<strong>B</strong>&nbsp;&lt;=&nbsp;<strong>N</strong>).</p>\n<h3>Saida</h3>\n<p>Para cada consulta, imprima uma linha contendo sua resposta.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4<br />10 2 8 72<br />3<br />4 4<br />1 3<br />2 4\n\n<strong>Output:</strong>\n72<br />20<br />82<br /><br /></pre>\n<pre><strong>Input:</strong>\n5<br />1 2 3 4 5<br />2<br />1 5<br />1 1\n\n<strong>Output:</strong>\n15<br />1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/93562cfb-ef60-49f5-899c-233c2c373021",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UFPR14Dinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91fa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "unslvm-ohani-and-unsolvable-math",
  "tags": [],
  "level": "BEGINNER",
  "title": "UNSLVM - Ohani And Unsolvable Math",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">UNSLVM - Ohani And Unsolvable Math</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Math is very favorite to Beak Sing Jo. He is a very brilliant student and always attentive to his studies. Ohani is a girl of his class. She always tries to be a friend of Beak Sing Jo. But Beak doesn&rsquo;t like her at all. She is never serious for her study. But she always tries to take the attention of Beak.</p>\n<p>&nbsp;</p>\n<p>So, one day Beak gave her a condition. If Ohani can solve a math, he will accept her friendship. He gave Ohani the following question.</p>\n<p>&nbsp;</p>\n<p>You will be given an integer n. You will have to find an integer number X of n digits that satisfies the condition:</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X + 2 = reverse (2*X)</p>\n<p>&nbsp;</p>\n<p>Here reverse(x) means to arrange the digits of the number in the reverse order.</p>\n<p>&nbsp;</p>\n<p>Ohani is very weak in mathematics. But she knows that you are a great programmer. So she told you to make a program for her which will solve the question.</p>\n<h3>Input</h3>\n<p>The first line of the input will be the number of test cases T where T &lt;= 50. Next T lines will contain an integer n and n will always be less than 300001.</p>\n<h3>Output</h3>\n<p>You have to output the answer in the following format:</p>\n<p>&ldquo;Case y: x&rdquo;</p>\n<p>Where y is the case number and x is the desired n digit number</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>3</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<pre>\n<strong>Output:</strong></pre>\n<p>Case 1: 2</p>\n<p>Case 2: 47</p>\n<p>Case 3: 497</p>\n<p>&nbsp;</p>\n<p>Problem Setter &amp; Dataset:</p>\n<p>Raihat Zaman Neloy</p>\n<p>Dept. CSE, JU</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/64e3c24b-ca1a-4fd5-92d0-802568a53db6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UNSLVMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91fb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "uoftab-the-foxens-treasure",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "UOFTAB - The Foxens Treasure",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">UOFTAB - The Foxens Treasure</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<p>There are $N$ ($1 \\leq N \\leq 4$) Foxen guarding a certain valuable treasure, which you'd love to get your hands on. The problem is, the Foxen certainly aren't about to allow that - at least, not while they're awake.</p>\n<p>Fortunately, through careful observation, you've seen that each Fox has a regular sleep cycle. In particular, the $i$th Fox stays awake for $A_i$ ($1 \\leq A_i \\leq 23$) hours, then sleeps for $S_i$ ($1 \\leq S_i \\leq 23$) hours, repeating this pattern indefinitely ($2 \\leq A_i+S_i \\leq 24$). At the start of your treasure-nabbing attempt, the $i$th Fox is exactly $O_i$ ($0 \\leq O_i &lt; A_i+S_i$) hours into its cycle.</p>\n<p>There are $T$ ($1 \\leq T \\leq 20$) scenarios as described above. For each one, you'd like to determine how soon all of the Foxen will be simultaneously asleep, allowing you to grab their treasure, or if this will simply never happen.</p>\n<h3>Input</h3>\n<p>First line: 1 integer, $T$</p>\n<p>For each scenario:</p>\n<p>First line: 1 integer, $N$</p>\n<p>Next $N$ lines: 3 integers, $A_i$, $S_i$, and $O_i$, for $i = 1..N$</p>\n<h3>Output</h3>\n<p>For each scenario:</p>\n<p>1 integer, the minimum number of hours after the start to wait until all of the Foxen are asleep during the same hour. If this will never happen, output the string \"Foxen are too powerful\" (without quotes) instead.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>2<br />2<br />2 1 2<br />2 2 1<br />3<br />1 1 0<br />1 1 0<br />1 1 1\n\n<strong>Output:</strong></pre>\n<pre>6<br />Foxen are too powerful</pre>\n<pre><strong>Explanation of Sample:</strong></pre>\n<p>In scenario 1, the following table illustrates the Foxen's sleeping cycles (with A representing being awake, S representing sleep, and a bold letter representing the start of a sleep cycle):</p>\n<p><img src=\"https://www.spoj.com/content/sourspinach:uoftab.bmp\" alt=\"\" /></p>\n<p>As can be seen, the first hour during which both Foxen are asleep is 6 hours after the start.</p>\n<p>In scenario 2, the first 2 Foxen are always awake and asleep at the same times. However, the third Fox's schedule is exactly flipped, which means that it will never be asleep at the same time as the others.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a51274fc-3891-4c80-91db-78e1481ef2cb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UOFTABinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91fc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "updateit-update-the-array",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "UPDATEIT - Update the array !",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">UPDATEIT - Update the array !</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You have an array containing n elements initially all 0. You need to do a number of update operations on it. In each update you specify l, r and val which are the starting index, ending index and value to be added. After each update, you add the 'val' to all elements from index l to r. After 'u' updates are over, there will be q queries each containing an index for which you have to print the element at that index.</p>\n<h3>Input</h3>\n<p>First line consists of t, the number of test cases. (1 &lt;= t &lt;= 10)</p>\n<p>Each test case consists of \"n u\",number of elements in the array and the number of update operations, in the first line (1 &lt;= n &lt;= 10000 and 1 &lt;= u &lt;= 100000)</p>\n<p>Then follow u lines each of the format \"l r val\" (0 &lt;= l,r &lt; n, 0 &lt;= val &lt;=10000)</p>\n<p>Next line contains q, the number of queries. (1 &lt;= q &lt;= 10000)</p>\n<p>Next q lines contain an index (0 &lt;= index &lt; n)</p>\n<h3>Output</h3>\n<p>For each test case, output the answers to the corresponding queries in separate lines.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1<br />5 3<br />0 1 7<br />2 4 6<br />1 3 2<br />3<br />0<br />3<br />4<br /><strong><br />Output:<br /></strong>7<br />8<br />6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8928e23f-52d7-4f9e-b5ad-f6a3d9f3a370",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UPDATEITinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91fd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "urjc2_e-stressful-activities",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "URJC2_E - Stressful Activities",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">URJC2_E - Stressful Activities</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The finals are coming and we, as sensitive people, cannot handle that much of stress. Each year some students will fail their tests because of nervousness or stressful situations in their normal lives, this is why the professors at a certain university have called you.</p>\n<p>Each of the K students will tell you what they&rsquo;re managing to do in some period of N days, some activities can be stressful (will be denoted by a positive integer) and some may be relaxing (denoted as a negative integer), the professors then will ask you if they put the final exams in a range of D days, how many students will be full of stress and how many students will not based on a threshold. This is, if the sum of the range of days is less or equal than a set threshold for each student.</p>\n<h3>Input</h3>\n<p>The first line contains an integer T, which specifies the number of test cases. Then, will follow the descriptions of T test cases.</p>\n<p>The first line of each test case will contain three numbers; K students, a threshold H of stress and the number N of days studied, after that, K lines will follow with N numbers separated by a space denoting the stress that the student Ki is expected to receive on the day Nj .</p>\n<p>After that, a number Q will follow and on the next Q lines there will be two integers Ds and De denoting the days where the finals are to be applied (inclusively).</p>\n<h3>Output</h3>\n<p>For each test case you must print Q lines with two integers, the number of stressed students (if the stress exceeded the threshold) and the number of not stressed students separated by a dash and spaces for each period of days asked.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n5 10 5\n5 1 2 5 -3\n-1 -2 -3 -4 -5\n1 6 91 1 2\n1 0 9 7 2\n1 1 2 3 2\n4\n1 5\n1 3\n3 5\n3 3\n</pre>\n<pre><strong>Output:</strong>\n2 - 3\n1 - 4\n2 - 3\n1 - 4\n</pre>\n<h3>Constraints</h3>\n<p>&bull; 1 &le; K &le; 100</p>\n<p>&bull; 1 &le; N &le; 50,000</p>\n<p>&bull; 1 &le; H &le; 100,000</p>\n<p>&bull; -1,000 &le; Ni &le; 1,000</p>\n<p>&bull; 1 &le; Q &le; 20,000</p>\n<p>&bull; 1 &le; Ds &le; De &le; N</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b1ada2e3-d0bf-4922-9cfb-341d14a161b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "URJC2_Einput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91fe"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar4-changus-final-battle",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR4 - Changus Final Battle",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR4 - Changus Final Battle</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Try the tutorial version first :&nbsp;<a href=\"https://www.spoj.com/problems/VECTAR2/\">&nbsp;Changus Big Battle</a>&nbsp;:&nbsp; http://www.spoj.com/problems/VECTAR2/</p>\n<p>Changu is going to fight a battle. He is powerful but he has a few limitations. If he kills x enemies on a particular day, then he can only kill x-1 or x or x+1 enemies on the next day. And also, he can kill no more than 1 enemy on the last day of battle. Given N, the number of enemies he has to kill to end the battle, you have to calculate the minimum number of days required for Changu to finish the battle, keeping in mind his limitations.&nbsp;<strong>He starts on day 1 by x=1, i.e. killing one enemy.</strong></p>\n<h3>Input</h3>\n<p>The first line contains an integer T denoting the number of test cases.</p>\n<p>Each of the next T lines contain an integer N.</p>\n<h3>Output</h3>\n<p>T lines : Minimum number of days required for each test case.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 10^5</p>\n<p>1 &lt;= N &lt;= 10^18</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n4\n1\n9\n\n<strong>Output:</strong>\n3\n1\n5</pre>\n<h3>Explanation</h3>\n<p>Case 1 : 1 + 2 + 1</p>\n<p>Case 2 : 1</p>\n<p>Case 3 : 1 + 2 + 3 + 2 + 1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e4b6a409-8425-4979-adad-0409340d2ead",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef91ff"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar5-count-subsets",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR5 - Count Subsets",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR5 - Count Subsets</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are given a set S = {1, 2, 3, ..., n}. Your task is simple. You have to calculate the number of ways of selecting non empty&nbsp;subsets A and B such that A is not a subset of B and B is not a subset of A. Since answer can be large output the result mod 10^9 + 7.</p>\n<h3>Input</h3>\n<p>First line of input contains single integer t denoting number of test cases.</p>\n<p>Next t lines contain a single integer n.</p>\n<h3>Output</h3>\n<p>For each test case output answer to problem by taking mod with 10^9 + 7.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= t &lt;= 100000</p>\n<p>1 &lt;= n &lt;= 1000000</p>\n<h3>Example</h3>\n<pre><strong>SAMPLE INPUT:</strong>\n2\n4\n8\n\n<strong>SAMPLE OUTPUT:</strong>\n110\n52670</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ad8a7a41-e211-41de-97bd-b94364d180e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR5input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9200"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "vectar7-number-of-score-sequences",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VECTAR7 - Number of score sequences",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR7 - Number of score sequences</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Changu and Mangu were playing volleyball, when they were handed a very easy question about the game.You can help them solve it.</div>\n<div id=\"_mcePaste\">In volleyball 2 teams play with initial score 0 and each team gets points which increases their</div>\n<div id=\"_mcePaste\">scores by 1.&nbsp;</div>\n<div id=\"_mcePaste\">The game ends when:</div>\n<div id=\"_mcePaste\">One of the teams gets 25 points and another team has &lt; 24 points ( strictly less than 24).</div>\n<div id=\"_mcePaste\">If the score ties at 24:24, the teams continue to play until the absolute difference between the scores is 2.</div>\n<div id=\"_mcePaste\">Given the final score of a game ( A B ) i.e., the first team has scored A points and the second has scored B points,</div>\n<div id=\"_mcePaste\">You have to find the number of different sequences of getting points by teams that leads to this final score?</div>\n<p>Changu and Mangu were playing volleyball when they were handed a very easy question about the game. You can help them solve it.</p>\n<p>&nbsp;</p>\n<p>In volleyball 2 teams play with initial score 0 and each team gets points which increases their&nbsp;scores by 1.&nbsp;</p>\n<p>The game ends when:</p>\n<p>One of the teams gets 25 points and another team has &lt; 24 points ( strictly less than 24).</p>\n<p>If the score ties at 24:24, the teams continue to play until the absolute difference between the scores is 2.</p>\n<p>Given the final score of a game ( A B ) i.e., the first team has scored A points and the second has scored B points,</p>\n<p>You have to find the number of different sequences of getting points by teams that leads to this final score?</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains the number of test cases T. The next T lines contain two integers A and B.</p>\n<h3>Output</h3>\n<p>Output the number of different sequences of getting points by the teams that leads to the final score A : B.&nbsp;<em>Final&nbsp;</em>means that the game should be over after this score is reached. If the number is larger than 109+7, output number modulo 109&nbsp;+ 7. Print 0&nbsp;if no such volleyball game ends with the given score.</p>\n<h3>Example</h3>\n<p><strong>Input:</strong></p>\n<p>2</p>\n<p>3 25</p>\n<p>24 17</p>\n<p>&nbsp;Output:</p>\n<p>2925&nbsp;</p>\n<p>0</p>\n<p><strong>Constraints:</strong></p>\n<p>T&lt;=15</p>\n<p>0 &le; A , B &le; 109</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b3a770ee-cc47-4e6c-85a4-0083ffa52a21",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9201"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar8-primal-fear",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR8 - Primal Fear",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR8 - Primal Fear</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Changu and Mangu are afraid of prime numbers, but they are not afraid&nbsp;of all prime numbers. They were afraid of only a special kind of prime numbers. They are afraid of the prime numbers (without the digit zero, they love all the primes which have digits 0 in them)&nbsp;that remain prime no matter how many of the leading digits are omitted.&nbsp;For example, they are afraid of 4632647 because it doesn't have the digit 0 and&nbsp;each of its truncations (632647, 32647, 2647, 647, 47, and 7) are primes.</p>\n<p>You are given a simple task, given a number of N, find out the number of primes not greater that N, that changu and mangu are afraid of.</p>\n<h3>Input</h3>\n<p>The first line contains T, the number of test cases. T lines follow, each containing a number N.</p>\n<h3>Output</h3>\n<p>On each line print the number of primes not greater that N, that changu and mangu are afraid of.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n2\n3\n4\n\n<strong>Output:</strong>\n1\n2\n2</pre>\n<p>Constraints</p>\n<p>T&nbsp;&le; 10^5</p>\n<p>1&nbsp;&le;&nbsp;N &lt; 10^6</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e289e20c-2abf-4903-87a9-90e7d67c9c01",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR8input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9202"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar9-mangu-numbers",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR9 - Mangu Numbers",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR9 - Mangu Numbers</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>When Changu was introduced to the concept of prime numbers, he was so glad that, after one days happy work, he was able to generate the first thirteen prime numbers. He has the ability that, given any number, he can tell whether or not it is divisible by any of the first thirteen primes. The first thirteen prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, and 41; their product is 304250263527210. A number is called 'mangu' if it is divisible by at least one of the first thirteen primes. Thus, the first number that is not 'mangu' is 1, and the second is 43. Changu wrote all the 'mangu' numbers in ascending order in a list.</p>\n<p>Your task is to find out, given k, what is the k-th element in the list.</p>\n<h3>Input</h3>\n<p>The first line contains T (not more than 500), the number of test cases. In each case there is a single number k.</p>\n<h3>Output</h3>\n<p>For each test case, output the k-th mangu number on a single line. You may assume that the answer is never bigger than 304250263527210.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n2\n3\n\n<strong>Output:</strong>\n3\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ee3267d1-c30d-42f5-91a4-1cbd5bb90761",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR9input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9203"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar10-card-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR10 - Card Game",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR10 - Card Game</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Changu and Mangu have an ordered deck of&nbsp;<strong>n</strong>&nbsp;cards numbered 1 to&nbsp;<strong>n</strong>&nbsp;with card 1 at the top and card&nbsp;<strong>n</strong>&nbsp;at the bottom.&nbsp;They want to play a game. They perform a wierd operation as long as there are at least two cards in the deck:&nbsp;Changu throws away the top card and then Mangu moves the card that is now on the top of the deck to the bottom of the deck. Your task is to find the last remaining card.</p>\n<h3>Input</h3>\n<p>Each line of input (except the last) contains a positive number&nbsp;<strong>n</strong>&nbsp;&le; 1000000. The last line contains 0 and this line should not be processed.&nbsp;Input will not contain more than 500000 lines.</p>\n<h3>Output</h3>\n<p>For each number from input produce one line of output giving the last&nbsp;remaining card.</p>\n<h3>Example</h3>\n<pre><strong>Sample Input:</strong>\n2\n3\n4\n0\n\n<strong>Sample Output:</strong>\n2\n2\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c6d2ec1-1826-489b-90bf-b09bdbcafd2c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR10input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9204"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vectar11-game-of-squares",
  "tags": [],
  "level": "BEGINNER",
  "title": "VECTAR11 - Game of Squares",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VECTAR11 - Game of Squares</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Changu and Mangu are playing a game. They are given a number n.</div>\n<div id=\"_mcePaste\">They make moves in turn, Changu playing first.</div>\n<div id=\"_mcePaste\">each move consists of subtracting a perfect square from the number,</div>\n<div id=\"_mcePaste\">the player who faces 0 loses. You are given a number n, you have to</div>\n<div id=\"_mcePaste\">find out whether Changu can win the game, if he plays optimally.</div>\n<p>Changu and Mangu are playing a game. They are given a number n. They make moves in turn, Changu playing first. Each move consists of subtracting a perfect square(not less than 1) from the number, the player who faces 0 loses. You are given a number n, you have to find out whether Changu can win the game, if both Changu and Mangu play optimally.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>The first line contains T (not more than 10^5), the number of test cases. The next T lines contain a number n (not more than 10^6).</p>\n<h3>Output</h3>\n<p>For each test case output \"Win\" if Changu can win the game, if he plays optimally or else print \"Lose\"</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1\n2\n3\n\n<strong>Output:</strong>\nWin\nLose\nWin</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6e844359-4708-4f00-a754-525fe5acc278",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VECTAR11input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9205"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "venom-touch-of-venom",
  "tags": [],
  "level": "BEGINNER",
  "title": "VENOM - Touch of Venom",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VENOM - Touch of Venom</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Sometimes you have to try fighting even though you know that your enemy is very powerful than you. Your hero with initial health H is about to fight against a venomous enemy who has a poisonous value of P. The enemy's poison deals i*P damage at it's ith attacking chance(i&gt;=1). The hero dies when his health becomes &lt;=0. After enemy's attack, if the hero survives, he heals himself with a health of A by using his skills. Then the enemy gets the chance again and the cycle continues till the hero dies. Find the survival time of the hero. You can safely assume that the hero is mortal.<br /><br /></p>\n<p>Example Scenario:</p>\n<p>Initial Health(H) = 10, Poison (P) = 2, Heal value(A) = 1</p>\n<p>At time 1, enemy does 1*2 damage reducing the hero's health to 8</p>\n<p>At time 2, hero heals himself by 1 increasing his health to 9</p>\n<p>At time 3, enemy does 2*2 damage reducing the hero's health to 5</p>\n<p>At time 4, hero heals himself by 1 increasing his health to 6</p>\n<p>At time 5, enemy does 3*2 damage and kill the hero.</p>\n<p>The hero survived 5 units of time.<br /><br /></p>\n<p><strong>Input:</strong></p>\n<p>The first line consists of an integer t, the number of test cases. For each test case there is a line with 3 integers H, P and A.<br /><br /></p>\n<p><strong>Output:</strong></p>\n<p>For each test case, find the survival time of the hero.<br /><br /></p>\n<p><strong>Input Constraints:</strong></p>\n<p>1&lt;=t&lt;=10^6</p>\n<p>1&lt;=H&lt;=10^6</p>\n<p>1&lt;=P&lt;=10^6</p>\n<p>0&lt;=A&lt;P<br /><br /></p>\n<p><strong>Sample Input:</strong></p>\n<p>3</p>\n<p>3 7 2</p>\n<p>81 4 1</p>\n<p>87 8 4<br /><br /></p>\n<p><strong>Sample Output:</strong></p>\n<p>1</p>\n<p>13</p>\n<p>9</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/283be75b-034d-4e85-b550-63578757af3f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VENOMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9206"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "villages-villages-by-the-river",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VILLAGES - Villages by the River",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VILLAGES - Villages by the River</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In a far away country there is a wide river, N villages on the left and N villages on the right side of this river (denoted by 1..N on each side). There are also M small ships, each of them connecting one village from the left and one village from the right side (in both ways).</p>\n<p>You are to organize a film festival in four of these villages: two from the left and two from the right side. Each two of these four villages must be connected by a ship (directly) if they belong to opposite sides of the river.</p>\n<p>Help yourself to choose these four villages and first find out; in how many ways can you choose them?</p>\n<h3>Input</h3>\n<p>In the first line there are integers N &le; 1000 and M &le; N<sup>2</sup>.</p>\n<p>In the next M lines there are two integers from the interval [1, N] representing the village from the left and the village from the right side connected by this ship.</p>\n<h3>Output</h3>\n<p>Print the required number of ways to choose villages for the festival.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 5<br />1 1<br />1 2<br />1 3<br />2 2<br />2 3<br />\n<strong>Output:</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/61994dc4-c748-4975-be89-7a7ee01b3fcc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VILLAGESinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9207"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "visiblebox-decreasing-number-of-visible-box",
  "tags": [],
  "level": "BEGINNER",
  "title": "VISIBLEBOX - Decreasing Number of Visible Box",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VISIBLEBOX - Decreasing Number of Visible Box</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Shadowman loves to collect box but his roommates woogieman and itman don't like box and so shadowman wants to hide boxes as many as possible. A box can be kept hidden inside of another box if and only if the box in which it will be held is empty and the size of the box is at least twice as large as the size of the box.</p>\n<p>Print the minimum number of box that can be shown.</p>\n<h3>Input</h3>\n<p>The input set starts with single line integer&nbsp;<strong>T (1&lt;=T&lt;=50)</strong>&nbsp;the number of test cases. Then following&nbsp;<strong>T</strong>&nbsp;cases starts with an integer&nbsp;<strong>N (1&lt;=N&lt;=100000)</strong>&nbsp;denoting the number of box. The next line contains&nbsp;<strong>N</strong>&nbsp;space separated positive integer.&nbsp;<strong>i-th</strong>&nbsp;of them contains a numbers&nbsp;<strong>A<sub>i</sub>(1&lt;=A<sub>i</sub>&lt;=100000)</strong>&nbsp;size of the&nbsp;<strong>i-th</strong>&nbsp;box.</p>\n<h3>Output</h3>\n<p>Output the the case number and the minimum number of box that can be shown.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n1 2 4 8\n4\n1 3 4 5\n\n<strong>Output:</strong>\nCase 1: 1\nCase 2: 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6d7b1fd2-4883-4041-9c5a-0a5bc7e2b16f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VISIBLEBOXinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9208"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vtv1001-the-largest-weight-contiguous-subsequence",
  "tags": [],
  "level": "BEGINNER",
  "title": "VTV1001 - The largest weight contiguous subsequence",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">VTV1001 - The largest weight contiguous subsequence</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>T&igrave;m chuỗi con c&oacute; trọng số lớn nhất của một d&atilde;y số cho trước<br />- Cho một d&atilde;y số&nbsp;s&nbsp;= &lt;a<sub>1</sub>, ..., a<sub>n</sub>&gt;<br />- Một chuỗi con sẽ l&agrave;&nbsp;s(i,j) =&nbsp;&lt;a<sub>i</sub>, ...,&nbsp;a<sub>j</sub>&gt;, 1&le;i&le;j&le;n<br />- Trọng số được t&iacute;nh theo c&ocirc;ng thức:</p>\n<p>- Vấn đề: t&igrave;m chuỗi con c&oacute; trọng số lớn nhất</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n, n&nbsp;<em>0&le;</em>n&le;200</p>\n<p>D&ograve;ng thứ 2 l&agrave; n số nguy&ecirc;n, c&aacute;c số c&aacute;ch nhau bằng một khoảng c&aacute;ch</p>\n<h3>Output</h3>\n<p>Trọng số lớn nhất cần t&igrave;m</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />6<br />-2 11 -4 13 -5 2\n\n<strong>Output<br /></strong>20</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/97af7fce-42bc-46cf-94ef-d2eeaaa16a7d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VTV1001input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9209"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "wachovia-wachovia-bank",
  "tags": [],
  "level": "BEGINNER",
  "title": "WACHOVIA - Wachovia Bank",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WACHOVIA - Wachovia Bank</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Danilo Gheyi is a renowned bank robber. He is known worldwide for accomplishing the most profitable bank robbery, in Fortaleza, Cear&aacute;. Danilo and his friends dug a tunnel to get into the main chest. There were some bags, with different amounts of money or jewelry and weight. They had to leave about 50% of the total value, since the truck couldn't carry all the bags.</p>\n<p>Danilo wasn't caught, and to show that he can do itall again, he is planning a robbery to one of the safer banks in USA -the Wachovia Bank. He wants your help to maximize the amount stolen, avoiding a huge loss as it happened in Fortaleza.</p>\n<p>Write a program that, given the maximum weight the truck is ableto carry and the information about each bag in the bank, determine the maximum value that Danilo can steal.</p>\n<h3>Input</h3>\n<p>The input consists of several instances. There is an integer N (1 &le; N &le; 200) in the first line; it stands for the number of instances. The first line of each instance contains two integers, K and M (8 &le; K &le; 1000 and 1 &le; M &le; 50) representing, respectively, the maximum weight the truck can handle and the amount of bags in the bank. The next M lines describe each bag with two integers A and B (8 &le; A &le; 200 and 1 &le; B &le; 25): the weight and the value of the bag, respectively.</p>\n<h3>Output</h3>\n<p>For each instance output a sentence &ldquo;<tt>Hey stupid robber, you can get P.</tt>&rdquo;, and P represents the maximum value Danilo can steal.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n34 5\n178 12\n30 1\n13 7\n34 8\n87 6\n900 1\n900 25\n100 10\n27 16\n131 9\n132 17\n6 5\n6 23\n56 21\n100 25\n1 25\n25 25\n100 2\n\n<strong>Output:</strong>\nHey stupid robber, you can get 8.\nHey stupid robber, you can get 25.\nHey stupid robber, you can get 99.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/209b4bb0-652f-4e23-87f6-4b053a1c435c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WACHOVIAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "wal3a-khairy-and-gold-alloys",
  "tags": [],
  "level": "BEGINNER",
  "title": "WAL3A - Khairy and Gold Alloys",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WAL3A - Khairy and Gold Alloys</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">We all know \"Connect 4 Game\", One day Khairy has a Grid with infinite height and n numbers representing the number of discs in the ith column.</div>\n<div id=\"_mcePaste\">It's guaranteed that no empty cells between any discs in the same column.</div>\n<div id=\"_mcePaste\">for each disc in the grid if Khairy saw a disc on its left OR its right, he'll say \"Wal3a\".</div>\n<div id=\"_mcePaste\">Given the N numbers, What's the maximum number that Khairy will say \"Wal3a\"!</div>\n<p>Khairy is a small guy who likes gold very much, but he has a problem in his eyes and the word \"WAL3A\" (WAL3A in arabic means \"Firing\"), whenever he likes something very much sooner or later it is destroyed by any means (Please don't impress him with something you want :|)</p>\n<p>One day Khairy visited the National Museum and saw a Grid with infinite height and N columns and each column&nbsp;<em>i</em>&nbsp;contains X<em>i</em>&nbsp;Gold Alloys. No empty cells between Alloys in the same column.</p>\n<p>Khairy is a short guy, so he only sees the first row of the grid (High things may survive), also he is only impressed by at least two Gold Alloys adjacent to each other in a row, so if he found an Alloy alone in the row, he ignores it, else he would shout \"WAL3AAAAAAAA\".</p>\n<p>Unfortunately all Gold Alloys that impress Khairy in the 1st row are destroyed and disappeard :S, consequently the Alloys of the same columns above the destroyed Alloys fall to the the cell which is directly below it (each affected column height is decreased by 1 unit). Khairy continues saying \"WAL3A\" till he finds the first row not impressing anymore.</p>\n<p>The example below Khairy would say \"WAL3A\" twice and 7 gold alloys are destroyed.</p>\n<p><img title=\"Black Blocks are Gold Alloys Destroyed By Khairy\" src=\"http://s22.postimg.org/ynk4hy8q9/max_khairy.png\" alt=\"Black Blocks are Gold Alloys Destroyed By Khairy\" width=\"344\" height=\"191\" /></p>\n<p>&nbsp;</p>\n<p>Of course the museum lost a fotune during Khairy's visit, so could you help the government find how many Gold Alloys are destroyed by Khairy.</p>\n<h3>Input</h3>\n<p>The first line of input contains an integer&nbsp;<strong>T</strong>&nbsp;(1 &lt;= 20 &lt;=&nbsp;<strong>T</strong>) followed by&nbsp;<strong>T</strong>&nbsp;test cases.</p>\n<p>Each test case contains a positive integer&nbsp;<strong>N</strong>&nbsp;[1 &lt;=&nbsp;<strong>N</strong>&nbsp;&lt;= 10<sup>5</sup>] followed by&nbsp;<strong>N</strong>&nbsp;integers [0 &lt;=&nbsp;<strong>X<sub>i</sub></strong>&nbsp;&lt;= 10<sup>9</sup>] separated by spaces (see sample input for more clarification).</p>\n<h3>Output</h3>\n<p>For each test case output one line contains&nbsp;how many Gold Alloys are destroyed by Khairy.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />5<br />1 2 2 1 5<br />3<br />7 7 7\n\n<strong>Output:</strong>\n7<br />21&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e6ffd3d6-4fbb-4b7b-9bbf-917543815b97",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WAL3Ainput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "wbahd-weak-bridge-ahead",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "WBAHD - Weak Bridge Ahead",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WBAHD - Weak Bridge Ahead</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>You are on a highway of two lanes. There is a bridge on the highway which is almost broken. It is so weak that at most one car can stay over the bridge at any moment. Few cars are waiting on both ends of the bridge forming a queue and they want to cross the bridge. Cars on the same side of the bridge are in the same lane and cars on different sides of the bridge are in different lanes. No car can overtake any other car or change its lane; otherwise, they will be fined. So only the cars which are at the front of their queue have the chance to cross the bridge. Given the time needed for each car to cross the bridge, find the optimal order of cars passing the bridge such that the maximum waiting time of a car is minimized [See sample input/output and the explanation section for better understanding]. Waiting time for a car is equal to the time it has to wait before stepping onto the bridge. You can assume that the time needed for a car to get to the bridge or to get down from the bridge is negligible.</p>\n<h3>Input</h3>\n<p>The first line of input contains two integers,&nbsp;T, denoting the number of test cases. Then for each test case you will first be given two integers,&nbsp;N&nbsp;&amp;&nbsp;M. Here&nbsp;N&nbsp;denotes the number of cars waiting in the left side of the bridge and&nbsp;M&nbsp;denotes the number of cars waiting in the right side of the bridge. It follows a single line having&nbsp;N&nbsp;integers.&nbsp;i-th integer of this line denotes the time needed for the&nbsp;i-th car to pass the road in seconds&nbsp;<em>[ the car at the front of the queue is considered to be the 1st car ]</em>. Then a line follows having M integers describing the second queue in exactly the same way.</p>\n<h3>Output</h3>\n<p>For each test case print an integer in the form &ldquo;Case x: k&rdquo; where&nbsp;x&nbsp;is equal to the number of test case starting from&nbsp;1&nbsp;and&nbsp;k&nbsp;is equal to the minimum possible waiting time of the car which has the maximum waiting time.</p>\n<h3>Constraint</h3>\n<pre>1 &le;&nbsp; T &le;&nbsp; 10<br />1 &le;&nbsp; N &le;&nbsp; 10000<br />1 &le;&nbsp; M &le;&nbsp; 10000<br />1 &le;&nbsp; Time needed for a car to cross the bridge &le;&nbsp; 1000000000</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:<br /></strong>2 <br />1 1 <br />5 <br />3 <br />3 2 <br />9 11 4 <br />10 12</pre>\n<pre><strong>Output:<br /></strong>Case 1: 3<br />Case 2: 34</pre>\n<p>&nbsp;</p>\n<p><strong>Explanation:</strong></p>\n<p>&nbsp;</p>\n<p><strong>In the first test case, it&rsquo;s better to first let the car which takes 3 seconds to pass the bridge pass first. So the other car has to wait for 3 seconds.</strong></p>\n<p>&nbsp;</p>\n<p><strong>On the second case, initially, the highway looks like this: [&ldquo;-&rdquo; sign indicates road and &ldquo;#&rdquo; sign indicates bridge]</strong></p>\n<p>&nbsp;</p>\n<hr />\n<p>&nbsp;</p>\n<pre><strong><code>4 11 9 ### ------ \n------ ### 10 12  \n</code></strong></pre>\n<p>&nbsp;</p>\n<hr />\n<p>&nbsp;</p>\n<p><strong>Now let one car from the left side pass the bridge:</strong></p>\n<p>&nbsp;</p>\n<pre><strong><code>  4 11 ### ------  \n------ ### 10 12  \n</code></strong></pre>\n<p>This car had to wait for 0 seconds.</p>\n<hr />\n<p>Then let one car from the right side pass the bridge:</p>\n<pre><code>  4 11 ### ------ \n------ ### 12  \n</code></pre>\n<p>This car had to wait for 9 seconds.</p>\n<hr />\n<p>Then let another car from the left side pass the bridge:</p>\n<pre><code>    4  ### ------ \n------ ### 12  \n</code></pre>\n<p>This car had to wait for 19 seconds.</p>\n<hr />\n<p>After that, let the last car from the left side pass the bridge.</p>\n<pre><code>       ### ------ \n------ ### 12\n</code></pre>\n<p>This car had to wait for 30 seconds.</p>\n<hr />\n<p>Finally, let the last car from the right side pass the bridge and you are done.</p>\n<pre><code>       ### ------ \n------ ### \n</code></pre>\n<p>This car had to wait for 34 seconds.</p>\n<hr />\n<p>So 34 is the maximum waiting time which we tried to minimize. It&rsquo;s not possible to get a smaller answer by any other ordering of the cars crossing the bridge.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/de7b4d20-d5d1-43a2-ab91-6dc32333920c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WBAHDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "weight3-vegetable-shopkeeper-3",
  "tags": [],
  "level": "BEGINNER",
  "title": "WEIGHT3 - VEGETABLE SHOPKEEPER 3",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WEIGHT3 - VEGETABLE SHOPKEEPER 3</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><img src=\"http://www.spoj.com/content/cegprakash:shopkeeper.jpg\" alt=\"\" width=\"500\" height=\"360\" /></p>\n<p>&nbsp;</p>\n<p>The cost of the vegetables is directly proportional to it's weight. The vegetable shopkeeper wants to minimize the loss and maximize his profit.&nbsp;<br /><br />At first, the customer picks n number of vegetables with their sum of weight &gt;= target weight. This is given as input.</p>\n<p>Then the shopkeeper can choose any combination of the vegetables picked by the customer. But the sum of weight must remain &gt;= target weight.</p>\n<p>The shopkeeper is experienced enough to estimate the weight of any vegetable by looking at it.<br /><br />Given the target weight and the individual weights of all the vegetables, find the minimum weight loss for the shopkeeper.<br /><br />weight loss = sum of weight of vegetables chosen by shopkeeper - target weight.</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>The first line consists of an integer t, the number of test cases. For each test case the first line consists of two integers n and W, the number of vegetables picked by the customer and the target weight respectively. The next line consists of n integers denoting the weights of each vegetable.</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong>:</p>\n<p>For each test case, find the minimum weight loss for the shopkeeper.</p>\n<p>&nbsp;</p>\n<p><strong>Input Constraints:</strong></p>\n<p>1 &lt;= t &lt;= 100</p>\n<p>1 &lt;= n &lt;= 100</p>\n<p>1 &lt;= weight of each vegetable &lt;= 1000</p>\n<p>1 &lt;= W &lt;= 50000</p>\n<p>&nbsp;</p>\n<p><strong>Time Limit :</strong></p>\n<p>3 seconds</p>\n<p>&nbsp;</p>\n<p><strong>Sample Input</strong>:</p>\n<p>3</p>\n<p>3 40</p>\n<p>20 15 15</p>\n<p>5 24</p>\n<p>5 9 7 10 10</p>\n<p>4 40</p>\n<p>20 15 15 8</p>\n<p>&nbsp;</p>\n<p><strong>Sample Output</strong>:</p>\n<p>10</p>\n<p>0</p>\n<p>3</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/df180bbb-3e7e-4df8-b49c-1bbd7ae07a07",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WEIGHT3input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "weirdfn-weird-function",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "WEIRDFN - Weird Function",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WEIRDFN - Weird Function</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Let us define:</p>\n<ul>\n<li>F[1] = 1</li>\n<li>F[i] = (a*M[i] + b*i + c)%1000000007 for i &gt; 1</li>\n</ul>\n<p>where M[i] is the median of the array {F[1], F[2], ..., F[i-1]}.</p>\n<p>The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median.</p>\n<p>Given a, b, c and n, calculate the sum F[1] + F[2] + .. + F[n].</p>\n<h3>Input</h3>\n<p>The first line contains T the number of test cases. Each of the next T lines contain 4 integers : a, b, c and n.</p>\n<h3>Output</h3>\n<p>Output T lines, one for each test case, containing the required sum.</p>\n<h3>Constraints</h3>\n<p>1 &lt;= T &lt;= 100<br />0 &lt;= a, b, c &lt; 1000000007<br />1 &lt;= n &lt;= 200000</p>\n<h3>Example</h3>\n<p>Sample Input:</p>\n<pre>2\n1 0 0 3\n3 1 2 6</pre>\n<p>Sample Output:</p>\n<pre>3\n103</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8866198a-5215-48d7-bd6f-be2d696c3bb6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WEIRDFNinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "wonowon-wonowon",
  "tags": [],
  "level": "BEGINNER",
  "title": "WONOWON - Wonowon",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WONOWON - Wonowon</h2>\n<div class=\"row\">&nbsp;</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>There is a little village in northern Canada called Wonowon, its name coming from the fact that it is located at Mile 101 of the Alaska Highway. While passing through this village, a wandering mathematician had an idea for a new type of number, which he called a wonowon number. He defined a wonowon number as a number whose decimal digits start and end with 1, and alternate between 0 and 1. Thus, the first four wonowon numbers are 101, 10101, 1010101, 101010101.</p>\n<p>Neither 2 nor 5 can divide any wonowon number, but it is conjectured that every other prime number divides some wonowon number. For example, 3 divides 10101 (i.e. 3&times;3367), 7 divides 10101 (i.e. 7&times;1443), 11 divides 101010101010101010101 (i.e. 11 &times; 9182736455463728191).</p>\n<p>Assume throughout that this conjecture is true, and let W(p) denote the number of digits in the smallest wonowon number divisible by p. Thus, for example, W(3) = 5, W(7) = 5, W(11) = 21, W(13) = 5, W(17) = 15, W(19) = 17.</p>\n<p>It has been found experimentally that for many primes p, W(p) = p &minus; 2 (as in the case for p = 7, 17, 19). Thus, your task is to write a program which reads an integer n and outputs the number of primes for which W(p) = p &minus; 2. Note that p cannot be 2 nor 5, and p is a prime number less-than or equal to n.</p>\n<h3>Input</h3>\n<p>The input consists of a single integer 3 &le; n &le; 10000.</p>\n<h3>Output</h3>\n<p>The output should consist of a single integer representing the number of primes p for which W(p) = p &minus; 2.</p>\n<h3>Example One</h3>\n<pre><strong>Input:</strong>\n20</pre>\n<pre><strong>Output:</strong>\n3</pre>\n<h3>Example Two</h3>\n<pre><strong>Input:</strong>\n100</pre>\n<pre><strong>Output:</strong>\n14</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/477e7faf-a8ed-4de2-9a52-4049addcd9b5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WONOWONinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef920f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "wowsubstr2-counting-wow-substrings2",
  "tags": [],
  "level": "BEGINNER",
  "title": "WOWSUBSTR2 - Counting WOW-Substrings2",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WOWSUBSTR2 - Counting WOW-Substrings2</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<pre>You are given a string. You have to count the total lengths of all <strong>WOW</strong> substrings.<br /><strong>WOW</strong> substrings are defined as a contiguous substring of a string<br />where there is no any character occurring more than one times.<br />That means, all the characters of substring are unique.<br />As answer could be very large, so print it modulo <strong>100007</strong>. (NOTE THAT: 100007 is not a prime number!!)</pre>\n<h3>Input</h3>\n<p>Input starts with an integer&nbsp;<strong>TC</strong>(&lt;=50), denoting the number of test cases.<br />Each case starts with N and M, denoting respectively length of string and<br />total characters of string represented as integers from 1 to M. Then,follows<br />a line with space separated N integers ( each in the range 1 to M ).</p>\n<div id=\"_mcePaste\">Input starts with an integer TC(&lt;=50), denoting the number of test cases.Each case starts with a string S.</div>\n<div id=\"_mcePaste\">All characters in string will consists of only lowercase letters of English alphabets.</div>\n<h3>Output</h3>\n<p>For each case, print the case number and total lengths of all WOW substrings of given string modulo&nbsp;<strong>100007</strong>.</p>\n<p><strong>Constraints:</strong></p>\n<p><strong>1&lt;=TC&lt;=50.</strong></p>\n<p><strong>1&lt;=N&lt;=500000. (Length of string)</strong></p>\n<p><strong>1&lt;=M&lt;=1000000.(Character id range)</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p><strong>2<br /></strong><strong>3 2</strong></p>\n<p><strong>1 2 1</strong></p>\n<p><strong>4 3</strong></p>\n<p><strong>2 1 3 2</strong></p>\n<pre><strong>Output:</strong>\n<strong>Case</strong><strong>&nbsp;1: 7<br /></strong><strong>Case 2: 16</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/db62c98e-cee4-4d0b-9323-090a36d5e8e2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WOWSUBSTR2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9210"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "wpc5a-structures",
  "tags": [],
  "level": "BEGINNER",
  "title": "WPC5A - Structures",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">WPC5A - Structures</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>In the Galactical Wars happens the great event of designing a structure to honour the current generation of participants. (It is another matter that inevitably the monument is destroyed at the end of the Galactical Wars).</p>\n<p>The organizers this year do not believe that this is a good event, and have reduced the event to building a right structure : a&nbsp;<strong>right-angled</strong>&nbsp;triangle that represents the geometry of the universe. Further they have given a specific&nbsp;<strong>Odd Integer</strong>&nbsp;n, which they want one of the&nbsp;<strong>Shorter</strong>&nbsp;sides of the triangle to be.</p>\n<p>The organizers in the galaxy H2 are infuriated with this high-handedness. To demonstrate their prowess in this event, they have decided to build all possible right structures. Calculate how many different right structures they can possibly build.</p>\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Input:</div>\n<div id=\"_mcePaste\">First line contains a single integer T, denoting the number of Test Cases.</div>\n<div id=\"_mcePaste\">T lines follow, each containing an odd integer &rsquo;n&rsquo; denoting the given size of a side.</div>\n<div id=\"_mcePaste\">Output:</div>\n<div id=\"_mcePaste\">T lines, each containing a single integer denoting the number of ways to form a right angled triangle with one of the smaller sides as &rsquo;n&rsquo;.</div>\n<div id=\"_mcePaste\">Constraints:</div>\n<div id=\"_mcePaste\">1 &lt;= T &lt;= 10</div>\n<div id=\"_mcePaste\">1 &lt;= n &lt;= 10^12</div>\n<div id=\"_mcePaste\">n is odd.</div>\n<div id=\"_mcePaste\">Time Limit: 1 seconds.</div>\n<div id=\"_mcePaste\">Example:</div>\n<div id=\"_mcePaste\">Input:</div>\n<div id=\"_mcePaste\">1</div>\n<div id=\"_mcePaste\">3</div>\n<div id=\"_mcePaste\">Output:</div>\n<div id=\"_mcePaste\">1</div>\n<div id=\"_mcePaste\">Explanation:&nbsp;</div>\n<div id=\"_mcePaste\">There exists only 1 right angled triangle with sides 3,4,5.</div>\n<p><strong>Input</strong>:</p>\n<p>First line contains a single integer T, denoting the number of Test Cases.</p>\n<p>T lines follow, each containing an odd integer &rsquo;n&rsquo; denoting the given size of a side.</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong>:</p>\n<p>T lines, each containing a single integer denoting the number of ways to form a right angled triangle with one of the smaller sides as &rsquo;n&rsquo;.</p>\n<p>&nbsp;</p>\n<p><strong>Constraints</strong>:</p>\n<p>1 &lt;= T &lt;= 10</p>\n<p>1 &lt;= n &lt;= 10^12</p>\n<p>n is odd.</p>\n<p>&nbsp;</p>\n<p><strong>Time Limit</strong>: 1 seconds.</p>\n<p>&nbsp;</p>\n<p><strong>Example</strong>:</p>\n<p>&nbsp;</p>\n<p><strong>Input</strong>:</p>\n<p>1</p>\n<p>3</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong>:</p>\n<p>1</p>\n<p>&nbsp;</p>\n<p><strong>Explanation</strong>:&nbsp;</p>\n<p>There exists only 1 right angled triangle with sides 3,4,5.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/62a9da15-57b6-43ea-9b1a-961a92ccc1a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WPC5Ainput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9211"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xmedian-median",
  "tags": [],
  "level": "BEGINNER",
  "title": "XMEDIAN - Median",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">XMEDIAN - Median</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Given an array x of n elements find the medians of its first k elements for each k from 1 to n inclusive. The median of an array is the middle element of that array when it is sorted. If there are an even number of elements in the array, we choose the first of the middle two elements to be the median.</p>\n<h3>Input</h3>\n<p>The first line of input contains number n (1 &lt;= n &lt;= 200000) - the amount of elements in the array. The next n lines contain the elements xi (1 &lt;= xi &lt;= 1000000).</p>\n<h3>Output</h3>\n<p>Output n integers - the medians of the first k elements of the array for each k from 1 to n inclusive.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n1\n2\n3\n4\n5\n\n<strong>Output:</strong>\n1\n1\n2\n2\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f0c65e7d-6e33-4d23-a58c-4484eac7b2d2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "XMEDIANinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9212"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "yaxs-yet-another-xor-sequence",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "YAXS - Yet Another Xor Sequence",
  "content": "<h2 style=\"font-weight: 500;\">YAXS - Yet Another Xor Sequence</h2>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">Fizz have an array&nbsp;</span><em><span style=\"font-weight: 400;\">A</span></em><span style=\"font-weight: 400;\">&nbsp;of n integers which ranges between [1,5] inclusive. Let</span><em><span style=\"font-weight: 400;\">&nbsp;f(i)</span></em><span style=\"font-weight: 400;\">&nbsp;denote number of times&nbsp;</span><em><span style=\"font-weight: 400;\">i</span></em><span style=\"font-weight: 400;\">&nbsp;occurs in the array.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">Fizz wants to maximize the value of max(f(1),f(2),f(3),f(4),f(5)). &nbsp;To achieve it, he can perform one operation in the array as many time as he likes.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">In each step Fizz can choose two integers A</span><span style=\"font-weight: 400;\">i</span><span style=\"font-weight: 400;\">&nbsp;and A</span><span style=\"font-weight: 400;\">j</span><span style=\"font-weight: 400;\">&nbsp;such that:</span></p>\n<p>&nbsp;</p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">i!=j</span></li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1&lt;=(A</span><span style=\"font-weight: 400;\">i</span><span style=\"font-weight: 400;\">&nbsp;&oplus; A</span><span style=\"font-weight: 400;\">j</span><span style=\"font-weight: 400;\">&nbsp;)&lt;=5 [&oplus; is the symbol for bitwise xor]</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">After choosing the integers, Fizz will remove them from the array and he will insert a new element (A</span><span style=\"font-weight: 400;\">i</span><span style=\"font-weight: 400;\">&nbsp;&oplus; A</span><span style=\"font-weight: 400;\">j</span><span style=\"font-weight: 400;\">&nbsp;).</span></p>\n<p><br /><span style=\"font-weight: 400;\">Fizz is very good in cricket &nbsp;but not so in programming, so please help him to find the maximum possible value of max(f(1),f(2),f(3),f(4),f(5)).</span></p>\n<p>&nbsp;</p>\n<p><strong>Input Format:</strong></p>\n<p><br /><span style=\"font-weight: 400;\">First line will contain an integer T(1&lt;=T&lt;=3000) denoting number of testcases. Each test case will contain two lines. First line will consist n(1&lt;=n&lt;=1000 ) and second line will consist n space separated integers between 1 to 5.</span></p>\n<p>&nbsp;</p>\n<p><strong>Output Format:</strong></p>\n<p><br /><span style=\"font-weight: 400;\">For each case, print the case number and the expected answer.</span></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"font-weight: 400;\">Sample Input:</span></strong></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">1</span></p>\n<p><span style=\"font-weight: 400;\">8</span></p>\n<p><span style=\"font-weight: 400;\">2 3 4 2 3 5 1 2</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\"><strong>Sample Output</strong></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">Case 1: 5<br /></span></p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/777b0784-6be5-494b-b2cb-23e07ae79ced",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "YAXSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9213"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "acmnb-acm",
  "tags": [],
  "level": "BEGINNER",
  "title": "ACMNB - ACM",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ACMNB - ACM</h2>\n<p>&nbsp;</p>\n<p>SuperCoders l&agrave; đội tuyển huyền thoại của trường XYZ đ&atilde; nhiều lần v&ocirc; địch cuộc thi lập tr&igrave;nh vi&ecirc;n vũ trụ ACM Universe Final. Theo thể thức cuộc thi, mỗi đội tham dự chỉ c&oacute; đ&uacute;ng&nbsp;<span id=\"MathJax-Element-1-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-1\" class=\"math\"><span id=\"MathJax-Span-2\" class=\"mrow\"><span id=\"MathJax-Span-3\" class=\"mn\">3</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">3</span></span>&nbsp;th&agrave;nh vi&ecirc;n v&agrave; được giao duy nhất một m&aacute;y t&iacute;nh, ch&iacute;nh v&igrave; vậy việc điều phối c&ocirc;ng việc v&ocirc; c&ugrave;ng quan trọng. Trong đội SuperCoders, PHUONGHD - đội trưởng - l&agrave; người nắm giữ vai tr&ograve; đ&oacute;.</p>\n<p>Đề thi ACM năm nay gồm c&oacute;&nbsp;<span id=\"MathJax-Element-2-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-4\" class=\"math\"><span id=\"MathJax-Span-5\" class=\"mrow\"><span id=\"MathJax-Span-6\" class=\"mn\">2</span><span id=\"MathJax-Span-7\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>&nbsp;b&agrave;i đ&aacute;nh số từ&nbsp;<span id=\"MathJax-Element-3-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-8\" class=\"math\"><span id=\"MathJax-Span-9\" class=\"mrow\"><span id=\"MathJax-Span-10\" class=\"mn\">1</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">1</span></span>&nbsp;tới&nbsp;<span id=\"MathJax-Element-4-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-11\" class=\"math\"><span id=\"MathJax-Span-12\" class=\"mrow\"><span id=\"MathJax-Span-13\" class=\"mn\">2</span><span id=\"MathJax-Span-14\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>. Bằng kỹ năng thiết kế thuật to&aacute;n si&ecirc;u việt, chỉ v&agrave;i gi&acirc;y sau khi đọc đề, PHUONGHD đ&atilde; c&oacute; lời giải cho cả&nbsp;<span id=\"MathJax-Element-5-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-15\" class=\"math\"><span id=\"MathJax-Span-16\" class=\"mrow\"><span id=\"MathJax-Span-17\" class=\"mn\">2</span><span id=\"MathJax-Span-18\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>&nbsp;b&agrave;i. Vấn đề c&ograve;n lại l&agrave; ph&acirc;n c&ocirc;ng hai người c&ograve;n lại lập tr&igrave;nh bởi PHUONGHD kh&ocirc;ng quen với thứ ng&ocirc;n ngữ lập tr&igrave;nh mới được đưa v&agrave;o sử dụng tại cuộc thi.</p>\n<p>Do rất hiểu hai lập tr&igrave;nh vi&ecirc;n T&iacute; v&agrave; T&egrave;o trong đội, PHUONGHD biết rằng b&agrave;i thứ&nbsp;<span id=\"MathJax-Element-6-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-19\" class=\"math\"><span id=\"MathJax-Span-20\" class=\"mrow\"><span id=\"MathJax-Span-21\" class=\"mi\">i</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">i</span></span>&nbsp;nếu giao cho T&iacute; l&agrave;m sẽ mất&nbsp;<span id=\"MathJax-Element-7-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-22\" class=\"math\"><span id=\"MathJax-Span-23\" class=\"mrow\"><span id=\"MathJax-Span-24\" class=\"msubsup\"><span id=\"MathJax-Span-25\" class=\"mi\">a</span><span id=\"MathJax-Span-26\" class=\"mi\">i</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">ai</span></span>&nbsp;gi&acirc;y, cũng b&agrave;i đ&oacute; nếu giao cho T&egrave;o sẽ mất&nbsp;<span id=\"MathJax-Element-8-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-27\" class=\"math\"><span id=\"MathJax-Span-28\" class=\"mrow\"><span id=\"MathJax-Span-29\" class=\"msubsup\"><span id=\"MathJax-Span-30\" class=\"mi\">b</span><span id=\"MathJax-Span-31\" class=\"mi\">i</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">bi</span></span>&nbsp;gi&acirc;y để ho&agrave;n th&agrave;nh&nbsp;<span id=\"MathJax-Element-9-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;&amp;#x2200;&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-32\" class=\"math\"><span id=\"MathJax-Span-33\" class=\"mrow\"><span id=\"MathJax-Span-34\" class=\"mo\">(</span><span id=\"MathJax-Span-35\" class=\"mi\">&forall;</span><span id=\"MathJax-Span-36\" class=\"mi\">i</span><span id=\"MathJax-Span-37\" class=\"mo\">:</span><span id=\"MathJax-Span-38\" class=\"mn\">1</span><span id=\"MathJax-Span-39\" class=\"mo\">&le;</span><span id=\"MathJax-Span-40\" class=\"mi\">i</span><span id=\"MathJax-Span-41\" class=\"mo\">&le;</span><span id=\"MathJax-Span-42\" class=\"mn\">2</span><span id=\"MathJax-Span-43\" class=\"mi\">n</span><span id=\"MathJax-Span-44\" class=\"mo\">)</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">(&forall;i:1&le;i&le;2n)</span></span>. Nhiệm vụ của bạn l&agrave; h&atilde;y gi&uacute;p PHUONGHD ph&acirc;n c&ocirc;ng cho hai lập tr&igrave;nh vi&ecirc;n, mỗi người l&agrave;m đ&uacute;ng&nbsp;<span id=\"MathJax-Element-10-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-45\" class=\"math\"><span id=\"MathJax-Span-46\" class=\"mrow\"><span id=\"MathJax-Span-47\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n</span></span>&nbsp;b&agrave;i sao cho tổng thời gian lập tr&igrave;nh cả&nbsp;<span id=\"MathJax-Element-11-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-48\" class=\"math\"><span id=\"MathJax-Span-49\" class=\"mrow\"><span id=\"MathJax-Span-50\" class=\"mn\">2</span><span id=\"MathJax-Span-51\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>&nbsp;b&agrave;i l&agrave; &iacute;t nhất.</p>\n<h4>Input</h4>\n<p>D&ograve;ng&nbsp;<span id=\"MathJax-Element-12-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-52\" class=\"math\"><span id=\"MathJax-Span-53\" class=\"mrow\"><span id=\"MathJax-Span-54\" class=\"mn\">1</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">1</span></span>&nbsp;chứa số nguy&ecirc;n dương&nbsp;<span id=\"MathJax-Element-13-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-55\" class=\"math\"><span id=\"MathJax-Span-56\" class=\"mrow\"><span id=\"MathJax-Span-57\" class=\"mi\">n</span><span id=\"MathJax-Span-58\" class=\"mo\">&le;</span><span id=\"MathJax-Span-59\" class=\"mn\">4</span><span id=\"MathJax-Span-60\" class=\"mo\">&sdot;</span><span id=\"MathJax-Span-61\" class=\"msubsup\"><span id=\"MathJax-Span-62\" class=\"mn\">10</span><span id=\"MathJax-Span-63\" class=\"texatom\"><span id=\"MathJax-Span-64\" class=\"mrow\"><span id=\"MathJax-Span-65\" class=\"mn\">5</span></span></span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&le;4&sdot;105</span></span></p>\n<p><span id=\"MathJax-Element-14-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-66\" class=\"math\"><span id=\"MathJax-Span-67\" class=\"mrow\"><span id=\"MathJax-Span-68\" class=\"mn\">2</span><span id=\"MathJax-Span-69\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>&nbsp;d&ograve;ng tiếp theo, d&ograve;ng thứ&nbsp;<span id=\"MathJax-Element-15-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-70\" class=\"math\"><span id=\"MathJax-Span-71\" class=\"mrow\"><span id=\"MathJax-Span-72\" class=\"mi\">i</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">i</span></span>&nbsp;chứa hai số nguy&ecirc;n dương&nbsp;<span id=\"MathJax-Element-16-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-73\" class=\"math\"><span id=\"MathJax-Span-74\" class=\"mrow\"><span id=\"MathJax-Span-75\" class=\"msubsup\"><span id=\"MathJax-Span-76\" class=\"mi\">a</span><span id=\"MathJax-Span-77\" class=\"mi\">i</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">ai</span></span>,&nbsp;<span id=\"MathJax-Element-17-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;100&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-78\" class=\"math\"><span id=\"MathJax-Span-79\" class=\"mrow\"><span id=\"MathJax-Span-80\" class=\"msubsup\"><span id=\"MathJax-Span-81\" class=\"mi\">b</span><span id=\"MathJax-Span-82\" class=\"mi\">i</span></span><span id=\"MathJax-Span-83\" class=\"mo\">&le;</span><span id=\"MathJax-Span-84\" class=\"mn\">100</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">bi&le;100</span></span>&nbsp;c&aacute;ch nhau bởi dấu c&aacute;ch</p>\n<h4>Output</h4>\n<p>Ghi ra một số nguy&ecirc;n duy nhất l&agrave; tổng thời gian lập tr&igrave;nh cả&nbsp;<span id=\"MathJax-Element-18-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-85\" class=\"math\"><span id=\"MathJax-Span-86\" class=\"mrow\"><span id=\"MathJax-Span-87\" class=\"mn\">2</span><span id=\"MathJax-Span-88\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2n</span></span>&nbsp;b&agrave;i theo phương &aacute;n ph&acirc;n c&ocirc;ng t&igrave;m được.</p>\n<h4>Giới hạn</h4>\n<p><span id=\"MathJax-Element-19-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;40&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;&amp;#x0025;&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-89\" class=\"math\"><span id=\"MathJax-Span-90\" class=\"mrow\"><span id=\"MathJax-Span-91\" class=\"mn\">40</span><span id=\"MathJax-Span-92\" class=\"mi\">%</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">40%</span></span>&nbsp;số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-20-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;1000&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-93\" class=\"math\"><span id=\"MathJax-Span-94\" class=\"mrow\"><span id=\"MathJax-Span-95\" class=\"mi\">n</span><span id=\"MathJax-Span-96\" class=\"mo\">&le;</span><span id=\"MathJax-Span-97\" class=\"mn\">1000</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&le;1000</span></span></p>\n<p><span id=\"MathJax-Element-21-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;30&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;&amp;#x0025;&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-98\" class=\"math\"><span id=\"MathJax-Span-99\" class=\"mrow\"><span id=\"MathJax-Span-100\" class=\"mn\">30</span><span id=\"MathJax-Span-101\" class=\"mi\">%</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">30%</span></span>&nbsp;số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-22-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2208;&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-102\" class=\"math\"><span id=\"MathJax-Span-103\" class=\"mrow\"><span id=\"MathJax-Span-104\" class=\"mi\">n</span><span id=\"MathJax-Span-105\" class=\"mo\">&isin;</span><span id=\"MathJax-Span-106\" class=\"mo\">[</span><span id=\"MathJax-Span-107\" class=\"msubsup\"><span id=\"MathJax-Span-108\" class=\"mn\">10</span><span id=\"MathJax-Span-109\" class=\"texatom\"><span id=\"MathJax-Span-110\" class=\"mrow\"><span id=\"MathJax-Span-111\" class=\"mn\">4</span></span></span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&isin;[104</span></span>,&nbsp;<span id=\"MathJax-Element-23-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-112\" class=\"math\"><span id=\"MathJax-Span-113\" class=\"mrow\"><span id=\"MathJax-Span-114\" class=\"msubsup\"><span id=\"MathJax-Span-115\" class=\"mn\">10</span><span id=\"MathJax-Span-116\" class=\"texatom\"><span id=\"MathJax-Span-117\" class=\"mrow\"><span id=\"MathJax-Span-118\" class=\"mn\">5</span></span></span></span><span id=\"MathJax-Span-119\" class=\"mo\">]</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">105]</span></span></p>\n<p><span id=\"MathJax-Element-24-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;30&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;&amp;#x0025;&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-120\" class=\"math\"><span id=\"MathJax-Span-121\" class=\"mrow\"><span id=\"MathJax-Span-122\" class=\"mn\">30</span><span id=\"MathJax-Span-123\" class=\"mi\">%</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">30%</span></span>&nbsp;số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-25-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2208;&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-124\" class=\"math\"><span id=\"MathJax-Span-125\" class=\"mrow\"><span id=\"MathJax-Span-126\" class=\"mi\">n</span><span id=\"MathJax-Span-127\" class=\"mo\">&isin;</span><span id=\"MathJax-Span-128\" class=\"mo\">[</span><span id=\"MathJax-Span-129\" class=\"mn\">3</span><span id=\"MathJax-Span-130\" class=\"mo\">&sdot;</span><span id=\"MathJax-Span-131\" class=\"msubsup\"><span id=\"MathJax-Span-132\" class=\"mn\">10</span><span id=\"MathJax-Span-133\" class=\"texatom\"><span id=\"MathJax-Span-134\" class=\"mrow\"><span id=\"MathJax-Span-135\" class=\"mn\">5</span></span></span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&isin;[3&sdot;105</span></span>,&nbsp;<span id=\"MathJax-Element-26-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mo&gt;&amp;#x22C5;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-136\" class=\"math\"><span id=\"MathJax-Span-137\" class=\"mrow\"><span id=\"MathJax-Span-138\" class=\"mn\">4</span><span id=\"MathJax-Span-139\" class=\"mo\">&sdot;</span><span id=\"MathJax-Span-140\" class=\"msubsup\"><span id=\"MathJax-Span-141\" class=\"mn\">10</span><span id=\"MathJax-Span-142\" class=\"texatom\"><span id=\"MathJax-Span-143\" class=\"mrow\"><span id=\"MathJax-Span-144\" class=\"mn\">5</span></span></span></span><span id=\"MathJax-Span-145\" class=\"mo\">]</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">4&sdot;105]</span></span></p>\n<h4>Sample Input</h4>\n<div class=\"copy-clipboard\"><span class=\"btn-clipboard\" title=\"Click to copy\" data-clipboard-text=\"2\n2 1\n3 2\n5 3\n1 2\n\">Copy</span></div>\n<pre><code>2\n2 1\n3 2\n5 3\n1 2\n</code></pre>\n<h4>Sample Output</h4>\n<div class=\"copy-clipboard\"><span class=\"btn-clipboard\" title=\"Click to copy\" data-clipboard-text=\"8\n\">Copy</span></div>\n<pre><code>8</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/464b4928-8a0b-48b7-996d-ac9b62c5bde7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACMNBinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9214"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "amsseq-day-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "AMSSEQ - Dãy số",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AMSSEQ - D&atilde;y số</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/amsseq\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/amsseq</a><br /><br /><br />\n<p>Cho 1 d&atilde;y số gồm N phần tử (N &le; 10000), mỗi phần tử c&oacute; 1 gi&aacute; trị nằm trong khoảng [-1000, 1000]. Ban đầu, bạn sẽ ở vị tr&iacute; &ocirc; số 0 với tổng điểm l&agrave; 0. Mỗi nước đi, người chơi c&oacute; thể di chuyển sang phải tối thiểu l&agrave; 1 bước v&agrave; tối đa l&agrave; K bước (K &le; 10) . Khi dừng lại ở 1 &ocirc; n&agrave;o đ&oacute; th&igrave; gi&aacute; trị của &ocirc; đ&oacute; sẽ được cộng v&agrave;o tổng điểm. Bạn c&oacute; thể dừng cuộc chơi bất cứ l&uacute;c n&agrave;o. H&atilde;y t&igrave;m c&aacute;ch chơi sao cho tổng điểm nhận được l&agrave; nhiều nhất.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 2 số N, K.</li>\n</ul>\n<ul>\n<li>D&ograve;ng thứ 2 chứa N số của d&atilde;y, mỗi số c&aacute;ch nhau 1 dấu c&aacute;ch. Mỗi số nằm trong khoảng [-1000, 1000]</li>\n</ul>\n<h3>Dữ liệu ra</h3>\n<ul>\n<li>Số điểm lớn nhất c&oacute; thể đạt được.</li>\n</ul>\n<p><strong>Giới hạn:</strong></p>\n<ul>\n<li>N &le;&nbsp;10000.</li>\n<li>K &le;&nbsp;10.</li>\n<li>Trong 20% số test c&oacute; N &le;&nbsp;10</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong><br />5 2<br />-2 3 -6 -4 5<br /><br /><strong>Output:</strong>\n4<br /><br /><strong>Giải th&iacute;ch:<br /></strong><strong>- </strong>Ta c&oacute; thể đi theo thứ tự 0 -&gt; 2 -&gt; 4 -&gt; 5. Số điểm đạt được l&agrave; 0 + 3 - 4 + 5 = 4.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c859248f-9893-4e4b-8561-955ebe6ccf2a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AMSSEQinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9215"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tao-mang-chua-toan-so-chan",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tạo mảng chứa toàn số chẵn",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An tạo một mảng số nguy&ecirc;n c&oacute; dộ d&agrave;i n chứa to&agrave;n số chẵn, với n l&agrave; độ d&agrave;i mảng m&agrave; An An mong muốn.</p>\n<p>INPUT</p>\n<p>L&agrave; số nguy&ecirc;n dương n.</p>\n<p>OUTPUT</p>\n<p>Kết quả l&agrave; một d&atilde;y số nguy&ecirc;n c&oacute; độ d&agrave;i n chứa to&agrave;n số chẵn.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>5</p>\n<p>OUTPUT:</p>\n<p>20 22 -48 50 100</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1eb7516e-ef25-471a-8d97-c9f464efeb16",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MangChaninput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9216"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tao-mang-chua-so-chan-le-xen-ke",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tạo mảng chứa số chẵn lẻ xen kẻ",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An tạo một mảng số nguy&ecirc;n c&oacute; độ d&agrave;i n chứa số chẵn, lẻ xen ke nhau với n l&agrave; độ d&agrave;i mảng m&agrave; An An mong muốn.</p>\n<p>Input:</p>\n<p>L&agrave; một số nguy&ecirc;n dương n.</p>\n<p>Output:</p>\n<p>L&agrave; một mảng số nguy&ecirc;n c&oacute; độ d&agrave;i n chứa số chẵn, lẻ xen kẻ.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:</p>\n<p>8</p>\n<p>OUTPUT:</p>\n<p>94 -41 0 -87 22 99 -60 5</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/45cec0a8-40e2-4531-9d23-52ab2d402413",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MangChanLEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9217"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-trong-mang-so-nguyen-co-chu-so-dau-la-chu-so-le",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử trong mảng số nguyên có chữ số đầu là chữ số lẻ.",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử trong mảng số nguy&ecirc;n c&oacute; chữ số đầu l&agrave; chữ số lẻ.</p>\n<p>Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:</p>\n<p>Kết quả l&agrave; c&aacute;c phần tử trong mảng c&oacute; chữ số đầu l&agrave; chữ số lẻ.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />5<br />74 -74 3 21 25&nbsp;</p>\n<p>OUTPUT:<br />74 -74 3</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c4460332-b2d1-498d-82ce-842537d925c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ChuSoDauLeinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9218"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-cuc-tri-trong-mang-so-nguyen-va-tinh-tong-cac-phan-tu-do",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử cực trị trong mảng số nguyên và tính tổng các phần tử đó",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử cực trị trong mảng số nguy&ecirc;n v&agrave; t&iacute;nh tổng c&aacute;c phần tử đ&oacute;.</p>\n<p>Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; c&aacute;c phần tử cực trị trong mảng.<br />D&ograve;ng thứ hai l&agrave; tổng c&aacute;c phần tử cực trị.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />8<br />48 -48 64 19 -30 97 -79 68&nbsp;</p>\n<p>OUTPUT:<br />48 -48 64 -30 97 -79 68<br />120</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8fecb5ce-8450-497d-b68c-394afd61b502",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CucTriinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9219"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-phan-tu-co-xuat-hien-nhieu-nhat-trong-mang",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm phần tử có xuất hiện nhiều nhất trong mảng",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m phần tử c&oacute; xuất hiện nhiều nhất trong mảng, nếu c&oacute; nhiều phần tử c&ugrave;ng tần số xuất hiện nhiều nhất th&igrave; xuất hết c&aacute;c phần tử đ&oacute;.</p>\n<p>Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; phần tử c&oacute; xuất hiện nhiều nhất trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />17<br />-80 10 -11 -62 10 -7 94 38 -36 -43 61 0 43 -33 20 -99 -60&nbsp;</p>\n<p>OUTPUT:<br />10</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/403330bd-0c14-4f9f-bbe2-589e510ea6b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TanSuatMAXtinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-phan-tu-co-xuat-hien-it-nhat-trong-mang",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm phần tử có xuất hiện ít nhất trong mảng",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m phần tử c&oacute; xuất hiện &iacute;t nhất trong mảng, nếu c&oacute; nhiều phần tử c&ugrave;ng tần số xuất hiện &iacute;t nhất th&igrave; xuất hết c&aacute;c phần tử đ&oacute;.</p>\n<p>Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; phần tử c&oacute; xuất hiện &iacute;t nhất trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />7<br />-52 -45 76 -10 30 12 30&nbsp;</p>\n<p>OUTPUT:<br />-52 -45 76 -10 12</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3cbab62a-d870-43cd-ad89-fc9d85764b29",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TanSuatMINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dem-so-lan-xuat-hien-cua-cac-phan-tu-trong-mang",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đếm số lần xuất hiện của các phần tử trong mảng",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An đếm số lần xuất hiện của c&aacute;c phần tử trong mảng, nếu phần tử n&agrave;o c&oacute; nhiều hơn một lần xuất hiện th&igrave; chỉ xuất tần suất 1 lần.<br />Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả, mỗi d&ograve;ng l&agrave; số lần xuất hiện của mỗi phần tử trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />14<br />-85 67 -50 -86 -23 37 32 -33 52 -60 -93 33 93 32&nbsp;</p>\n<p>OUTPUT:<br />Tan xuat -85: 1<br />Tan xuat 67: 1<br />Tan xuat -50: 1<br />Tan xuat -86: 1<br />Tan xuat -23: 1<br />Tan xuat 37: 1<br />Tan xuat 32: 2<br />Tan xuat -33: 1<br />Tan xuat 52: 1<br />Tan xuat -60: 1<br />Tan xuat -93: 1<br />Tan xuat 33: 1<br />Tan xuat 93: 1</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a7200641-9002-4b01-843e-9cf81499af61",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TanSuatinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-mang-con-giam-dai-nhat-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm mảng con giảm dài nhất trong mảng số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m mảng con giảm d&agrave;i nhất trong mảng số nguy&ecirc;n.<br />Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng con giảm d&agrave;i nhất trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />18<br />-63 21 -38 21 -54 -74 43 100 29 25 42 -82 -36 45 24 -25 -31 -29&nbsp;</p>\n<p>OUTPUT:<br />45 24 -25 -31</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c6ceade3-cfdd-463e-8ac0-a8186eed6962",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MangConGiamDaiNhatinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-mang-so-nguyen-co-cac-so-chan-tang-dan-cac-so-le-giam-dan",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp mảng số nguyên có các số chẵn tăng dần, các số lẻ giảm dần.",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An sắp xếp mảng số nguy&ecirc;n sao cho c&aacute;c số chẵn tăng dần, c&aacute;c số lẻ giảm dần.<br />Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng số nguy&ecirc;n đ&atilde; được sắp xếp c&aacute;c số chẵn tăng dần, c&aacute;c số lẻ giảm dần.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />6<br />-84 -34 -57 37 98 13&nbsp;</p>\n<p>OUTPUT:<br />-84 -34 37 13 98 -57</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f1421335-c5c7-4913-9679-2ee63833a1e4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SapXepChanTangLeGiaminput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "xoa-so-chan-thu-hai-trong-mang-tinh-tu-dau-day",
  "tags": [],
  "level": "BEGINNER",
  "title": "Xóa số chẵn thứ hai trong mảng tính từ đầu dãy",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An x&oacute;a số chẵn thứ hai trong mảng t&iacute;nh từ đầu d&atilde;y.</p>\n<p>Input:<br />Bao gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng số nguy&ecirc;n đ&atilde; x&oacute;a số chẵn thứ hai trong mảng t&iacute;nh từ đầu d&atilde;y.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />6<br />-84 -34 -57 37 98 13&nbsp;</p>\n<p>OUTPUT:<br />-84 -57 37 98 13&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d8dd275d-985d-483b-b7ac-a876a27dd231",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "XoaChan2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef921f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "them-vao-day-so-x-ngay-truoc-so-le-nho-nhat-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Thêm vào dãy số x ngay trước số lẻ nhỏ nhất trong mảng số nguyên.",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An th&ecirc;m v&agrave;o d&atilde;y số x ngay trước số lẻ nhỏ nhất trong mảng số nguy&ecirc;n.</p>\n<p>Input:<br />Bao gồm 4d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương m l&agrave; độ d&agrave;i của mảng x.<br />D&ograve;ng thứ hai gồm m số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng số nguy&ecirc;n đ&atilde; th&ecirc;m v&agrave;o d&atilde;y số x ngay trước số lẻ nhỏ nhất trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />14<br />89 -55 100 15 3 -73 -63 1 89 50 -25 -73 35 87&nbsp;<br />11<br />31 -22 -66 -76 -95 14 93 -40 -51 -92 47&nbsp;</p>\n<p>OUTPUT:<br />89 -55 100 15 3 31 -22 -66 -76 -95 14 93 -40 -51 -92 47 -73 -63 1 89 50 -25 -73 35 87</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5222a22c-32d5-479f-a3bd-5e7c76f2b1b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ThemDayXTruocMinLeinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9220"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-so-chan-nho-thu-hai-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm số chẵn nhỏ thứ hai trong mảng số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m số chẵn nhỏ thứ hai trong mảng số nguy&ecirc;n.</p>\n<p>Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; số chẵn nhỏ thứ 2 trong mảng.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />14<br />89 -55 100 15 3 -73 -63 1 89 50 -25 -73 35 87&nbsp;</p>\n<p>OUTPUT:<br />50</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/26358759-e3e8-42ca-8b35-1365a178ef3f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ChanMin2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9221"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-cac-phan-tu-chan-tang-dan-cac-phan-tu-le-giu-nguyen-vi-tri-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp các phần tử chẳn tăng dần, các phần tử lẻ giữ nguyên vị trí trong mảng số nguyên.",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An sắp xếp c&aacute;c phần tử chẳn tăng dần, c&aacute;c phần tử lẻ giữ nguy&ecirc;n vị tr&iacute; trong mảng số nguy&ecirc;n.</p>\n<p>Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng đ&atilde; sắp xếp c&aacute;c phần tử chẳn tăng dần, c&aacute;c phần tử lẻ giữ nguy&ecirc;n vị tr&iacute;.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />9<br />-34 34 99 -98 -45 96 52 54 -84&nbsp;</p>\n<p>OUTPUT:<br />-98 -84 99 -34 -45 34 52 54 96</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b4a2361f-427a-4315-9988-40b4c4fb94ca",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ChanTanginput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9222"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kiem-tra-mang-da-cho-co-phai-la-mang-giam-dan-khong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra mảng đã cho có phải là mảng giảm dần không",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra mảng đ&atilde; cho c&oacute; phải l&agrave; mảng giảm dần kh&ocirc;ng.</p>\n<p>Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; YES nếu đ&acirc;y l&agrave; mảng giảm dần, ngược lại l&agrave; NO.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />9<br />100 98 78 42 10 8 -7 -10 -21</p>\n<p>OUTPUT:<br />YES</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ecb013b5-bca8-434c-bfd3-a0cf3d484e7d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KTMangGIaminput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9223"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-day-con-tang-dai-nhat-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm dãy con tăng dài nhất trong mảng số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m d&atilde;y con tăng d&agrave;i nhất trong mảng số nguy&ecirc;n.</p>\n<p>Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; d&atilde;y con tăng d&agrave;i nhất.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />15<br />63 -30 40 95 -51 -18 50 7 -23 32 -1 -80 -55 -33 -40&nbsp;</p>\n<p>OUTPUT:<br />-30 40 95</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/41682e0b-4060-41f4-abf7-b6e1128b7b8d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DayConTangDaiNhatinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9224"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tm-vi-tri-phan-tu-chia-het-cho-3-nho-nhat-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tm vị trí phần tử chia hết cho 3 nhỏ nhất trong mảng số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m vị tr&iacute; phần tử chia hết cho 3 nhỏ nhất trong mảng số nguy&ecirc;n.</p>\n<p>Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; vị tr&iacute; phần tử chia hết cho 3 nhỏ nhất.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />9<br />96 -22 -13 81 98 64 -54 -100 5&nbsp;</p>\n<p>OUTPUT:<br />6</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/150f4f41-cd75-41b4-9216-e859913b2fcc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MinChiaHet3input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9225"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-cac-phan-tu-le-o-dau-phan-tu-chan-o-cuoi-trong-mang-so-nguyen",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp các phần tử lẻ ở đầu, phần tử chẵn ở cuối trong mảng số nguyên",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An sắp xếp c&aacute;c phần tử lẻ ở đầu, phần tử chẵn ở cuối trong mảng số nguy&ecirc;n.<br />Input:<br />Bao gồm 2 d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; một số nguy&ecirc;n dương n.<br />D&ograve;ng thứ hai gồm n số nguy&ecirc;n được c&aacute;ch nhau bở dấu khoảng trắng.</p>\n<p>Output:<br />Kết quả l&agrave; mảng chứa c&aacute;c phần tử lẻ ở đầu, phần tử chẵn ở cuối.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />11<br />19 100 -26 -45 -58 85 -89 43 -31 12 11&nbsp;</p>\n<p>OUTPUT:<br />-89 -45 -31 11 19 43 85 100 12 -26 -58</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ce40f719-f9be-424d-88aa-83440b4f2366",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LeDauChanCuoiinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9226"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-cuc-tri-trong-ma-tran-vuong-cap-n-va-tinh-tong-cac-phan-tu-cuc-tri-do",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử cực trị trong ma trận vuông cấp n và tính tổng các phần tử cực trị đó",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử cực trị trong ma trận vu&ocirc;ng cấp n v&agrave; t&iacute;nh tổng c&aacute;c phần tử cực trị đ&oacute;.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />Output:<br />Kết quả gồm hai d&ograve;ng:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; c&aacute;c ph&acirc;n tử cực trị<br />D&ograve;ng thứ hai l&agrave; tổng c&aacute;c phần tử cực trị đ&atilde; t&igrave;m thấy.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />93 32 10&nbsp;<br />88 74 33&nbsp;<br />29 -8 36&nbsp;</p>\n<p><br />OUTPUT:<br />93 10 -8<br />95</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/42198e5c-c637-4a6b-8e2e-a56093812612",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Xuat_TongCucTri_MTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9227"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tinh-tong-cac-phan-tu-tren-dong-k-cua-ma-tran-vuong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính tổng các phần tử trên dòng k của ma trận vuông",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&iacute;nh tổng c&aacute;c phần tử tr&ecirc;n d&ograve;ng k của ma trận vu&ocirc;ng.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo l&agrave; một số nguy&ecirc;n dương 0&lt;=k&lt;n<br />Output:<br />Kết quả l&agrave; tổng c&aacute;c phần tử tr&ecirc;n d&ograve;ng k.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />93 32 10&nbsp;<br />88 74 33&nbsp;<br />29 -8 36&nbsp;<br />1</p>\n<p>OUTPUT:<br />195</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c125f128-12be-4a81-95e7-fcf56282060c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TongDongKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9228"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-phan-tu-lon-nhat-tren-bien-cua-ma-tran-vuong-cap-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm phần tử lớn nhất trên biên của ma trận vuông cấp n",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m phần tử lớn nhất tr&ecirc;n bi&ecirc;n của ma trận vu&ocirc;ng cấp n.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả l&agrave; phần tử lớn nhất tr&ecirc;n bi&ecirc;n của ma trận.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />93 32 10&nbsp;<br />88 74 33&nbsp;<br />29 -8 36&nbsp;</p>\n<p>OUTPUT:<br />93</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/feacd6be-06bb-44b9-8594-77efb673adda",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MAXBieninput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9229"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dem-trong-ma-tran-co-bao-nhieu-phan-tu-co-chu-so-2-xuat-hien",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đếm trong ma trận có bao nhiêu phần tử có chữ số 2 xuất hiện",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An đếm trong ma trận c&oacute; bao nhi&ecirc;u phần tử c&oacute; chữ số 2 xuất hiện.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả l&agrave; số lượng phần tử c&oacute; chứa chữ số 2.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />93 32 10&nbsp;<br />88 74 33&nbsp;<br />29 -8 36&nbsp;</p>\n<p>OUTPUT:<br />2</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d2b55fdc-644d-42c9-9467-7e2cec016287",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PTChua2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-hoang-hau-trong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử hoàng hậu trong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử ho&agrave;ng hậu trong ma trận. Trong đ&oacute;, phần tử ho&agrave;ng hậu l&agrave; ph&acirc;n tử lớn nhất trong d&ograve;ng v&agrave; cột chứa phần tử đ&oacute; v&agrave; đồng thời cũng l&agrave; phần tử lớn nhất trong hai đường ch&eacute;o đi qua phần tử n&agrave;y.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả l&agrave; c&aacute;c phần tử ho&agrave;ng hậu trong ma trận.</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />93 32 10&nbsp;<br />88 74 33&nbsp;<br />29 -8 36&nbsp;</p>\n<p>OUTPUT:<br />93</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0e88ec9a-b865-4aa6-b0f4-138c376c0463",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ptHoangHauinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-phan-tu-yen-ngua-trong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm phần tử yên ngựa trong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m phần tử y&ecirc;n ngựa trong ma trận. Trong đ&oacute;, phần tử y&ecirc;n ngựa l&agrave; phần tử lớn nhất trong cột v&agrave; nhỏ nhất trong h&agrave;ng chứa n&oacute; hoặc l&agrave; phần tử nhỏ nhất trong cột v&agrave; lớn nhất trong h&agrave;ng chứa n&oacute;.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Nếu tồn tại ph&acirc;n tử y&ecirc;n ngựa trong ma trận th&igrave; xuất hết c&aacute;c phần tử đ&oacute;, ngược lại trả về NO</p>\n<p><br />V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />-28 90 80&nbsp;<br />-98 66 2&nbsp;<br />45 73 76&nbsp;</p>\n<p>OUTPUT:<br />66 45</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c07890c8-d3b0-4f07-adcc-85137375d8bc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ptYenNguainput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kiem-tra-ma-tran-co-toan-duong-hay-khong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra ma trận có toàn dương hay không",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra ma trận c&oacute; to&agrave;n dương hay kh&ocirc;ng.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về YES nếu ma trận to&agrave;n dương, ngược lại trả về NO</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />3<br />-28 90 80&nbsp;<br />-98 66 2&nbsp;<br />45 73 76&nbsp;</p>\n<p>OUTPUT:<br />NO</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/95a5b9c6-56aa-457c-9ba3-d2889d270370",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ktToanDuonginput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-cac-phan-tu-tren-duong-cheo-chinh-tang-dan-trong-ma-tran-vuong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp các phần tử trên đường chéo chính tăng dần trong ma trận vuông",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An sắp xếp c&aacute;c phần tử tr&ecirc;n đường ch&eacute;o ch&iacute;nh tăng dần trong ma trận vu&ocirc;ng cấp n.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả l&agrave; trận đ&atilde; được sắp xếp.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;</p>\n<p>OUTPUT:<br />5 24 17 91<br />91 71 70 12<br />29 35 85 45<br />29 89 16 99</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2d51c017-f3d8-48fb-be40-e1d218da6958",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "sxDuongCheoChinhinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-nam-tren-duong-cheo-song-song-voi-duong-cheo-chinh-va-chua-aij-cho-truoc-trong-ma-tran-vuong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử nằm trên đường chéo song song với đường chéo chính và chứa a[i][j] cho trước trong ma trận vuông",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử nằm tr&ecirc;n đường ch&eacute;o song song với đường ch&eacute;o ch&iacute;nh v&agrave; chứa a[i][j] cho trước trong ma trận vu&ocirc;ng.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo chứa hai số nguy&ecirc;n dương i, j l&agrave; vị tr&iacute; của phần tử a[i][j] trong ma trận.<br />Output:<br />Kết quả l&agrave; c&aacute;c phần tử nằm tr&ecirc;n đường ch&eacute;o song song với đường ch&eacute;o ch&iacute;nh v&agrave; chứa a[i][j] cho trước.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;<br />2 1<br />OUTPUT:<br />91 35 16</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/478bde51-c7bd-421c-bf82-b4315f35368b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DuongCheoSongSongChinhinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef922f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-cac-phan-tu-nam-tren-duong-cheo-song-song-voi-duong-cheo-phu-va-chua-aij-cho-truoc",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm các phần tử nằm trên đường chéo song song với đường chéo phụ và chứa a[i][j] cho trước",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m c&aacute;c phần tử nằm tr&ecirc;n đường ch&eacute;o song song với đường ch&eacute;o phụ v&agrave; chứa a[i][j] cho trước trong ma trận vu&ocirc;ng.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo chứa hai số nguy&ecirc;n dương i, j l&agrave; vị tr&iacute; của phần tử a[i][j] trong ma trận.<br />Output:<br />Kết quả l&agrave; c&aacute;c phần tử nằm tr&ecirc;n đường ch&eacute;o song song với đường ch&eacute;o phụ v&agrave; chứa a[i][j] cho trước.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;<br />2 2<br />OUTPUT:<br />12 5 89</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a309f032-2943-4c14-bb57-0a876fdbfc5d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SongSongCheoPhuinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9230"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kiem-tra-dong-k-trong-ma-tran-tang-dan-hay-khong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra dòng k trong ma trận tăng dần hay không",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra d&ograve;ng k trong ma trận tăng dần hay kh&ocirc;ng.<br />Input:<br />D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo chứa số nguy&ecirc;n dương k.<br />Output:<br />Kết quả trả về YES nếu d&ograve;ng k tăng dần, ngược lại trả về NO.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;<br />2<br />OUTPUT:<br />NO</p>\n<p>INPUT:<br />4<br />711 24 117 91&nbsp;<br />91 99 170 212&nbsp;<br />29 345 5 45&nbsp;<br />29 849 16 845&nbsp;<br />1<br />OUTPUT:<br />YES</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a227855d-421b-4106-a506-bf42502c8a03",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ktDongTanginput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9231"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kiem-tra-cot-k-trong-ma-tran-giam-dan-hay-khong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra cột k trong ma trận giảm dần hay không",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra cột k trong ma trận giảm dần hay kh&ocirc;ng.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />cột tiếp theo chứa số nguy&ecirc;n dương k.<br />Output:<br />Kết quả trả về YES nếu cột k giảm dần, ngược lại trả về NO.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;<br />2<br />OUTPUT:<br />NO</p>\n<p>INPUT:<br />4<br />711 849 117 91&nbsp;<br />91 345170 212&nbsp;<br />29 99 5 45&nbsp;<br />29 24 16 845&nbsp;<br />1<br />OUTPUT:<br />YES</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f52801c9-07c5-4055-951a-f17a8af364ca",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ktCotGiamDaninput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9232"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kiem-tra-ma-tran-giam-dan-hay-khong",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra ma trận giảm dần hay không",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An kiểm tra ma trận giảm dần hay kh&ocirc;ng.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về YES nếu ma trận giảm dần, ngược lại trả về NO.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />91 99 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;</p>\n<p>OUTPUT:<br />NO</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/577156fe-381e-46e2-b920-2a01a99eb50c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ktMTGIaminput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9233"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tiem-kiem-trong-ma-tran-cac-dong-chua-toan-gia-tri-chan",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tiềm kiếm trong ma trận các dòng chứa toàn giá trị chẵn",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An tiềm kiếm trong ma trận c&aacute;c d&ograve;ng chứa to&agrave;n gi&aacute; trị chẵn.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về chỉ số d&ograve;ng chứa to&agrave;n gi&aacute; trị chẵn, nếu kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o trả về NO.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />90 98 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;</p>\n<p>OUTPUT:<br />1</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1ca19096-d87d-4d5f-9ff2-4ee944c4f400",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TimDongToanChaninput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9234"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tiem-kiem-trong-ma-tran-cac-dong-chua-gia-tri-giam-dan",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tiềm kiếm trong ma trận các dòng chứa giá trị giảm dần",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An tiềm kiếm trong ma trận c&aacute;c d&ograve;ng chứa gi&aacute; trị giảm dần.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về chỉ số d&ograve;ng chứa gi&aacute; trị giảm dần, nếu kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o trả về NO.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />71 24 17 91&nbsp;<br />90 88 70 12&nbsp;<br />29 35 5 45&nbsp;<br />29 89 16 85&nbsp;</p>\n<p>OUTPUT:<br />90 88 70 12&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/04bfbb92-1e6c-4c12-afa6-a10f643e8baf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "dongGiamDaninput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9235"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tiem-kiem-chu-so-xuat-hien-nhieu-nhat-trong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tiềm kiếm chữ số xuất hiện nhiều nhất trong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An tiềm kiếm chữ số xuất hiện nhiều nhất trong ma trận.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về l&agrave; chữ số xuất hiện nhiều nhất trong ma trận.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />6<br />57 37 72 61 69 24&nbsp;<br />97 66 80 13 38 98&nbsp;<br />58 18 27 13 61 66&nbsp;<br />89 76 89 90 0 8&nbsp;<br />58 18 61 14 76 71&nbsp;<br />56 35 11 55 75 53&nbsp;</p>\n<p>OUTPUT:<br />8</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/31b6d007-e19b-48a2-9b30-985fc1e270bd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ChuSoTSMaxinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9236"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tim-trong-ma-tran-cot-co-tong-nho-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm trong ma trận cột có tổng nhỏ nhất",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An t&igrave;m trong ma trận cột c&oacute; tổng nhỏ nhất.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về c&aacute;c phần tử trong cột c&oacute; tổng nhỏ nhất trong ma trận.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />4<br />29 60 84 93&nbsp;<br />0 43 49 15&nbsp;<br />87 68 89 44&nbsp;<br />21 6 17 79&nbsp;</p>\n<p>OUTPUT:<br />29 0 87 21</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ff94821c-31e7-4841-aa87-cb889334f8c7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CotTongMininput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9237"
  },
  "memoryLimit": 1,
  "source": 0,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hoan-vi-gia-tri-hai-cot-i-j-tong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Hoán vị giá trị hai cột i, j tong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An ho&aacute;n vị gi&aacute; trị hai cột i, j tong ma trận.<br />Input:<br />cột đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n cột tiếp theo mỗi cột gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo chứa hai số nguy&ecirc;n dương i, j nhỏ hơn n.<br />Output:<br />Kết quả trả về l&agrave; ma trận đ&atilde; được ho&aacute;n vị gi&aacute; trị hai cột i, j.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />7<br />35 84 99 95 56 14 86&nbsp;<br />47 13 71 47 76 91 70&nbsp;<br />4 18 54 86 20 90 62&nbsp;<br />32 21 56 19 27 11 9&nbsp;<br />16 43 90 31 74 44 26&nbsp;<br />23 62 49 13 40 93 31&nbsp;<br />49 79 75 2 38 96 46&nbsp;<br />5 3</p>\n<p>OUTPUT:<br />35 84 99 14 56 95 86<br />47 13 71 91 76 47 70<br />4 18 54 90 20 86 62<br />32 21 56 11 27 19 9<br />16 43 90 44 74 31 26<br />23 62 49 93 40 13 31<br />49 79 75 96 38 2 46</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d1bf1b5a-f423-452b-b6c5-3487210e191b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "hoanViHaiCotinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9238"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hoan-vi-gia-tri-hai-dong-i-j-tong-ma-tran",
  "tags": [],
  "level": "BEGINNER",
  "title": "Hoán vị giá trị hai dòng i, j tong ma trận",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An ho&aacute;n vị gi&aacute; trị hai d&ograve;ng i, j tong ma trận.<br />Input:<br />d&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.<br />D&ograve;ng tiếp theo chứa hai số nguy&ecirc;n dương i, j nhỏ hơn n.<br />Output:<br />Kết quả trả về l&agrave; ma trận đ&atilde; được ho&aacute;n vị gi&aacute; trị hai d&ograve;ng i, j.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />7<br />35 84 99 95 56 14 86&nbsp;<br />47 13 71 47 76 91 70&nbsp;<br />4 18 54 86 20 90 62&nbsp;<br />32 21 56 19 27 11 9&nbsp;<br />16 43 90 31 74 44 26&nbsp;<br />23 62 49 13 40 93 31&nbsp;<br />49 79 75 2 38 96 46&nbsp;<br />5 3</p>\n<p>OUTPUT:<br />35 84 99 95 56 14 86&nbsp;<br />47 13 71 47 76 91 70&nbsp;<br />4 18 54 86 20 90 62&nbsp;<br />23 62 49 13 40 93 31&nbsp;<br />16 43 90 31 74 44 26&nbsp;<br />32 21 56 19 27 11 9&nbsp;<br />49 79 75 2 38 96 46&nbsp;</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/62457aed-75c5-4f21-a30c-82c13f7ec326",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "hoanViHaiDonginput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9239"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "sap-xep-ma-tran-sao-cho-cac-phan-tu-tren-duong-cheo-chinh-va-cac-duong-cheo-song-song-duong-cheo-chinh-tang-dan",
  "tags": [],
  "level": "BEGINNER",
  "title": "Sắp xếp ma trận sao cho các phần tử trên đường chéo chính và các đường chéo song song đường chéo chính tăng dần",
  "content": "<p>Viết chương tr&igrave;nh gi&uacute;p An An sắp xếp ma trận sao cho c&aacute;c phần tử tr&ecirc;n đường ch&eacute;o ch&iacute;nh v&agrave; c&aacute;c đường ch&eacute;o song song đường ch&eacute;o ch&iacute;nh tăng dần.<br />Input:<br />d&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương n l&agrave; cấp của ma trận.<br />n d&ograve;ng tiếp theo mỗi d&ograve;ng gồm n số nguy&ecirc;n được c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<p>Output:<br />Kết quả trả về l&agrave; ma trận đ&atilde; được sắp xếp theo y&ecirc;u cầu.</p>\n<p>V&iacute; dụ:</p>\n<p>INPUT:<br />6<br />43 55 90 13 52 42&nbsp;<br />23 40 25 16 43 1&nbsp;<br />63 19 37 97 63 88&nbsp;<br />87 90 91 94 46 5&nbsp;<br />19 36 4 7 68 73&nbsp;<br />98 30 19 19 88 50&nbsp;<br />5 3</p>\n<p>OUTPUT:<br />37 25 5 13 1 42<br />7 40 46 16 43 52<br />4 19 43 55 63 88<br />19 19 23 50 73 90<br />19 36 63 88 68 97<br />98 30 87 90 91 94</p>\n<p>&nbsp;</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b80b99eb-6a2b-4eb6-850b-dbd8946bdc35",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "sxTheoCheoChinhinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "assign1-phan-cong-hoan-thanh-som-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ASSIGN1 - Phân công hoàn thành sớm nhất",
  "content": "<h2 id=\"problem-name\" class=\"text-center\"><span>ASSIGN1 - Ph&acirc;n c&ocirc;ng hoàn thành sớm nh&acirc;́t</span></h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em><span>Kh&ocirc;ng c&oacute; thẻ</span></em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\"><span>Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;</span><a href=\"https://oj.vnoi.info/problem/assign1\" target=\"_blank\" rel=\"noopener\"><span>https://oj.vnoi.info/problem/assign1</span></a><br /><br /><br />\n<p><span>C&oacute; n người, n việc (1 &lt; n &le; 200). Người thứ i thực hiện c&ocirc;ng vi&ecirc;c j mất C[i,j] đơn vị thời gian. Giả sử tất cả bắt đầu v&agrave;o thời điểm 0, h&atilde;y t&igrave;m c&aacute;ch bố tr&iacute; mỗi c&ocirc;ng việc cho mỗi người sao cho thời điểm ho&agrave;n th&agrave;nh c&ocirc;ng việc l&agrave; sớm nhất c&oacute; thể.</span></p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p><span>- D&ograve;ng đầu: N</span><br /><span>- Tiếp theo l&agrave; ma trận C[i,j]. (thuộc kiểu Integer)</span></p>\n<h3><span>Đầu ra</span></h3>\n<p><span>- Ghi thời điểm sớm nhất ho&agrave;n th&agrave;nh.</span></p>\n<h3><span>Th&iacute; dụ</span></h3>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span> \n4 </span><span>\n10 10 10 2 </span><span>\n10 10 3 10 </span><span>\n4 10 10 10 </span><span>\n10 5 10 10 <br /><strong>Đầu ra:</strong> \n5</span></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/af8d917c-4346-411e-94ea-a03362b38034",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ASSIGN1 input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "auction-going-once-going-twice-gone",
  "tags": [],
  "level": "BEGINNER",
  "title": "AUCTION - Going Once, Going Twice, Gone!",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">AUCTION - Going Once, Going Twice, Gone!</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/auction\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/auction</a><br /><br /><br />\n<p>Chế độ ăn ki&ecirc;ng của đ&agrave;n b&ograve; khiến cho n&ocirc;ng trang của n&ocirc;ng d&acirc;n John d&ocirc;i ra 1 số lượng cỏ kh&ocirc;, v&igrave; vậy anh ta muốn b&aacute;n đấu gi&aacute; số cỏ kh&ocirc; n&agrave;y để trang trải phần n&agrave;o chi ph&iacute; chăn nu&ocirc;i. Anh ta c&oacute; N (1 &lt;= N &lt;= 1,000) b&oacute; cỏ kh&ocirc; giống nhau; kh&aacute;ch h&agrave;ng sẽ đấu gi&aacute; để mua đống cỏ n&agrave;y l&agrave; M (1 &lt;= M &lt;= 1,000) n&ocirc;ng d&acirc;n kh&aacute;c sống gần đ&oacute;.</p>\n<p>Mỗi một n&ocirc;ng d&acirc;n i sẽ cho n&ocirc;ng d&acirc;n John biết anh ta sẵn s&agrave;ng trả P_i (1 &lt;= P_i &lt;= 1,000,000) đồng cho 1 b&oacute; cỏ kh&ocirc;. Mỗi một n&ocirc;ng d&acirc;n chỉ muốn mua 1 b&oacute; cỏ kh&ocirc; m&agrave; th&ocirc;i.</p>\n<p>Để đảm bảo c&aacute;c n&ocirc;ng d&acirc;n kh&ocirc;ng ghen tị với nhau, n&ocirc;ng d&acirc;n John sẽ đưa ra 1 mức gi&aacute; cố định cho tất cả người đến mua v&agrave; b&aacute;n c&aacute;c b&oacute; cỏ kh&ocirc; cho những ai trả gi&aacute; &gt;= mức gi&aacute; đ&oacute;, những người c&ograve;n lại sẽ bị từ chối giao dịch.</p>\n<p>H&atilde;y gi&uacute;p n&ocirc;ng d&acirc;n John t&iacute;nh xem đặt mức gi&aacute; nhỏ nhất l&agrave; bao nhi&ecirc;u để thu được nhiều tiền nhất c&oacute; thể.</p>\n<h3>Dữ liệu</h3>\n<p>* D&ograve;ng 1: Hai số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; M</p>\n<p>* D&ograve;ng 2..M+1: D&ograve;ng i+1 chứa 1 số nguy&ecirc;n duy nhất: P_i</p>\n<h3>Kết quả</h3>\n<p>* D&ograve;ng 1: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: gi&aacute; b&aacute;n của John v&agrave; số tiền m&agrave; John thu được</p>\n<h3>V&iacute; dụ</h3>\n<pre>Dữ liệu:\n5 4\n2\n8\n10\n7\n\nKết quả:\n7 21</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/982e2971-29df-41b6-ad6d-c90a5a9678a5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "AUCTIONinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "baseh-co-so-h",
  "tags": [],
  "level": "BEGINNER",
  "title": "BASEH - Cơ số H",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BASEH - Cơ số H</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Cho một d&atilde;y số a[1],a[2],a[3],...,a[n] v&agrave; hai số K,H được x&aacute;c định như sau:</p>\n<ul>\n<li>a[1]=1;</li>\n<li>Nếu K chẵn th&igrave; a[K]=H*a[K/2].</li>\n<li>Nếu K lẻ th&igrave; a[K]=H*a[(K-1)/2]+1.</li>\n</ul>\n<p>C&aacute;c bạn h&atilde;y lập tr&igrave;nh t&iacute;nh số thứ K của d&atilde;y viết trong hệ cơ số H.</p>\n<h3>Input</h3>\n<ul>\n<li>Gồm một d&ograve;ng duy nhất chứa 2 số K,H.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>In ra số duy nhất l&agrave; kết quả b&agrave;i to&aacute;n.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>0&lt; K &lt;=1000000000.</li>\n<li>0=&lt; H &lt;=2008.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input</strong>\n7 110\n<strong>Output</strong>\n111</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ca9b5f47-c7b0-43bf-8e49-aed7e7b8b601",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BASEHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bcdiv-chia-nhom",
  "tags": [],
  "level": "BEGINNER",
  "title": "BCDIV - Chia nhóm",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BCDIV - Chia nh&oacute;m</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Một h&ocirc;m trời nắng n&oacute;ng bức, Ch&iacute; Ph&egrave;o nh&agrave; ta lại đến nh&agrave; B&aacute; kiến đ&ograve;i tiền mua rượu. O&aacute;i oăm thay, t&ecirc;n B&aacute; Kiến keo kiệt h&ocirc;m nay lại dở chứng bắt Ch&iacute; phải thực hiện y&ecirc;u cầu của m&igrave;nh rồi mới cho tiền. Ch&iacute; tức tối lắm nhưng v&igrave; qu&aacute; ghiền rượu n&ecirc;n hắn đ&agrave;nh phải chấp nhận điều kiện m&agrave; cụ thể l&agrave; giải 1 b&agrave;i to&aacute;n.</p>\n<p>B&agrave;i to&aacute;n c&oacute; nội dung như sau :<br />Cho n phần tử kh&aacute;c nhau, hỏi c&oacute; bao nhi&ecirc;u c&aacute;ch chia n phần tử đ&oacute; th&agrave;nh k nh&oacute;m m&agrave; mỗi nh&oacute;m c&oacute; &iacute;t nhất 1 phần tử (c&aacute;c ho&aacute;n vị của c&aacute;c nh&oacute;m được xem l&agrave; 1 c&aacute;ch).</p>\n<p>V&igrave; thất học n&ecirc;n Ch&iacute; nghĩ m&atilde;i kh&ocirc;ng ra, c&aacute;c bạn gi&uacute;p Ch&iacute; 1 tay nh&eacute;, kh&ocirc;ng th&igrave; hắn ta chết v&igrave; th&egrave;m rượu mất ^^</p>\n<p><strong>Dữ liệu v&agrave;o :</strong><br />D&ograve;ng đầu ti&ecirc;n chứa số T l&agrave; số test.<br />T d&ograve;ng tiếp theo mỗi d&ograve;ng chứa 2 số N v&agrave; K, với 1&lt;=K&lt;=N&lt;=25<br /><strong>Dữ liệu ra :</strong><br />T d&ograve;ng, mỗi d&ograve;ng l&agrave; số c&aacute;ch với test tương ứng.</p>\n<pre><strong>Input:</strong>\n1\n4 2\n\n<strong>Output:</strong>\n7\n</pre>\n<p>Giải th&iacute;ch : 7 c&aacute;ch chia đ&oacute; l&agrave; (ABC)(D) , (ABD)(C) , (ADC)(B) , (DBC)(A) , (AB)(CD) , (AC)(BD) , (BC)(AD)</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6c7114ea-0895-40ce-a446-e2d5dcfff3bc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BCDIVinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "beadsnb-beads",
  "tags": [],
  "level": "BEGINNER",
  "title": "BEADSNB - Beads",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BEADSNB - Beads</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>Biển Đ&agrave; Nẵng được nhiều du kh&aacute;ch biết đến như một trong những điểm nghỉ ngơi l&yacute; tưởng v&agrave; được tạp ch&iacute; Forbes (Mỹ) b&igrave;nh chọn l&agrave; một trong những b&atilde;i biển đẹp nhất thế giới. C&aacute;c b&atilde;i tắm c&oacute; độ dốc lớn, nước trong xanh th&iacute;ch hợp cho những du kh&aacute;ch muốn thưởng thức c&aacute;c loại h&igrave;nh dịch vụ giải tr&iacute; nghỉ dưỡng, c&acirc;u c&aacute;, lướt v&aacute;n, lặn ngắm san h&ocirc;, du thuyền,..</p>\n<p>Trong một đợt đi du lịch ở Đ&agrave; Nẵng, s&aacute;ng sớm DONG3D thường đi dạo dọc bờ biển v&agrave; nhặt những vỏ ốc rồi x&acirc;u ch&uacute;ng lại th&agrave;nh một chuỗi. Nguy&ecirc;n tắc tạo chuỗi ốc của DONG3D như sau: Ban đầu từ chuỗi rỗng, kh&ocirc;ng c&oacute; vỏ ốc; khi gặp một vỏ ốc mới, c&oacute; thể lấy để x&acirc;u v&agrave;o một trong hai đầu của chuỗi hoặc hoặc bỏ đi kh&ocirc;ng lấy; cuối c&ugrave;ng nhận được một chuỗi vỏ ốc m&agrave; t&iacute;nh từ đầu chuỗi đến cuối chuỗi, c&aacute;c vỏ ốc c&oacute; k&iacute;ch thước tăng dần v&agrave; gồm c&agrave;ng nhiều vỏ ốc c&agrave;ng tốt.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho trước d&atilde;y&nbsp;<span id=\"MathJax-Element-1-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-1\" class=\"math\"><span id=\"MathJax-Span-2\" class=\"mrow\"><span id=\"MathJax-Span-3\" class=\"msubsup\"><span id=\"MathJax-Span-4\" class=\"mi\">a</span><span id=\"MathJax-Span-5\" class=\"mn\">1</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">a1</span></span>,&nbsp;<span id=\"MathJax-Element-2-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-6\" class=\"math\"><span id=\"MathJax-Span-7\" class=\"mrow\"><span id=\"MathJax-Span-8\" class=\"msubsup\"><span id=\"MathJax-Span-9\" class=\"mi\">a</span><span id=\"MathJax-Span-10\" class=\"mn\">2</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">a2</span></span>, ...,&nbsp;<span id=\"MathJax-Element-3-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-11\" class=\"math\"><span id=\"MathJax-Span-12\" class=\"mrow\"><span id=\"MathJax-Span-13\" class=\"msubsup\"><span id=\"MathJax-Span-14\" class=\"mi\">a</span><span id=\"MathJax-Span-15\" class=\"mi\">n</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">an</span></span>&nbsp;l&agrave; k&iacute;ch thước của c&aacute;c vỏ ốc m&agrave; DONG3D lần lượt gặp khi đi dọc bờ biển, h&atilde;y t&igrave;m c&aacute;ch nhặt v&agrave; x&acirc;u chuỗi để được chuỗi gồm nhiều vỏ ốc nhất</p>\n<h4>Input</h4>\n<ul>\n<li>D&ograve;ng&nbsp;<span id=\"MathJax-Element-4-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-16\" class=\"math\"><span id=\"MathJax-Span-17\" class=\"mrow\"><span id=\"MathJax-Span-18\" class=\"mn\">1</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">1</span></span>&nbsp;chứa số nguy&ecirc;n dương&nbsp;<span id=\"MathJax-Element-5-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-19\" class=\"math\"><span id=\"MathJax-Span-20\" class=\"mrow\"><span id=\"MathJax-Span-21\" class=\"mi\">n</span><span id=\"MathJax-Span-22\" class=\"mo\">&le;</span><span id=\"MathJax-Span-23\" class=\"msubsup\"><span id=\"MathJax-Span-24\" class=\"mn\">10</span><span id=\"MathJax-Span-25\" class=\"texatom\"><span id=\"MathJax-Span-26\" class=\"mrow\"><span id=\"MathJax-Span-27\" class=\"mn\">5</span></span></span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&le;105</span></span></li>\n<li>D&ograve;ng&nbsp;<span id=\"MathJax-Element-6-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-28\" class=\"math\"><span id=\"MathJax-Span-29\" class=\"mrow\"><span id=\"MathJax-Span-30\" class=\"mn\">2</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">2</span></span>&nbsp;chứa&nbsp;<span id=\"MathJax-Element-7-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-31\" class=\"math\"><span id=\"MathJax-Span-32\" class=\"mrow\"><span id=\"MathJax-Span-33\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n</span></span>&nbsp;số nguy&ecirc;n dương&nbsp;<span id=\"MathJax-Element-8-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-34\" class=\"math\"><span id=\"MathJax-Span-35\" class=\"mrow\"><span id=\"MathJax-Span-36\" class=\"msubsup\"><span id=\"MathJax-Span-37\" class=\"mi\">a</span><span id=\"MathJax-Span-38\" class=\"mn\">1</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">a1</span></span>,&nbsp;<span id=\"MathJax-Element-9-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-39\" class=\"math\"><span id=\"MathJax-Span-40\" class=\"mrow\"><span id=\"MathJax-Span-41\" class=\"msubsup\"><span id=\"MathJax-Span-42\" class=\"mi\">a</span><span id=\"MathJax-Span-43\" class=\"mn\">2</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">a2</span></span>, ...,&nbsp;<span id=\"MathJax-Element-10-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;&amp;#x2200;&lt;/mo&gt;&lt;/mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-44\" class=\"math\"><span id=\"MathJax-Span-45\" class=\"mrow\"><span id=\"MathJax-Span-46\" class=\"msubsup\"><span id=\"MathJax-Span-47\" class=\"mi\">a</span><span id=\"MathJax-Span-48\" class=\"mi\">n</span></span><span id=\"MathJax-Span-49\" class=\"mo\">(</span><span id=\"MathJax-Span-50\" class=\"texatom\"><span id=\"MathJax-Span-51\" class=\"mrow\"><span id=\"MathJax-Span-52\" class=\"mo\">&forall;</span></span></span><span id=\"MathJax-Span-53\" class=\"mi\">i</span><span id=\"MathJax-Span-54\" class=\"mo\">:</span><span id=\"MathJax-Span-55\" class=\"msubsup\"><span id=\"MathJax-Span-56\" class=\"mi\">a</span><span id=\"MathJax-Span-57\" class=\"mi\">i</span></span><span id=\"MathJax-Span-58\" class=\"mo\">&le;</span><span id=\"MathJax-Span-59\" class=\"msubsup\"><span id=\"MathJax-Span-60\" class=\"mn\">10</span><span id=\"MathJax-Span-61\" class=\"texatom\"><span id=\"MathJax-Span-62\" class=\"mrow\"><span id=\"MathJax-Span-63\" class=\"mn\">9</span></span></span></span><span id=\"MathJax-Span-64\" class=\"mo\">)</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">an(&forall;i:ai&le;109)</span></span>&nbsp;c&aacute;ch nhau bởi dấu c&aacute;ch</li>\n</ul>\n<h4>Output</h4>\n<p>Ghi ra một số nguy&ecirc;n duy nhất l&agrave; số lượng vỏ ốc trong chuỗi tạo được.</p>\n<h4>Giới hạn</h4>\n<ul>\n<li>40% số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-11-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;20&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-65\" class=\"math\"><span id=\"MathJax-Span-66\" class=\"mrow\"><span id=\"MathJax-Span-67\" class=\"mi\">n</span><span id=\"MathJax-Span-68\" class=\"mo\">&le;</span><span id=\"MathJax-Span-69\" class=\"mn\">20</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n&le;20</span></span></li>\n<li>30% số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-12-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-70\" class=\"math\"><span id=\"MathJax-Span-71\" class=\"mrow\"><span id=\"MathJax-Span-72\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n</span></span>&nbsp;thỏa m&atilde;n&nbsp;<span id=\"MathJax-Element-13-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;20&lt;/mn&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mn&gt;1000&lt;/mn&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-73\" class=\"math\"><span id=\"MathJax-Span-74\" class=\"mrow\"><span id=\"MathJax-Span-75\" class=\"mn\">20</span><span id=\"MathJax-Span-76\" class=\"mo\">&le;</span><span id=\"MathJax-Span-77\" class=\"mi\">n</span><span id=\"MathJax-Span-78\" class=\"mo\">&le;</span><span id=\"MathJax-Span-79\" class=\"mn\">1000</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">20&le;n&le;1000</span></span></li>\n<li>30% số điểm ứng với c&aacute;c test c&oacute;&nbsp;<span id=\"MathJax-Element-14-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-80\" class=\"math\"><span id=\"MathJax-Span-81\" class=\"mrow\"><span id=\"MathJax-Span-82\" class=\"mi\">n</span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">n</span></span>&nbsp;thỏa m&atilde;n&nbsp;<span id=\"MathJax-Element-15-Frame\" class=\"MathJax\" style=\"display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 15px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;\" tabindex=\"0\" role=\"presentation\" data-mathml=\"&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;1000&lt;/mn&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#x2264;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/msup&gt;&lt;/math&gt;\"><span id=\"MathJax-Span-83\" class=\"math\"><span id=\"MathJax-Span-84\" class=\"mrow\"><span id=\"MathJax-Span-85\" class=\"mn\">1000</span><span id=\"MathJax-Span-86\" class=\"mo\">&le;</span><span id=\"MathJax-Span-87\" class=\"mi\">n</span><span id=\"MathJax-Span-88\" class=\"mo\">&le;</span><span id=\"MathJax-Span-89\" class=\"msubsup\"><span id=\"MathJax-Span-90\" class=\"mn\">10</span><span id=\"MathJax-Span-91\" class=\"mn\">5</span></span></span></span><span class=\"MJX_Assistive_MathML\" role=\"presentation\">1000&le;n&le;105</span></span></li>\n</ul>\n<h4>Sample Input</h4>\n<pre><code>5\n4 4 5 3 1\n</code></pre>\n<h4>Sample Output</h4>\n<pre><code>4</code></pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/074d661e-a06c-4270-97a1-629f6f30d6d0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BEADSNB input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef923f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "binary2-spbinary2",
  "tags": [],
  "level": "BEGINNER",
  "title": "BINARY2 - SPBINARY2",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">BINARY2 - SPBINARY2</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"><em>no tags</em>&nbsp;</div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/binary2\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/binary2</a><br /><br /><br />\n<p>Đề b&agrave;i tương tự&nbsp;<strong>SPBINARY</strong>, nhưng giới hạn lớn hơn</p>\n<p>Cho 2 số n v&agrave; k ( 2&lt;=k &lt;= n &lt;= 10^6)</p>\n<p>H&atilde;y đếm xem c&oacute; bao nhi&ecirc;u x&acirc;u nhị ph&acirc;n độ d&agrave;i n m&agrave; kh&ocirc;ng c&oacute; qu&aacute; k số 0 hoặc k số 1 n&agrave;o li&ecirc;n tiếp nhau.</p>\n<h3>Input</h3>\n<p>Gồm 1 d&ograve;ng duy nhất l&agrave; 2 số n v&agrave; k.</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất l&agrave; số d&atilde;y nhị ph&acirc;n thoả m&atilde;n (module 10^9).</p>\n<p><strong>Example</strong></p>\n<pre><strong>Input:</strong>\n3 2\n\n<strong>Output:</strong>\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0944d252-5d46-476b-b233-25960fe26076",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BINARY2 input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9240"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bloper-operators-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "BLOPER - Operators",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BLOPER - Operators</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Given a set of N integer A = {1, 2, 3, &hellip;, N} and a integer S, your task is find a way to insert an operator &lsquo;+&rsquo; or &lsquo;-&lsquo; to every neighbor pair of A, that the result of the expression after insert equal to S.</p>\n<h3>Input</h3>\n<p>A single line, N and S (1 &le; N &le; 500, |S| &le; 125250)</p>\n<h3>Output</h3>\n<p>If there are way(s) to insert, outputs any of them, otherwise outputs &ldquo;Impossible&rdquo; (without quotes).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n9 5\n\n<strong>Output:</strong>\n1-2+3-4+5-6+7-8+9</pre>\n<pre><strong>Input:</strong>\n5 6\n\n<strong>Output:</strong>\nImpossible</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2c5a8a3a-299e-462c-a70d-3e9109bdf313",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BLOPER input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9241"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bones-xuc-xac-bo",
  "tags": [],
  "level": "BEGINNER",
  "title": "BONES - Xúc xắc bò",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BONES - X&uacute;c xắc b&ograve;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/bones\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/bones</a><br /><br /><br />\n<p>Bessie rất y&ecirc;u th&iacute;ch chơi những tr&ograve; chơi đổ x&uacute;c xắc v&agrave; c&ocirc; b&ograve; n&agrave;y đ&atilde; n&agrave;i được b&aacute;c n&ocirc;ng d&acirc;n John chở tới cửa h&agrave;ng đồ chơi v&agrave; c&ocirc; b&ograve; đ&atilde; mua 3 c&aacute;i x&uacute;c xắc về để lăn.</p>\n<p>Những vi&ecirc;n x&uacute;c xắc n&agrave;y tương ứng c&oacute; S1, S2 v&agrave; S3 mặt đều nhau, c&aacute;c mặt được đ&aacute;nh số từ 1-&gt;S1, 1-&gt;S2 v&agrave; 1-&gt;S3 (2 &lt;= S1 &lt;= 20; 2 &lt;= S2 &lt;= 20; 2 &lt;= S3 &lt;= 40).</p>\n<p>Bessie cứ thả x&uacute;c xắc li&ecirc;n tục v&agrave; mỗi lần lại ghi nhận lại 1 số nguy&ecirc;n l&agrave; tổng gi&aacute; trị của 3 mặt x&uacute;c xắc thả được. Mục đ&iacute;ch của c&ocirc; b&ograve; l&agrave; để t&igrave;m ra xem tổng gi&aacute; trị n&agrave;o xuất hiện nhiều nhất.</p>\n<p>Cho số mặt của 3 x&uacute;c xắc, h&atilde;y x&aacute;c định xem tổng gi&aacute; trị n&agrave;o xuất hiện nhiều nhất. Nếu c&oacute; nhiều hơn 1 gi&aacute; trị xuất hiện nhiều nhất th&igrave; ghi ra gi&aacute; trị nhỏ nhất.</p>\n<h3>DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: 3 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: S1, S2 v&agrave; S3</li>\n</ul>\n<h3>KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1: Số nguy&ecirc;n nhỏ nhất l&agrave; tổng gi&aacute; trị xuất hiện nhiều lần nhất, giả sử rằng x&aacute;c suất c&aacute;c mặt x&uacute;c xắc xuất hiện l&agrave; như nhau.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre><strong>Dữ liệu</strong>\n3 2 3\n\n<strong>Kết quả</strong>\n5\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>Đ&acirc;y l&agrave; tất cả c&aacute;c trường hợp c&oacute; thể xảy ra. 1 1 1 -&gt; 3 1 2 1 -&gt; 4 2 1 1 -&gt; 4 2 2 1 -&gt; 5 3 1 1 -&gt; 5 3 2 1 -&gt; 6 1 1 2 -&gt; 4 1 2 2 -&gt; 5 2 1 2 -&gt; 5 2 2 2 -&gt; 6 3 1 2 -&gt; 6 3 2 2 -&gt; 7 1 1 3 -&gt; 5 1 2 3 -&gt; 6 2 1 3 -&gt; 6 2 2 3 -&gt; 7 3 1 3 -&gt; 7 3 2 3 -&gt; 8 Trong đ&oacute; 5 v&agrave; 6 xuất hiện nhiều nhất (mỗi số 5 lần), vậy 5 l&agrave; kết quả.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3675d965-2291-4982-b26e-59e3c1cf0059",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BONES input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9242"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bongda-lich-thi-dau-bong-da",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BONGDA - Lịch thi đấu bóng đá",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BONGDA - Lịch thi đấu b&oacute;ng đ&aacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/bongda\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/bongda</a><br /><br /><br />\n<p>Một giải thi đấu b&oacute;ng đ&aacute; được tổ chức theo thể thức thi đấu v&ograve;ng tr&ograve;n, ở đ&oacute; hai đội b&oacute;ng bất kỳ sẽ được thi đấu với nhau đ&uacute;ng một trận.</p>\n<p>Trong mỗi trận đấu, đội thắng được 3 điểm, c&ograve;n đội thua được 0 điểm. Kh&ocirc;ng c&oacute; kết qủa h&ograve;a (nếu h&ograve;a trong hai hiệp ch&iacute;nh th&igrave; hai đội sẽ phải thi đấu lu&acirc;n lưu để ph&acirc;n định thắng thua).</p>\n<p>Kết th&uacute;c m&ugrave;a giải, đội v&ocirc; địch l&agrave; đội c&oacute; số điểm cao nhất. Trong trường hợp c&oacute; nhiều hơn một đội được điểm cao nhất th&igrave; c&aacute;c đội n&agrave;y đồng đoạt chức v&ocirc; địch.</p>\n<p>Giải đ&atilde; diễn ra được một thời gian. L&uacute;c n&agrave;y một b&agrave;i to&aacute;n nảy sinh: người ta cần biết mỗi đội b&oacute;ng c&ograve;n c&oacute; khả năng đoạt chức v&ocirc; địch nữa hay kh&ocirc;ng?</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>Biết kết qủa c&aacute;c trận đấu đ&atilde; diễn ra, bạn h&atilde;y cho biết mỗi đội b&oacute;ng c&ograve;n c&oacute; khả năng đoạt chức v&ocirc; địch m&ugrave;a giải nữa hay kh&ocirc;ng?</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: chứa số nguy&ecirc;n dương N l&agrave; số đội b&oacute;ng tham gia giải đấu. C&aacute;c đội b&oacute;ng được đ&aacute;nh số thứ tự từ 1 đến N.</li>\n<li>N d&ograve;ng tiếp theo, d&ograve;ng i chứa N số nguy&ecirc;n dương a<sub>i1</sub>, a<sub>i2</sub>, ... , a<sub>iN</sub>, trong đ&oacute; a<sub>ij</sub>&nbsp;cho biết trạng th&aacute;i của trận đấu giữa đội i v&agrave; đội j:\n<ul>\n<li>a<sub>ij</sub>&nbsp;= 0, nếu đội j thắng.</li>\n<li>a<sub>ij</sub>&nbsp;= 1 nếu đội i thắng</li>\n<li>a<sub>ij</sub>&nbsp;= 2 nếu trận đấu chưa diễn ra.\n<p>Nếu i kh&aacute;c j, dữ liệu v&agrave;o đảm bảo a<sub>ij</sub>= a<sub>ji</sub>&nbsp;= 2 hoặc a<sub>ij</sub>&nbsp;+ a<sub>ji</sub>&nbsp;= 1. Dữ liệu v&agrave;o đảm bảo a<sub>ii</sub>&nbsp;= 0 với mọi i</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Gồm 1 d&ograve;ng duy nhất, l&agrave; một d&atilde;y nhị ph&acirc;n độ d&agrave;i N, ở đ&oacute; bit thứ i bằng 1 nếu đội b&oacute;ng i c&ograve;n khả năng v&ocirc; địch m&ugrave;a giải, v&agrave; bằng 0 nếu đội b&oacute;ng i kh&ocirc;ng c&ograve;n khả năng v&ocirc; địch m&ugrave;a giải.</p>\n<h3>Giới hạn</h3>\n<p>N l&agrave; số nguy&ecirc;n dương trong phạm vi [1, 30]</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5\n0 2 0 2 1 \n2 0 0 1 0 \n1 1 0 2 1 \n2 0 2 0 2 \n0 1 0 2 0\n\n<strong>Kết qủa</strong>\n10110</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/86f2c246-f952-4444-9dba-13a1a01b22a8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BONGDAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9243"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bonus-voi-2011-phan-thuong",
  "tags": [],
  "level": "BEGINNER",
  "title": "BONUS - VOI 2011 Phần thưởng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BONUS - VOI 2011 Phần thưởng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/bonus\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/bonus</a><br /><br /><br />\n<p>Tuấn l&agrave; người chiến thắng trong một cuộc thi &ldquo;t&igrave;m hiểu kiến thức vũ trụ&rdquo; v&agrave; được nhận c&aacute;c phần thưởng do c&ocirc;ng ty XYZ t&agrave;i trợ. C&aacute;c phần thưởng được bố tr&iacute; tr&ecirc;n một bảng h&igrave;nh vu&ocirc;ng nxn<em>&nbsp;</em>c&oacute; dạng một lưới &ocirc; vu&ocirc;ng k&iacute;ch thước đơn vị. C&aacute;c d&ograve;ng của bảng được đ&aacute;nh số từ 1 đến n, từ tr&ecirc;n xuống dưới v&agrave; c&aacute;c cột của bảng được đ&aacute;nh số từ 1 đến n, từ tr&aacute;i qua phải. &Ocirc; nằm tr&ecirc;n giao của d&ograve;ng i v&agrave; cột j được gọi l&agrave; &ocirc; (i,j) v&agrave; tr&ecirc;n &ocirc; đ&oacute; chứa một m&oacute;n qu&agrave; c&oacute; gi&aacute; trị l&agrave; a[i,j] (1 &lt;= i, j &lt;= n)</p>\n<p>Đề nhận phần thưởng, Tuấn được ph&eacute;p chọn một h&igrave;nh vu&ocirc;ng k&iacute;ch thước k x k chiếm trọn trong một số &ocirc; của bảng v&agrave; nhận tất cả c&aacute;c phần qu&agrave; c&oacute; trong c&aacute;c &ocirc; nằm trong h&igrave;nh vu&ocirc;ng đ&oacute;.</p>\n<p><strong>Y&ecirc;u cầu:&nbsp;</strong>H&atilde;y x&aacute;c định tổng gi&aacute; trị lớn nhất của m&oacute;n qu&agrave; m&agrave; Tuấn c&oacute; thể nhận được.</p>\n<p><strong>Dữ liệu:</strong></p>\n<ul>\n<li>D&ograve;ng thứ nhất chứa hai s&ocirc; nguy&ecirc;n dương n, k (n &lt;= 1000, n/3 &lt;= k &lt;= n).</li>\n<li>D&ograve;ng thứ i trong số n d&ograve;ng tiếp theo chứa n số nguy&ecirc;n dương, số thứ j l&agrave; a[i,j] (a[i,j] &lt;= 1000)</li>\n</ul>\n<p><strong>Kết quả:</strong>&nbsp;Ghi ra một số nguy&ecirc;n duy nhất l&agrave; tổng gi&aacute; trị lớn nhất của c&aacute;c m&oacute;n qu&agrave; m&agrave; Tuấn c&oacute; thể nhận được.</p>\n<p><strong>V&iacute; dụ:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"130\">\n<p>Dữ liệu</p>\n</td>\n<td valign=\"top\" width=\"108\">\n<p>Kết quả</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"130\">\n<pre>4 3\n1 9 1 1\n9 9 9 9\n1 9 9 9\n1 9 9 14</pre>\n</td>\n<td valign=\"top\" width=\"108\">\n<pre>86</pre>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p><strong>&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\">\n<tbody>\n<tr>\n<td width=\"40\">\n<p align=\"center\">1</p>\n</td>\n<td width=\"40\">\n<p align=\"center\">9</p>\n</td>\n<td width=\"40\">\n<p align=\"center\">1</p>\n</td>\n<td width=\"40\">\n<p align=\"center\">1</p>\n</td>\n</tr>\n<tr>\n<td width=\"40\">\n<p align=\"center\">9</p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n</tr>\n<tr>\n<td width=\"40\">\n<p align=\"center\">1</p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n</tr>\n<tr>\n<td width=\"40\">\n<p align=\"center\">1</p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>9</strong></p>\n</td>\n<td width=\"40\">\n<p align=\"center\"><strong>14</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>R&agrave;ng buộc:</strong>&nbsp;50% số test ứng với 50% số điểm của b&agrave;i c&oacute; n &lt;= 100.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ee2cbe8a-d0d4-4abf-9c38-b49109b012e8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BONUS input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9244"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "bonus13-voi-2013-phan-thuong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "BONUS13 - VOI 2013 - Phần thưởng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BONUS13 - VOI 2013 - Phần thưởng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/bonus13\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/bonus13</a><br /><br /><br />\n<p>&nbsp;&nbsp;&nbsp; Cờ vua (c&ograve;n gọi l&agrave; cờ quốc tế) l&agrave; m&ocirc;n thể thao tr&iacute; tuệ được giới trẻ Việt Nam y&ecirc;u th&iacute;ch v&agrave; cũng l&agrave; m&ocirc;n thể thao m&agrave; Việt Nam c&oacute; quyền tự h&agrave;o v&igrave; những th&agrave;nh t&iacute;ch xuất sắc m&agrave; c&aacute;c đại kiện tướng quốc tế trẻ (cả nam v&agrave; nữ) của ch&uacute;ng ta đ&atilde; đạt được.</p>\n<p>&nbsp;&nbsp;&nbsp; Thuận vừa tr&uacute;ng thưởng trong một kỳ thi t&igrave;m hiểu về phong tr&agrave;o cờ vua do Li&ecirc;n đo&agrave;n cờ vua Việt Nam tổ chức. Ban tổ chức c&oacute; một c&aacute;ch thức x&aacute;c định trị gi&aacute; giải thưởng đ&ograve;i hỏi người tr&uacute;ng thưởng phải am hiểu về cờ vua, nếu muốn gi&aacute; trị giải thưởng cao hơn. Người tr&uacute;ng thưởng cần đặt 4 qu&acirc;n cờ Hậu, Xe, Tượng, M&atilde; l&ecirc;n b&agrave;n cờ. Phần thưởng thu được sẽ l&agrave; tổng gi&aacute; trị của c&aacute;c &ocirc; bị 4 qu&acirc;n cờ n&agrave;y khống chế.</p>\n<p>&nbsp;&nbsp;&nbsp; B&agrave;n cờ vua l&agrave; một h&igrave;nh vu&ocirc;ng k&iacute;ch thước 8x8 gồm 8 h&agrave;ng ngang đ&aacute;nh số từ 1-8 từ dưới l&ecirc;n v&agrave; 8 cột dọc đ&aacute;nh số từ 1-8 từ tr&aacute;i qua phải. &Ocirc; nằm tr&ecirc;n h&agrave;ng i v&agrave; cột j được k&iacute; hiệu l&agrave; &ocirc; (i,j). Hậu, Xe, Tượng, M&atilde; l&agrave; 4 qu&acirc;n cờ mạnh nhất của cờ vua, khả năng khống chế của ch&uacute;ng được m&ocirc; tả như sau :</p>\n<p>- Hậu: tất cả c&aacute;c &ocirc; thuộc c&ugrave;ng h&agrave;ng ngang, cột dọc v&agrave; đường ch&eacute;o</p>\n<p>- Xe: tất cả c&aacute;c &ocirc; thuộc c&ugrave;ng h&agrave;ng ngang, cột dọc</p>\n<p>- Tượng: tất cả c&aacute;c &ocirc; thuộc c&ugrave;ng đường ch&eacute;o</p>\n<p>- M&atilde;: tất cả c&aacute;c &ocirc; ở đỉnh dối diện tr&ecirc;n đường ch&eacute;o của h&igrave;nh chữ nhật k&iacute;ch thước 2 x 3</p>\n<p>&nbsp;&nbsp;&nbsp; Tr&ecirc;n K &ocirc; của b&agrave;n cờ, Ban tổ chức (BTC) c&oacute; ghi c&aacute;c gi&aacute; trị thưởng. C&aacute;c &ocirc; n&agrave;y tạm gọi l&agrave; &ocirc; thưởng. Nhiệm vụ của Thuận l&agrave; t&igrave;m 4 &ocirc; trống (kh&ocirc;ng c&oacute; ghi gi&aacute; trị) để đặt 4 qu&acirc;n cờ Hậu, Xe, Tượng, M&atilde; sao cho gi&aacute; trị giải thưởng l&agrave; lớn nhất. Sau khi Thuận đặt xong, BTC sẽ x&aacute;c định những &ocirc; thưởng n&agrave;o bị &iacute;t nhất một qu&acirc;n cờ khống chế. Gi&aacute; trị giải thưởng l&agrave; tổng gi&aacute; trị của c&aacute;c &ocirc; n&agrave;y.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n dương K (K &lt;= 60).</li>\n<li>D&ograve;ng thứ i trong số K d&ograve;ng tiếp theo ghi 3 số nguy&ecirc;n dương u<sub>i</sub>,v<sub>i</sub>,c<sub>i</sub>&nbsp;cho biết &ocirc; (u<sub>i</sub>,v<sub>i</sub>) l&agrave; &ocirc; thưởng với gi&aacute; trị c<sub>i</sub>&nbsp;(c<sub>i</sub>&nbsp;&lt; 10<sup>9</sup>).</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Ghi ra một số nguy&ecirc;n duy nhất l&agrave; gi&aacute; trị phần thưởng t&igrave;m được.&nbsp;</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>11</pre>\n<pre>1 3 10</pre>\n<pre>1 7 10</pre>\n<pre>1 8 10</pre>\n<pre>2 2 25</pre>\n<pre>2 3 10</pre>\n<pre>3 2 10</pre>\n<pre>3 5 10</pre>\n<pre>6 1 10</pre>\n<pre>8 1 11</pre>\n<pre>8 3 10</pre>\n<pre>8 7 10\n\n<strong>Output:</strong></pre>\n<pre><strong>126</strong></pre>\n<pre><strong>Giải th&iacute;ch : Thuận đặt qu&acirc;n Hậu ở &ocirc; (7,2), qu&acirc;n Xe ở &ocirc; (6,7), qu&acirc;n Tượng ở &ocirc; (2,4) v&agrave; qu&acirc;n M&atilde; ở &ocirc; (1,1).</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d9bc68f7-e47a-479e-a64f-775eb9c4fd5b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BONUS13 input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9245"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bwpoints-voi-2011-noi-diem-den-trang",
  "tags": [],
  "level": "BEGINNER",
  "title": "BWPOINTS - VOI 2011 Nối điểm đen trắng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>BWPOINTS - VOI 2011 Nối điểm đen trắng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/bwpoints\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/bwpoints</a><br /><br /><br />\n<p>Tr&ecirc;n trục số thực cho n điểm đen v&agrave; n điểm trắng ho&agrave;n to&agrave;n ph&acirc;n biệt. C&aacute;c điểm đen c&oacute; tọa độ nguy&ecirc;n a1, a2, &hellip;, an c&ograve;n c&aacute;c điểm trắng c&oacute; tọa độ nguy&ecirc;n b1, b2, &hellip;, bn. Người ta muốn chọn ra k điểm đen v&agrave; k điểm trắng để nối mỗi một điểm đen với một điểm trắng sao cho k đoạn thẳng tạo được đ&ocirc;i một kh&ocirc;ng c&oacute; điểm chung.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho tọa độ của n điểm đen a1, a2, &hellip;, an v&agrave; tọa độ của điểm trắng b1, b2, &hellip;, bn. H&atilde;y t&igrave;m gi&aacute; trị k lớn nhất thỏa m&atilde;n y&ecirc;u cầu tr&ecirc;n.</p>\n<p><strong>Dữ liệu:</strong></p>\n<ul>\n<li>D&ograve;ng thứ nhất chứa số nguy&ecirc;n dương n (n &lt;= 10^5).&nbsp;&nbsp;</li>\n<li>D&ograve;ng thứ hai chứa c&aacute;c số a1, a2, &hellip;, an (|ai| &lt;= 10^9, i = 1, 2,&hellip;, n)</li>\n<li>D&ograve;ng thứ ba chứa c&aacute;c số b1, b2, &hellip;, bn (|bi| &lt;= 10^9, i = 1, 2,&hellip;, n)</li>\n</ul>\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</p>\n<p><strong>Kết quả:</strong>&nbsp;Ghi ra một số nguy&ecirc;n duy nhất l&agrave; số k lớn nhất t&igrave;m được</p>\n<p><strong>V&iacute; dụ:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"130\">\n<p>Dữ liệu</p>\n</td>\n<td valign=\"top\" width=\"132\">\n<p>Kết quả</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"130\">\n<pre>3\n0 3 1\n-3 5 -1</pre>\n</td>\n<td valign=\"top\" width=\"132\">\n<pre>2</pre>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"https://vn.spoj.com/content/voj:BWPOINTS.png\" alt=\"\" width=\"411\" height=\"77\" /></p>\n<p><strong>R&agrave;ng buộc:</strong>&nbsp;50% số test ứng với 50% số điểm của b&agrave;i c&oacute; 1 &lt;= n &lt;= 100</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1878ea93-a3b6-402d-9aad-98a7e2973b64",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BWPOINTSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9246"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11bc1-the-country-of-heaven",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11BC1 - The country of heaven",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11BC1 - The country of heaven</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11bc1\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11bc1</a><br /><br /><br />\n<p>Một đất nước c&oacute; N th&agrave;nh phố, mỗi th&agrave;nh phố được đặc trưng bởi 2 con số: A[i] v&agrave; B[i] (trong đ&oacute;: A[i] l&agrave; khả năng tăng trưởng của th&agrave;nh phố đ&oacute; v&agrave; B[i] l&agrave; &ldquo;chỉ số ng&ocirc;n ngữ&rdquo; của th&agrave;nh phố đ&oacute;). Một &ldquo;li&ecirc;n minh&rdquo; l&agrave; 1 tập hợp gồm k th&agrave;nh phố trong N th&agrave;nh phố của đất nước (k &lt;= N) v&agrave; c&oacute; &iacute;t nhất 2 th&agrave;nh phố kh&aacute;c nhau về chỉ số ng&ocirc;n ngữ. &ldquo;Khả năng li&ecirc;n minh&rdquo; của k th&agrave;nh phố trong 1 li&ecirc;n minh được t&iacute;nh bằng t&iacute;ch c&aacute;c khả năng tăng trưởng của k th&agrave;nh phố đ&oacute;. Khả năng tăng trưởng của đất nước sẽ được t&iacute;nh bằng tổng tất cả c&aacute;c khả năng li&ecirc;n minh của c&aacute;c li&ecirc;n minh, v&agrave; tất cả c&aacute;c li&ecirc;n minh n&agrave;y đều kh&aacute;c nhau.</p>\n<p>&nbsp;</p>\n<p>V&iacute; dụ 1 li&ecirc;n minh gồm 5 th&agrave;nh phố l&agrave;: 1, 4, 2, 5, 6 th&igrave; khả năng li&ecirc;n minh sẽ l&agrave; A[1]*A[4]*A[2]*A[5]*A[6].</p>\n<p>&nbsp;</p>\n<p>Hai li&ecirc;n minh được gọi l&agrave; kh&aacute;c nhau nếu tồn tại \"&iacute;t nhất\" một th&agrave;nh phố c&oacute; trong li&ecirc;n m&igrave;nh n&agrave;y m&agrave; kh&ocirc;ng c&oacute; trong li&ecirc;n minh kia.</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng đầu gồm 2 số n v&agrave; k (2&lt;= n &lt;= 10^5, 2 &lt;= k &lt;= 50)</p>\n<p>&nbsp;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N d&ograve;ng tiếp theo: mỗi d&ograve;ng gồm 2 số A[i] v&agrave; B[i] (A[i] &lt;= 1000 v&agrave; B[i] &lt;= 10^9)</p>\n<h3>Output</h3>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gồm 1 d&ograve;ng duy nhất: Khả năng tăng trưởng của đất nước theo module 790972.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5 3</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4 1</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6 4</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5 3</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 2</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3 5</p>\n<p><strong>Output:</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 580</p>\n<pre><strong>Time limit đ&atilde; được thay đổi, những ai code chưa chuẩn th&igrave; code lại với c&aacute;ch</strong> <strong>tối ưu hơn.</strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/df34e373-4ea3-44e3-8a4c-a93e122d303a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11BC1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9247"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11bc2-robin",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11BC2 - Robin",
  "content": "<table style=\"font-weight: 400;\">\n<tbody>\n<tr>\n<td>\n<h2 style=\"font-weight: 500;\">C11BC2 - Robin</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-weight: 400;\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11bc2\">https://oj.vnoi.info/problem/c11bc2</a><br /><br /><br /></p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Một ng&agrave;y đẹp trời nọ, tr&ecirc;n vương quốc của c&aacute;c Coders 2011, bỗng xuất hiện 1 l&atilde;o ph&ugrave; thủy độc &aacute;c, l&atilde;o ph&ugrave; thủy sirDat_LS đ&atilde; c&oacute; &acirc;m mưu th&ocirc;n t&iacute;nh đất nước &nbsp;của đức vua vodanh9x. L&atilde;o ph&ugrave; thủy n&agrave;y rất y&ecirc;u con g&aacute;i của đức vua l&agrave; Rose v&agrave; đ&atilde; bắt Rose về nơi ở của l&atilde;o ta.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Đức vua vodanh9x liền t&igrave;m hiệp sĩ Robin v&agrave; sẽ hứa gả con g&aacute;i cho Robin nếu ch&agrave;ng cứu được c&ocirc;ng ch&uacute;a Rose trở về. L&atilde;o ph&ugrave; thủy sirDat_LS độc &aacute;c với khu&ocirc;n mặt rất gh&ecirc; tởm khiến c&ocirc;ng ch&uacute;a mỗi khi nh&igrave;n thấy hắn th&igrave; c&ocirc;ng ch&uacute;a lại ngất đi.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&agrave; rồi, ch&agrave;ng Robin của ch&uacute;ng ta đ&atilde; t&igrave;m được đến nơi ở của l&atilde;o ph&ugrave; thủy. Nơi ở của l&atilde;o l&agrave; 1 m&ecirc; cung c&oacute; N ph&ograve;ng, v&agrave; N ph&ograve;ng n&agrave;y li&ecirc;n th&ocirc;ng với nhau v&agrave; c&oacute; đ&uacute;ng N-1 đường đi (coi mỗi đường đi l&agrave; 1 cạnh).</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nhưng kh&oacute; khăn thay, l&atilde;o ph&ugrave; thủy đ&atilde; đ&aacute;nh số mỗi đường đi l&agrave; 1 hoặc 2. Nếu ch&agrave;ng Robin muốn đến cứu c&ocirc;ng ch&uacute;a, th&igrave; từ nơi xuất ph&aacute;t đến nơi c&oacute; c&ocirc;ng ch&uacute;a phải c&oacute; &iacute;t nhất một đường đi được đ&aacute;nh số 2, nếu kh&ocirc;ng ch&agrave;ng Robin sẽ chết.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&ecirc;u cầu: Cho m truy vấn (m &lt;= 10^5) mỗi truy vấn c&oacute; dạng (x,y), trong đ&oacute; x l&agrave; nơi xuất ph&aacute;t của Robin v&agrave; y l&agrave; nơi nhốt c&ocirc;ng ch&uacute;a. X&aacute;c định đường đi ngắn nhất từ x đến y c&oacute; cạnh co trọng số 2 hay kh&ocirc;ng.</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>&nbsp;</p>\n<p>D&ograve;ng đầu l&agrave; số nguy&ecirc;n N (N &lt;= 10^4) - số đỉnh của đồ thị v&agrave; M &nbsp;&ndash; số truy vấn.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Từ d&ograve;ng 2 đến d&ograve;ng N: d&ograve;ng thứ i chứa 2 số nguy&ecirc;n dương&nbsp;&nbsp;x (x &lt; i) v&agrave; k (k &lt;= 2) nghĩa l&agrave; c&oacute; cạnh nối giữa i v&agrave; x v&agrave; được đ&aacute;nh số l&agrave; k.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M d&ograve;ng sau: mỗi d&ograve;ng chứa 2 số x v&agrave; y (Biểu thị cho truy vấn (x,y)).</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>&nbsp;</p>\n<p>Với mỗi truy vấn, xuất ra &ldquo;YES&rdquo; nếu tồn tại đường đi c&oacute; &iacute;t nhất 1 cạnh c&oacute; trọng số 2, ngược lại xuất ra &ldquo;NO&rdquo;.</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">Example</h3>\n<p style=\"font-weight: 400;\"><strong>Input:<br /></strong>6 7<br />1 1<br />1 2<br />3 1<br />1 2<br />5 2<br />1 3<br />5 1<br />2 1<br />2 1<br />1 2<br />2 4<br />1 2<strong><br /></strong><strong>Output: <br /></strong>YES<br />YES<br />NO<br />NO<br />NO<br />YES<br />NO<br /><strong>Độ phức tạp l&agrave; O(M), ai accept với d0pt l&agrave; O(MlogN) chỉ l&agrave; may mắn accept.</strong></p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/13d37289-e593-4fb2-8d51-235d265d0fc3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11BC2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9248"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11beau-ten-dep",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11BEAU - Tên đẹp",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11BEAU - T&ecirc;n đẹp</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11beau\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11beau</a><br /><br /><br />\n<p>Người d&acirc;n ở đất nước B11 (l&aacute;ng giềng của đất nước C11) c&oacute; một phong tục rất đặc biệt. Chuyện l&agrave; họ rất th&iacute;ch hai chữ c&aacute;i 'A' v&agrave; 'B', cho n&ecirc;n bất k&igrave; ai đều được đặt t&ecirc;n chỉ gồm 'A' v&agrave; 'B'. Theo họ, một t&ecirc;n đẹp phải bao gồm tất cả c&aacute;c yếu tố sau:</p>\n<ul>\n<li>T&ecirc;n phải kh&ocirc;ng chứa qu&aacute; countA chữ c&aacute;i 'A'</li>\n<li>T&ecirc;n phải kh&ocirc;ng chứa qu&aacute; countB chữ c&aacute;i 'B'</li>\n<li>Mỗi x&acirc;u con gồm c&aacute;c chữ c&aacute;i 'A' li&ecirc;n tiếp c&oacute; độ d&agrave;i kh&ocirc;ng qu&aacute; maxA</li>\n<li>Mỗi x&acirc;u con gồm c&aacute;c chữ c&aacute;i 'B' li&ecirc;n tiếp c&oacute; độ d&agrave;i kh&ocirc;ng qu&aacute; maxB</li>\n</ul>\n<p>V&agrave;o ng&agrave;y Quốc kh&aacute;nh sắp tới, nh&agrave; vua đất nước B11 muốn t&igrave;m một t&ecirc;n đẹp d&agrave;i nhất để đặt cho ho&agrave;ng tử mới ra đời. Bạn h&atilde;y gi&uacute;p nh&agrave; vua t&iacute;nh xem độ d&agrave;i t&ecirc;n ho&agrave;ng tử l&agrave; bao nhi&ecirc;u.</p>\n<p>V&iacute; dụ với countA = 3, countB = 5, maxA = maxB = 1, ta c&oacute; t&ecirc;n đẹp d&agrave;i nhất sẽ l&agrave; 'BABABAB'. Như vậy kết quả cần t&igrave;m l&agrave; 7.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: Số nguy&ecirc;n T l&agrave; số test của chương tr&igrave;nh.</li>\n<li>Mỗi d&ograve;ng trong T d&ograve;ng tiếp theo: 4 số nguy&ecirc;n countA, countB, maxA, maxB.</li>\n</ul>\n<h3>Output</h3>\n<p>Gồm T d&ograve;ng, mỗi d&ograve;ng l&agrave; kết quả t&igrave;m được tương ứng với mỗi test.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n4<br />0 0 10 10<br />10 10 0 0<br />3 5 1 1<br />6 7 8 9&nbsp;</pre>\n<pre><strong>Output:</strong>\n0<br />0<br />7<br />13&nbsp;</pre>\n<h3>R&agrave;ng buộc</h3>\n<ul>\n<li>1 &le; T &le; 100</li>\n<li>0 &le; countA, countB, maxA, maxB &le; 10<sup>6</sup></li>\n<li>Trong 50% số test, 0 &le; countA, countB, maxA, maxB &le;&nbsp;100</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d5629744-fad5-4bea-ae30-cceeeefaf20e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11BEAUinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9249"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11cave-hang-dong",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11CAVE - Hang động",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11CAVE - Hang động</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11cave\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11cave</a><br /><br /><br />\n<p>Một con đom đ&oacute;m bay v&agrave;o một c&aacute;i hang đầy những chướng ngại vật gồm: măng đ&aacute; (nh&ocirc; l&ecirc;n từ mặt đất) v&agrave; nhũ đ&aacute; (đ&acirc;m xuống từ trần hang). Hang n&agrave;y d&agrave;i N đơn vị (N chẵn) v&agrave; cao H đơn vị. Khi v&agrave;o hang, vật cản đầu ti&ecirc;n l&agrave; măng đ&aacute;, sau đ&oacute; l&agrave; nhũ đ&atilde;, rồi lại đến măng đ&aacute;, ... cứ thế thay phi&ecirc;n nhau.</p>\n<p>Đ&acirc;y l&agrave; một v&iacute; dụ về một hang d&agrave;i 14 đơn vị v&agrave; cao 5 đơn vị.</p>\n<p><img title=\"H&igrave;nh minh họa 1\" src=\"https://vn.spoj.com/content/tohuuquan:C11CAVE_1.bmp\" alt=\"\" width=\"685\" height=\"242\" /></p>\n<p>Con đom đ&oacute;m n&agrave;y kh&ocirc;ng phải l&agrave; lo&agrave;i c&oacute; thể bay quanh c&aacute;c chướng ngại vật. Thay v&agrave;o đ&oacute;, n&oacute; sẽ chọn một mức chiều cao bắt đầu rồi bay từ đầu đến cuối hang, ph&aacute; hết tất cả c&aacute;c chướng ngại vật tr&ecirc;n đường bay của n&oacute;.</p>\n<p>Theo v&iacute; dụ tr&ecirc;n, nếu chọn mức 4, con đom đ&oacute;m sẽ ph&aacute; tất cả l&agrave; 8 chướng ngại vật.</p>\n<p><img title=\"H&igrave;nh minh họa 2\" src=\"https://vn.spoj.com/content/tohuuquan:C11CAVE_2.bmp\" alt=\"\" /></p>\n<p>Đ&acirc;y kh&ocirc;ng phải l&agrave; lựa chọn tốt nhất v&igrave; con đom đ&oacute;m sẽ &iacute;t mệt hơn nếu chọn mức 1 hoặc mức 5, l&uacute;c n&agrave;y n&oacute; chỉ cần ph&aacute; 7 chướng ngại vật.</p>\n<p>Bạn được cho chiều d&agrave;i, chiều cao v&agrave; k&iacute;ch thước của tất cả c&aacute;c chướng ngại vật. H&atilde;y x&aacute;c định số chướng ngại vật tối thiểu m&agrave; con đom đ&oacute;m cần ph&aacute; để tho&aacute;t khỏi hang, v&agrave; c&oacute; bao nhi&ecirc;u c&aacute;ch chọn kh&aacute;c nhau đưa đến kết quả đ&oacute;.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: Hai số nguy&ecirc;n N v&agrave; H (1 &le; N &le; 2.10<sup>5</sup>&nbsp;v&agrave; 1 &le; H &le; 5.10<sup>5</sup>) l&agrave; chiều d&agrave;i v&agrave; chiều cao của hang.</li>\n<li>Mỗi d&ograve;ng trong N d&ograve;ng tiếp theo l&agrave; một số nguy&ecirc;n dương - k&iacute;ch thước của chướng ngại vật. Tất cả c&aacute;c k&iacute;ch thước đều nhỏ hơn H.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Gồm 2 số nguy&ecirc;n c&aacute;ch nhau l&agrave; số chướng ngại vật &iacute;t nhất cần ph&aacute; v&agrave; số c&aacute;ch chọn kh&aacute;c nhau để c&oacute; được kết quả đ&oacute;.</p>\n<h3>Giới hạn</h3>\n<p>Trong tối đa l&agrave; 1/3 số test, N * H kh&ocirc;ng vượt qu&aacute; 10<sup>6</sup>.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input 1:</strong>\n6 7<br />1<br />5<br />3<br />3<br />5<br />1\n\n<strong>Output 1:</strong>\n2 3&nbsp;\n\n<strong>Input 2:</strong>\n14 5<br />1<br />3<br />4<br />2<br />2<br />4<br />3<br />4<br />3<br />3<br />3<br />2<br />3<br />3\n\n<strong>Output 2:</strong>\n7 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/13575ff0-4a2e-4a41-b118-c7574a9a1949",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11CAVEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11id-ma-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11ID - Mã số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11ID - M&atilde; số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11id\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11id</a><br /><br /><br />\n<p>Đất nước C11 sắp tiến h&agrave;nh cấp N m&atilde; số kh&aacute;c nhau cho N người d&acirc;n để tiện việc quản l&iacute;. Để việc cấp m&atilde; số mang t&iacute;nh d&acirc;n chủ, mỗi người d&acirc;n được quyền chọn một số max v&agrave; ch&iacute;nh quyền sẽ cấp cho người đ&oacute; một m&atilde; số l&agrave; một số tự nhi&ecirc;n c&oacute; gi&aacute; trị từ 1 đến max.</p>\n<p>Nhiệm vụ của bạn l&agrave; đếm xem c&oacute; bao nhi&ecirc;u c&aacute;ch cấp m&atilde; số kh&aacute;c nhau cho N người n&agrave;y.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: Số nguy&ecirc;n dương N.</li>\n<li>D&ograve;ng i trong N d&ograve;ng tiếp theo: Số nguy&ecirc;n dương max<sub>i</sub>.</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Phần dư khi chia số c&aacute;ch cấp m&atilde; số kh&aacute;c nhau cho k. Với k l&agrave; số nguy&ecirc;n tố nhỏ nhất lớn hơn 10<sup>9</sup>.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input 1:</strong>\n2<br />1<br />3\n\n<strong>Output 1:</strong>\n2</pre>\n<pre><strong>Input 2:<br /></strong>4<br />4<br />4<br />4<br />4&nbsp;</pre>\n<pre><strong>Output 2:<br /></strong>24<strong>&nbsp;</strong></pre>\n<pre><strong>Giải th&iacute;ch:<br /></strong>- V&iacute; dụ 1: C&oacute; 2 c&aacute;ch cấp m&atilde; số l&agrave; { 1, 2 } hoặc { 1, 3 }.<br />- V&iacute; dụ 2: Số c&aacute;ch cấp m&atilde; số l&agrave; số ho&aacute;n vị của tập (1, 2, 3, 4).</pre>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 10<sup>5</sup>.</li>\n<li>1 &le; max<sub>i</sub>&nbsp;&le; 10<sup>9</sup>.</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6f42df8a-98da-4b9a-9b6d-25df4e915d4f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11IDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11km-khuyen-mai",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11KM - Khuyến mãi",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11KM - Khuyến m&atilde;i</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11km\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11km</a><br /><br /><br />\n<p>Si&ecirc;u thị Songuku95 mở một cuộc si&ecirc;u khuyến m&atilde;i nhằm khuyến kh&iacute;ch người ti&ecirc;u d&ugrave;ng mua h&agrave;ng.</p>\n<p>Si&ecirc;u thị khuyến m&atilde;i N ng&agrave;y. Mỗi ng&agrave;y chỉ b&aacute;n 1 sản phẩm cho mỗi người c&oacute; gi&aacute; l&agrave; p[i] , tuy nhi&ecirc;n nếu p[i] &gt; 100 th&igrave; kh&aacute;ch h&agrave;ng sẽ nhận đc 1 thẻ khuyễn m&atilde;i mua 1 m&oacute;n h&agrave;ng miễn ph&iacute; với bất cứ gi&aacute; n&agrave;o ở c&aacute;c ng&agrave;y sau:D</p>\n<p>Acer_ nh&acirc;n cơ hội n&agrave;y quyết mua tất cả c&aacute;c mặt h&agrave;ng ở mỗi ng&agrave;y, đơn giản v&igrave; nh&agrave; c&oacute; điều kiện :&gt; đại gia =)) D&ugrave; đại gia nhưng Acer_ vẫn muốn t&iacute;ch kiệm tối đa ( gi&agrave;u m&agrave; ki :&rdquo;3 )</p>\n<p>T&igrave;m tổng số tiền m&agrave; Acer_ phải trả</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : N (n &lt;= 10^3)</p>\n<p>N d&ograve;ng tiếp theo mỗi d&ograve;ng chứa 1 số nguy&ecirc;n dương p[i] &lt;= 300</p>\n<h3>Output</h3>\n<p>In ra số tiền phải trả &iacute;t nhất</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>5</p>\n<p>35</p>\n<p>40</p>\n<p>101</p>\n<p>59</p>\n<p>63</p>\n<pre>\n<strong>Output:</strong>\n</pre>\n<p>235</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5b63d061-32b6-4154-9a50-8b0750b73a2b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11KMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11pairs-dem-cap",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11PAIRS - Đếm cặp",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11PAIRS - Đếm cặp</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11pairs\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11pairs</a><br /><br /><br />\n<p>N người đang đứng xếp h&agrave;ng chờ mua v&eacute; v&agrave;o buổi h&ograve;a nhạc. Mọi người đều ph&aacute;t ch&aacute;n khi phải chờ đợi, v&igrave; vậy họ nh&igrave;n quanh xem c&oacute; ai quen hay kh&ocirc;ng.</p>\n<p>Hai người A v&agrave; B đứng trong h&agrave;ng c&oacute; thể nh&igrave;n thấy nhau nếu:</p>\n<ul>\n<li>Người A v&agrave; người B đang đứng cạnh nhau.</li>\n<li>Giữa người A v&agrave; người B,&nbsp;<strong>kh&ocirc;ng c&oacute; ai cao hơn hẳn</strong>&nbsp;một trong hai người.</li>\n</ul>\n<p>H&atilde;y đếm xem c&oacute; bao nhi&ecirc;u cặp c&oacute; thể nh&igrave;n thấy nhau trong h&agrave;ng.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n dương N, l&agrave; số người đang đứng trong h&agrave;ng.</li>\n<li>Mỗi d&ograve;ng trong N d&ograve;ng tiếp theo chứa một số nguy&ecirc;n l&agrave; chiều cao của một người t&iacute;nh bằng nanomet. (Tất cả mọi người đều thấp hơn 2<sup>31</sup>&nbsp;nanomet).</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Một số nguy&ecirc;n duy nhất l&agrave; kết quả cần t&igrave;m.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong><br />7<br />2<br />4<br />1<br />2<br />2<br />5<br />1&nbsp;</pre>\n<pre><strong>Output:</strong><br />10</pre>\n<h3>Giải th&iacute;ch</h3>\n<p>C&aacute;c cặp c&oacute; thể nh&igrave;n thấy nhau l&agrave; (1, 2), (2, 3), (2, 4), (2, 5), (2, 6), (3, 4), (4, 5), (4, 6), (5, 6), (6, 7).</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le;&nbsp;N &le; 5.10<sup>5</sup></li>\n<li>Trong 1/3 số test 1 &le; N &le; 5000</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/970ebd98-1fef-4f57-8e60-7dcd8477fa85",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11PAIRSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11sum-sieu-trom-kid-va-mat-khau-dem-trung-thu",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11SUM - Siêu trộm KID và Mật khẩu đêm Trung thu!",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11SUM - Si&ecirc;u trộm KID v&agrave; Mật khẩu đ&ecirc;m Trung thu!</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11sum\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11sum</a><br /><br /><br />\n<p>\"Trung thu l&agrave; tết thiếu nhi</p>\n<p>M&agrave; sao người lớn lại đi chơi nhiều</p>\n<p>Chơi nhiều rồi lại l&agrave;m liều</p>\n<p>L&agrave;m liều lại c&oacute; th&ecirc;m nhiều thiếu nhi.\"</p>\n<p>Vẫn biết trung thu l&agrave; một dịp tốt để đi chơi với gấu v&agrave; l&agrave;m liều, nhưng trăng s&aacute;ng như thế, Kid kh&ocirc;ng được bay lượn tr&ecirc;n bầu trời hay đi ăn trộm th&igrave; ph&iacute;. Hiểu r&otilde; 't&acirc;m tư nguyện vọng' của Kid, một tuần trước trung thu, &ocirc;ng Jirokichi đ&atilde; gửi thư th&aacute;ch Kid c&oacute; thể lấy được cặp b&aacute;nh trung thu bằng v&agrave;ng nguy&ecirc;n chất của m&igrave;nh. V&agrave; tất nhi&ecirc;n, như mọi khi, Kid nhận lời v&agrave; giờ cậu đang h&iacute; ho&aacute;y chiếc k&eacute;t để lấy được cặp b&aacute;nh trung thu m&agrave; &ocirc;ng Jirokichi đ&atilde; th&aacute;ch thức (ăn trộm như chỗ kh&ocirc;ng người :v). Nhưng mọi việc kh&ocirc;ng chỉ đơn giản như thế, chiếc k&eacute;t được m&atilde; h&oacute;a cực k&igrave; chắc chắn, chỉ cần sai mật khẩu nhập v&agrave;o, quả bom trong chiếc k&eacute;t sẽ ph&aacute;t nổ v&agrave; cặp b&aacute;nh sẽ ti&ecirc;u tan, hiển nhi&ecirc;n Kid sẽ l&agrave; người thua cuộc. May mắn thay, trong khi cải trang th&agrave;nh người phục vụ &ocirc;ng Jirokichi , cậu đ&atilde; 'mượn' được tờ giấy c&oacute; chứa mật khẩu của chiếc k&eacute;t. Tr&ecirc;n tờ giấy đ&oacute; c&oacute; chứa một b&agrave;i to&aacute;n, m&agrave; đ&aacute;p số của n&oacute; ch&iacute;nh l&agrave; mật khẩu của chiếc k&eacute;t. Tất nhi&ecirc;n, do sợ sẽ l&agrave;m rơi laptop khi đang bay tr&ecirc;n trời, n&ecirc;n Kid đ&atilde; kh&ocirc;ng mang theo m&aacute;y t&iacute;nh, v&igrave; thế việc giải b&agrave;i to&aacute;n tr&ecirc;n trở n&ecirc;n v&ocirc; c&ugrave;ng kh&oacute; khăn. H&atilde;y gi&uacute;p đỡ Kid giải b&agrave;i to&aacute;n tr&ecirc;n, rất c&oacute; thể sau khi đ&atilde; mở được chiếc k&eacute;t, Kid sẽ tặng bạn một chiếc b&aacute;nh trung bằng v&agrave;ng đ&oacute;.</p>\n<p>B&agrave;i to&aacute;n tr&ecirc;n tờ giấy của &ocirc;ng Jirokichi như sau:</p>\n<p><em>Cho một x&acirc;u S , S chỉ chứa c&aacute;c số 0 đến 9. T&iacute;nh tổng c&aacute;c D&Atilde;Y CON LI&Ecirc;N TIẾP của S mod 10^9+7</em></p>\n<h3>Input</h3>\n<ul>\n<li>Một d&ograve;ng duy nhất chứa x&acirc;u S</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một số duy nhất l&agrave; kết quả của b&agrave;i to&aacute;n.</li>\n</ul>\n<h3>Giới hạn:</h3>\n<p>Với length(s) l&agrave; độ d&agrave;i của x&acirc;u S:</p>\n<ul>\n<li>50% số test length(S)&nbsp;&le;&nbsp;100</li>\n<li>50% số test c&ograve;n lại length(s)&nbsp;&le;&nbsp;10^6</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n737\n\n<strong>Output:</strong></pre>\n<div id=\"_mcePaste\">864</div>\n<pre>864\n</pre>\n<pre><strong>Giải th&iacute;ch: </strong>7 + 3 + 7 + 73 + 37 + 737 = 864</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e8290f4e-ccff-4dc5-993f-d9a81af0f7fc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11SUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "c11trcnt-ban-may-bay",
  "tags": [],
  "level": "BEGINNER",
  "title": "C11TRCNT - Bắn máy bay",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>C11TRCNT - Bắn m&aacute;y bay</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/c11trcnt\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/c11trcnt</a><br /><br /><br />\n<p>Vương quốc C11 sắp chuẩn bị gặp hiểm họa cực lớn từ vương quốc XYZ. Theo th&ocirc;ng tin mật b&aacute;o của điệp vi&ecirc;n \"Kh&ocirc;ng Kh&ocirc;ng Thấy\", rằng XYZ sẽ gửi một Đại đội m&aacute;y bay B52 ra thả bom tại HN (thủ đ&ocirc; của C11), v&agrave; quyết đem HN về thời kỳ đồ đ&aacute;. V&agrave; thật may mắn, điệp vi&ecirc;n của ta đ&atilde; rất nhanh tay lấy được sơ đồ chiến thuật tấn c&ocirc;ng của địch.</p>\n<p>Đại đội m&aacute;y bay bao gồm tổng cộng N chiếc, được đ&aacute;nh số từ 1--&gt;N. Mỗi chiếc sẽ c&oacute; một vị tr&iacute; x&aacute;c định trong đội h&igrave;nh, v&agrave; được cụ thể bằng một cặp số (x,y) cho biết tọa độ tương đối của n&oacute;. Theo nghi&ecirc;n cứu, cứ mỗi 3 chiếc trong đội h&igrave;nh tạo th&agrave;nh một h&igrave;nh tam gi&aacute;c sẽ tăng chỉ số chắc chắn của đội h&igrave;nh l&ecirc;n một đơn vị. V&agrave; độ an to&agrave;n của một chiếc m&aacute;y bay trong đội h&igrave;nh l&agrave; số lượng đội h&igrave;nh tam gi&aacute;c m&agrave; n&oacute; tham gia.</p>\n<p>V&igrave; thế ta cũng đ&atilde; đề ra một chiến thuật, mỗi lần ta sẽ bắn rơi chiếc m&aacute;y bay c&oacute; độ an to&agrave;n nhỏ nhất trong đội h&igrave;nh của ch&uacute;ng.</p>\n<h3>Input</h3>\n<p>_ D&ograve;ng đầu ti&ecirc;n l&agrave; số nguy&ecirc;n dương N (N&lt;=200).</p>\n<p>_ N d&ograve;ng tiếp theo l&agrave; c&aacute;c cặp số nguy&ecirc;n (x,y) cho biết tọa độ của c&aacute;c chiếc m&aacute;y bay. (|x|,|y|&lt;=1000000000)</p>\n<h3>Output</h3>\n<p>_ Cho biết<em>&nbsp;chỉ số chắc chắn</em>&nbsp;của đội h&igrave;nh l&uacute;c đầu v&agrave; số thứ tự của chiếc m&aacute;y bay&nbsp;<strong>được</strong>&nbsp;<em>bắn rơi đầu ti&ecirc;n</em>&nbsp;(nếu c&oacute; nhiều m&aacute;y bay c&ugrave;ng độ an to&agrave;n th&igrave; chọn chiếc c&oacute; số thứ tự nhỏ nhất).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4<br />1 2<br />0 0 <br />1 0<br />2 0\n\n<strong>Output:</strong>\n3 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6922979d-faee-405b-bac9-c0426f3264bd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "C11TRCNTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef924f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "catalan-day-so-catalan",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CATALAN - Dãy số Catalan",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CATALAN - D&atilde;y số Catalan</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/catalan\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/catalan</a><br /><br /><br />\n<p>Cho số nguy&ecirc;n dương N, d&atilde;y Catalan cấp n l&agrave; d&atilde;y C(1), C(2) &hellip; C(2n+1) gồm c&aacute;c số nguy&ecirc;n kh&ocirc;ng &acirc;m thoả m&atilde;n : C(1) = C(2n+1) = 0 với i bất k&igrave; 1 &le; i &le; 2n th&igrave; C(i), C(i+1) hơn k&eacute;m nhau 1 đơn vị.</p>\n<p>Với mỗi n ta sắp xếp c&aacute;c d&atilde;y Catalan theo thứ tự từ điển, đ&aacute;nh số từ 1 trở đi . Y&ecirc;u cầu :</p>\n<p>1.Cho một d&atilde;y Catalan, h&atilde;y t&igrave;m thứ tự của d&atilde;y.</p>\n<p>2.Cho số nguy&ecirc;n dương k h&atilde;y t&igrave;m d&atilde;y c&oacute; thứ tự k</p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu ghi n. (n &lt;= 15)</p>\n<p>- D&ograve;ng hai ghi một d&atilde;y Catalan cấp n</p>\n<p>- D&ograve;ng 3 ghi một số nguy&ecirc;n dương k (k c&oacute; thể rất lớn nhưng đảm bảo lu&ocirc;n c&oacute; nghiệm)</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>- D&ograve;ng 1 ghi số thứ tự d&atilde;y ở d&ograve;ng 2 INPUT</p>\n<p>- D&ograve;ng 2 ghi d&atilde;y ứng với số thứ tự</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n0 1 2 3 2 1 2 1 0\n12</pre>\n<p><strong>Output:</strong> 12 0 1 2 3 2 1 2 1 0</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/49bd379a-9f89-42c8-9a27-0fd143059b11",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CATALANinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9250"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cbuying-chocolate-buying",
  "tags": [],
  "level": "BEGINNER",
  "title": "CBUYING - Chocolate Buying",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CBUYING - Chocolate Buying</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/cbuying\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/cbuying</a><br /><br /><br />\n<p>Những con b&ograve; rất th&iacute;ch ăn S&ocirc;-c&ocirc;-la , n&ecirc;n Farmer John quyết định mua một &iacute;t cho ch&uacute;ng.</p>\n<p>Cửa h&agrave;ng c&oacute; N loại s&ocirc;-c&ocirc;-la (được đ&aacute;nh số từ 1..N) với số lượng mỗi loại kh&ocirc;ng hạn chế. Loại thứ i c&oacute; gi&aacute; P_i($$) v&agrave; c&oacute; đ&uacute;ng C_i con b&ograve; muốn ăn loại S&ocirc;-c&ocirc;-la ấy. Farmer John c&oacute; B $$ để mua S&ocirc;-c&ocirc;-la cho lũ b&ograve;.</p>\n<p>Hỏi số b&ograve; tối đa m&agrave; Farmer John c&oacute; thể phục vụ l&agrave; bao nhi&ecirc;u ? Biết rằng mỗi con b&ograve; chỉ th&iacute;ch một loại s&ocirc;-c&ocirc; -la, v&agrave; n&oacute; chỉ được ăn loại s&ocirc;-c&ocirc;-la ấy.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n l&agrave; hai số nguy&ecirc;n N v&agrave; B.</p>\n<p>N d&ograve;ng tiếp theo , d&ograve;ng thứ i+1 l&agrave; hai số nguy&ecirc;n dương P_i v&agrave; C_i.</p>\n<h3>Output</h3>\n<p>Gồm một số duy nhất l&agrave; kết quả.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>5 50<br />5 3<br />1 1<br />10 4<br />7 2<br />60 1</pre>\n<pre><br /><br /><br /><strong>Output:</strong><br />8<br /><br /><strong>Giới hạn</strong><br /><br />1&lt;=N&lt;=10^5<br />1 &lt;= B &lt;= 10^18<br />1 &lt;= C_i &lt;= 10^18<br />1 &lt;= P_i &lt;= 10^18.<br /><br /><strong>Giải th&iacute;ch</strong>:<br />FJ sẽ mua như sau:<br />+Mua 3 g&oacute;i s&ocirc;-c&ocirc;-la loại 1 mất 3*5= 15$.<br />+Mua 1 g&oacute;i s&ocirc;-c&ocirc;-la loại 2 mất 1*1= 1$.<br />+Mua 2 g&oacute;i s&ocirc;-c&ocirc;-la loại 3 mất 2*10= 20$<br />+Mua 2 g&oacute;i s&ocirc;-c&ocirc;-la loại 4 mất 2*7= 14$.<br />Tổng cộng hết :15+1+20+14=50$, v&agrave; FJ đ&atilde; phục vụ được 8 con b&ograve;.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7dd7729c-79e8-481a-a371-360fbf480346",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CBUYINGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9251"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cheat-choi-bi-a-1-lo",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CHEAT - Chơi bi-a 1 lỗ",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CHEAT - Chơi bi-a 1 lỗ</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/cheat\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/cheat</a><br /><br /><br />\n<p>Mike chơi bi-a 1 lỗ rất giỏi n&ecirc;n kiếm được rất nhiều tiền độ banh . Nh&agrave; C&aacute;i mất nhiều tiền v&igrave; Mike lắm n&ecirc;n c&uacute; lắm n&ecirc;n họ quyết phải kiểm tra xem liệu Mike c&oacute; chơi gian hay kh&ocirc;ng ?<br />Thể thức chơi bi-a 1 lỗ l&agrave; như n&agrave;y : C&oacute; N vi&ecirc;n bi được đ&aacute;nh số từ 1 -&gt; N , đặt tr&ecirc;n b&agrave;n , người chơi phải đ&aacute;nh sao cho c&aacute;c vi&ecirc;n bi n&agrave;y lọt lỗ theo đ&uacute;ng thứ tự từ 1 -&gt; N . Vi&ecirc;n i sẽ phải v&agrave;o lỗ trước vi&ecirc;n i+1 . Để kiểm tra Mike , nh&agrave; C&aacute;i thu&ecirc; 1 tay th&aacute;m tử . Tay th&aacute;m tử n&agrave;y sẽ kiểm tra bằng c&aacute;ch l&agrave; thỉnh thoảng lại tiến lại c&aacute;i lỗ v&agrave; bốc l&ecirc;n vi&ecirc;n ở tr&ecirc;n c&ugrave;ng trong lỗ . Sau khi Mike đ&atilde; đ&aacute;nh hết c&aacute;c bi v&agrave;o lỗ rồi th&igrave; th&aacute;m tử sẽ bốc hết c&aacute;c vi&ecirc;n ở trong lỗ ra từ vi&ecirc;n tr&ecirc;n c&ugrave;ng tới vi&ecirc;n dưới c&ugrave;ng . H&atilde;y gi&uacute;p th&aacute;m tử x&aacute;c định xem liệu Mike c&oacute; chơi gian kh&ocirc;ng ? ( Xem test v&iacute; dụ để hiểu r&otilde; hơn ) .<br /><br /><em>Download test v&agrave; solution tại&nbsp;<a href=\"https://vn.spoj.com/content/cheat.zip\">đ&acirc;y</a></em></p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : số nguy&ecirc;n dương N ( N &le; 100000 ) . N d&ograve;ng tiếp theo mỗi d&ograve;ng gồm 1 số nguy&ecirc;n ghi ra số chỉ tr&ecirc;n tr&aacute;i bi m&agrave; th&aacute;m tử lần lượt bốc l&ecirc;n được .</p>\n<h3>Output</h3>\n<p>Nếu x&aacute;c định được Mike chơi gian th&igrave; ghi ra &ldquo;YES&rdquo; , ngược lại ghi &ldquo;NO&rdquo; .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3\n1\n2\n\n<strong>Output:</strong>\nYES\n</pre>\n<p>Giải th&iacute;ch : Khi th&aacute;m tử bốc được bi số 3 l&ecirc;n th&igrave; c&oacute; nghĩa l&agrave; bi số 1 , 2 đ&atilde; v&agrave;o lỗ rồi . V&agrave; như vậy bi tr&ecirc;n c&ugrave;ng sau khi bốc bi số 3 ra phải l&agrave; bi số 2 nhưng th&aacute;m tử lại bốc ra được bi số 1 -&gt; v&ocirc; l&yacute; -&gt; Mike đ&atilde; ăn gian .</p>\n<pre><strong>Input:</strong>\n6\n1\n3\n5\n6\n4\n2\n\n<strong>Output:</strong>\nNO\n</pre>\n<p>C&oacute; thể xảy ra trường hợp th&aacute;m tử bốc vi&ecirc;n bi 1, 3, 5 ngay khi Mike vừa đ&aacute;nh ch&uacute;ng v&agrave;o lỗ. Sau đ&oacute; th&aacute;m tử bốc những vi&ecirc;n bi c&ograve;n lại. Do đ&oacute; kh&ocirc;ng khẳng định được Mike đ&atilde; ăn gian!</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b5df7f5c-d4be-4425-b427-2518e0413bb8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CHEATinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9252"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "cheer-dong-vien-dan-bo",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "CHEER - Động viên đàn bò",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CHEER - Động vi&ecirc;n đ&agrave;n b&ograve;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/cheer\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/cheer</a><br /><br /><br />\n<p>B&aacute;c John dạo n&agrave;y lười đến nỗi kh&ocirc;ng muốn bảo tr&igrave; c&aacute;c con đường dẫn b&aacute;c đến thăm N (5 &lt;= N &lt;= 10,000) c&aacute;nh đồng (đ&aacute;nh số từ 1 đến N) nữa. Mỗi c&aacute;nh đồng l&agrave; nơi ở của một c&ocirc; b&ograve;. B&aacute;c John c&oacute; kế hoạch loại bỏ nhiều nhất P (N-1 &lt;= P &lt;= 100,000) con đường sao cho c&aacute;c c&aacute;nh đồng vẫn li&ecirc;n th&ocirc;ng.</p>\n<p>Ban phải x&aacute;c định N-1 con đường cần giữ lại.</p>\n<p>Đường nối hai chiều j nối giữa c&aacute;nh đồng S<sub>j</sub>&nbsp;v&agrave; E<sub>j</sub>&nbsp;(1 &lt;= S<sub>j</sub>&nbsp;&lt;= N; 1 &lt;= E<sub>j</sub>&nbsp;&lt;= N; S<sub>j</sub>&nbsp;# E<sub>j</sub>) v&agrave; cần L<sub>j</sub>&nbsp;(0 &lt;= L<sub>j</sub>&nbsp;&lt;= 1000) thời gian để di chuyển. Kh&ocirc;ng c&oacute; hai c&aacute;nh đồng n&agrave;o được nối trực tiếp bởi nhiều hơn một con đường.</p>\n<p>Đ&agrave;n b&ograve; buồn v&igrave; hệ thống giao th&ocirc;ng của ch&uacute;ng sắp bị r&uacute;t gọn. Bạn phải thăm mỗi c&ocirc; b&ograve; &iacute;t nhất một lần trong ng&agrave;y để động vi&ecirc;n. Mỗi lần thăm c&aacute;nh đồng i (d&ugrave; chỉ đi ngang qua), bạn phải tr&ograve; chuyện với c&ocirc; b&ograve; trong thời gian C<sub>i</sub>&nbsp;(1 &lt;= C<sub>i</sub>&nbsp;&lt;= 1000).</p>\n<p>Bạn sẽ nghỉ lại đ&ecirc;m tr&ecirc;n c&ugrave;ng một c&aacute;nh đồng (bạn sẽ được chọn) cho đến khi đ&agrave;n b&ograve; đều đ&atilde; hết bị suy sụp. Bạn sẽ tr&ograve; chuyện với c&ocirc; b&ograve; trong c&aacute;nh đồng m&agrave; bạn nghỉ lại &iacute;t nhất 2 lần v&agrave;o buổi s&aacute;ng thức dậy v&agrave; v&agrave;o buổi tối khi trở về nghỉ.</p>\n<p>Giả dụ b&aacute;c John theo lời khuy&ecirc;n của bạn giữ lại một số con đường v&agrave; bạn sẽ chọn c&aacute;nh đồng tối ưu nhất để nghỉ lại, h&atilde;y x&aacute;c định thời gian nhỏ nhất bạn cần để thăm tất cả đ&agrave;n b&ograve; &iacute;t nhất một lần trong ng&agrave;y.</p>\n<h3>Dữ liệu</h3>\n<p>* D&ograve;ng 1: Hai số nguy&ecirc;n N v&agrave; P c&aacute;ch nhau bởi khoảng trắng</p>\n<p>* D&ograve;ng 2..N+1: D&ograve;ng i+1 chứa một số nguy&ecirc;n duy nhất C<sub>i</sub></p>\n<p>* D&ograve;ng N+2..N+P+1: D&ograve;ng N+j+1 chứa ba số nguy&ecirc;n ph&acirc;n biệt: S<sub>j</sub>, E<sub>j</sub>&nbsp;v&agrave; L<sub>j</sub></p>\n<h3>Kết quả</h3>\n<p>* D&ograve;ng 1: Một số nguy&ecirc;n duy nhất, tổng thời gian cần để thăm tất cả đ&agrave;n b&ograve; (bao gồm hai lần thăm c&ocirc; b&ograve; ở nơi m&agrave; bạn nghỉ).</p>\n<h3>V&iacute; dụ</h3>\n<pre>Dữ liệu:\n5 7\n10\n10\n20\n6\n30\n1 2 5\n2 3 5\n2 4 12\n3 4 17\n2 5 15\n3 5 6\n4 5 12\n\nKết quả:\n176</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/91c5b058-2205-4ca1-a89c-48830735386a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CHEERinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9253"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "chntower-thap-ha-noi",
  "tags": [],
  "level": "BEGINNER",
  "title": "CHNTOWER - Tháp Hà Nội",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CHNTOWER - Th&aacute;p H&agrave; Nội</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/chntower\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/chntower</a><br /><br /><br />\n<p>B&agrave;i to&aacute;n Th&aacute;p H&agrave; Nội trở th&agrave;nh nổi tiếng v&agrave;o năm 1883, sau b&agrave;i b&aacute;o của Luca l&agrave; một nh&agrave; to&aacute;n học người Ph&aacute;p. Th&aacute;p l&agrave; mỗi cọc đĩa đường k&iacute;nh giảm dần từ dưới l&ecirc;n tr&ecirc;n . B&agrave;i to&aacute;n đặt ra l&agrave; cần chuyển chồng đĩa sang một cọc kh&aacute;c sử dụng một cọc trung gian sao cho trong qu&aacute; tr&igrave;nh chuyển đĩa kh&ocirc;ng c&oacute; đĩa n&agrave;o c&oacute; đường k&iacute;nh lớn hơn bị đặt l&ecirc;n tr&ecirc;n đĩa c&oacute; đường k&iacute;nh nhỏ hơn.</p>\n<p>Yều cầu: Giải 3 to&aacute;n th&aacute;p H&agrave; Nội tổng qu&aacute;t. Cho M cọc v&agrave;&nbsp; th&aacute;p N đĩa ( 3 &lt; M &lt;= 64 , 1 &lt;= N &lt;= 64) , h&atilde;y x&aacute;c định số lần chuyển đĩa tối thiểu cần thực hiện để chuyển chồng đĩa từ cọc xuất ph&aacute;t sang cọc đ&iacute;ch sử dụng M-2 cọc c&ograve;n lại như cọc trung gian.</p>\n<h3>Input</h3>\n<p>Gồm nhiều d&ograve;ng, mỗi d&ograve;ng chứa 2 số nguy&ecirc;n N,M ghi c&aacute;ch nhau theo thứ tự l&agrave; số đĩa v&agrave; số cọc trong b&agrave;i to&aacute;n th&aacute;p H&agrave; Nội</p>\n<h3>Output</h3>\n<p>Mỗi d&ograve;ng ghi số lần chuyển tối thiểu cần thực hiện</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 3\n<strong>Output:</strong>\n31</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb4e0332-6895-4227-9c88-b291e985c1cd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CHNTOWERinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9254"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "comnet-voi-2013-mang-truyen-thong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "COMNET - VOI 2013 - Mạng truyền thông",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>COMNET - VOI 2013 - Mạng truyền th&ocirc;ng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/comnet\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/comnet</a><br /><br /><br />\n<p>&nbsp;&nbsp;&nbsp; Tổng c&ocirc;ng ty Z gồm N c&ocirc;ng ty con, đ&aacute;nh số từ 1-N. Mỗi c&ocirc;ng ty con c&oacute; một m&aacute;y chủ. Để đảm bảo truyền tin giữa c&aacute;c c&ocirc;ng ty, Z thu&ecirc; M đường truyền tin để kết nối N m&aacute;y chủ th&agrave;nh một mạng m&aacute;y t&iacute;nh của Tổng c&ocirc;ng ty. Kh&ocirc;ng c&oacute; 2 đường truyền nối c&ugrave;ng 1 cặp m&aacute;y chủ. Đường truyền i nối m&aacute;y chủ của 2 c&ocirc;ng ty u<sub>i</sub>, v<sub>i</sub>&nbsp;c&oacute; chi ph&iacute; l&agrave; w<sub>i</sub>. Mạng m&aacute;y t&iacute;nh c&oacute; t&iacute;nh&nbsp;<em>th&ocirc;ng suốt</em>, nghĩa l&agrave; từ một m&aacute;y chủ c&oacute; thể truyền tin đến một m&aacute;y chủ bất k&igrave; kh&aacute;c bằng đường truyền trực tiếp hoặc qua nhiều đường trung gian.</p>\n<p>&nbsp;&nbsp;&nbsp; Một đường truyền gọi l&agrave;&nbsp;<em>kh&ocirc;ng tiềm năng</em>&nbsp;nếu như : một mặt, việc loại bỏ đường truyền n&agrave;y kh&ocirc;ng l&agrave;m mất t&iacute;nh th&ocirc;ng suốt; mặt kh&aacute;c, n&oacute; phải c&oacute; t&iacute;nh kh&ocirc;ng tiềm năng, nghĩa l&agrave; kh&ocirc;ng thuộc bất cứ mạng con th&ocirc;ng suốt gồm N m&aacute;y chủ v&agrave; N-1 đường truyền tin với tổng chi ph&iacute; thu&ecirc; bao nhỏ nhất n&agrave;o của mạng m&aacute;y t&iacute;nh.</p>\n<p>&nbsp;&nbsp;&nbsp; Trong thời gian tới, chi ph&iacute; thu&ecirc; bao của một số đường truyền tin thay đổi. Tổng c&ocirc;ng ty muốn x&aacute;c định với chi ph&iacute; mới th&igrave; đường truyền thứ k c&oacute; l&agrave; đường kh&ocirc;ng tiềm năng hay kh&ocirc;ng để xem x&eacute;t chấm dựt việc thu&ecirc; đường truyền n&agrave;y.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu l&agrave; T &ndash; số testcase. T nh&oacute;m d&ograve;ng, mỗi nh&oacute;m cho th&ocirc;ng tin về một testcase.</li>\n<li>D&ograve;ng thứ nhất gồm 3 số nguy&ecirc;n dương N, M, Q (Q &lt;= 30).</li>\n<li>D&ograve;ng thứ i trong M d&ograve;ng tiếp theo chứa 3 số nguy&ecirc;n dương u<sub>i</sub>, v<sub>i</sub>, w<sub>i</sub>&nbsp;(u<sub>i</sub>&nbsp;&ne; v<sub>i</sub>, w<sub>i</sub>&nbsp;&lt; 10<sup>9</sup>).</li>\n<li>D&ograve;ng thứ j trong Q d&ograve;ng tiếp theo m&ocirc; tả giả định thứ j:\n<ul>\n<li>Số đầu ti&ecirc;n l&agrave; chỉ số k<sub>j</sub>&nbsp;của đường truyền tin cần xem x&eacute;t</li>\n<li>Tiếp theo l&agrave; s<sub>j</sub>&nbsp;( s<sub>j</sub>&nbsp;&lt;= 100) cho biết số lượng đường truyền c&oacute; chi ph&iacute; thu&ecirc; mới</li>\n<li>Cuối c&ugrave;ng l&agrave; s<sub>j</sub>&nbsp;cặp số nguy&ecirc;n dương t<sub>p</sub>, c<sub>p</sub>&nbsp;cho biết đường truyền thứ t<sub>p</sub>&nbsp;c&oacute; chi ph&iacute; thu&ecirc; mới l&agrave; c<sub>p</sub>&nbsp;(c<sub>p</sub>&nbsp;&lt; 10<sup>9</sup>).</li>\n</ul>\n</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm T nh&oacute;m d&ograve;ng, mỗi nh&oacute;m gồm Q d&ograve;ng. Mỗi d&ograve;ng l&agrave; c&acirc;u trả lời cho giả định tương ứng trong input. Ghi YES nếu c&acirc;u trả lời l&agrave; khẳng định v&agrave; NO trong trường hợp ngược lại.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<pre>1</pre>\n<pre>3 3 2</pre>\n<pre>1 2 1</pre>\n<pre>1 3 2</pre>\n<pre>2 3 3</pre>\n<pre>3 2 2 4 3 4</pre>\n<pre>1 1 1 4\n\n<strong>Output:</strong>\n</pre>\n<pre>NO</pre>\n<pre>YES</pre>\n<h3>Giới hạn</h3>\n<ul>\n<li>30% số test đầu c&oacute; 1 &le; N &le; 100;</li>\n<li>30% số test tiếp theo c&oacute; 1 &le; N &le; 10<sup>4</sup>&nbsp;v&agrave; 1 &le; M &le; 10<sup>5</sup>;</li>\n<li>40% số test c&ograve;n lại c&oacute; 1 &le; N &le; 10<sup>5</sup>&nbsp;v&agrave; 1 &le; M &le; 10<sup>6</sup>.</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9be41be3-38cc-4f6a-aab0-2f66e086ea5b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COMNETinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9255"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "countcbg-count-n",
  "tags": [],
  "level": "BEGINNER",
  "title": "COUNTCBG - COUNT N",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>COUNTCBG - COUNT N</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Với 1 số tự nhi&ecirc;n N(1&lt;= N &lt;= 10^9) ta c&oacute; thể ph&acirc;n t&iacute;ch n&oacute; th&agrave;nh tổng của một số số tự nhi&ecirc;n li&ecirc;n tiếp( tất nhi&ecirc;n những số n&agrave;y phải nhỏ hơn N). V&iacute; dụ với N = 5 ta c&oacute; duy nhất 1 c&aacute;ch ph&acirc;n t&iacute;ch l&agrave; 5 = 2+3. B&agrave;i to&aacute;n đặt ra l&agrave; cho số tự nhi&ecirc;n N, h&atilde;y cho biết c&oacute; bao nhi&ecirc;u c&aacute;ch ph&acirc;n t&iacute;ch số tự nhi&ecirc;n N th&agrave;nh tổng của c&aacute;c số tự nhi&ecirc;n li&ecirc;n tiếp.</p>\n<h3>Input</h3>\n<p>Gồm nhiều d&ograve;ng, mỗi d&ograve;ng chứa một số nguy&ecirc;n N. (Giới hạn : số d&ograve;ng &lt;= 100)</p>\n<h3>Output</h3>\n<p>Mỗi d&ograve;ng ghi một số nguy&ecirc;n l&agrave; số c&aacute;ch ph&acirc;n t&iacute;ch số N đọc được ở d&ograve;ng tương ứng trong input.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n12\n5\n4\n13\n45\n100\n234\n3\n175\n\n<strong>Output:</strong>\n1\n1\n0\n1\n5\n2\n5\n1\n5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0800d8df-acb0-495f-bf57-29d7567d96af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COUNTCBGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9256"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "countpl-dem-so-palindrome",
  "tags": [],
  "level": "BEGINNER",
  "title": "COUNTPL - Đếm số Palindrome",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>COUNTPL - Đếm số Palindrome</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/countpl\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/countpl</a><br /><br /><br />\n<p>Palindrome l&agrave; x&acirc;u k&yacute; tự m&agrave; nếu đọc n&oacute; từ tr&aacute;i sang phải cũng như từ phải sang tr&aacute;i ta được c&ugrave;ng một x&acirc;u. Một x&acirc;u k&yacute; tự bất kỳ lu&ocirc;n c&oacute; thể biểu diễn như l&agrave; một d&atilde;y c&aacute;c palindrome nếu như ta coi x&acirc;u chỉ gồm một k&yacute; tự lu&ocirc;n l&agrave; một palindrome. V&iacute; dụ: X&acirc;u &lsquo;bobseesanna&rsquo; c&oacute; thể biểu diễn dưới dạng d&atilde;y c&aacute;c palindrome theo nhiều c&aacute;ch, chẳng hạn:</p>\n<p>&lsquo;bobseesanna&rsquo; = &lsquo;bob&rsquo; + &lsquo;sees&rsquo; + &lsquo;anna&rsquo;</p>\n<p>&lsquo;bobseesanna&rsquo; = &lsquo;bob&rsquo; + &lsquo;s&rsquo; + &lsquo;ee&rsquo; + &rsquo;s&rsquo; + &lsquo;anna&rsquo;</p>\n<p>&lsquo;bobseesanna&rsquo; = &lsquo;b&rsquo; +&rsquo;o&rsquo; + &lsquo;b&rsquo; + &lsquo;sees&rsquo; + &lsquo;a&rsquo; + &lsquo;n&rsquo; + &lsquo;n&rsquo; + &lsquo;a&rsquo;</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>Cho x&acirc;u k&yacute; tự s, cần t&igrave;m c&aacute;ch biểu diễn x&acirc;u s dưới dạng một d&atilde;y gồm số &iacute;t nhất c&aacute;c palindrome. V&iacute; dụ: Cho s=&lsquo;bobseesanna&rsquo;, do ta c&oacute;&nbsp; &lsquo;bobseesanna&rsquo; = &lsquo;bob&rsquo; + &lsquo;sees&rsquo; + &lsquo;anna&rsquo; v&agrave; kh&ocirc;ng thể biểu diễn &lsquo;bobseesanna&rsquo; bởi &iacute;t hơn l&agrave; 3 palindrome n&ecirc;n biểu diễn n&agrave;y ch&iacute;nh l&agrave; biểu diễn cần t&igrave;m.</p>\n<h3>Input</h3>\n<p>Gồm một d&ograve;ng chứa x&acirc;u k&yacute; tự s gồm kh&ocirc;ng qu&aacute; 255 k&yacute; tự.</p>\n<h3>Output</h3>\n<p>Gồm một d&ograve;ng duy nhất ghi k l&agrave; số lượng &iacute;t nhất c&aacute;c palindrome trong biểu diễn t&igrave;m được.</p>\n<h3>Example</h3>\n<h4><strong>Input:</strong></h4>\n<pre><br />bobseesanna<br /><br /></pre>\n<h4>Output:</h4>\n<pre>3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bb78bff9-4fad-4976-b0f9-5c94692fc785",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COUNTPLinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9257"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ct-counting-triangles",
  "tags": [],
  "level": "BEGINNER",
  "title": "CT - Counting triangles",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CT - Counting triangles</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Consider a 2D integer grid with lower left corner at (0, 0) and upper right corner at (X, Y). We are interested in isosceles right triangles which all the 3 corners at the grid node (integer coordinates). Your task is to count the number of those triangles.</p>\n<h3>Input</h3>\n<p>The input begins with C &ndash; number of test cases.<br />Each test case consists of X, Y.</p>\n<h3>Output</h3>\n<p>For each test case, output the result in a line.</p>\n<h3>Limits</h3>\n<p>C &lt;= 20<br />0 &lt;= X, Y &lt;= 1000</p>\n<p><br />Sample input<br />2<br />0 3<br />1 1</p>\n<p><br />Sample output<br />0<br />4</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5a48008b-70d3-4dc0-8db4-a8ac567a624b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9258"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ctnbulls-bulls-and-cows",
  "tags": [],
  "level": "BEGINNER",
  "title": "CTNBULLS - Bulls and Cows",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CTNBULLS - Bulls and Cows</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/ctnbulls\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/ctnbulls</a><br /><br /><br />\n<p>N&ocirc;ng d&acirc;n john muốn sắp xếp n con b&ograve;(bao gồm cả b&ograve; đực v&agrave; b&ograve; c&aacute;i) của &ocirc;ng ta tr&ecirc;n 1 h&agrave;ng .&Ocirc;ng ta biết rằng những con b&ograve; đực rất hung hăng &ndash; Nếu 2 con b&ograve; đực đứng qu&aacute; gần nhau th&igrave; ch&uacute;ng sẽ trở n&ecirc;n hung dữ v&agrave; bắt đầu h&uacute;c nhau , v&igrave; thế ch&uacute;ng sẽ ph&aacute; h&ograve;ng mất trật tự tr&ecirc;n h&agrave;ng m&agrave; &ocirc;ng ta vừa sắp xếp được.</p>\n<p>Theo kinh nghiệm l&acirc;u năm của m&igrave;nh , john biết được nếu ở giữa hai con b&ograve; đực c&oacute; &iacute;t nhất K con b&ograve; c&aacute;i th&igrave; sẽ ngăn chặn được việc ch&uacute;ng h&uacute;c nhau (+_+)</p>\n<p>V&igrave; thế , &ocirc;ng ta nhờ c&aacute;c Vcoders gi&uacute;p đỡ để t&iacute;nh to&aacute;n xem c&oacute; bao nhi&ecirc;u c&aacute;ch sắp xếp đ&agrave;n b&ograve; của &ocirc;ng ta lại sao cho kh&ocirc;ng c&oacute; &ldquo;chiến tranh&rdquo; xảy ra giữa những ch&uacute; b&ograve; (^_^), (Tất cả những con b&ograve; đực v&agrave; những con b&ograve; c&aacute;i đều giống nhau). Hai d&atilde;y (&nbsp;B1..Bn&nbsp;) v&agrave; (A1..An&nbsp;&nbsp;) được cho l&agrave; kh&aacute;c nhau nếu tồn tại một vị tr&iacute; I (1&lt;=i&lt;=n) sao cho&nbsp;Ai &lt;&gt; Bi&nbsp;</p>\n<p>1&lt;=N&lt;=100000. 0&lt;=k&lt;=n.</p>\n<p>Input : gồm 1 d&ograve;ng duy nhất chứa 2 số n v&agrave; k c&aacute;ch nhau 1 dấu c&aacute;ch</p>\n<p>Output: gồm duy nhất một số l&agrave; kết quả theo modun 2111992</p>\n<p>&nbsp;</p>\n<p>Eg:</p>\n<p>Input :</p>\n<p>&nbsp;</p>\n<p>4 2</p>\n<p>&nbsp;</p>\n<p>Output</p>\n<p>&nbsp;</p>\n<p>6</p>\n<p>&nbsp;</p>\n<p>Giải th&iacute;ch output(C=b&ograve; c&aacute;i , B:b&ograve; đực)</p>\n<pre>CCCC</pre>\n<pre>BCCC</pre>\n<pre>CBCC</pre>\n<pre>CCBC</pre>\n<pre>CCCB</pre>\n<pre>BCCB</pre>\n<p><em>C&oacute; 1/3 số test với n&lt;=15</em></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3fc61572-b226-4262-9ad1-76ad9e0dda8c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTNBULLSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9259"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ctree-to-mau-nho-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "CTREE - Tô màu nhỏ nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>CTREE - T&ocirc; m&agrave;u nhỏ nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/ctree\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/ctree</a><br /><br /><br />\n<p>Cho một c&acirc;y gồm N n&uacute;t, h&atilde;y t&igrave;m c&aacute;ch g&aacute;n mỗi đỉnh một nh&atilde;n nguy&ecirc;n dương sao cho:<br />+ Hai n&uacute;t c&oacute; cạnh nối được g&aacute;n bởi hai nh&atilde;n kh&aacute;c nhau.<br />+ Tổng gi&aacute; trị c&aacute;c nh&atilde;n l&agrave; nhỏ nhất.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi N ( 1 &le; N &le; 10000).<br />N-1 d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi hai n&uacute;t l&agrave; hai đầu m&uacute;t của một cạnh thuộc c&acirc;y.</p>\n<h3>Output</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi S l&agrave; tổng gi&aacute; trị nh&atilde;n t&igrave;m được.<br />N d&ograve;ng tiếp theo, d&ograve;ng thứ i ghi nh&atilde;n g&aacute;n cho đỉnh i trong ph&eacute;p g&aacute;n tối ưu t&igrave;m được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n8\n1 2\n1 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\n<strong>Output:</strong>\n11\n3\n1\n1\n1\n2\n1\n1\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/18c5b00e-2558-47b0-b136-9ec5600ac8ec",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTREEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dhexp-bieu-thuc",
  "tags": [],
  "level": "BEGINNER",
  "title": "DHEXP - Biểu thức",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DHEXP - Biểu thức</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dhexp\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dhexp</a><br /><br /><br />\n<p>Một d&atilde;y gồm&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n</sub></em>&nbsp;được viết th&agrave;nh một h&agrave;ng ngang, giữa hai số li&ecirc;n tiếp c&oacute; một khoảng trắng, như vậy c&oacute; tất cả (<em>n&shy;</em>-1) khoảng trắng. Người ta muốn đặt&nbsp;<em>k</em>&nbsp;dấu cộng v&agrave; (<em>n-</em>1-<em>k</em>) dấu trừ v&agrave;o (<em>n&shy;</em>-1) khoảng trắng đ&oacute; để nhận được một biểu thức c&oacute; gi&aacute; trị lớn nhất.</p>\n<p>V&iacute; dụ, với d&atilde;y gồm 5 số nguy&ecirc;n 28, 9, 5, 1, 69 v&agrave;&nbsp;<em>k</em>&nbsp;= 2 th&igrave; c&aacute;ch đặt 28+9-5-1+69 l&agrave; biểu thức c&oacute; gi&aacute; trị lớn nhất.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho d&atilde;y gồm&nbsp;<em>n<sub>&nbsp;</sub></em>số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n</sub></em>&nbsp;v&agrave; số nguy&ecirc;n dương&nbsp;<em>k</em>, h&atilde;y t&igrave;m c&aacute;ch đặt&nbsp;<em>k</em>&nbsp;dấu cộng v&agrave; (<em>n-</em>1-<em>k</em>) dấu trừ v&agrave;o (<em>n&shy;</em>-1) khoảng trắng để nhận được một biểu thức c&oacute; gi&aacute; trị lớn nhất.</p>\n<h3>Input</h3>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng đầu chứa hai số nguy&ecirc;n dương&nbsp;<em>n, k</em>&nbsp;(<em>k</em>&nbsp;&lt;&nbsp;<em>n</em>);</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng thứ hai chứa&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n&nbsp;</sub></em>(<em>a<sub>n&nbsp;</sub></em>&le; 10<sup>6</sup>)</p>\n<h3>Output</h3>\n<p>Một số nguy&ecirc;n l&agrave; gi&aacute; trị của biểu thức đạt được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p><strong>5 2</strong></p>\n<pre><strong>28 9 5 1 69</strong></pre>\n<pre><strong>Output:</strong></pre>\n<pre><strong>100</strong></pre>\n<pre><strong>&nbsp;</strong></pre>\n<pre>Ghi ch&uacute;:</pre>\n<ul>\n<li>C&oacute; 50% số test ứng với 50% số điểm c&oacute; <em>n </em>&le; 10<sup>5</sup> v&agrave; <em>k </em>= 1;</li>\n<li>C&oacute; 50% số test c&ograve;n lại ứng với 50% số điểm c&oacute; <em>n </em>&le; 10<sup>5</sup>;</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9dbe0668-c9bf-4320-ac72-c70d32af80c6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DHEXPinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dhlock-khoa-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "DHLOCK - Khóa số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DHLOCK - Kh&oacute;a số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dhlock\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dhlock</a><br /><br /><br />\n<p>Bạn nhận được một hộp qu&agrave; với một kh&oacute;a số ở b&ecirc;n ngo&agrave;i. Th&ocirc;ng tin hiển thị tr&ecirc;n kh&oacute;a l&agrave; một d&atilde;y&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n</sub>,&nbsp;</em>c&aacute;c số nằm trong phạm vi từ 0 đến&nbsp;<em>k</em>. C&oacute; (<em>n</em>+2) ph&iacute;m d&ugrave;ng để thay đổi gi&aacute; trị c&aacute;c số, một ph&iacute;m nằm b&ecirc;n tr&aacute;i kh&oacute;a, một ph&iacute;m nằm b&ecirc;n phải kh&oacute;a, dưới mỗi số c&oacute; một ph&iacute;m. Bạn nhanh ch&oacute;ng nhận ra rằng:</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n tr&aacute;i kh&oacute;a th&igrave; gi&aacute; trị tất cả c&aacute;c số tr&ecirc;n kh&oacute;a tăng l&ecirc;n 1, nếu số n&agrave;o đang c&oacute; gi&aacute; trị l&agrave;&nbsp;<em>k</em>&nbsp;th&igrave; sau khi bấm n&oacute; nhận gi&aacute; trị 0. V&iacute; dụ, nếu d&atilde;y l&agrave; (10, 9, 0) v&agrave;&nbsp;<em>k</em>&nbsp;= 10, khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n tr&aacute;i kh&oacute;a th&igrave; trạng th&aacute;i mới của d&atilde;y l&agrave; (0, 10, 1).</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n phải kh&oacute;a th&igrave; tất cả c&aacute;c số dịch chuyển đi sang b&ecirc;n phải, trừ số cuối c&ugrave;ng, số cuối c&ugrave;ng trở th&agrave;nh số đầu ti&ecirc;n. V&iacute; dụ, nếu d&atilde;y l&agrave; (10, 9, 0) v&agrave;&nbsp;<em>k</em>&nbsp;= 10, khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n phải kh&oacute;a th&igrave; trạng th&aacute;i mới của d&atilde;y l&agrave; (0, 10, 9).</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n dưới số thứ&nbsp;<em>i</em>&nbsp;(<em>i=</em>1, 2,...,&nbsp;<em>n</em>) th&igrave; gi&aacute; trị số thứ&nbsp;<em>i</em>&nbsp;tr&ecirc;n kh&oacute;a tăng l&ecirc;n 1, nếu số đang c&oacute; gi&aacute; trị l&agrave;&nbsp;<em>k</em>&nbsp;th&igrave; sau khi bấm n&oacute; nhận gi&aacute; trị 0. V&iacute; dụ, nếu d&atilde;y l&agrave; (10, 9, 0) v&agrave;&nbsp;<em>k</em>&nbsp;= 10, khi bấm v&agrave;o ph&iacute;m nằm b&ecirc;n dưới số thứ 2 th&igrave; trạng th&aacute;i mới của d&atilde;y l&agrave; (10, 10, 0).</p>\n<p>Tr&ecirc;n tờ bưu thiếp gửi k&egrave;m chiếc hộp c&oacute; ghi một d&atilde;y&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n&nbsp;<em>b</em><sub>1</sub>,&nbsp;<em>b</em><sub>2</sub>,...,<em>&nbsp;b<sub>n</sub></em>&nbsp;ch&iacute;nh l&agrave; mật m&atilde; để mở được chiếc hộp. Chiếc hộp sẽ được mở nếu th&ocirc;ng tin hiển thị tr&ecirc;n kh&oacute;a số l&agrave; d&atilde;y&nbsp;<em>b</em><sub>1</sub>,&nbsp;<em>b</em><sub>2</sub>,...,<em>&nbsp;b<sub>n</sub></em>.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho hai d&atilde;y số nguy&ecirc;n&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n</sub></em>,&nbsp;<em>b</em><sub>1</sub>,&nbsp;<em>b</em><sub>2</sub>,...,<em>&nbsp;b<sub>n</sub></em>&nbsp;v&agrave; số nguy&ecirc;n dương&nbsp;<em>k</em>, h&atilde;y t&igrave;m c&aacute;ch bấm &iacute;t lần nhất để mở được chiếc hộp.</p>\n<h3>Input</h3>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng đầu chứa hai số nguy&ecirc;n dương&nbsp;<em>n, k</em>;</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng thứ hai chứa&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><sub>1</sub>,&nbsp;<em>a</em><sub>2</sub>,...,<em>&nbsp;a<sub>n&nbsp;</sub></em>(<em>a<sub>n&nbsp;</sub></em>&le;&nbsp;<em>k</em>);</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng thứ ba chứa&nbsp;<em>n</em>&nbsp;số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>b</em><sub>1</sub>,&nbsp;<em>b</em><sub>2</sub>,...,<em>&nbsp;b<sub>n&nbsp;</sub></em>(<em>b<sub>n&nbsp;</sub></em>&le;&nbsp;<em>k</em>)</p>\n<h3>Output</h3>\n<p>Một số nguy&ecirc;n l&agrave; số lần bấm &iacute;t lần nhất để mở được chiếc hộp</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p><strong>3 10</strong></p>\n<p><strong>10 9 0</strong></p>\n<pre><strong>1 0 0</strong>\n<strong>Output:</strong>\n<strong>3</strong></pre>\n<pre><strong>&nbsp;</strong></pre>\n<p><strong>Ghi ch&uacute;:</strong></p>\n<ul>\n<li>C&oacute; 20% số test ứng với 20% số điểm c&oacute; <em>n </em>= 3 v&agrave; <em>k</em> &le; 10;</li>\n<li>C&oacute; 40% số test ứng với 40% số điểm c&oacute; <em>n </em>&le; 30 v&agrave; <em>k</em> &le; 1000;</li>\n<li>C&oacute; 40% số test c&ograve;n lại ứng với 40% số điểm c&oacute; <em>n </em>&le; 300 v&agrave; <em>k</em> &le; 10<sup>6</sup></li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/16a53c64-4818-4370-b311-904cac4ffe2f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DHLOCKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dhloco-tro-choi-lo-co",
  "tags": [],
  "level": "BEGINNER",
  "title": "DHLOCO - Trò chơi lò cò",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DHLOCO - Tr&ograve; chơi l&ograve; c&ograve;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dhloco\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dhloco</a><br /><br /><br />\n<p>Carnaval Hạ Long 2015 với&nbsp;chủ đề &ldquo;Hội tụ tinh hoa - Lan tỏa nụ cười&rdquo;, điểm mới của lễ hội l&agrave; sự song h&agrave;nh giữa biểu diễn nghệ thuật &ldquo;Nơi tinh hoa hội tụ&rdquo; v&agrave; diễu h&agrave;nh đường phố &ldquo;Nụ cười Hạ Long&rdquo; với sự g&oacute;p mặt của hơn 2000 diễn vi&ecirc;n quần ch&uacute;ng. C&oacute; rất nhiều chương tr&igrave;nh vui chơi được tổ chức, một trong những tr&ograve; chơi thu h&uacute;t được nhiều du kh&aacute;ch tham gia đ&oacute; l&agrave; tr&ograve; chơi nhảy l&ograve; c&ograve;, cụ thể: người chơi cần vượt qua một đoạn đường d&agrave;i&nbsp;<em>n</em>&nbsp;m&eacute;t, mỗi bước, người chơi c&oacute; ba c&aacute;ch nhảy với độ d&agrave;i bước nhảy tương ứng l&agrave; 1 m&eacute;t, 2 m&eacute;t, 3 m&eacute;t. Một c&aacute;ch đi chuyển đ&uacute;ng l&agrave; d&atilde;y c&aacute;c bước nhảy c&oacute; tổng đ&uacute;ng bằng&nbsp;<em>n</em>.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho&nbsp;<em>n<sub>&nbsp;</sub></em>v&agrave;&nbsp;<em>M</em>, gọi&nbsp;<em>K</em>&nbsp;l&agrave; số c&aacute;ch đi chuyển đ&uacute;ng kh&aacute;c nhau để đi hết đoạn đường&nbsp;<em>n</em>&nbsp;m&eacute;t, h&atilde;y t&iacute;nh phần dư của&nbsp;<em>K</em>&nbsp;chia&nbsp;<em>M</em>.</p>\n<h3>Input</h3>\n<p>gồm một d&ograve;ng chứa hai số nguy&ecirc;n dương&nbsp;<em>n</em>,&nbsp;<em>M&nbsp;</em>(<em>M</em>&nbsp;&le; 2015);</p>\n<h3>Output</h3>\n<p>một số nguy&ecirc;n l&agrave; phần dư của&nbsp;<em>K</em>&nbsp;chia&nbsp;<em>M</em>.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n<strong>5 100</strong>\n\n<strong>Output:</strong>\n<strong>13</strong></pre>\n<pre><strong>&nbsp;</strong></pre>\n<p><strong>Ghi ch&uacute;:</strong></p>\n<ul>\n<li>C&oacute; 20% số test ứng với 20% số điểm c&oacute; <em>n </em>&le; 20;</li>\n<li>C&oacute; 40% số test ứng với 40% số điểm c&oacute; <em>n </em>&le; 10<sup>6</sup>;</li>\n<li>C&oacute; 40% số test c&ograve;n lại ứng với 40% số điểm c&oacute; <em>n </em>&le; 10<sup>15</sup>.</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b8ad1184-c209-4b16-8f9b-01791715be53",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DHLOCOinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dhrect-tro-choi-xep-hinh-chu-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "DHRECT - Trò chơi xếp hình chữ nhật",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DHRECT - Tr&ograve; chơi xếp h&igrave;nh chữ nhật</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dhrect\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dhrect</a><br /><br /><br />\n<p>X&eacute;t tr&ograve; chơi xếp h&igrave;nh chữ nhật với c&aacute;c que di&ecirc;m như sau: C&oacute; n que di&ecirc;m, que thứ i c&oacute; độ d&agrave;i di. Người chơi cần chọn ra 4 que di&ecirc;m để c&oacute; thể xếp th&agrave;nh một h&igrave;nh chữ nhật, giả sử 4 que di&ecirc;m m&agrave; người chơi chọn c&oacute; độ d&agrave;i lần lượt l&agrave; a, b, c, d (a &le; b &le; c &le; d), khi đ&oacute; c&oacute; thể xếp được th&agrave;nh một h&igrave;nh chữ nhật nếu a = b v&agrave; c = d. Người chơi xếp được h&igrave;nh chữ nhật c&oacute; diện t&iacute;ch c&agrave;ng lớn sẽ c&agrave;ng được điểm cao.</p>\n<div id=\"_mcePaste\">Y&ecirc;u cầu: Cho d1, d2,..,dn l&agrave; độ d&agrave;i của n que di&ecirc;m. H&atilde;y t&igrave;m c&aacute;ch chọn 4 que di&ecirc;m để xếp được th&agrave;nh một h&igrave;nh chữ nhật c&oacute; diện t&iacute;ch lớn nhất. Dữ liệu: V&agrave;o từ thiết bị v&agrave;o chuẩn: D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n dương K l&agrave; số lượng bộ dữ liệu. Tiếp đến l&agrave; K nh&oacute;m d&ograve;ng, mỗi nh&oacute;m tương ứng với một bộ dữ liệu c&oacute; cấu tr&uacute;c như sau:  D&ograve;ng thứ nhất ghi một số nguy&ecirc;n dương n;  D&ograve;ng tiếp theo chứa n số nguy&ecirc;n dương d1, d2,..,dn (di &le; 109).</div>\n<div id=\"_mcePaste\">C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch. Kết quả: Ghi ra thiết bị ra chuẩn gồm K d&ograve;ng, mỗi d&ograve;ng ghi một số nguy&ecirc;n l&agrave; diện t&iacute;ch của h&igrave;nh chữ nhật xếp được tương ứng với bộ dữ liệu trong file dữ liệu v&agrave;o (ghi -1 nếu kh&ocirc;ng tồn tại c&aacute;ch chọn n&agrave;o xếp được h&igrave;nh chữ nhật). Subtask 1 (20 điểm): Giả thiết l&agrave; n &le; 30. Subtask 2 (20 điểm): Giả thiết l&agrave; n &le; 3000. Subtask 3 (20 điểm): Giả thiết l&agrave; n &le; 300000.</div>\n<div id=\"_mcePaste\">Đ</div>\n<p>X&eacute;t tr&ograve; chơi xếp h&igrave;nh chữ nhật với c&aacute;c que di&ecirc;m như sau: C&oacute; n que di&ecirc;m, que thứ i c&oacute; độ d&agrave;i di. Người chơi cần chọn ra 4 que di&ecirc;m để c&oacute; thể xếp th&agrave;nh một h&igrave;nh chữ nhật, giả sử 4 que di&ecirc;m m&agrave; người chơi chọn c&oacute; độ d&agrave;i lần lượt l&agrave; a, b, c, d (a &le; b &le; c &le; d), khi đ&oacute; c&oacute; thể xếp được th&agrave;nh một h&igrave;nh chữ nhật nếu a = b v&agrave; c = d. Người chơi xếp được h&igrave;nh chữ nhật c&oacute; diện t&iacute;ch c&agrave;ng lớn sẽ c&agrave;ng được điểm cao.</p>\n<p>Y&ecirc;u cầu: Cho d1, d2,..,dn l&agrave; độ d&agrave;i của n que di&ecirc;m. H&atilde;y t&igrave;m c&aacute;ch chọn 4 que di&ecirc;m để xếp được th&agrave;nh một h&igrave;nh chữ nhật c&oacute; diện t&iacute;ch lớn nhất.</p>\n<p>Dữ liệu: V&agrave;o từ thiết bị v&agrave;o chuẩn: D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n dương K l&agrave; số lượng bộ dữ liệu. Tiếp đến l&agrave; K nh&oacute;m d&ograve;ng, mỗi nh&oacute;m tương ứng với một bộ dữ liệu c&oacute; cấu tr&uacute;c như sau:</p>\n<ul>\n<li>D&ograve;ng thứ nhất ghi một số nguy&ecirc;n dương n;</li>\n<li>D&ograve;ng tiếp theo chứa n số nguy&ecirc;n dương d1, d2,..,dn (di &le; 10^9).</li>\n<li>C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</li>\n</ul>\n<p>Kết quả: Ghi ra thiết bị ra chuẩn gồm K d&ograve;ng, mỗi d&ograve;ng ghi một số nguy&ecirc;n l&agrave; diện t&iacute;ch của h&igrave;nh chữ nhật xếp được tương ứng với bộ dữ liệu trong file dữ liệu v&agrave;o (ghi -1 nếu kh&ocirc;ng tồn tại c&aacute;ch chọn n&agrave;o xếp được h&igrave;nh chữ nhật).</p>\n<p>Giới hạn:</p>\n<p>&nbsp;</p>\n<ul>\n<li>Subtask 1 (33%): Giả thiết l&agrave; n &le; 30.</li>\n<li>Subtask 2 (33%): Giả thiết l&agrave; n &le; 3000.</li>\n<li>Subtask 3 (33%): Giả thiết l&agrave; n &le; 300000.</li>\n</ul>\n<p>&nbsp;</p>\n<p>V&iacute; dụ:</p>\n<p>Dữ liệu</p>\n<p>2</p>\n<p>5</p>\n<p>5 3 1 5 1</p>\n<p>4</p>\n<p>1 2 3 4</p>\n<p>Kết quả</p>\n<p>5</p>\n<p>-1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/587ff854-343e-48e2-b4f6-8b8e1dc8e8a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DHRECTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dhtable2-bang-thong-tin-dien-tu",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DHTABLE2 - Bảng thông tin điện tử",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DHTABLE2 - Bảng th&ocirc;ng tin điện tử</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dhtable2\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dhtable2</a><br /><br /><br />\n<p>Bảng th&ocirc;ng tin điện tử được lắp tr&ecirc;n c&aacute;c đường phố để cung cấp ngắn gọn c&aacute;c th&ocirc;ng tin quan trọng, c&aacute;c sự kiện, khẩu hiệu ... C&ocirc;ng ty điện tử S&aacute;ng Sao vừa cho xuất xưởng một bảng th&ocirc;ng tin điện tử c&oacute; dạng một h&agrave;ng gồm&nbsp;<em>n</em>&nbsp;vị tr&iacute;, mỗi vị tr&iacute; hiển thị một k&yacute; tự. C&aacute;c vị tr&iacute; được đ&aacute;nh số từ 1 đến&nbsp;<em>n</em>&nbsp;từ tr&aacute;i qua phải. C&aacute;c k&yacute; tự chạy từ phải qua tr&aacute;i. Cứ mỗi gi&acirc;y k&yacute; tự ở vị tr&iacute;&nbsp;<em>i</em>&nbsp;chuyển sang vị tr&iacute;&nbsp;<em>i&minus;</em>1 (<em>i</em>&nbsp;= 2, 3, &hellip;,&nbsp;<em>n</em>) v&agrave; k&yacute; tự mới từ x&acirc;u dữ liệu v&agrave;o được l&ecirc;n bảng ở vị tr&iacute;&nbsp;<em>n</em>. Ban đầu, tất cả c&aacute;c vị tr&iacute; đều chứa dấu c&aacute;ch.</p>\n<p>Trong thời gian thử nghiệm, để kiểm tra chất lượng bảng C&ocirc;ng ty S&aacute;ng Sao cho ph&aacute;t l&ecirc;n bảng x&acirc;u&nbsp;<em>S</em>&nbsp;được tạo th&agrave;nh từ c&aacute;ch viết li&ecirc;n tiếp c&aacute;c số tự nhi&ecirc;n 1, 2, 3, 4, ..., 10<sup>15</sup>. Như vậy, phần đầu của x&acirc;u, khi viết đến số 14 sẽ l&agrave;</p>\n<p align=\"center\">1234567891011121314</p>\n<p>Nếu&nbsp;<em>n</em>&nbsp;= 5 th&igrave; ở gi&acirc;y thứ 3 kể từ l&uacute;c bắt đầu ph&aacute;t thử nghiệm tr&ecirc;n bảng th&ocirc;ng tin sẽ c&oacute; nội dung</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td width=\"29\">\n<p align=\"center\"><strong>&nbsp;</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>&nbsp;</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>1</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>2</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>3</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>v&agrave; ở gi&acirc;y thứ 19 tr&ecirc;n bảng th&ocirc;ng tin sẽ c&oacute; nội dung</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td width=\"29\">\n<p align=\"center\"><strong>2</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>1</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>3</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>1</strong></p>\n</td>\n<td width=\"29\">\n<p align=\"center\"><strong>4</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho&nbsp;<em>n<sub>&nbsp;</sub></em>v&agrave;&nbsp;<em>t</em>, h&atilde;y x&aacute;c định x&acirc;u được hiển thị tr&ecirc;n bảng tại thời điểm&nbsp;<em>t</em>, giả thiết l&agrave; thời điểm bắt đầu ph&aacute;t thử nghiệm l&agrave; 0.</p>\n<h3>Input</h3>\n<p>gồm một d&ograve;ng chứa hai số nguy&ecirc;n dương&nbsp;<em>n</em>,&nbsp;<em>t</em>;</p>\n<h3>Output</h3>\n<p>một x&acirc;u độ d&agrave;i&nbsp;<em>n</em>&nbsp;l&agrave; x&acirc;u được hiển thị tr&ecirc;n bảng tại thời điểm&nbsp;<em>t</em>.&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n<strong>5 19</strong>\n\n<strong>Output:</strong>\n<strong>21314</strong></pre>\n<pre><strong>&nbsp;</strong></pre>\n<p><strong>Ghi ch&uacute;:</strong></p>\n<ul>\n<li>C&oacute; 20% số test ứng với 20% số điểm c&oacute; <em>n </em>&le; 100 v&agrave; <em>t </em>&le; 10<sup>6</sup>;</li>\n<li>C&oacute; 40% số test ứng với 40% số điểm c&oacute; <em>n </em>&le; 100 v&agrave; 10<sup>9</sup> &le; <em>t </em>&le; 10<sup>9</sup> + 10<sup>6</sup>;</li>\n<li>C&oacute; 40% số test c&ograve;n lại ứng với 40% số điểm c&oacute; <em>n </em>&le; 100 v&agrave; <em>t </em>&le; 10<sup>15</sup>.</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/65fb2f68-000d-4201-877c-9c75b9c7eafa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DHTABLE2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef925f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dquery-d-query",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DQUERY - D-query",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DQUERY - D-query</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>&nbsp;</p>\nHiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dquery\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dquery</a><br /><br /><br />\n<h3>Truy vấn-d</h3>\n<p>Cho một d&atilde;y số n phần tử a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;v&agrave; một số c&aacute;c truy vấn-d. Một truy vấn-d l&agrave; một cặp (i, j) (1 &le; i &le; j &le; n). Với mỗi truy vấn-d (i, j), bạn cần trả về số phần tử ph&acirc;n biệt nằm trong d&atilde;y con a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: n (1 &le; n &le; 30000).</li>\n<li>D&ograve;ng 2: n số a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 10<sup>6</sup>).</li>\n<li>D&ograve;ng 3: q (1 &le; q &le; 200000), số lượng truy vấn- d.</li>\n<li>Trong q d&ograve;ng sau, mỗi d&ograve;ng chứa 2 số i, j biểu thị một truy vấn-d (1 &le; i &le; j &le; n).</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Với mỗi truy vấn-d (i, j), in ra số phần tử ph&acirc;n biệt thuộc d&atilde;y con a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>&nbsp;tr&ecirc;n một d&ograve;ng.\n<p>&nbsp;</p>\n</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5\n1 1 2 1 3\n3\n1 5\n2 4\n3 5\n\n<strong>Kết quả</strong>\n3\n2\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a1ede70a-d669-4892-8a77-99e52027d388",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DQUERYinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9260"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "dtdoi-doi-tien",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "DTDOI - Đổi tiền",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DTDOI - Đổi tiền</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dtdoi\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dtdoi</a><br /><br /><br />\n<p>Bạn được cho một tập hợp c&aacute;c mệnh gi&aacute; tiền. Tập hợp lu&ocirc;n chứa phần tử mang g&iacute;a trị 1. Mỗi mệnh gi&aacute; c&oacute; v&ocirc; hạn c&aacute;c đồng tiền mang mệnh gi&aacute; đ&oacute;. Cho số tiền S, h&atilde;y t&igrave;m c&aacute;ch đổi S th&agrave;nh &iacute;t đồng tiền nhất, sao cho mỗi đồng tiền c&oacute; mệnh gi&aacute; thuộc v&agrave;o tập hợp đ&atilde; cho.</p>\n<h3>Input</h3>\n<p>Dữ liệu v&agrave;o gồm 2 d&ograve;ng:</p>\n<ul>\n<li>D&ograve;ng 1: Hai số nguy&ecirc;n dương N (số phần tử của tập hợp mệnh gi&aacute; tiền) v&agrave; S (số tiền cần đổi) (1 &le; N &le; 100; 1 &le; S &le; 10<sup>9</sup>&nbsp;).</li>\n<li>D&ograve;ng 2: N số nguy&ecirc;n dương biểu thị mệnh gi&aacute; của c&aacute;c phần tử trong tập hợp (gi&aacute; trị kh&ocirc;ng vượt qu&aacute; 100).</li>\n</ul>\n<h3>Output</h3>\n<p>Dữ liệu ra gồm một số nguy&ecirc;n duy nhất l&agrave; số đồng tiền &iacute;t nhất c&oacute; thể đổi được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />2 3<br />1 2<br /><br /><strong>Output:</strong><br />2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4e15b9cf-a989-492b-9d64-c27bdd11976f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DTDOIinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9261"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "dtgame-tien-bac-luon-la-thu-quy-gia",
  "tags": [],
  "level": "BEGINNER",
  "title": "DTGAME - Tiền bạc luôn là thứ quý giá",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>DTGAME - Tiền bạc lu&ocirc;n l&agrave; thứ qu&yacute; gi&aacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/dtgame\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/dtgame</a><br /><br /><br />\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Tiền bạc vẫn lu&ocirc;n l&agrave; thứ c&oacute; gi&aacute; trị đối với mỗi con người, kể cả với&nbsp;<em>pirate</em>. V&igrave; vậy, khi h&ograve;n đảo xinh đẹp của t&ecirc;n cướp biển kh&eacute;t tiếng n&agrave;y sắp bị... giải tỏa, hắn đ&atilde; tranh thủ vơ v&eacute;t cho đến đồng tiền v&agrave;ng cuối c&ugrave;ng. Tr&ecirc;n h&ograve;n đảo c&oacute; N mỏ v&agrave;ng nằm cạnh nhau tr&ecirc;n một đường thẳng, đ&aacute;nh số từ 1 đến N. Mỏ v&agrave;ng i c&oacute; gi&aacute; trị l&agrave; p_i. Đội thi c&ocirc;ng sẽ c&oacute; nhiệm vụ san lấp hết N mỏ v&agrave;ng n&agrave;y. Nhưng tại mỗi thời điểm,&nbsp;<em>pirate</em>&nbsp;cố gắng ngăn cản việc san lấp bằng c&aacute;ch x&acirc;y một bức tường ngăn c&aacute;ch hai mỏ v&agrave;ng li&ecirc;n tiếp n&agrave;o đ&oacute;, vậy l&agrave; cụm mỏ c&ograve;n lại được chia l&agrave;m 2 phần. Đội thi c&ocirc;ng sẽ chọn một trong hai phần đ&oacute; để san lấp hết, thế l&agrave;&nbsp;<em>pirate</em>&nbsp;giữ lại được phần c&ograve;n lại v&agrave; hắn sẽ nhận được số đồng tiền v&agrave;ng đ&uacute;ng bằng tổng gi&aacute; trị của những mỏ c&ograve;n lại đ&oacute;. C&ocirc;ng việc cứ tiếp tục cho đến khi chỉ c&ograve;n lại một mỏ v&agrave;ng duy nhất. Đội thi c&ocirc;ng biết điều đ&oacute;, cho n&ecirc;n họ đ&atilde; c&oacute; chiến thuật san lấp để cực tiểu h&oacute;a số tiền của pirate. Với l&ograve;ng tham kh&ocirc;ng đ&aacute;y, pirate quyết t&acirc;m lấy c&agrave;ng nhiều v&agrave;ng c&agrave;ng tốt. H&atilde;y gi&uacute;p con người khốn khổ v&igrave; tiền n&agrave;y !</p>\n<h3>Input</h3>\n<p>Dữ liệu v&agrave;o gồm nhiều d&ograve;ng:</p>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n dương N (1 &le; n &le; 2000).</li>\n<li>D&ograve;ng 2...n+1: Mỗi d&ograve;ng ghi gi&aacute; trị p_i của từng mỏ v&agrave;ng theo thứ tự từ 1 đến n (1 &le; p_i &le; 1000).</li>\n</ul>\n<h3>Output</h3>\n<p>Dữ liệu ra gồm 1 d&ograve;ng duy nhất ghi ra số đồng tiền v&agrave;ng lớn nhất c&oacute; thể vơ v&eacute;t được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />5<br />8<br />6<br />2<br />4<br />2<br /><br /><strong>Output:</strong>10\n</pre>\n<p>Giải th&iacute;ch: Đầu tiền pirate chia mỏ v&agrave;ng th&agrave;nh 2 phần [1,2] v&agrave; [3,4,5]. Xe ủi sẽ san lấp phần [1,2] v&agrave; pirate nhận được p_2 + p_3 + p_4 = 8 đồng tiền v&agrave;ng. Tiếp theo chia [3,4,5] th&agrave;nh [3] v&agrave; [4,5]. Xe ủi san lấp [4,5] v&agrave; pirate thu th&ecirc;m p_2 = 2 đồng tiền v&agrave;ng. C&ocirc;ng việc kết th&uacute;c v&igrave; chỉ c&ograve;n 1 mỏ, vậy tổng cộng thu được l&agrave; 8 + 2 = 10 đồng tiền v&agrave;ng. Kh&ocirc;ng c&oacute; c&aacute;ch n&agrave;o gi&uacute;p hắn thu th&ecirc;m tiền.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/056917a8-0969-404f-8eb5-ca5b7151cb3e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DTGAMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9262"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "fbrick-xep-hinh-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FBRICK - Xếp hình",
  "content": "<table style=\"width: 17.3639%;\">\n<tbody>\n<tr>\n<td style=\"width: 100%;\">\n<h2>FBRICK - Xếp h&igrave;nh</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/fbrick\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/fbrick</a><br /><br /><br />\n<p>Nguy&ecirc;n rất th&iacute;ch tr&ograve; chơi xếp th&aacute;p. T&ograve;a th&aacute;p của Nguy&ecirc;n bao gồm những khối lăng trụ đứng c&oacute; đ&aacute;y h&igrave;nh vu&ocirc;ng v&agrave; chiều cao bằng 1. Nguy&ecirc;n sẽ xếp c&aacute;c khối lăng trụ chồng l&ecirc;n nhau để tạo th&agrave;nh một t&ograve;a th&aacute;p cao.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mới đ&acirc;y trong lớp học to&aacute;n, Nguy&ecirc;n được c&ocirc; gi&aacute;o dạy về c&aacute;ch t&iacute;nh thể t&iacute;ch c&aacute;c h&igrave;nh khối đơn giản. Nguy&ecirc;n th&iacute;ch th&uacute; với kiến thức mới học được v&agrave; cậu ta muốn t&iacute;nh thể t&iacute;ch t&ograve;a th&aacute;p của m&igrave;nh.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Th&aacute;p của Nguy&ecirc;n bao gồm N khối lăng trụ đứng chiều cao 1 v&agrave; c&oacute; đ&aacute;y h&igrave;nh vu&ocirc;ng v&agrave; độ d&agrave;i cạnh đ&aacute;y từ tr&ecirc;n xuống dưới theo thứ tự l&agrave; A<sub>1</sub>, A&shy;&shy;&shy;<sub>2</sub>, ... A&shy;&shy;<sub><strong>N</strong></sub>. D&atilde;y A được tạo như sau:</p>\n<ol>\n<li>A<sub>1</sub>&nbsp;= 1.</li>\n<li>A<sub>2</sub>&nbsp;sẽ l&agrave; một số dương t&ugrave;y &yacute; m&agrave; Nguy&ecirc;n chọn trong mỗi lần chơi để tr&aacute;nh nh&agrave;m ch&aacute;n.</li>\n<li>A<sub>i&nbsp;</sub>(i &gt; 2) bằng 2 &times; A<sub>2</sub>&nbsp;&times; A<sub>i&nbsp; &ndash; 1</sub>&nbsp;&ndash; A&shy;<sub>i &ndash; 2.</sub></li>\n</ol>\n<p>&nbsp;</p>\n<p>Nguy&ecirc;n biết r&otilde; thể t&iacute;ch h&igrave;nh một h&igrave;nh lăng trụ sẽ bằng chiều cao nh&acirc;n với diện t&iacute;ch đ&aacute;y nhưng v&igrave; ngại t&iacute;nh to&aacute;n, Nguy&ecirc;n muốn nhờ bạn viết một chương tr&igrave;nh gi&uacute;p cậu ta. Kết quả c&oacute; thể rất lớn v&igrave; vậy bạn chỉ cần ghi ra theo modulo&nbsp;<strong>M</strong>&nbsp;với&nbsp;<strong>M</strong>&nbsp;l&agrave; một số nguy&ecirc;n dương cho trước.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: Ghi số nguy&ecirc;n dương&nbsp;<strong>K</strong>&nbsp;&le; 10 l&agrave; số bộ dữ liệu.</li>\n<li><strong>K</strong>&nbsp;d&ograve;ng tiếp: Mỗi d&ograve;ng ghi 3 số nguy&ecirc;n A<sub>2</sub>,&nbsp;<strong>N</strong>,&nbsp;<strong>M</strong>&nbsp;tương ứng với một bộ dữ liệu. (1 &le; A<sub>2</sub>,&nbsp;<strong>M</strong>&nbsp;&le; 10<sup>9</sup>, 2&le;&nbsp;<strong>N</strong>&nbsp;&le; 10<sup>9</sup>)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Với mỗi bộ test ghi ra một số duy nhất l&agrave; kết quả tương ứng tr&ecirc;n một d&ograve;ng.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>2</p>\n<p>1 10 1000</p>\n<pre>2 3 100\n\n<strong>Output:</strong>\n10</pre>\n<pre>54</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/91f20023-e35c-4fdb-953e-9f077c57349f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FBRICKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9263"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "egg-tha-trung-tro-giai-tri-tuoi-teen-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "EGG - Thả trứng , trò giải trí tuổi teen",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>EGG - Thả trứng , tr&ograve; giải tr&iacute; tuổi teen</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/egg\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/egg</a><br /><br /><br />\n<p>Tụi trẻ con c&oacute; được&nbsp;<em>N quả trứng c&oacute; độ cứng như nhau&nbsp;</em>. Trong giờ ra chơi ch&uacute;ng quyết định thử xem trứng cứng đến mức n&agrave;o bằng c&aacute;ch thả trứng từ tr&ecirc;n tầng cao xuống đất xem ở độ cao n&agrave;o th&igrave; trứng sẽ vỡ . Giả sử độ cứng của trứng l&agrave; E th&igrave; thả trứng ở c&aacute;c tầng từ tầng 1 -&gt; tầng E trứng sẽ kh&ocirc;ng vỡ , v&agrave; thả trứng bắt đầu ở tầng E + 1 trở đi trứng sẽ vỡ . C&aacute;ch l&agrave;m n&ocirc;ng d&acirc;n nhất l&agrave; ta cứ đem thả từng tầng một từ thấp l&ecirc;n cao đến tầng n&agrave;o trứng vỡ l&agrave; biết ngay nhưng m&agrave; như thế phải thả nhiều lần qu&aacute; , giờ ra chơi của bọn trẻ con kh&ocirc;ng được l&acirc;u đến thế , hơn nữa tụi n&oacute; c&oacute; tới N quả trứng n&ecirc;n c&oacute; vỡ 1 số quả cũng chẳng sao , miễn l&agrave; đạt được mục đ&iacute;ch của m&igrave;nh .<br /><br />Bạn l&agrave; một lập tr&igrave;nh vi&ecirc;n si&ecirc;u hạng , sau khi nghe nỗi niềm của bọn trẻ , bạn c&oacute; thể gi&uacute;p g&igrave; được bọn trẻ kh&ocirc;ng ? Hay l&agrave; sẽ chịu thua ? Nếu giải được b&agrave;i to&aacute;n h&oacute;c b&uacute;a n&agrave;y th&igrave; bạn h&atilde;y thử submit xem n&agrave;o . Biết rằng to&agrave; nh&agrave; trường học của bọn trẻ c&oacute; tất cả M tầng ( nếu trứng kh&ocirc;ng vỡ ở tầng M th&igrave; c&oacute; thể coi như n&oacute; c&oacute; độ cứng l&agrave; M ) .<br /><br /><em><strong>Ch&uacute; &yacute; nếu kh&ocirc;ng cẩn thận sẽ rất dễ bị ngộ nhận . D&ugrave; l&agrave;m c&aacute;ch n&agrave;o đi nữa th&igrave; vấn đề mu&ocirc;n thuở vẫn l&agrave; phải chứng minh được t&iacute;nh đ&uacute;ng đắn của thuật to&aacute;n .</strong></em></p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : số test T ( 1 &le; T &le; 10000 ) .<br />T d&ograve;ng tiếp theo mỗi d&ograve;ng gồm 2 số nguy&ecirc;n N M ( 1 &le; N , M &le; 1000 ) .</p>\n<h3>Output</h3>\n<p>Với mỗi test ghi ra số lượng lần thả &iacute;t nhất ( X ) để c&oacute; thể x&aacute;c định được r&otilde; r&agrave;ng độ cứng của quả trứng ( kể cả trong trường hợp xấu nhất th&igrave; với X lần thả cũng c&oacute; thể x&aacute;c định được độ cứng của quả trứng ) .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1 10\n2 5\n\n<strong>Output:</strong>\n10\n3\n\n</pre>\nGiải th&iacute;ch test 1 ( N=1, M=10 ) : Giả sử ta bắt đầu thả trứng ở tầng 5 . Nếu trứng vỡ -&gt; ta kh&ocirc;ng c&ograve;n trứng để thử nữa ( v&igrave; ta c&oacute; mỗi một quả trứng ) -&gt; kh&ocirc;ng thể x&aacute;c định được độ cứng của trứng l&agrave; 0 hay 1, 2, 3, 4 . Nếu ta thả trứng từ tầng 1 , trứng vỡ -&gt; độ cứng của trứng l&agrave; 0 , nếu kh&ocirc;ng vỡ ta lại thả tiếp ở tầng thứ 2 , &hellip; cứ l&agrave;m như vậy th&igrave; ở trường hợp tệ nhất l&agrave; trứng c&oacute; độ cứng l&agrave; 10 th&igrave; ta phải mất tới 10 lần thử .</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b16c18a0-4c0b-4bfa-8bf4-d8fd6f254250",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "EGGinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9264"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "findnum-tim-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "FINDNUM - Tìm số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>FINDNUM - T&igrave;m số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/findnum\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/findnum</a><br /><br /><br />\n<p>Cho trước một số n. H&atilde;y t&igrave;m số nguy&ecirc;n dương nhỏ nhất c&oacute; đ&uacute;ng n ước.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<p>- Một số nguy&ecirc;n n duy nhất (1 &le; n &le; 1000).</p>\n<h3>Dữ liệu ra</h3>\n<p>- Số nguy&ecirc;n dương nhỏ nhất (kh&ocirc;ng vượt qu&aacute; 10<sup>18</sup>) c&oacute; đ&uacute;ng n ước.<br />(Biết rằng kết quả của c&aacute;c test lu&ocirc;n nằm trong giới hạn của đề)</p>\n<h3>V&iacute; dụ</h3>\n<p>&nbsp;</p>\n<pre><strong>Input:</strong> <br />4\n\n<strong>Output:</strong> <br />6</pre>\n<p>(Giới hạn: 50% số test c&oacute; n &le; 250)</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/47c8e705-68c8-4ca7-b89c-c1301349f184",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FINDNUMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9265"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "firs-hang-cay",
  "tags": [],
  "level": "BEGINNER",
  "title": "FIRS - Hàng cây",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>FIRS - H&agrave;ng c&acirc;y</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/firs\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/firs</a><br /><br /><br />\n<p>Bi&ecirc;n giới giữa hai nước Ngược v&agrave; Xu&ocirc;i c&oacute; dạng một đoạn thẳng với độ d&agrave;i N-1 m&eacute;t.</p>\n<p>Vua nước Ngược v&igrave; muốn che giấu b&iacute; mật quốc gia đ&atilde; trồng tr&ecirc;n đường bi&ecirc;n giới N c&acirc;y t&aacute;n l&aacute; xum xu&ecirc; (c&aacute;c c&acirc;y c&aacute;ch đều nhau với khoảng c&aacute;ch một m&eacute;t). Vua nghĩ rằng nhờ h&agrave;ng c&acirc;y n&agrave;y m&agrave; c&aacute;c điệp vi&ecirc;n của vua nước Xu&ocirc;i kh&ocirc;ng thể do th&aacute;m nước m&igrave;nh được. Để chăm s&oacute;c c&aacute;c c&acirc;y n&agrave;y, vua sai một người l&agrave;m vườn mỗi buổi s&aacute;ng chọn c&acirc;y thưa l&aacute; nhất (c&oacute; số l&aacute; &iacute;t nhất) v&agrave; tưới một loại ph&acirc;n b&oacute;n đặc biệt (nếu c&oacute; nhiều c&acirc;y thưa l&aacute; nhất th&igrave; người l&agrave;m vườn sẽ chọn c&acirc;y đầu ti&ecirc;n). Ph&acirc;n b&oacute;n c&oacute; b&aacute;n k&iacute;nh t&aacute;c dụng l&agrave; 1 m&eacute;t (nghĩa l&agrave; sẽ t&aacute;c dụng l&ecirc;n từ 1 đến 3 c&acirc;y).</p>\n<p>Tuy nhi&ecirc;n, vua nước Xu&ocirc;i quyết định chống lại chiến lược n&agrave;y v&agrave; thu&ecirc; một người l&agrave;m vườn kh&aacute;c. Mỗi buổi chiều, người l&agrave;m vườn n&agrave;y tưới ph&acirc;n b&oacute;n l&ecirc;n c&ugrave;ng c&aacute;i c&acirc;y đ&atilde; được người l&agrave;m vườn nước Ngược tưới v&agrave;o buổi s&aacute;ng, nhưng bằng một loại ph&acirc;n b&oacute;n kh&aacute;c. Loại ph&acirc;n b&oacute;n n&agrave;y l&agrave;m chết tất cả c&aacute;c c&acirc;y trong b&aacute;n k&iacute;nh 1 m&eacute;t!</p>\n<p>Bạn được bộ trưởng t&agrave;i ch&iacute;nh của vua nước Xu&ocirc;i thu&ecirc; để gi&uacute;p t&iacute;nh xem sau bao nhi&ecirc;u ng&agrave;y th&igrave; tất cả c&aacute;c c&acirc;y đều bị chết. H&atilde;y lập tr&igrave;nh t&iacute;nh gi&aacute; trị n&agrave;y.</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa số lượng c&acirc;y N (1 &le; N &le; 10<sup>5</sup>). D&ograve;ng thứ hai chứa N số nguy&ecirc;n a<sub>i</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 10<sup>5</sup>) - số lượng l&aacute; tr&ecirc;n c&aacute;c c&acirc;y (theo thứ tự ch&uacute;ng được trồng từ tr&aacute;i sang phải).</p>\n<h3>Kết quả</h3>\n<p>In ra số ng&agrave;y m&agrave; sau đ&oacute; tất cả c&aacute;c c&acirc;y đều bị chết.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n3\n3 2 2\n\n<strong>Kết quả</strong>\n1\n\n<strong>Dữ liệu</strong>\n3\n2 2 3\n\n<strong>Kết quả</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a5b80461-f102-4586-acbb-b53db5681d49",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FIRSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9266"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "floyd-floyd-hoac-dijkstra-co-ban",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FLOYD - Floyd hoặc Dijkstra ( Cơ bản )",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>FLOYD - Floyd hoặc Dijkstra ( Cơ bản )</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/floyd\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/floyd</a><br /><br /><br />\n<p>Cho đơn đồ thị v&ocirc; hướng N đỉnh v&agrave; M cạnh, trọng số c&aacute;c cạnh đều nguy&ecirc;n dương. C&oacute; 2 loại c&acirc;u hỏi :<br />0 u v : Cho biết đường đi ngắn nhất từ u tới v c&oacute; độ d&agrave;i l&agrave; bao nhi&ecirc;u.<br />1 u v : H&atilde;y chỉ ra 1 đường đi ngắn nhất từ u =&gt; v<br />B&agrave;i cơ bản n&agrave;y nhằm kiểm tra kỹ năng x&acirc;y dựng c&aacute;c module chương tr&igrave;nh con d&agrave;nh cho truy vết 1 c&aacute;ch hợp l&yacute;, sử dụng nhuần nhuyễn chương tr&igrave;nh con, lời gọi h&agrave;m .<br /><br /><em>Download test v&agrave; solution tại&nbsp;<a href=\"http://vn.spoj.com/content/floyd.rar\">đ&acirc;y</a></em></p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : 3 số nguy&ecirc;n N , M , K . ( 1 &le; N &le; 100 , 1 &le; M &le; N*(N-1)/2 , 1 &le; K &le; 1000 )<br />M d&ograve;ng tiếp theo , d&ograve;ng thứ i gồm 3 số nguy&ecirc;n dương u , v , c cho biết cạnh (u,v) c&oacute; trọng số l&agrave; c ( 1 &le; c &le; 10000 )<br />K d&ograve;ng tiếp theo l&agrave; K c&acirc;u hỏi , d&ograve;ng thứ j sẽ c&oacute; định dạng như đ&atilde; n&ecirc;u ở tr&ecirc;n .</p>\n<h3>Output</h3>\n<p>Ứng với mỗi c&acirc;u hỏi trong K c&acirc;u hỏi th&igrave; ta phải trả lời tr&ecirc;n mỗi d&ograve;ng như sau .<br />C&acirc;u hỏi 0 u v : Ghi ra 1 số nguy&ecirc;n duy nhất l&agrave; độ d&agrave;i đường đi ngắn nhất từ u -&gt; v.<br />C&acirc;u hỏi 1 u v : Ghi ra số đầu ti&ecirc;n l&agrave; số X l&agrave; số đỉnh tr&ecirc;n đường đi ngắn nhất n&agrave;y , tiếp đ&oacute; ghi ra X số l&agrave; chỉ số c&aacute;c đỉnh theo thứ tự xuất hiện tr&ecirc;n h&agrave;nh tr&igrave;nh .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 3 2\n1 2 3\n2 3 1\n1 3 5\n0 1 2\n1 1 3\n\n<strong>Output:</strong>\n3\n3 1 2 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7dbf18ac-097d-4216-a2fd-8ec29e579081",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FLOYDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9267"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "fwater-tuoi-nuoc-dong-co",
  "tags": [],
  "level": "BEGINNER",
  "title": "FWATER - Tưới nước đồng cỏ",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>FWATER - Tưới nước đồng cỏ</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/fwater\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/fwater</a><br /><br /><br />\n<p>N&ocirc;ng d&acirc;n John quyết định mang nước tới cho N (1 &lt;= N &lt;= 300) đồng cỏ của m&igrave;nh, để thuận tiện ta đ&aacute;nh số c&aacute;c đồng cỏ từ 1 đến N. Để tưới nước cho 1 đồng cỏ John c&oacute; thể chọn 2 c&aacute;ch, 1 l&agrave; đ&agrave;o ở đồng cỏ đ&oacute; 1 c&aacute;i giếng hoặc lắp ống nối dẫn nước từ những đồng cỏ trước đ&oacute; đ&atilde; c&oacute; nước tới.</p>\n<p>Để đ&agrave;o một c&aacute;i giếng ở đồng cỏ i cần 1 số tiền l&agrave; W_i (1 &lt;= W_i &lt;= 100,000). Lắp ống dẫn nước nối 2 đồng cỏ i v&agrave; j cần 1 số tiền l&agrave; P_ij (1 &lt;= P_ij &lt;= 100,000; P_ij = P_ji; P_ii=0).</p>\n<p>T&iacute;nh xem n&ocirc;ng d&acirc;n John phải chi &iacute;t nhất bao nhi&ecirc;u tiền để tất cả c&aacute;c đồng cỏ đều c&oacute; nước.</p>\n<h3>DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất: N</li>\n<li>C&aacute;c d&ograve;ng 2..N + 1: D&ograve;ng i+1 chứa 1 số nguy&ecirc;n duy nhất: W_i</li>\n<li>C&aacute;c d&ograve;ng N+2..2N+1: D&ograve;ng N+1+i chứa N số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch; số thứ j l&agrave; P_ij</li>\n</ul>\n<h3>KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; chi ph&iacute; tối thiểu để cung cấp nước cho tất cả c&aacute;c đồng cỏ.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre><strong>Dữ liệu</strong>\n4\n5\n4\n4\n3\n0 2 2 2\n2 0 3 3\n2 3 0 4\n2 3 4 0\n\n\n<strong>Kết quả</strong>\n9\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>C&oacute; 4 đồng cỏ. Mất 5 tiền để đ&agrave;o 1 c&aacute;i giếng ở đồng cỏ 1, 4 tiền để đ&agrave;o ở đồng cỏ 2, 3 v&agrave; 3 tiền để đ&agrave;o ở đồng cỏ 4. C&aacute;c ống dẫn nước tốn 2, 3, v&agrave; 4 tiền t&ugrave;y thuộc v&agrave;o n&oacute; nối đồng cỏ n&agrave;o với nhau.</p>\n<p>N&ocirc;ng d&acirc;n John c&oacute; thể đ&agrave;o 1 c&aacute;i giếng ở đồng cỏ thứ 4 v&agrave; lắp ống dẫn nối đồng cỏ 1 với tất cả 3 đồng cỏ c&ograve;n lại, chi ph&iacute; tổng cộng l&agrave; 3 + 2 + 2 + 2 = 9.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e5f891a4-fbc0-4a78-a555-b2bf3b9e1d3e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FWATERinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9268"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "gondor-gondor",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GONDOR - GONDOR",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>GONDOR - GONDOR</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<table class=\"problems\" border=\"0\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/GONDOR/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/GONDOR/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\nHiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/gondor\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/gondor</a><br /><br /><br />\n<p>V&ugrave;ng đất huyền thoại Gondor c&oacute; một hệ thống truyền tin gồm c&aacute;c th&aacute;p canh để b&aacute;o hiệu trong trường hợp khẩn cấp.</p>\n<p>Khi mỗi th&aacute;p canh được b&aacute;o hiệu, nh&acirc;n vi&ecirc;n truyền tin ở th&aacute;p đ&oacute; sẽ ngay lập tức truyền th&ocirc;ng tin đến tất cả c&aacute;c th&aacute;p chưa được nhận th&ocirc;ng tin, v&agrave; theo 1 thứ tự cho trước. Việc truyền tin xảy ra đồng thời (xem v&iacute; dụ 2: ngay khi th&aacute;p 1 nhận được tin, th&ocirc;ng tin được truyền đến cả th&aacute;p 2 v&agrave; 4 -&gt; thời gian th&aacute;p 2 nhận được tin l&agrave; 2). Tuy nhi&ecirc;n nh&acirc;n vi&ecirc;n truyền tin ở th&aacute;p i chỉ c&oacute; thể truyền th&ocirc;ng tin tới kh&ocirc;ng qu&aacute; s[i] th&aacute;p kh&aacute;c. Thời gian để truyền tin giữa 2 th&aacute;p bằng khoảng c&aacute;ch giữa 2 th&aacute;p đ&oacute;. Tại thời điểm 0, th&ocirc;ng tin bắt đầu được truyền từ th&aacute;p 1. T&iacute;nh thời gian để mỗi th&aacute;p nhận được th&ocirc;ng tin.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n: N (1&lt;=N&lt;=100) l&agrave; số lượng th&aacute;p. C&aacute;c th&aacute;p đ&aacute;nh số từ 1 đến N.</p>\n<p>N d&ograve;ng tiếp theo, d&ograve;ng thứ i gồm:</p>\n<p>+ Số nguy&ecirc;n X v&agrave; Y (1&lt;=X,Y&lt;=1000) l&agrave; tọa độ của th&aacute;p trong hệ toạ độ</p>\n<p>+ Số nguy&ecirc;n S (1&lt;=S&lt;=100) l&agrave; số th&aacute;p m&agrave; th&aacute;p đ&oacute; c&oacute; thể truyền tin đi</p>\n<p>+ N-1 số nguy&ecirc;n ph&acirc;n biệt trong khoảng 1 đến N, l&agrave; danh s&aacute;ch c&aacute;c th&aacute;p m&agrave; nh&acirc;n vi&ecirc;n ở th&aacute;p i được y&ecirc;u cầu truyền tin. Nh&acirc;n vi&ecirc;n truyền tin ở th&aacute;p n&agrave;y sẽ phải lần lượt truyền th&ocirc;ng tin đi theo thứ tự trong danh s&aacute;ch. Kh&ocirc;ng c&oacute; 2 số n&agrave;o tr&ugrave;ng nhau trong danh s&aacute;ch, v&agrave; trong danh s&aacute;ch thứ i kh&ocirc;ng chứa số i</p>\n<p>Dữ liệu đảm bảo kh&ocirc;ng c&oacute; 2 th&aacute;p n&agrave;o nhận được tin tại c&ugrave;ng 1 thời điểm.</p>\n<h3>Output</h3>\n<p>Gồm N d&ograve;ng, mỗi d&ograve;ng chứa một số thực. D&ograve;ng thứ i chứa thời gian m&agrave; th&aacute;p thứ i nhận được th&ocirc;ng tin. Kết quả của bạn sẽ được t&iacute;nh l&agrave; ch&iacute;nh x&aacute;c nếu kết quả sai kh&aacute;c kh&ocirc;ng qu&aacute; 0.01 so với đ&aacute;p &aacute;n.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1 1 1 2 3 4\n1 2 1 4 1 3\n2 1 1 2 1 4\n2 2 1 3 2 1\n\n\n<strong>Output:</strong>\n0.000000\n1.000000\n3.000000\n2.000000\n\n</pre>\n<pre><strong>Input:</strong>\n5\n4 3 2 5 2 4 3\n4 5 1 4 1 5 3\n4 4 1 1 4 5 2\n2 4 1 5 2 3 1\n3 4 2 2 4 3 1\n\n\n<strong>Output:</strong>\n0.000000\n2.000000\n4.414214\n2.414214\n1.414214</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e6a81f99-a801-4463-a0a9-f0fc660fa2cf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GONDORinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9269"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "graph_-tim-khop-va-cau-co-ban",
  "tags": [],
  "level": "BEGINNER",
  "title": "GRAPH_ - Tìm khớp và cầu (Cơ bản",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>GRAPH_ - T&igrave;m khớp v&agrave; cầu (Cơ bản)</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/graph_\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/graph_</a><br /><br /><br />\n<p>X&eacute;t đơn đồ thị v&ocirc; hướng G = (V, E) c&oacute; n(1&lt;=n&lt;=10000) đỉnh v&agrave; m(1&lt;=m&lt;=50000) cạnh. Người ta định nghĩa một đỉnh gọi l&agrave; khớp nếu như xo&aacute; đỉnh đ&oacute; sẽ l&agrave;m tăng số th&agrave;nh phần li&ecirc;n th&ocirc;ng của đồ thị. Tương tự như vậy, một cạnh được gọi l&agrave; cầu nếu xo&aacute; cạnh đ&oacute; sẽ l&agrave;m tăng số th&agrave;nh phần li&ecirc;n th&ocirc;ng của đồ thị.</p>\n<p>Vấn đề đặt ra l&agrave; cần phải đếm tất cả c&aacute;c khớp v&agrave; cầu của đồ thị G.</p>\n<h3>Input</h3>\n<p>+D&ograve;ng đầu: chứa hai số tự nhi&ecirc;n n,m.</p>\n<p>+M d&ograve;ng sau mỗi d&ograve;ng chứa một cặp số (u,v) (u&lt;&gt;v, 1&lt;=u&lt;=n, 1&lt;=v&lt;n) m&ocirc;=\"\" tả=\"\" một=\"\" cạnh=\"\" của=\"\" g.&lt;=\"\" p=\"\"&gt;&lt;/n)&gt;</p>\n<h3>Output</h3>\n<p>Gồm một d&ograve;ng duy nhất ghi hai số, số thứ nhất l&agrave; số khớp, số thứ hai l&agrave; số cầu của G</p>\n<h3>Example</h3>\n<pre><br /><br /></pre>\n<pre><br /><br /><img src=\"file:///C:/DOCUME~1/ADMINI~1/LOCALS~1/Temp/moz-screenshot-2.jpg\" alt=\"\" /><img src=\"http://i433.photobucket.com/albums/qq53/canhtoannguyen/NewBitmapImage.jpg\" alt=\"\" width=\"512\" height=\"384\" /><br /><br /><br /></pre>\n<pre><strong>Input:</strong></pre>\n<pre><br /><br /></pre>\n<pre><br /><br /><br />10 12<br />1 10<br />10 2<br />10 3<br />2 4<br />4 5<br />5 2<br />3 6<br />6 7<br />7 3<br />7 8<br />8 9<br />9 7<br /><br /><strong>Output:</strong> <br />4 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a69012d7-0ed6-401e-9f46-0ea5bec86d1e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GRAPH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "gss-doan-con-co-tong-lon-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "GSS - Đoạn con có tổng lớn nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>GSS - Đoạn con c&oacute; tổng lớn nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/gss\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/gss</a><br /><br /><br />\n<p>Cho d&atilde;y số a[1], a[2], ..., a[n] (|a[i]| &lt;= 15000, n &lt;= 50000).</p>\n<p>H&agrave;m q(x, y) = max { tổng(a[i]+a[i+1]+...+a[j]), x &lt;= i &lt;= j &lt;= y }.</p>\n<p>Cho m c&acirc;u hỏi dạng x, y (1 &lt;= x &lt;= y &lt;= n). (m &lt;= 50000) -&gt; h&atilde;y t&iacute;nh c&aacute;c q(x, y).<br /><br /></p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu l&agrave; n.</p>\n<p>- D&ograve;ng thứ hai l&agrave; d&atilde;y a.</p>\n<p>- D&ograve;ng thứ 3 l&agrave; m.</p>\n<p>- m d&ograve;ng tiếp theo mỗi d&ograve;ng l&agrave; 1 cặp số x, y.</p>\n<h3>Output</h3>\n<p>-&gt; Lần lượt ghi ra c&aacute;c q(x, y) tương ứng. Mỗi kết quả ghi tr&ecirc;n 1 d&ograve;ng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />3<br />-1 2 3<br />1<br />1 2<br /><strong>Output:</strong><br />2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/469b328e-e562-457b-b10f-2294c1aa544c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GSSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "haf1-dua-xe",
  "tags": [],
  "level": "BEGINNER",
  "title": "HAF1 - Đua Xe",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HAF1 - Đua Xe</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cuộc đua F1 năm 2009 thay bằng việc đua nhiều v&ograve;ng v&agrave;o c&aacute;c thời điểm kh&aacute;c nhau thể lại đua lu&ocirc;n nhiều v&ograve;ng 1 lần. (Tuy nhi&ecirc;n mỗi v&ograve;ng lại c&oacute; nhiều đường đua, mỗi đường c&oacute; chiều d&agrave;i kh&aacute;c nhau chỉ số kh&aacute;c nhau,nối với 1 đường c&ugrave;ng chỉ số ở v&ograve;ng tiếp theo)Đặc biệt mỗi xe chỉ cần chạy 1 số đường ở mỗi v&ograve;ng v&agrave; sang v&ograve;ng đua tiếp theo.Tuy nhi&ecirc;n v&igrave; l&agrave; cuộc đua F1 tầm cỡ thế giới n&ecirc;n ở c&aacute;c g&oacute;c đường đều c&oacute; bom(&gt;_&lt;)n&ecirc;n kh&ocirc;ng thể chạy ch&eacute;o được m&agrave; chỉ c&oacute; thể chạy thẳng hoặc chạy sang ngang m&agrave; th&ocirc;i.</p>\n<p>Bạn hăy t&igrave;m ra con đường ngắn nhất đi từ v&ograve;ng 1 đến v&ograve;ng cuối để gi&uacute;p c&aacute;c tay đua dễ d&agrave;ng trở th&agrave;nh nh&agrave; v&ocirc; địch.</p>\n<p>Lưu &yacute;:V&igrave; cuộc đua F1 l&agrave; đua xe &ocirc; t&ocirc; n&ecirc;n c&aacute;c xe sẽ kh&ocirc;ng thể bay được(nhảy c&oacute;c)m&agrave; chỉ c&oacute; thể chạy tr&ecirc;n c&aacute;c đoạn đường kề nhau.</p>\n<h3>Input</h3>\n<ul>\n<li>Gồm một d&ograve;ng duy nhất chứa 2 số N,M(số đường đua mỗi v&ograve;ng,số v&ograve;ng đua).</li>\n<li>M d&ograve;ng tiếp mỗi d&ograve;ng N số l&agrave; chiều d&agrave;i của đường đua.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>1 d&ograve;ng duy nhất l&agrave; độ d&agrave;i đường đi ngắn nhất.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>0&lt; M(số v&ograve;ng đua) &lt;=1000.</li>\n<li>0&lt; N(số đường đua ở mỗi v&ograve;ng)&lt;=1000.</li>\n<li>0&lt; a(chiều d&agrave;i mỗi đường đua)&lt;=1000</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input</strong>\n3 3\n3 2 1\n4 1 1\n8 1 3\n<strong>Output</strong>\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6b94f64d-33bb-4122-8c25-17d4547d3841",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HAF1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "haoi6000-haoi-6000",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "HAOI6000 - HAOI 6000",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HAOI6000 - HAOI 6000</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Ng&agrave;y nay, khi internet đ&atilde; trở n&ecirc;n v&ocirc; c&ugrave;ng phổ biến, c&aacute;c cuộc thi đều c&oacute; xu hướng chuyển sang h&igrave;nh thức thi on-line, vừa tiết kiệm được chi ph&iacute;, vừa thu h&uacute;t được số lượng đ&ocirc;ng đảo th&iacute; sinh. HAOI (Hot Angel On the Internet &ndash; tạm dịch l&agrave; Thi&ecirc;n thần xinh đẹp tr&ecirc;n mạng) l&agrave; một cuộc thi như vậy. Giống như những cuộc thi sắc đẹp b&igrave;nh thường, HAOI cũng bao gồm c&aacute;c v&ograve;ng thi phụ: t&agrave;i năng, tr&iacute; tuệ, trang phục truyền thống&hellip; Sau đ&acirc;y l&agrave; c&acirc;u hỏi ở phần thi tr&iacute; tuệ:</p>\n<p>Một to&agrave; nh&agrave; h&igrave;nh chữ nhật được chia th&agrave;nh MxN &ocirc; vu&ocirc;ng nhỏ. Ở mỗi &ocirc; vu&ocirc;ng, người ta x&acirc;y đ&uacute;ng một bức tường l&agrave; một trong hai đường ch&eacute;o của &ocirc; đ&oacute;. Y&ecirc;u cầu t&igrave;m đường đi nhanh nhất từ mặt ph&iacute;a Bắc tới mặt ph&iacute;a Nam của to&agrave; nh&agrave; m&agrave; kh&ocirc;ng được đi ra ngo&agrave;i to&agrave; nh&agrave;?</p>\n<p>X&eacute;t v&iacute; dụ trong h&igrave;nh vẽ b&ecirc;n, c&oacute; 3 đường đi kh&aacute;c nhau. Trong đ&oacute;, đường 1 v&agrave; 3 l&agrave; ngắn nhất với độ d&agrave;i 10.</p>\n<p>Giả sử bạn g&aacute;i của bạn đang tham gia HAOI. Bạn h&atilde;y lập tr&igrave;nh một chương tr&igrave;nh giải quyết c&acirc;u hỏi tr&ecirc;n trong thời gian cho ph&eacute;p để gi&uacute;p đỡ c&ocirc; ấy.</p>\n<p><img src=\"https://vn.spoj.com/content/haoi6000\" alt=\"\" /></p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n l&agrave; hai số M, N.</li>\n<li>MxN số tự nhi&ecirc;n tiếp theo (mỗi số c&aacute;ch nhau &iacute;t nhất một khoảng trống) mi&ecirc;u tả trạng th&aacute;i c&aacute;c bức tường ở c&aacute;c &ocirc; (1,1), (1,2) &hellip; (1,N), (2,1), (2,2) &hellip; (M,N). Số 0 nếu bức tường nối đỉnh tr&aacute;i tr&ecirc;n với phải dưới, số 1 nếu bức tường nối đỉnh tr&aacute;i dưới v&agrave; phải tr&ecirc;n của &ocirc; vu&ocirc;ng.</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>In ra file HAOI.OUT hai số nguy&ecirc;n l&agrave; độ d&agrave;i đường đi ngắn nhất v&agrave; số lượng đường đi c&oacute; độ d&agrave;i như vậy. Trong trường hợp kh&ocirc;ng c&oacute; đường đi n&agrave;o, in ra một d&ograve;ng chứa hai số 0 0.</li>\n</ul>\n<h3>Giới hạn</h3>\n<p>1 &le; M, N &le; 1000</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5 5\n0 0 1 1 1 \n1 1 0 0 0\n0 0 1 1 1\n1 1 0 0 0\n0 0 0 1 1\t\n\n<strong>Kết quả</strong>\n10 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/49cb0c1d-d287-4116-877c-804583651623",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HAOI6000input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "hbtlca-dynamic-lca",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "HBTLCA - dynamic LCA",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HBTLCA - dynamic LCA</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/hbtlca\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/hbtlca</a><br /><br /><br />\n<p>Cho một đồ thị c&acirc;y c&oacute; N đỉnh N-1 cạnh, c&oacute; gốc l&agrave; đỉnh 1. v&agrave; M truy vấn. Mỗi truy vấn thuộc một trong hai loại sau:</p>\n<p>1 root: Chọn root l&agrave;m gốc của c&acirc;y</p>\n<p>2 u v: Y&ecirc;u cầu t&igrave;m cha chung gần nhất của hai đỉnh u v&agrave; v.</p>\n<p>H&atilde;y lập tr&igrave;nh v&agrave; đưa ra c&acirc;u trả lời ứng với c&aacute;c truy vấn loại 2.</p>\n<h3>Input</h3>\n<p>Gồm nhiều bộ test:</p>\n<p>D&ograve;ng 1: Số nguy&ecirc;n N, số đỉnh của c&acirc;y (1&le;N&le;10<sup>5</sup>).</p>\n<p>N-1 d&ograve;ng tiếp theo: Mỗi d&ograve;ng gồm hai số nguy&ecirc;n u v&agrave; v l&agrave; hai đỉnh của đồ thị.</p>\n<p>D&ograve;ng tiếp theo: Số nguy&ecirc;n M, số truy vấn (1&le;M&le;10<sup>5</sup>).</p>\n<p>M d&ograve;ng tiếp theo, mỗi d&ograve;ng thuộc một trong hai loại truy vấn đ&atilde; cho: \"! root\" ứng với truy vấn loại 1 v&agrave; \"? u v\" ứng với truy vấn loại 2.</p>\n<p>Kết th&uacute;c bộ test l&agrave; số 0.</p>\n<h3>Output</h3>\n<p>Đưa ra c&aacute;c c&acirc;u trả lời ứng với c&aacute;c bộ, mỗi c&acirc;u trả lời in ra tr&ecirc;n một d&ograve;ng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>9</p>\n<p>1 2</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<p>3 6</p>\n<p>3 7</p>\n<p>6 8</p>\n<p>6 9</p>\n<p>5</p>\n<p>? 4 5</p>\n<p>? 5 6</p>\n<p>? 8 7</p>\n<p>! 6</p>\n<p>? 8 7</p>\n<p>0</p>\n<pre>\n<strong>Output:</strong></pre>\n<p>2</p>\n<p>1</p>\n<p>3</p>\n<p>6</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1bee8f71-cbf6-4f76-a2c7-c166e98a6ed3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HBTLCAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "heap1-mot-chut-ve-huffman-tree",
  "tags": [],
  "level": "BEGINNER",
  "title": "HEAP1 - Một chút về Huffman Tree",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HEAP1 - Một ch&uacute;t về Huffman Tree</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/heap1\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/heap1</a><br /><br /><br />\n<p>Một người n&ocirc;ng d&acirc;n muốn cắt 1 thanh gỗ c&oacute; độ d&agrave;i L của m&igrave;nh th&agrave;nh N miếng , mỗi miếng c&oacute; độ d&agrave;i l&agrave; 1 số nguy&ecirc;n dương A[i] ( A[1] + A[2] + &hellip; A[N] = L ) . Tuy nhi&ecirc;n để cắt một miếng gỗ c&oacute; độ d&agrave;i l&agrave; X th&agrave;nh 2 phần th&igrave; &ocirc;ng ta sẽ mất X tiền . &Ocirc;ng n&ocirc;ng d&acirc;n n&agrave;y kh&ocirc;ng giỏi t&iacute;nh to&aacute;n lắm , v&igrave; vậy bạn được y&ecirc;u cầu lập tr&igrave;nh gi&uacute;p &ocirc;ng ta cho biết cần để d&agrave;nh &iacute;t nhất bao nhi&ecirc;u tiền th&igrave; mới c&oacute; thể cắt được tấm gỗ như mong muốn .<br /><br /><em>Lưu &yacute; : Kết quả c&oacute; thể vượt&nbsp;<strong>longint</strong>&nbsp;( trong Pascal ) v&agrave; vượt&nbsp;<strong>long</strong>&nbsp;( trong C++ ) đấy nh&eacute; .</em></p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : 1 số nguy&ecirc;n dương T l&agrave; số bộ test .<br />T nh&oacute;m d&ograve;ng tiếp theo m&ocirc; tả c&aacute;c bộ test , mỗi nh&oacute;m d&ograve;ng gồm 2 d&ograve;ng :<br />D&ograve;ng 1 : số nguy&ecirc;n dương N ( 1 &le; N &le; 20000 ) .<br />D&ograve;ng 2 : N số nguy&ecirc;n dương A[1] ,&hellip;, A[N] . ( 1 &le; A[i] &le; 50000 )</p>\n<h3>Output</h3>\n<p>Kết quả mỗi test ghi ra tr&ecirc;n 1 d&ograve;ng , ghi ra 1 số nguy&ecirc;n dương duy nhất l&agrave; chi ph&iacute; tối thiểu cần để cắt tấm gỗ .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n1\n4\n1 2 3 4\n\n<strong>Output:</strong>\n19\n</pre>\nĐầu ti&ecirc;n cắt miếng gỗ th&agrave;nh 2 phần c&oacute; độ d&agrave;i 6 v&agrave; 4 . Sau đ&oacute; cắt tiếp miếng c&oacute; độ d&agrave;i 6 -&gt; 3 v&agrave; 3 . Cắt 1 miếng 3 th&agrave;nh 2 phần c&oacute; độ d&agrave;i 1 , 2 . Như vậy chi ph&iacute; l&agrave; 10 + 6 + 3 = 19.</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/27f9206a-285b-4f35-b054-c90315d4b2f7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HEAP1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef926f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "helppm-help-the-pm",
  "tags": [],
  "level": "BEGINNER",
  "title": "HELPPM - Help the PM!",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HELPPM - Help the PM!</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<table class=\"problems\" width=\"100%\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://vn.spoj.com/VM08/problems/HELPPM/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://vn.spoj.com/VM08/problems/HELPPM/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<table width=\"100%\">\n<tbody>\n<tr>\n<td valign=\"top\">\n<h2>Gi&uacute;p ng&agrave;i thủ tướng!</h2>\n<p>Năm 2050, l&uacute;c n&agrave;y L&ecirc; Đ&ocirc;n Khu&ecirc; đ&atilde; trở th&agrave;nh Thủ tướng Việt Nam. &Ocirc;ng nhận được một đề nghị cho ph&eacute;p khai th&aacute;c K m<sup>3</sup>&nbsp;gỗ ở một khu rừng để xuất khẩu. Khu rừng n&agrave;y c&oacute; dạng h&igrave;nh chữ nhật MxN km<sup>2</sup>. Để tiện quản l&yacute; th&igrave; người ta chia khu vực th&agrave;nh MxN v&ugrave;ng (M h&agrave;ng, N cột) v&agrave; lượng gỗ tại mỗi khu vực (t&iacute;nh theo m<sup>3</sup>) đ&atilde; được biết. C&aacute;c h&agrave;ng được đ&aacute;nh số 1 đến M từ tr&ecirc;n xuống dưới. C&aacute;c cột được đ&aacute;nh số từ 1 đến N từ tr&aacute;i sang phải. Tọa độ của v&ugrave;ng nằm tại h&agrave;ng i, cột j l&agrave; (i, j).</p>\n<p>Ng&agrave;i Thủ tướng quyết định cho ph&eacute;p khai th&aacute;c v&agrave; v&ugrave;ng khai th&aacute;c để dễ quản l&yacute; n&ecirc;n l&agrave; một v&ugrave;ng h&igrave;nh chữ nhật. Ng&agrave;i Thủ tướng muốn t&igrave;m một phương &aacute;n khai th&aacute;c gỗ sao cho diện t&iacute;ch khai th&aacute;c l&agrave; nhỏ nhất v&agrave; vẫn đủ lượng gỗ cần thiết để xuất khẩu.</p>\n<p>Do l&acirc;u ng&agrave;y kh&ocirc;ng lập tr&igrave;nh n&ecirc;n ng&agrave;i Thủ tướng cần đến sự gi&uacute;p đỡ của c&aacute;c bạn. C&aacute;c bạn h&atilde;y gi&uacute;p ng&agrave;i Thủ tướng n&agrave;o.</p>\n</td>\n<td><img src=\"https://vn.spoj.com/VM08/content/HELPPM.jpg\" width=\"250px\" /></td>\n</tr>\n</tbody>\n</table>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng thứ nhất ghi ba số M, N, K (1 &le; M, N &le; 500, 1 &le; K &le; 10<sup>9</sup>).</li>\n<li>D&ograve;ng thứ i trong M d&ograve;ng tiếp theo ghi N số nguy&ecirc;n kh&ocirc;ng &acirc;m, trong đ&oacute; số thứ j cho biết lượng gỗ tại khu vực (i, j). Biết lượng gỗ tại mỗi khu vực kh&ocirc;ng vượt qu&aacute; 10<sup>4</sup>&nbsp;m<sup>3</sup>.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Nếu kh&ocirc;ng tồn tại v&ugrave;ng khai th&aacute;c gỗ n&agrave;o cho đủ gỗ xuất khẩu, in ra -1. Ngược lại in ra:</p>\n<ul>\n<li>D&ograve;ng thứ nhất ghi diện t&iacute;ch nhỏ nhất c&oacute; thể của v&ugrave;ng khai th&aacute;c gỗ.</li>\n<li>D&ograve;ng tiếp theo ghi bốn số l&agrave; chỉ số của g&oacute;c tr&aacute;i tr&ecirc;n v&agrave; g&oacute;c phải dưới của v&ugrave;ng khai th&aacute;c gỗ. Nếu c&oacute; nhiều v&ugrave;ng c&ugrave;ng thỏa m&atilde;n th&igrave; in ra tọa độ của một v&ugrave;ng bất kỳ.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n3 3 19\n5 4 0\n4 7 0\n0 0 2\n\n<strong>Kết quả</strong>\n4\n1 1 2 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e9f89466-ad97-4ab5-b74c-b067dd69a6f4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HELPPMinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9270"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hirehp-cho-thue-xe",
  "tags": [],
  "level": "BEGINNER",
  "title": "HIREHP - Cho thuê xe",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HIREHP - Cho thu&ecirc; xe</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/hirehp\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/hirehp</a><br /><br /><br />\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Gi&aacute;o sư X c&oacute; một kỳ nghỉ k&eacute;o d&agrave;i n ng&agrave;y đ&aacute;nh số từ 1 tới n. &Ocirc;ng ta muốn thu&ecirc; những chiếc m&ocirc;-t&ocirc; để đi ngắm cảnh bởi &ocirc;ng muốn thử cảm gi&aacute;c tốc độ giữa quang cảnh hoang d&atilde; của thi&ecirc;n nhi&ecirc;n. Dịch vụ du lịch c&oacute; đ&uacute;ng n chiếc xe cho thu&ecirc;. Ng&agrave;y thứ i, người ta chỉ cho thu&ecirc; chiếc xe thứ i, thời gian thu&ecirc; từ đầu ng&agrave;y thứ i tới hết ng&agrave;y t_i (t_i&ge;i) với gi&aacute; thu&ecirc; l&agrave; p_i, tức l&agrave; nếu v&agrave;o ng&agrave;y i gi&aacute;o sư X trả p_i đồng để thu&ecirc; chiếc xe thứ i, &ocirc;ng ta phải trả lại n&oacute; kh&ocirc;ng muộn hơn ng&agrave;y t_i v&agrave; khi &ocirc;ng ta đ&atilde; trả lại chiếc xe đang thu&ecirc; mới được ph&eacute;p thu&ecirc; một chiếc xe kh&aacute;c.</div>\n<div id=\"_mcePaste\">Y&ecirc;u cầu: Bạn h&atilde;y gi&uacute;p gi&aacute;o sư X t&iacute;nh xem cần &iacute;t nhất bao nhi&ecirc;u tiền để thu&ecirc; xe sao cho ng&agrave;y n&agrave;o cũng c&oacute; xe để đi</div>\n<p>&nbsp;</p>\n<p>Gi&aacute;o sư X c&oacute; một kỳ nghỉ k&eacute;o d&agrave;i n ng&agrave;y đ&aacute;nh số từ 1 tới n. &Ocirc;ng ta muốn thu&ecirc; những chiếc m&ocirc;-t&ocirc; để đi ngắm cảnh bởi &ocirc;ng muốn thử cảm gi&aacute;c tốc độ giữa quang cảnh hoang d&atilde; của thi&ecirc;n nhi&ecirc;n. Dịch vụ du lịch c&oacute; đ&uacute;ng n chiếc xe cho thu&ecirc;. Ng&agrave;y thứ i, người ta chỉ cho thu&ecirc; chiếc xe thứ i, thời gian thu&ecirc; từ đầu ng&agrave;y thứ i tới hết ng&agrave;y t_i (t_i&ge;i) với gi&aacute; thu&ecirc; l&agrave; p_i, tức l&agrave; nếu v&agrave;o ng&agrave;y i gi&aacute;o sư X trả p_i đồng để thu&ecirc; chiếc xe thứ i, &ocirc;ng ta phải trả lại n&oacute; kh&ocirc;ng muộn hơn ng&agrave;y t_i v&agrave; khi &ocirc;ng ta đ&atilde; trả lại chiếc xe đang thu&ecirc; mới được ph&eacute;p thu&ecirc; một chiếc xe kh&aacute;c.</p>\n<p><strong><em>Y&ecirc;u cầu:</em></strong>&nbsp;Bạn h&atilde;y gi&uacute;p gi&aacute;o sư X t&iacute;nh xem cần &iacute;t nhất bao nhi&ecirc;u tiền để thu&ecirc; xe sao cho ng&agrave;y n&agrave;o cũng c&oacute; xe để đi</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<ul>\n<li>D&ograve;ng 1 chứa số nguy&ecirc;n dương n&le;5.10^5</li>\n<li>n d&ograve;ng tiếp theo, d&ograve;ng thứ i chứa hai số nguy&ecirc;n dương t_i,p_i (i&le;t_i&le;n;p_i&le; 10^6) c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>Ghi ra một số nguy&ecirc;n duy nhất l&agrave; số tiền thu&ecirc; xe&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n3 10\n3 20\n4 1\n4 40\n\n\n<strong>Output:</strong>\n11&nbsp;</pre>\n<ul>\n<li>&Iacute;t nhất 50% số điểm ứng với c&aacute;c test c&oacute; n&le;10^3</li>\n<li>&Iacute;t nhất 75% số điểm ứng với c&aacute;c test c&oacute; n&le;10^5</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a23d8ac3-a84e-47f5-84bb-8f4c1897b4ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HIREHPinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9271"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hspc14a-bien-doi-cap-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "HSPC14A - Biến đổi cặp số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HSPC14A - Biến đổi cặp số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/hspc14a\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/hspc14a</a><br /><br /><br />\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Từ cặp số (a, b) gồm 2 số nguy&ecirc;n dương, c&oacute; thể sử dụng 1 trong 3 ph&eacute;p biến đổi sau để tạo ra</div>\n<div id=\"_mcePaste\">cặp số mới</div>\n<div id=\"_mcePaste\">&bull;</div>\n<div id=\"_mcePaste\">&bull;</div>\n<div id=\"_mcePaste\">&bull;</div>\n<div id=\"_mcePaste\">(a,b) &rarr; (a, a+b)</div>\n<div id=\"_mcePaste\">(a,b) &rarr; (a+b, b)</div>\n<div id=\"_mcePaste\">(a,b) &rarr; (b,a)</div>\n<div id=\"_mcePaste\">Bắt đầu từ cặp số (1, 1) h&atilde;y d&ugrave;ng &iacute;t ph&eacute;p biến đổi nhất để tạo ra một cặp số c&oacute; chứa số N.</div>\n<p>Từ cặp số (a, b) gồm 2 số nguy&ecirc;n dương, c&oacute; thể sử dụng 1 trong 3 ph&eacute;p biến đổi sau để tạo ra</p>\n<p>cặp số mới</p>\n<p>(a,b) &rarr; (a, a+b)</p>\n<p>(a,b) &rarr; (a+b, b)</p>\n<p>(a,b) &rarr; (b,a)</p>\n<p>Bắt đầu từ cặp số (1, 1) h&atilde;y d&ugrave;ng &iacute;t ph&eacute;p biến đổi nhất để tạo ra một cặp số c&oacute; chứa số N.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu chứa số test T. Tiếp theo l&agrave; T test, mỗi test chứa một số 1 &le; N &le; 10^6.</p>\n<h3>Output</h3>\n<p>Ứng với mỗi test, in ra tr&ecirc;n một d&ograve;ng số bước biến đổi &iacute;t nhất.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4</pre>\n<pre>1</pre>\n<pre>3</pre>\n<pre>5</pre>\n<pre>7\n\n<strong>Output:</strong>\n0\n</pre>\n<pre>2</pre>\n<pre>3</pre>\n<pre>4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5d076edb-bf63-4b55-926f-d2db1534ff04",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HSPC14Ainput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9272"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hspc14i-choi-nhay",
  "tags": [],
  "level": "BEGINNER",
  "title": "HSPC14I - Chơi nhảy",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HSPC14I - Chơi nhảy</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">Hiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/hspc14i\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/hspc14i</a><br /><br /><br />\n<p>&nbsp;</p>\n<div id=\"_mcePaste\">Ba con chuột t&uacute;i đang chơi trong sa mạc. Ch&uacute;ng đang chơi tr&ecirc;n trục số, mỗi con nằm ở một số</div>\n<div id=\"_mcePaste\">nguy&ecirc;n kh&aacute;c nhau. Trong một bước duy nhất, một con chuột t&uacute;i b&ecirc;n ngo&agrave;i nhảy v&agrave;o khoảng</div>\n<div id=\"_mcePaste\">trống giữa 2 con kia. Hai con chuột t&uacute;i kh&ocirc;ng bao giờ ở c&ugrave;ng một vị tr&iacute;. H&atilde;y gi&uacute;p ch&uacute;ng chơi</div>\n<div id=\"_mcePaste\">c&agrave;ng l&acirc;u c&agrave;ng tốt.</div>\n<p>Ba con chuột t&uacute;i đang chơi trong sa mạc. Ch&uacute;ng đang chơi tr&ecirc;n trục số, mỗi con nằm ở một số nguy&ecirc;n kh&aacute;c nhau. Trong một bước duy nhất, một con chuột t&uacute;i b&ecirc;n ngo&agrave;i nhảy v&agrave;o khoảng trống giữa 2 con kia. Hai con chuột t&uacute;i kh&ocirc;ng bao giờ ở c&ugrave;ng một vị tr&iacute;. H&atilde;y gi&uacute;p ch&uacute;ng chơi c&agrave;ng l&acirc;u c&agrave;ng tốt.</p>\n<p>&nbsp;</p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p>Gồm nhiều bộ test, mỗi bộ test tr&ecirc;n một d&ograve;ng gồm ba số nguy&ecirc;n A, B v&agrave; C (0 &lt; A &lt; B &lt; C &lt; 100) l&agrave; vị tr&iacute; ban đầu của 3 con chuột t&uacute;i.</p>\n<h3><span>Đầu ra</span></h3>\n<p>Với mỗi test, in ra số bước lớn nhất những con chuột t&uacute;i c&oacute; thể thực hiện.</p>\n<h3><span>Th&iacute; dụ</span></h3>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span> \n2 3 5</span></pre>\n<pre><span>3 5 9</span>\n\n<strong><span>Đầu ra:</span></strong><span>\n1</span>\n</pre>\n<pre><span>3</span></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e736e902-f169-4718-bcdc-647c786eefd9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HSPC14Iinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9273"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "hspc14j-sang",
  "tags": [],
  "level": "BEGINNER",
  "title": "HSPC14J - Sàng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>HSPC14J - S&agrave;ng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<div id=\"_mcePaste\">S&agrave;ng của Eratosthenes l&agrave; thuật to&aacute;n nổi tiếng để t&igrave;m tất cả c&aacute;c số nguy&ecirc;n tố nhỏ hơn N. Thuật</div>\n<div id=\"_mcePaste\">to&aacute;n như sau:</div>\n<div id=\"_mcePaste\">1.</div>\n<div id=\"_mcePaste\">2.</div>\n<div id=\"_mcePaste\">3.</div>\n<div id=\"_mcePaste\">4.</div>\n<div id=\"_mcePaste\">Ghi ra tất cả c&aacute;c số nguy&ecirc;n giữa 2 v&agrave; N.</div>\n<div id=\"_mcePaste\">T&igrave;m số nhỏ nhất chưa bị gạch v&agrave; gọi n&oacute; l&agrave; P (P l&agrave; số nguy&ecirc;n tố).</div>\n<div id=\"_mcePaste\">Gạch bỏ P v&agrave; tất cả c&aacute;c bội số của n&oacute; m&agrave; chưa bị gạch.</div>\n<div id=\"_mcePaste\">Nếu c&ograve;n số chưa bị gạch bỏ, chuyển sang bước 2.</div>\n<div id=\"_mcePaste\">Viết một chương tr&igrave;nh, cho N v&agrave; K, t&igrave;m số nguy&ecirc;n thứ K bị gạch.</div>\n<p>S&agrave;ng của Eratosthenes l&agrave; thuật to&aacute;n nổi tiếng để t&igrave;m tất cả c&aacute;c số nguy&ecirc;n tố nhỏ hơn N. Thuật</p>\n<p>to&aacute;n như sau:</p>\n<p>&nbsp;</p>\n<ol>\n<li>Ghi ra tất cả c&aacute;c số nguy&ecirc;n giữa 2 v&agrave; N.</li>\n<li>T&igrave;m số nhỏ nhất chưa bị gạch v&agrave; gọi n&oacute; l&agrave; P (P l&agrave; số nguy&ecirc;n tố).</li>\n<li>Gạch bỏ P v&agrave; tất cả c&aacute;c bội số của n&oacute; m&agrave; chưa bị gạch.</li>\n<li>Nếu c&ograve;n số chưa bị gạch bỏ, chuyển sang bước 2.</li>\n</ol>\n<p>&nbsp;</p>\n<p>Viết một chương tr&igrave;nh, cho N v&agrave; K, t&igrave;m số nguy&ecirc;n thứ K bị gạch.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>Gồm nhiều bộ test, mỗi bộ test nằm tr&ecirc;n một d&ograve;ng gồm c&aacute;c số nguy&ecirc;n N v&agrave; K (2 &le; K &lt; N &le; 1000).</p>\n<h3>Output</h3>\n<p>Với mỗi test, in ra tr&ecirc;n một d&ograve;ng số thứ K bị gạch bỏ.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7 3</pre>\n<pre>15 12</pre>\n<pre>10 7\n\n<strong>Output:</strong>\n6</pre>\n<pre>7</pre>\n<pre>9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fa75d59b-39ce-4e0f-8d5e-d720b3a46cdc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HSPC14Jinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9274"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "insul-cach-nhiet",
  "tags": [],
  "level": "BEGINNER",
  "title": "INSUL - Cách nhiệt",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>INSUL - C&aacute;ch nhiệt</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một d&atilde;y N vi&ecirc;n gạch lần lượt c&oacute; độ c&aacute;ch nhiệt l&agrave; c&aacute;c số a<sub>1</sub>.. a<sub>N</sub>. Nếu xếp lần lượt c&aacute;c vi&ecirc;n gạch theo tr&igrave;nh tự đ&oacute; th&igrave; độ c&aacute;ch nhiệt cả khối l&agrave; a<sub>1</sub>&nbsp;+ a<sub>2</sub>&nbsp;+ ... + a<sub>N</sub>&nbsp;+ max(0, a<sub>2</sub>&nbsp;- a<sub>1</sub>) + max(0, a<sub>3</sub>&nbsp;- a<sub>2</sub>) + ... + max(0, a<sub>N</sub>&nbsp;- a<sub>N - 1</sub>). Nhiệm vụ của bạn l&agrave; t&igrave;m c&aacute;ch xếp sao cho độ c&aacute;ch nhiệt của cả khối l&agrave; lớn nhất c&oacute; thể.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ghi số nguy&ecirc;n dương N (0 &lt; n &le; 10^5).</li>\n<li>N d&ograve;ng sau mỗi d&ograve;ng ghi một số a<sub>i</sub>&nbsp;( 1 &le; i &le; N v&agrave; 1 &le; a<sub>i</sub>&nbsp;&le; 10000).</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Ghi tr&ecirc;n một d&ograve;ng kết quả cần t&igrave;m.</p>\n<h3>V&iacute; dụ</h3>\n<pre> \n<strong>Dữ liệu:</strong> \n4\n5\n4\n1\n7\n<strong>Kết qủa</strong> \n24 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b0d83305-ee3d-4c5f-8d99-bd40ae813a94",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "INSULinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9275"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ioibin-cac-thung-nuoc",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "IOIBIN - Các thùng nước",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>IOIBIN - C&aacute;c th&ugrave;ng nước</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>C&oacute; N th&ugrave;ng nước được đ&aacute;nh số từ 1 đến N, giữa 2 th&ugrave;ng bất kỳ đều c&oacute; một ống nối c&oacute; một van c&oacute; thể kh&oacute;a hoặc mở. Ở trạng th&aacute;i ban đầu tất cả c&aacute;c van đều đ&oacute;ng.</p>\n<p>Bạn được cho một số y&ecirc;u cầu, trong đ&oacute; mỗi y&ecirc;u cầu c&oacute; 2 dạng:</p>\n<p>Dạng X Y 1 c&oacute; &yacute; nghĩa l&agrave; bạn cần mở van nối giữa 2 th&ugrave;ng X v&agrave; Y.</p>\n<p>Dạng X Y 2 c&oacute; &yacute; nghĩa l&agrave; bạn cần cho biết với trạng th&aacute;i c&aacute;c van đang mở / kh&oacute;a như hiện tại th&igrave; 2 th&ugrave;ng X v&agrave; Y c&oacute; thuộc c&ugrave;ng một nh&oacute;m b&igrave;nh th&ocirc;ng nhau hay kh&ocirc;ng? Hai th&ugrave;ng được coi l&agrave; thuộc c&ugrave;ng một nh&oacute;m b&igrave;nh th&ocirc;ng nhau nếu nước từ b&igrave;nh n&agrave;yc&oacute; thể chảy đến được b&igrave;nh kia qua một số ống c&oacute; van đang mở.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi một số nguy&ecirc;n dương P l&agrave; số y&ecirc;u cầu.</p>\n<p>Trong P d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi ba số nguy&ecirc;n dương X, Y, Z với &yacute; nghĩa c&oacute; y&ecirc;u cầu loại Z với 2 th&ugrave;ng X v&agrave; Y.</p>\n<h3>Output</h3>\n<p>Với mỗi y&ecirc;u cầu dạng X Y 2 (với Z = 2) bạn cần ghi ra số 0 hoặc 1 tr&ecirc;n 1 d&ograve;ng t&ugrave;y thuộc 2 th&ugrave;ng X v&agrave; Y kh&ocirc;ng thuộc hoặc thuộc c&ugrave;ng một nh&oacute;m b&igrave;nh.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n9\n1 2 2 \n1 2 1\n3 7 2\n2 3 1\n1 3 2\n2 4 2\n1 4 1\n3 4 2\n1 7 2\n\n<strong>Output:</strong>\n0\n0\n1\n0\n1\n0\n</pre>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 10000</li>\n<li>1 &le; P &le; 50000</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0bdf3fa1-43ee-4a86-ad1a-44e47f37b21e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IOIBINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9276"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ivana-tro-choi-vong-so",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "IVANA - Trò chơi vòng số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>IVANA - Tr&ograve; chơi v&ograve;ng số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Zvonko v&agrave; Ivana c&ugrave;ng chơi tr&ograve; chơi sau:</p>\n<ul>\n<li>Ban đầu, Zvonko đặt N số nguy&ecirc;n dương l&ecirc;n một v&ograve;ng tr&ograve;n.</li>\n<li>Mỗi người chơi chọn một số b&ecirc;n cạnh một số đ&atilde; được chọn trước đ&oacute;.</li>\n<li>Ivana đi trước, trong lượt đầu n&agrave;y Ivana được quyền chọn bất kỳ số n&agrave;o.</li>\n<li>Tr&ograve; chơi kết th&uacute;c khi tất cả c&aacute;c số đ&atilde; được chọn. Ai chọn được nhiều số lẻ hơn sẽ thắng!</li>\n</ul>\n<p>Bạn h&atilde;y gi&uacute;p Ivana t&igrave;m những nước đi đầu ti&ecirc;n để sau đ&oacute; c&ocirc; c&oacute; cơ hội thắng (biết rằng Zvonko lu&ocirc;n sử dụng chiến thuật tối ưu).</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: n, số số tr&ecirc;n v&ograve;ng tr&ograve;n. (1&lt;=n&lt;=100)</li>\n<li>D&ograve;ng 2: n số nguy&ecirc;n dương c&aacute;ch nhau bởi khoảng trắng. C&aacute;c số trong phạm vi từ 1 đến 1000 v&agrave; kh&ocirc;ng c&oacute; hai số n&agrave;o bằng nhau.</li>\n</ul>\n<h3>Output</h3>\n<p>Gồm một số nguy&ecirc;n duy nhất, l&agrave; số nước đi đầu ti&ecirc;n để Ivana c&oacute; cơ hội thắng</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3 1 5\n\n<strong>Output:</strong>\n3\n\n<strong>Input:</strong>\n4\n1 2 3 4\n\n<strong>Output:</strong>\n2\n\n<strong>Input:</strong>\n8\n4 10 5 2 9 8 1 7\n\n<strong>Output:</strong>\n5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/05242e46-0a9a-429d-90e0-3d632e04c3dd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IVANAinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9277"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kagain-chien-truong-o-qua",
  "tags": [],
  "level": "BEGINNER",
  "title": "KAGAIN - Chiến trường Ô qua",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KAGAIN - Chiến trường &Ocirc; qua</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Lại n&oacute;i về Lục V&acirc;n Ti&ecirc;n , sau khi vượt qua v&ograve;ng loại để trở th&agrave;nh Tr&aacute;ng Sỹ , anh đ&atilde; gặp được Đ&ocirc;r&ecirc;mon v&agrave; được ch&uacute; m&egrave;o m&aacute;y cho đi qu&aacute; giang về thế kỷ 19 . Trở lại qu&ecirc; hương sau nhiều năm xa c&aacute;ch , với tấm bằng Tr&aacute;ng Sỹ hạng 1 do Li&ecirc;n Đo&agrave;n Type Thuật cấp , anh đ&atilde; được Đức Vua cử l&agrave;m đại tướng thống l&atilde;nh 3 qu&acirc;n chống lại giặc &Ocirc; Qua x&acirc;m lăng . Đo&agrave;n qu&acirc;n của anh sẽ gồm N đại đội , đại đội i c&oacute; A[i] ( &gt; 0 ) người . Qu&acirc;n sỹ trong 1 đại đội sẽ đứng th&agrave;nh 1 cột từ người 1 -&gt; người A[i] , như vậy binh sỹ sẽ đứng th&agrave;nh N cột . V&igrave; V&acirc;n Ti&ecirc;n quyết 1 trận sẽ đ&aacute;nh bại qu&acirc;n &Ocirc; Qua n&ecirc;n đ&atilde; cử ra 1 qu&acirc;n đo&agrave;n h&ugrave;ng mạnh nhất . Trong sử cũ ch&eacute;p rằng , qu&acirc;n đo&agrave;n của V&acirc;n Ti&ecirc;n cử ra l&uacute;c đ&oacute; l&agrave; một nh&oacute;m c&aacute;c đại đội c&oacute; chỉ số li&ecirc;n tiếp nhau ( tức l&agrave; đại đội i , i + 1 , &hellip; j ) . V&igrave; sử s&aacute;ch th&igrave; mối mọt hết cả n&ecirc;n chỉ biết được mỗi thế . Ngo&agrave;i ra theo giang hồ đồn đại th&igrave; sức mạnh của 1 qu&acirc;n đo&agrave;n = số người của đại đội &iacute;t người nhất * số đại đội được chọn . Nhiệm vụ của bạn l&agrave; dựa tr&ecirc;n c&aacute;c th&ocirc;ng số của c&aacute;c nh&agrave; khảo cổ c&oacute; được , h&atilde;y cho biết qu&acirc;n đo&agrave;n m&agrave; V&acirc;n Ti&ecirc;n đ&atilde; chọn ra l&agrave; từ đại đội n&agrave;o đến đại đội n&agrave;o . Ch&uacute; &yacute; nếu c&oacute; nhiều phương &aacute;n th&igrave; ghi ra phương &aacute;n m&agrave; chỉ số của đại đội đầu ti&ecirc;n được chọn l&agrave; nhỏ nhất .</p>\n<h3>B&agrave;i n&agrave;y O(N) mới thực sự coi l&agrave; accept . C&ograve;n lại O(NlogN) , O(N^2) th&igrave; đ&oacute; l&agrave; do bạn may mắn accept th&ocirc;i.</h3>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : Số T l&agrave; số bộ test .<br />T nh&oacute;m d&ograve;ng tiếp theo , mỗi nh&oacute;m d&ograve;ng m&ocirc; tả 1 bộ test . Nh&oacute;m d&ograve;ng thứ i :<br />D&ograve;ng 1: N ( &lt;= 30000 )<br />D&ograve;ng 2: N số nguy&ecirc;n m&ocirc; tả N số A[1] , A[2] , &hellip; A[N] ( c&aacute;c số nguy&ecirc;n dương &lt;= 30000 ).<br />.</p>\n<h3>Output</h3>\n<p>Kết quả mỗi test ghi ra tr&ecirc;n 1 d&ograve;ng , gồm 3 số : sức mạnh qu&acirc;n đo&agrave;n mạnh nhất , chỉ số của đại đội đầu ti&ecirc;n v&agrave; chỉ số của đại đội cuối c&ugrave;ng được chọn .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4\n3 4 3 1\n4\n1 2 1 3\n\n<strong>Output:</strong>\n9 1 3\n4 1 4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/024030b1-4bf4-4179-87eb-ef5b9d63c349",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KAGAINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9278"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kandp-ma-va-tot",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KANDP - Mã và tốt",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KANDP - M&atilde; v&agrave; tốt</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Tr&ecirc;n một b&agrave;i cờ vua k&iacute;ch thước v&ocirc; hạn c&oacute; một con m&atilde; v&agrave; một con tốt. Vị tr&iacute; của qu&acirc;n m&atilde; l&agrave; (Mx, My), vị tr&iacute; của qu&acirc;n tốt l&agrave; (Tx, Ty), trong đ&oacute; x l&agrave; chỉ số d&ograve;ng v&agrave; y l&agrave; chỉ số cột. Qu&acirc;n m&atilde; được quyền đi theo 8 hướng như ở b&agrave;n cờ vua chuẩn. Qu&acirc;n tốt chỉ được đi một hướng l&agrave; đi xuống dưới (từ vị tr&iacute; (x, y) đến vị tr&iacute; (x-1, y)). Hai qu&acirc;n cờ sẽ di chuyển theo lượt, xen kẽ nhau. Khi một qu&acirc;n cờ v&agrave;o vị tr&iacute; của qu&acirc;n cờ kh&aacute;c đang đứng th&igrave; qu&acirc;n cờ vừa di chuyển sẽ thắng.</p>\n<p>Bạn biết vị tr&iacute; ban đầu của hai qu&acirc;n cờ, qu&acirc;n cờ n&agrave;o đi trước. Bạn h&atilde;y t&iacute;nh xem qu&acirc;n m&atilde; c&oacute; khả năng thắng kh&ocirc;ng v&agrave; nếu thắng th&igrave; n&oacute; sẽ phải đi &iacute;t nhất l&agrave; bao nhi&ecirc;u nước.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng thứ nhất ghi hai số Mx, My.</li>\n<li>D&ograve;ng thứ hai ghi hai số Tx, Ty.</li>\n<li>D&ograve;ng thứ ba ghi 0/1 ứng với qu&acirc;n mă đi trước hoặc qu&acirc;n tốt đi trước.</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>D&ograve;ng thứ nhất ghi YES/NO tương ứng với qu&acirc;n mă c&oacute; khả năng thắng hoặc kh&ocirc;ng c&oacute; khả năng thắng.</li>\n<li>Nếu d&ograve;ng thứ nhất l&agrave; YES th&igrave; d&ograve;ng thứ hai ghi số bước &iacute;t nhất.</li>\n</ul>\n<h3>Giới hạn</h3>\n<p>Mx, My, Tx, Ty l&agrave; c&aacute;c số nguy&ecirc;n c&oacute; trị tuyệt đối nhỏ hơn hoặc bằng 1000. Trong 50% số test, Mx, My, Tx, Ty c&oacute; trị tuyệt đối nhỏ hơn hoặc bằng 50.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n0 0\n0 3\n0\n\n<strong>Kết quả</strong>\nYES\n2\n</pre>\n<h3>Giải th&iacute;ch</h3>\n<p>Ở h&igrave;nh vẽ b&ecirc;n dưới, chữ K thể hiện vị tr&iacute; qu&acirc;n m&atilde;, chữ P thể hiện vị tr&iacute; qu&acirc;n tốt.</p>\n<img src=\"http://vn.spoj.com/content/kandp.gif\" /></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bd763c48-ce4a-4923-b969-808d07c0952b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KANDPinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9279"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kcoin-tro-choi-voi-dong-xu",
  "tags": [],
  "level": "BEGINNER",
  "title": "KCOIN - Trò chơi với đồng xu",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KCOIN - Tr&ograve; chơi với đồng xu</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Pirate đi shopping ở Nhật Bản v&agrave; sưu tập được rất nhiều đồng xu Nhật. Khi về nh&agrave;, anh đem c&aacute;c đồng xu ra chơi với em g&aacute;i.</p>\n<p>Tr&ograve; chơi diễn ra như sau:</p>\n<ul>\n<li>Đầu ti&ecirc;n, Pirate chọn ra N đồng xu để chơi v&agrave; chọn th&ecirc;m một số nguy&ecirc;n K từ 0 đến N.</li>\n<li>Trong mỗi lượt chơi, Pirate hoặc em g&aacute;i của m&igrave;nh sẽ đưa ra một c&aacute;ch chọn K đồng xu sao cho c&aacute;ch chọn đ&oacute; kh&ocirc;ng tr&ugrave;ng với bất cứ c&aacute;ch chọn n&agrave;o đ&atilde; được sử dụng trước đ&oacute;.</li>\n<li>Đến lượt của m&igrave;nh, ai kh&ocirc;ng đưa ra được c&aacute;ch chọn n&agrave;o nữa th&igrave; thua.</li>\n</ul>\n<p>Pirate l&agrave; một người anh mẫu mực n&ecirc;n anh lu&ocirc;n nhường em g&aacute;i đi trước v&agrave; lu&ocirc;n gi&agrave;nh phần thua cho m&igrave;nh. C&aacute;c bạn h&atilde;y t&iacute;nh xem c&oacute; bao nhi&ecirc;u c&aacute;ch chọn K để Pirate thua nh&eacute;.</p>\n<p>Lưu &yacute;: Một c&aacute;ch chọn K đồng xu l&agrave; một bộ K số (a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>K</sub>) sao cho 1 &le; a<sub>1</sub>&nbsp;&lt; a<sub>2</sub>&nbsp;&lt; ... &lt; a<sub>K</sub>&nbsp;&le; N. Hai c&aacute;ch chọn (a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>K</sub>) v&agrave; (b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>K</sub>) kh&aacute;c nhau nếu tồn tại a<sub>i&nbsp;</sub>&lt;&gt; b<sub>i</sub>&nbsp;(1 &le; i &le; K).</p>\n<h3>Input</h3>\n<ul>\n<li>Một số nguy&ecirc;n N duy nhất.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một số nguy&ecirc;n duy nhất thể hiện số c&aacute;ch chọn K để Pirate thua.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 10<sup>9</sup></li>\n<li>60% số test c&oacute; 1 &le; N &le; 10<sup>3</sup></li>\n<li>80% số test c&oacute; 1 &le; N &le; 10<sup>5</sup></li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4<br /><br /><strong>Output:</strong>\n2<br /><br /></pre>\n<p><em>Giải th&iacute;ch: C&oacute; 2 c&aacute;ch chọn K thỏa m&atilde;n l&agrave; 0 v&agrave; 4. Với K = 0, chỉ c&oacute; một c&aacute;ch chọn c&aacute;c đồng xu (kh&ocirc;ng chọn đồng xu n&agrave;o cả) n&ecirc;n Pirate sẽ thua. Với K = 4 cũng tương tự.</em></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92a69903-21ce-4808-bb3c-4874aff4a5f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KCOINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kdiff-trong-hoa",
  "tags": [],
  "level": "BEGINNER",
  "title": "KDIFF - Trồng hoa",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KDIFF - Trồng hoa</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Pirate l&agrave; một người rất y&ecirc;u hoa. Anh ấy trồng một luống hoa trước cửa nh&agrave; m&igrave;nh. Luống hoa được chia th&agrave;nh c&aacute;c &ocirc; đất, mỗi &ocirc; đất trồng một b&ocirc;ng hoa. Tuy nhi&ecirc;n, v&igrave; đang bị đau ch&acirc;n n&ecirc;n Pirate ấy kh&ocirc;ng thể chăm s&oacute;c luống hoa một c&aacute;ch ho&agrave;n hảo nhất. Kết quả l&agrave; c&aacute;c b&ocirc;ng hoa của anh c&oacute; xấu đẹp kh&ocirc;ng đều nhau.</p>\n<p>Để cải thiện t&igrave;nh h&igrave;nh, Pirate quyết định chỉ để lại hai kh&oacute;m hoa rời nhau, mỗi kh&oacute;m gồm một số c&aacute;c b&ocirc;ng hoa đứng li&ecirc;n tiếp nhau. Để ng&ocirc;i nh&agrave; của m&igrave;nh tr&ocirc;ng thật xinh đẹp, hai kh&oacute;m hoa kia phải được chọn lựa kỹ c&agrave;ng. Anh d&ugrave;ng đ&ocirc;i mắt thẩm mỹ tinh tường của m&igrave;nh (gọi l&agrave; \"sắc kế\") để đ&aacute;nh gi&aacute; độ xinh đẹp của c&aacute;c b&ocirc;ng hoa, được thể hiện bằng c&aacute;c số nguy&ecirc;n kh&ocirc;ng &acirc;m. Căn cứ v&agrave;o đ&oacute;, một kh&oacute;m hoa đạt ti&ecirc;u chuẩn khi v&agrave; chỉ khi chệnh lệch độ xinh đẹp giữa hai b&ocirc;ng hoa bất k&igrave; trong kh&oacute;m kh&ocirc;ng qu&aacute; một gi&aacute; trị cho trước. Pirate muốn hai kh&oacute;m hoa c&oacute; c&agrave;ng nhiều b&ocirc;ng hoa c&agrave;ng tốt. Bạn h&atilde;y gi&uacute;p anh ấy x&aacute;c định xem c&oacute; thể chọn được nhiều nhất bao nhi&ecirc;u b&ocirc;ng nh&eacute;.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: Hai số nguy&ecirc;n N - số b&ocirc;ng hoa tr&ecirc;n luống hoa, K - ch&ecirc;nh lệch độ xinh đẹp tối đa của hai b&ocirc;ng hoa bất k&igrave; trong một kh&oacute;m.</li>\n<li>N d&ograve;ng tiếp theo: Mỗi d&ograve;ng l&agrave; một số nguy&ecirc;n thể hiện độ xinh đẹp của một b&ocirc;ng hoa.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một số nguy&ecirc;n duy nhất l&agrave; số b&ocirc;ng hoa được chọn của hai kh&oacute;m hoa.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 3 * 10<sup>5</sup>.</li>\n<li>30% số test c&oacute; 1 &le; N &le; 30.</li>\n<li>50% số test c&oacute; 1 &le; N &le; 10<sup>3</sup>.</li>\n<li>C&aacute;c số trong dữ liệu v&agrave;o đều l&agrave; số nguy&ecirc;n kh&ocirc;ng &acirc;m kh&ocirc;ng qu&aacute; 10<sup>9</sup>.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 2<br />1 <br />3 <br />2 <br />5 <br />4<br /><br /><strong>Output:</strong>\n5<br /><br /><em>Giải th&iacute;ch: hai kh&oacute;m hoa được chọn l&agrave; (1, 2, 3) v&agrave; (4, 5).</em></pre>\n<pre><strong>Input:</strong>\n5 2<br />1 <br />3 <br />5 <br />2 <br />4<br /><br /><strong>Output:</strong>\n4<br /><br /><em>Giải th&iacute;ch: hai kh&oacute;m hoa được chọn l&agrave; (1, 2) v&agrave; (4, 5).</em></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f9681c36-7c2e-4d57-8dda-38b5edc5c796",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KDIFFinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kkdd-k-khong-don-doc",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KKDD - K - Không đơn độc",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KKDD - K - Kh&ocirc;ng đơn độc</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Một d&atilde;y số được gọi l&agrave;&nbsp;<em>K &ndash; kh&ocirc;ng đơn độc</em>&nbsp;nếu mỗi phần tử của d&atilde;y đều thuộc một đoạn gồm &iacute;t nhất&nbsp;<strong>K</strong>&nbsp;phần tử li&ecirc;n tiếp c&oacute; gi&aacute; trị giống nhau. V&iacute; dụ d&atilde;y 1 1 2 2 2 1 1 l&agrave;&nbsp;<em>2 &ndash; kh&ocirc;ng đơn độc</em>, nhưng kh&ocirc;ng phải l&agrave;&nbsp;<em>3 &ndash; kh&ocirc;ng đơn độc</em>&nbsp;v&igrave; phần tử đầu ti&ecirc;n chỉ thuộc một đoạn gồm 2 số 1. Nếu một d&atilde;y số chưa phải l&agrave;&nbsp;<em>K &ndash; kh&ocirc;ng đơn độc</em>, bạn c&oacute; quyền thực hiện c&aacute;c thao t&aacute;c biến đổi, mỗi thao t&aacute;c sẽ cộng ( hoặc trừ ) một đơn vị v&agrave;o một phần tử của d&atilde;y.</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>H&atilde;y đếm số thao t&aacute;c &iacute;t nhất cần thực hiện để biến một d&atilde;y số th&agrave;nh d&atilde;y&nbsp;<em>K &ndash; kh&ocirc;ng đơn độc</em>.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ghi 2 số N, K. N l&agrave; số lượng phần tử của d&atilde;y số.</li>\n<li>D&ograve;ng sau ghi N số tự nhi&ecirc;n thể hiện d&atilde;y số.</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Gồm một d&ograve;ng duy nhất ghi ra số thao t&aacute;c cần thực hiện.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n7 3\n2 2 3 4 4 5 5\n\n<strong>Kết quả</strong>\n3\n</pre>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 10000</li>\n<li>1 &le; K &le; 100</li>\n<li>K &le; N</li>\n<li>Phần tử của d&atilde;y c&oacute; gi&aacute; trị kh&ocirc;ng qu&aacute; 10<sup>9</sup></li>\n</ul>\n<h3>Hạn chế</h3>\n<ul>\n<li>C&oacute; 30% số test thỏa m&atilde;n N &le; 200.</li>\n<li>C&oacute; 50% số test thỏa m&atilde;n N &le; 2000.</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dceaa895-44cc-45e7-a497-00151b030498",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KKDDinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kmedian-above-the-median",
  "tags": [],
  "level": "BEGINNER",
  "title": "KMEDIAN - Above the Median",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KMEDIAN - Above the Median</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p><span id=\"probtext-text\">Farmer John has lined up his N (1 &le; N &le; 100,000) cows in a row to measure their heights; cow i has height H_i (1 &le; H_i &le; 1,000,000,000) nanometers--FJ believes in precise measurements! He wants to take a picture of some contiguous subsequence of the cows to submit to a bovine photography contest at the county fair.</span></p>\n<p><span id=\"probtext-text\">The fair has a very strange rule about all submitted photos: a photograph is only valid to submit if it depicts a group of cows whose median height is at least a certain threshold X (1 &le; X &le; 1,000,000,000).</span></p>\n<p><span id=\"probtext-text\">For purposes of this problem, we define the median of an array A[0...K] to be A[ceiling(K/2)] after A is sorted, where ceiling(K/2) gives K/2 rounded up to the nearest integer (or K/2 itself, it K/2 is an integer to begin with). For example the median of {7, 3, 2, 6} is 6, and the median of {5, 4, 8} is 5.</span></p>\n<p><span id=\"probtext-text\">Please help FJ count the number of different contiguous subsequences of his cows that he could potentially submit to the photography contest.</span></p>\n<h3>Input</h3>\n<ul>\n<li><span id=\"probtext-text\">Line 1: Two space-separated integers: N and X.</span></li>\n<li><span id=\"probtext-text\">Lines 2..N+1: Line i+1 contains the single integer H_i.</span></li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li><span id=\"probtext-text\">Line 1: The number of subsequences of FJ's cows that have median at least X. Note this may not fit into a 32-bit integer.</span></li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br /><span id=\"probtext-text\">4 6 <br />10 <br />5 <br />6 <br />2 </span><br /><br /><strong>Output:</strong><br /><span id=\"probtext-text\">7 <br /><br /></span></pre>\n<p><span id=\"probtext-text\"><strong>Explain:</strong>&nbsp;</span><span id=\"probtext-text\">There are 10 possible contiguous subsequences to consider. Of these, only 7 have median at least 6. They are {10}, {6}, {10, 5}, {5, 6}, {6, 2}, {10, 5, 6}, {10, 5, 6, 2}.</span></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b99c9163-b14a-4e0d-90c1-62ee687aec25",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KMEDIANinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kmin-kmin",
  "tags": [],
  "level": "BEGINNER",
  "title": "KMIN - KMIN",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KMIN - KMIN</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho 2 d&atilde;y số nguy&ecirc;n A v&agrave; B. Với mọi số A[i]thuộc A v&agrave; B[j] thuộc B người ta t&iacute;nh tổng n&oacute;. Tất cả c&aacute;c tổng n&agrave;y sau khi được sắp xếp kh&ocirc;ng giảm sẽ tạo th&agrave;nh d&atilde;y C.</p>\n<p>Nhiệm vụ của bạn l&agrave;: Cho 2 d&atilde;y A, B. T&igrave;m K số đầu ti&ecirc;n trong d&atilde;y C</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n gồm 3 số: M, N, K</p>\n<p>M d&ograve;ng tiếp theo gồm M số m&ocirc; tả d&atilde;y A</p>\n<p>N d&ograve;ng tiếp theo gồm N số m&ocirc; tả d&atilde;y B</p>\n<h3>Output</h3>\n<p>Gồm K d&ograve;ng tương ứng l&agrave; K phần tử đầu ti&ecirc;n trong d&atilde;y C</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4 4 6\n1\n2\n3\n4\n2\n3\n4\n5\n\n<strong>Output:</strong>\n3\n4\n4\n5\n5\n5\n</pre>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; M, N, K &le; 50000</li>\n<li>1 &le; A<sub>i</sub>, B<sub>i</sub>&nbsp;&le; 10<sup>9</sup></li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2c6d866f-70cd-4cc8-8c49-b81d879d65d9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KMINinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "kplank-ban-dua",
  "tags": [],
  "level": "BEGINNER",
  "title": "KPLANK - Bán dừa",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KPLANK - B&aacute;n dừa</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Nếu c&aacute;c bạn biết c&acirc;u chuyện thương t&acirc;m \"ăn dưa leo trả v&agrave;ng\" của Pirate hẳn đ&atilde; phải kh&oacute;c hết nước mắt khi anh ấy, v&igrave; l&ograve;ng thương chim, đ&atilde; b&aacute;n rẻ tr&aacute;i dưa leo si&ecirc;u bự của m&igrave;nh.</p>\n<p>Dưa leo cũng đ&atilde; bị chim to lấy đi rồi, Pirate giờ chuyển sang nghề b&aacute;n dừa để b&ugrave; lỗ. Bất đắc dĩ th&ocirc;i, v&igrave; tr&ecirc;n đảo to&agrave;n l&agrave; dừa...</p>\n<p>Nhưng m&agrave; b&aacute;n c&aacute;i g&igrave; th&igrave; đầu ti&ecirc;n cũng phải c&oacute; biển hiệu đ&atilde;. Pirate quyết định l&ugrave;ng sục tr&ecirc;n đảo c&aacute;c mảnh v&aacute;n c&ograve;n s&oacute;t lại của những con t&agrave;u đắm để gh&eacute;p lại th&agrave;nh tấm biển. Cuối c&ugrave;ng anh cũng t&igrave;m được N tấm v&aacute;n h&igrave;nh chữ nhật, tấm thứ i c&oacute; chiều rộng l&agrave; 1 đơn vị v&agrave; chiều d&agrave;i l&agrave; a<sub>i&nbsp;</sub>đơn vị. Pirate dựng đứng ch&uacute;ng tr&ecirc;n mặt đất v&agrave; d&aacute;n lại với nhau để được một mảnh v&aacute;n to hơn (xem h&igrave;nh minh họa).</p>\n<p><img src=\"http://i797.photobucket.com/albums/yy253/khanhptnk/planks.jpg\" alt=\"\" width=\"204\" height=\"172\" /></p>\n<p>Việc cuối c&ugrave;ng chỉ l&agrave; đem mảnh v&aacute;n n&agrave;y đi cưa th&agrave;nh tấm biển th&ocirc;i. Nhưng h&oacute;a ra đ&acirc;y lại l&agrave; c&ocirc;ng việc kh&oacute; khăn nhất. Pirate rất th&iacute;ch h&igrave;nh vu&ocirc;ng v&agrave; muốn tấm biển của m&igrave;nh c&agrave;ng to c&agrave;ng tốt, nhưng khổ nỗi tr&ecirc;n đảo lại kh&ocirc;ng c&oacute; nhiều dụng cụ đo đạc. Kh&ocirc;ng &ecirc;ke, kh&ocirc;ng thước đo độ, n&ecirc;n Pirate chỉ c&ograve;n c&aacute;ch dựa v&agrave;o cạnh của N tấm v&aacute;n ban đầu để cưa cho thẳng th&ocirc;i. Pirate chỉ c&oacute; thể cưa theo những đoạn thẳng chứa một cạnh n&agrave;o đ&oacute; (dọc hoặc ngang) của c&aacute;c tấm v&aacute;n.</p>\n<p>H&atilde;y gi&uacute;p anh ấy cưa được tấm biển lớn nhất c&oacute; thể.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng thứ nhất: ghi số nguy&ecirc;n N - số tấm v&aacute;n.</li>\n<li>N d&ograve;ng tiếp theo: m&ocirc; tả độ cao của c&aacute;c tấm v&aacute;n theo thứ tự tr&aacute;i sang phải sau khi đ&atilde; d&aacute;n lại.</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một số nguy&ecirc;n duy nhất l&agrave; độ d&agrave;i cạnh của tấm biển lớn nhất c&oacute; thể cưa được.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>Độ cao của c&aacute;c tấm v&aacute;n l&agrave; c&aacute;c số nguy&ecirc;n dương kh&ocirc;ng vượt qu&aacute; 10<sup>9</sup>.</li>\n<li>1 &le; N &le; 10<sup>6</sup>.</li>\n<li>60% số test c&oacute; 1 &le; N &le; 2000.</li>\n<li>80% số test c&oacute; 1 &le; N &le; 10<sup>5</sup>.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7<br />5<br />2<br />4<br />3<br />3<br />1<br />4<br /><br /><strong>Output:</strong>\n3<br /><br /></pre>\n<p><em>Giải th&iacute;ch: H&igrave;nh dưới đ&acirc;y minh họa phương &aacute;n tối ưu.</em></p>\n<p><img src=\"http://i797.photobucket.com/albums/yy253/khanhptnk/planks2-1.jpg\" alt=\"\" width=\"197\" height=\"171\" /></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/40718224-d369-4e0b-a555-6610119ccae1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KPLANKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef927f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "kquery-k-query",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "KQUERY - K-query",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>KQUERY - K-query</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<h3>Truy vấn-k</h3>\n<p>Cho một d&atilde;y n phần tử a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;v&agrave; một số c&aacute;c truy vấn-k. Một truy vấn-k l&agrave; một bộ ba (i, j, k) (1 &le; i &le; j &le; n). Với mỗi truy vấn-k (i, j, k), bạn phải trả về số phần tử lớn hơn k nằm trong d&atilde;y con a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: n (1 &le; n &le; 30000).</li>\n<li>D&ograve;ng 2: n số a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;(1 &le; a<sub>i</sub>&nbsp;&le; 10<sup>9</sup>).</li>\n<li>D&ograve;ng 3: q (1 &le; q &le; 200000), số truy vấn-k.</li>\n<li>Trong q d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 3 số i, j, k thể hiện một truy vấn-k (1 &le; i &le; j &le; n, 1 &le; k &le; 10<sup>9</sup>).</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Với mỗi truy vấn-k (i, j, k), in ra số phần tử lớn hơn k trong d&atilde;y con a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>&nbsp;tr&ecirc;n một d&ograve;ng.\n<p>&nbsp;</p>\n</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5\n5 1 2 3 4\n3\n2 4 1\n4 4 4\n1 5 2 \n\n<strong>Kết quả</strong>\n2\n0\n3 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fffaf7b9-5c31-4f93-ab24-f407e34e1531",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KQUERYinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9280"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lascale-qua-can",
  "tags": [],
  "level": "BEGINNER",
  "title": "LASCALE - Quả Cân",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LASCALE - Quả C&acirc;n</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cửa h&agrave;ng của duyhung123abc c&oacute; một c&aacute;i c&acirc;n v&agrave;&nbsp; c&aacute;c quả c&acirc;n c&oacute; khối lượng c&oacute; dạng 3<sup>k</sup>&nbsp;(tức lũy thừa của 3). VD: 1, 3, 9, 27, 81, ...</p>\n<p>Khối lượng của c&aacute;c quả c&acirc;n kh&aacute;c nhau từng đ&ocirc;i một. Duyhung123abc c&oacute; một vật nặng M kg, vật nặng được đặt v&agrave;o đĩa b&ecirc;n tr&aacute;i của c&aacute;i c&acirc;n. H&atilde;y gi&uacute;p anh ta đặt c&aacute;c quả c&acirc;n v&agrave;o 2 đĩa sao cho c&acirc;n th&atilde;ng bằng</p>\n<h3>Input</h3>\n<p>- Chứa 1 số nguy&ecirc;n M duy nhất (0 &lt;= M &lt;= 100 000 000)</p>\n<h3>Output</h3>\n<p>- Kết quả gồm 2 d&ograve;ng</p>\n<p>- D&ograve;ng 1: số A l&agrave; số quả c&acirc;n đặt v&agrave;o đĩa b&ecirc;n tr&aacute;i, theo sau gồm A số l&agrave; khối lượng của c&aacute;c quả c&acirc;n theo thứ tự tăng dần</p>\n<p>- D&ograve;ng 2: số B l&agrave; số quả c&acirc;n đặt v&agrave;o đĩa b&ecirc;n phải, theo sau gồm B số l&agrave; khối lượng của c&aacute;c quả c&acirc;n theo thứ tự tăng dần</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />42<br /><br /><strong>Output:</strong><br />3 3 9 27<br />1 81</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9cf641a2-49a7-463a-aa9d-dd096e55921c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LASCALEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9281"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "latgach-lat-gach",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LATGACH - Lát gạch",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LATGACH - L&aacute;t gạch</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Cho một h&igrave;nh chữ nhật k&iacute;ch thước 2xN (1&lt;=N&lt;=100). H&atilde;y đếm số c&aacute;ch l&aacute;t c&aacute;c vi&ecirc;n gạch nhỏ k&iacute;ch thước 1x2 v&agrave; 2x1 v&agrave;o h&igrave;nh tr&ecirc;n sao cho kh&ocirc;ng c&oacute; phần n&agrave;o của c&aacute;c vi&ecirc;n gạch nhỏ thừa ra ngo&agrave;i, cũng kh&ocirc;ng c&oacute; v&ugrave;ng diện t&iacute;ch n&agrave;o của h&igrave;nh chữ nhật kh&ocirc;ng được l&aacute;t.</p>\n<h3>Input</h3>\n<p>Gồm nhiều test, d&ograve;ng đầu ghi số lượng test T ( T&lt;=100 ).<br />T d&ograve;ng sau mỗi d&ograve;ng ghi một số N.</p>\n<h3>Output</h3>\n<p>Ghi ra T d&ograve;ng l&agrave; số c&aacute;ch l&aacute;t tương ứng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1\n2\n3\n\n<strong>Output:</strong>\n1\n2\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c5029385-7d8d-48f0-b2fb-c72dd411feb8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LATGACHinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9282"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "latgach4-lat-gach-4",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LATGACH4 - Lát gạch 4",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LATGACH4 - L&aacute;t gạch 4</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho một h&igrave;nh chữ nhật k&iacute;ch thước 2xN (1&lt;=N&lt;10^9). H&atilde;y đếm số c&aacute;ch l&aacute;t c&aacute;c vi&ecirc;n gạch nhỏ k&iacute;ch thước 1x2 v&agrave; 2x1 v&agrave;o h&igrave;nh tr&ecirc;n sao cho kh&ocirc;ng c&oacute; phần n&agrave;o của c&aacute;c vi&ecirc;n gạch nhỏ thừa ra ngo&agrave;i, cũng kh&ocirc;ng c&oacute; v&ugrave;ng diện t&iacute;ch n&agrave;o của h&igrave;nh chữ nhật kh&ocirc;ng được l&aacute;t.</p>\n<h3>Input</h3>\n<p>Gồm nhiều test, d&ograve;ng đầu ghi số lượng test T ( T&lt;=100 ). T d&ograve;ng sau mỗi d&ograve;ng ghi một số N.</p>\n<h3>Output</h3>\n<p>Ghi ra T d&ograve;ng l&agrave; số c&aacute;ch l&aacute;t tương ứng lấy phần dư cho 111539786.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n1\n2\n3\n\n\n<strong>Output:</strong>\n1\n2\n3\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5afd4b40-7317-4d61-8300-9c66a4dbe1d8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LATGACH4input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9283"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lem7-company",
  "tags": [],
  "level": "BEGINNER",
  "title": "LEM7 - COMPANY",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LEM7 - COMPANY</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">&nbsp;</div>\n<div class=\"prob\">\n<p>Một c&ocirc;ng ty gồm một số ph&ograve;ng, mỗi ph&ograve;ng gồm 1 số l&atilde;nh đạo v&agrave; 1 số nh&acirc;n vi&ecirc;n, trong ph&ograve;ng kh&ocirc;ng c&oacute; ai vừa l&agrave; l&atilde;nh đạo vừa l&agrave; nh&acirc;n vi&ecirc;n. Kh&ocirc;ng c&oacute; 2 người n&agrave;o c&ugrave;ng thuộc 2 ph&ograve;ng kh&aacute;c nhau. Mỗi l&atilde;nh đạo điều h&agrave;nh c&ocirc;ng việc của mọi nh&acirc;n vi&ecirc;n trong ph&ograve;ng nhưng 2 l&atilde;nh đạo thuộc c&ugrave;ng ph&ograve;ng kh&ocirc;ng điều h&agrave;nh nhau. Hiệu quả của 1 ph&ograve;ng được t&iacute;nh bằng số lượng quan hệ trong ph&ograve;ng đ&oacute;.</p>\n<p>V&iacute; Dụ: Nếu 1 ph&ograve;ng c&oacute; 2 l&atilde;nh đạo v&agrave; 3 nh&acirc;n vi&ecirc;n th&igrave; hiệu quả ph&ograve;ng đ&oacute; bằng 6. Hiệu quả của c&ocirc;ng ty bằng tổng hiệu quả c&aacute;c ph&ograve;ng.</p>\n<p>Một c&ocirc;ng ty muốn c&oacute; hiệu quả bằng 1 số nguy&ecirc;n dương E cho trước. H&atilde;y t&igrave;m c&aacute;ch tổ chức c&ocirc;ng ty sao cho c&aacute;c điều kiện sau được thoả m&atilde;n:</p>\n<p>1. C&ocirc;ng ty c&oacute; &iacute;t nhất 1 ph&ograve;ng</p>\n<p>2. Hiệu quả của c&ocirc;ng ty đ&uacute;ng bằng E</p>\n<p>3. Số N l&agrave; tổng số người trong c&ocirc;ng ty nhỏ nhất c&oacute; thể được</p>\n<p>4. Nếu c&oacute; nhiều phương &aacute;n tổng số người đ&uacute;ng bằng N t&igrave;m phương &aacute;n c&oacute; tổng số l&atilde;nh đạo S l&agrave; nhỏ nhất</p>\n<p>5. Nếu c&oacute; nhiều phương &aacute;n với N v&agrave; S nhỏ nhất t&igrave;m phương &aacute;n c&oacute; số ph&ograve;ng K l&agrave; &iacute;t nhất</p>\n<h3>Input</h3>\n<p>Gồm 1 d&ograve;ng duy nhất: E (1 &lt;= E &lt;= 10000)</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng ghi 3 số nguy&ecirc;n: N, S, K</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7\n\n<strong>Output:</strong>\n7 3 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fce341bf-a18e-4ae3-915b-83fecf2e166c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LEM7input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9284"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "linegame-voi09-tro-choi-voi-bang-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "LINEGAME - VOI09 Trò chơi với băng số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LINEGAME - VOI09 Tr&ograve; chơi với băng số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Tr&ograve; chơi với băng số l&agrave; tr&ograve; chơi tham gia tr&uacute;ng thưởng được m&ocirc; tả như sau: C&oacute; một băng h&igrave;nh chữ nhật được chia ra l&agrave;m&nbsp;<em>n</em>&nbsp;&ocirc; vu&ocirc;ng, đ&aacute;nh số từ tr&aacute;i qua phải bắt đầu từ 1. Tr&ecirc;n &ocirc; vu&ocirc;ng thứ&nbsp;<em>i</em>&nbsp;người ta ghi một số nguy&ecirc;n dương&nbsp;<em>a<sub>i</sub></em>,&nbsp;<em>i</em>&nbsp;= 1, 2, ..., n. Ở một lượt chơi, người tham gia tr&ograve; chơi được quyền lựa chọn một số lượng t&ugrave;y &yacute; c&aacute;c &ocirc; tr&ecirc;n băng số. Giả sử theo thứ tự từ tr&aacute;i qua phải, người chơi lựa chọn c&aacute;c &ocirc;&nbsp;<em>i<sub>1</sub></em>,&nbsp;<em>i<sub>2</sub></em>, ...,&nbsp;<em>i<sub>k</sub></em>. Khi đ&oacute; điểm số m&agrave; người chơi đạt được sẽ l&agrave;:</p>\n<ul>\n<li>a<sub>i1</sub>&nbsp;- a<sub>i2</sub>&nbsp;+ ... + (-1)<sup>k-1</sup>a<sub>ik</sub></li>\n</ul>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;H&atilde;y t&iacute;nh số điểm lớn nhất c&oacute; thể đạt được từ một lượt chơi.</p>\n<h3>Dữ liệu:</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n dương n ( n &le; 10<sup>6</sup>&nbsp;) l&agrave; số lượng &ocirc; của băng số;</li>\n<li>D&ograve;ng thứ hai chứa n số nguy&ecirc;n dương a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;( a<sub>i</sub>&nbsp;&le; 10<sup>4</sup>, i = 1, 2, ..., n ) ghi tr&ecirc;n băng số. C&aacute;c số li&ecirc;n tiếp tr&ecirc;n c&ugrave;ng d&ograve;ng được ghi c&aacute;ch nhau bởi &iacute;t nhất một dấu c&aacute;ch.</li>\n</ul>\n<h3>Kết quả:</h3>\n<ul>\n<li>Một số nguy&ecirc;n duy nhất l&agrave; số điểm lớn nhất c&oacute; thể đạt được từ một lượt chơi.</li>\n</ul>\n<h3>V&iacute; dụ:</h3>\n<img src=\"http://vn.spoj.com/content/LINEGAME.jpg\" width=\"300\" />\n<table border=\"1\">\n<tbody>\n<tr>\n<th>Dữ liệu</th>\n<th>Kết quả</th>\n</tr>\n<tr>\n<td>7<br />4 9 2 4 1 3 7</td>\n<td valign=\"top\">17</td>\n</tr>\n</tbody>\n</table>\n<pre>&nbsp;</pre>\n<strong>R&agrave;ng buộc:</strong>&nbsp;60% số tests ứng với 60% số điểm của b&agrave;i c&oacute; 1 &le; n &le; 20.</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/781acc70-3c99-465c-9622-5dc32ab92d80",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LINEGAMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9285"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lis-day-con-tang-dai-nhat-ban-kho",
  "tags": [],
  "level": "BEGINNER",
  "title": "LIS - Dãy con tăng dài nhất (bản khó)",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LIS - D&atilde;y con tăng d&agrave;i nhất (bản kh&oacute;)</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>(Giống b&agrave;i LIQ) Cho một d&atilde;y gồm N số nguy&ecirc;n (1 &le; N &le; 30000). H&atilde;y t&igrave;m d&atilde;y con tăng d&agrave;i nhất trong d&atilde;y đ&oacute;. In ra số lượng phần tử của d&atilde;y con. C&aacute;c số trong phạm vi longint.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n gồm số nguy&ecirc;n N.</li>\n<li>D&ograve;ng thứ hai gồm N số m&ocirc; tả d&atilde;y.</li>\n</ul>\n<h3>Output</h3>\n<p>Gồm một số nguy&ecirc;n duy nhất l&agrave; đ&aacute;p số của b&agrave;i to&aacute;n</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n2 1 4 3 5\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9285d95d-0a2c-4c54-91be-d57dc3715833",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LISinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9286"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "liq-day-con-tang-dai-nhat-ban-de",
  "tags": [],
  "level": "BEGINNER",
  "title": "LIQ - Dãy con tăng dài nhất ( bản dễ )",
  "content": "<div>\n<table>\n<tbody>\n<tr>\n<td>\n<h2>LIQ - D&atilde;y con tăng d&agrave;i nhất ( bản dễ )</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho một d&atilde;y số nguy&ecirc;n gồm N phần tử A[1], A[2], ... A[N].<br />Biết rằng d&atilde;y con tăng đơn điệu l&agrave; 1 d&atilde;y A[i<sub>1</sub>],... A[i<sub>k</sub>] thỏa m&atilde;n<br />i<sub>1</sub>&nbsp;&lt; i<sub>2</sub>&nbsp;&lt; ... &lt; i<sub>k</sub>&nbsp;v&agrave; A[i<sub>1</sub>] &lt; A[i<sub>2</sub>] &lt; .. &lt; A[i<sub>k</sub>]. H&atilde;y cho biết d&atilde;y con tăng đơn điệu d&agrave;i nhất của d&atilde;y n&agrave;y c&oacute; bao nhi&ecirc;u phần tử?<br /><br /><em>Download test v&agrave; solution (C/C++, Pascal) tại&nbsp;<a href=\"https://vn.spoj.com/content/liq.zip\">đ&acirc;y</a></em>.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1 gồm 1 số nguy&ecirc;n l&agrave; số N (1 &le; N &le; 1000).</li>\n<li>D&ograve;ng thứ 2 ghi N số nguy&ecirc;n A[1], A[2], .. A[N] (1 &le; A[i] &le; 10000).</li>\n</ul>\n<h3>Output</h3>\n<p>Ghi ra độ d&agrave;i của d&atilde;y con tăng đơn điệu d&agrave;i nhất.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n6\n1 2 5 4 6 2 \n\n<strong>Output:</strong>\n4\n</pre>\n<p><strong>Giải th&iacute;ch test v&iacute; dụ:</strong>&nbsp;D&atilde;y con d&agrave;i nhất l&agrave; d&atilde;y A[1] = 1 &lt; A[2] = 2 &lt; A[4] = 4 &lt; A[5] = 6, độ d&agrave;i d&atilde;y n&agrave;y l&agrave; 4.</p>\n<p><strong>Gợi &yacute;:</strong>&nbsp;Sử dụng phương ph&aacute;p Quy Hoạch Động. F[i]: Độ d&agrave;i d&atilde;y con đơn điệu tăng d&agrave;i nhất m&agrave; phần tử cuối c&ugrave;ng l&agrave; số A[i] n&agrave;y.</p>\n</div>\n<div class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"https://vn.spoj.com/submit/LIQ/\">&nbsp;Submit solution!</a></div>\n</div>\n<div>&nbsp;</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/90bf1034-08cd-434c-8e5c-6442798dd1a7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LIQinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9287"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lnacs-day-con-chung-khong-lien-ke-dai-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "LNACS - Dãy con chung không liền kề dài nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LNACS - D&atilde;y con chung kh&ocirc;ng liền kề d&agrave;i nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>D&atilde;y C = c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>k</sub>&nbsp;l&agrave; d&atilde;y con kh&ocirc;ng liền kề của d&atilde;y A = a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>m</sub>&nbsp;nếu C c&oacute; thể nhận được bằng c&aacute;ch chọn một d&atilde;y c&aacute;c phần tử kh&ocirc;ng liền kề của A, nghĩa l&agrave; t&igrave;m dược d&atilde;y c&aacute;c chỉ số i<sub>1</sub>, i<sub>2</sub>, ..., i<sub>k</sub>&nbsp;sao cho:</p>\n<p>1 &le; i<sub>1</sub>, i<sub>2</sub>, ..., i<sub>k</sub>&nbsp;&le; m;<br />i<sub>1</sub>&nbsp;&lt; i<sub>2</sub>&nbsp;- 1, i<sub>2</sub>&nbsp;&lt; i<sub>3</sub>&nbsp;- 1, ..., i<sub>k - 1</sub>&nbsp;&lt; i<sub>k</sub>&nbsp;- 1;<br />c<sub>1</sub>&nbsp;= a<sub>i1</sub>, c<sub>2</sub>&nbsp;= a<sub>i2</sub>, c<sub>k</sub>&nbsp;= a<sub>ik</sub>.</p>\n<p>Ta gọi độ d&agrave;i của d&atilde;y số l&agrave; số phần tử của n&oacute;.</p>\n<p>Cho hai d&atilde;y:<br />A = a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>m</sub><br />v&agrave;<br />B = b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>n</sub></p>\n<p>D&atilde;y C được gọi l&agrave; d&atilde;y con chung kh&ocirc;ng liền kề của hai d&atilde;y A v&agrave; B nếu như n&oacute; vừa l&agrave; d&atilde;y con kh&ocirc;ng liền kề của A, vừa l&agrave; d&atilde;y con kh&ocirc;ng liền kề của B.</p>\n<center>\n<h2>Y&ecirc;u cầu</h2>\n</center>\n<p>Cho hai d&atilde;y số A v&agrave; B. H&atilde;y t&igrave;m độ d&agrave;i của d&atilde;y con chung kh&ocirc;ng liền kề d&agrave;i nhất của hai d&atilde;y đ&atilde; cho.</p>\n<center>\n<h2>Dữ liệu</h2>\n</center>\n<p>&nbsp;</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa hai số nguy&ecirc;n dương m v&agrave; n (2 &le; m, n &le; 10<sup>3</sup>) được ghi c&aacute;ch nhau bởi dấu c&aacute;ch, lần lượt l&agrave; số lượng phần tử của d&atilde;y A v&agrave; d&atilde;y B.</li>\n<li>D&ograve;ng thứ i trong m d&ograve;ng tiếp theo chứa số nguy&ecirc;n kh&ocirc;ng &acirc;m a<sub>i</sub>&nbsp;(a<sub>i</sub>&nbsp;&le; 10<sup>4</sup>), i = 1, 2, ..., m.</li>\n<li>D&ograve;ng thứ j trong n d&ograve;ng tiếp theo chứa số nguy&ecirc;n kh&ocirc;ng &acirc;m b<sub>j</sub>&nbsp;(b<sub>j</sub>&nbsp;&le; 10<sup>4</sup>), j = 1, 2, ..., n.</li>\n</ul>\n<p>&nbsp;</p>\n<center>\n<h2>Kết quả</h2>\n</center>\n<p>Ghi ra tr&ecirc;n một d&ograve;ng duy nhất độ d&agrave;i của d&atilde;y con chung kh&ocirc;ng liền kề d&agrave;i nhất của hai d&atilde;y A v&agrave; B.</p>\n<center>\n<h2>V&iacute; dụ</h2>\n</center>\n<pre>Input:\n4 5\n4\n9\n2\n4\n1\n9\n7\n3\n4\n\nOutput:\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8be42a53-0d48-44ed-b85c-4c7dbfb902f3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LNACSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9288"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lqddiv-phan-tap",
  "tags": [],
  "level": "BEGINNER",
  "title": "LQDDIV - Phân tập",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LQDDIV - Ph&acirc;n tập</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho N người(2&le;N&le;32) ,mỗi người c&oacute; một số a<sub>i</sub>(1 &le; a<sub>i&nbsp;</sub>&le; 10<sup>9</sup>) được gọi l&agrave; độ tin cậy</p>\n<p>Cần ph&acirc;n chia n người n&agrave;y v&agrave;o 2 tập sao cho:</p>\n<p>- Mỗi người thuộc đ&uacute;ng một tập</p>\n<p>- Ch&ecirc;nh lệch tổng độ tin cậy của 2 phần l&agrave; b&eacute; nhất</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu chứa số nguy&ecirc;n N</p>\n<p>D&ograve;ng tiếp theo chứa N số : số thứ i l&agrave; độ tin cậy của người thứ i</p>\n<h3>Output</h3>\n<p>Ghi ra hai số u v&agrave; v với u l&agrave; độ ch&ecirc;nh lệch nhỏ nhất v&agrave; v l&agrave; số c&aacute;ch ph&acirc;n chia</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 <br />1 5 6 7 8\n<strong>Output:</strong>\n1 3<br /><br />Ch&uacute; th&iacute;ch : Độ ch&ecirc;nh lệch &iacute;t nhất của 2 phần l&agrave; 1<br />                C&oacute; 3 c&aacute;ch ph&acirc;n chia .3 c&aacute;ch ph&acirc;n chia nh&oacute;m 1 l&agrave; (3,5) ,(1,3,4) <br />v&agrave; (1,2,5)</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fd62d12d-ae01-43b6-ba44-80dfc300a3ed",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LQDDIVinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9289"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "lqdgonme-day-con-chung-dai-nhat-new-ver",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LQDGONME - Dãy con chung dài nhất (new ver)",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LQDGONME - D&atilde;y con chung d&agrave;i nhất (new ver)</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho m d&atilde;y l&agrave; ho&aacute;n vị của n số tự nhi&ecirc;n đầu ti&ecirc;n</p>\n<p>T&igrave;m độ d&agrave;i d&atilde;y con chung d&agrave;i nhất của m d&atilde;y đ&oacute;</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu chứa số hai số nguy&ecirc;n n v&agrave; m (1&le;n&le;1000,1&le;m&le;10)</p>\n<p>M d&ograve;ng sau mỗi d&ograve;ng chứa n số nguy&ecirc;n l&agrave; d&atilde;y ho&aacute;n vị của n số tự nhi&ecirc;n đầu ti&ecirc;n</p>\n<h3>Output</h3>\n<p>Đưa l&agrave; độ d&agrave;i lớn nhất của d&atilde;y con chung</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />5 3<br />1 5 3 4 2<br />1 3 4 2 5<br />3 1 5 4 2<br /><br /><strong>Output:</strong><br />3<br /><br />D&atilde;y con chung d&agrave;i nhất l&agrave; 1,4,2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7502387e-c3b6-4302-b212-4422ce66e1cf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LQDGONMEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "lsfight-dau-truong-vm08",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "LSFIGHT - Đấu trường VM08",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>LSFIGHT - Đấu trường VM08</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<table class=\"problems\" width=\"100%\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/LSFIGHT/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/LSFIGHT/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\n<p>Trong kỳ thi Marathon 08 năm nay c&aacute;c vCoders phải tham gia một m&ocirc;n thi đấu đối kh&aacute;ng giữa 2 người. Sau v&ograve;ng loại, ban tổ chức sẽ chọn ra N th&iacute; sinh c&oacute; số điểm cao nhất v&agrave; đ&aacute;nh số từ 1 đến N. C&aacute;c th&iacute; sinh n&agrave;y phải xếp lần lượt theo thứ tự th&agrave;nh 1 v&ograve;ng tr&ograve;n (người thứ N đứng cạnh người thứ 1). Sau đ&oacute; sẽ chọn ra 2 th&iacute; sinh bất k&igrave; đang đứng cạnh nhau trong v&ograve;ng tr&ograve;n để thi đấu, th&iacute; sinh n&agrave;o thua sẽ bị loại v&agrave; buộc phải đi ra v&ograve;ng tr&ograve;n, trở về h&agrave;ng ghế kh&aacute;n giả. Cuộc đấu cứ tiếp tục như thế đến khi chỉ c&ograve;n một người ở lại v&agrave; cũng ch&iacute;nh l&agrave; người thắng cuộc.</p>\n<p>Tuy nhi&ecirc;n ban tổ chức muốn biết trước xem c&oacute; bao nhi&ecirc;u người c&oacute; khả năng thắng cuộc v&agrave; đ&oacute; l&agrave; những người n&agrave;o. Biết trước ai sẽ thắng trong mỗi trận đấu, bạn h&atilde;y gi&uacute;p ban tổ chức nh&eacute; ^^</p>\n<h3>Dữ liệu</h3>\n<p>- D&ograve;ng đầu l&agrave; số nguy&ecirc;n dương N (3 &lt;= N &lt;= 500)<br />- N d&ograve;ng sau l&agrave; ma trận A[i, j], A[i, j] = 0 nếu th&iacute; sinh i thua th&iacute; sinh j v&agrave; A[i, j] = 1 nếu ngược lại. Biết rằng lu&ocirc;n đảm bảo A[i, i]=1 với mọi i v&agrave; A[i, j] + A[j, i] = 1 với i &lt;&gt; j. C&aacute;c số viết c&aacute;ch nhau &iacute;t nhất 1 dấu c&aacute;ch.</p>\n<h3>Kết quả</h3>\n<p>- D&ograve;ng đầu l&agrave; số nguy&ecirc;n dương M - số lượng th&iacute; sinh c&oacute; khả năng thắng cuộc<br />- M d&ograve;ng sau mỗi d&ograve;ng ghi một số l&agrave; chỉ số của th&iacute; sinh c&oacute; khả năng thắng cuộc theo thứ tự tăng dần của chỉ số.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n7\n1 1 1 1 1 0 1\n0 1 0 1 1 0 0\n0 1 1 1 1 1 1\n0 0 0 1 1 0 1\n0 0 0 0 1 0 1\n1 1 0 1 1 1 1\n0 1 0 0 0 0 1\n\n<strong>Kết quả</strong>\n3\n1\n3\n6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/501b2693-378c-4af6-84d7-37c61b4940e8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LSFIGHTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "m00pair-0-0-pairs",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": " M00PAIR - 0 0 Pairs",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>M00PAIR - 0 0 Pairs</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p><br /><br />Ban đ&acirc;̀u dãy s&ocirc;́ có 1 s&ocirc;́ 1. Dãy bi&ecirc;́n đ&ocirc;̉i theo quy tắc : 0 thành 1 0 và 1 thành 0 1.</p>\n<p>L&acirc;̀n 1 :0 1</p>\n<p>L&acirc;̀n 2 :1 0 0 1</p>\n<p>L&acirc;̀n 3 :0 1 1 0 1 0 0 1</p>\n<p>...</p>\n<p>Đ&ecirc;́m s&ocirc;́ cặp s&ocirc;́ 0 li&ecirc;n ti&ecirc;́p sau l&acirc;̀n bi&ecirc;́n đ&ocirc;̉i thứ n.</p>\n<h3>Input</h3>\n<pre>Dãy s&ocirc;́ nguy&ecirc;n, kh&ocirc;ng bi&ecirc;́t trước s&ocirc;́ lượng nhưng s&ocirc;́ nào &lt;=1000.</pre>\n<h3>Output</h3>\n<pre>In ra k&ecirc;́t quả với m&ocirc;̃i s&ocirc;́ đọc được.</pre>\n<p>&nbsp;</p>\n<h3>&nbsp;</h3>\n<h3>Sample</h3>\n<pre>Sample Input <br />1<br />2 <br />3 <br />4<br />5 <br />Sample output <br />0<br />1 <br />1<br />3<br />5</pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f344fa22-513c-41c2-90cc-95df7a8ccf70",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "M00PAIRinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "m3tile-latgach3",
  "tags": [],
  "level": "BEGINNER",
  "title": "M3TILE - LATGACH3",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>M3TILE - LATGACH3</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<table class=\"problems\" width=\"100%\">\n<tbody>\n<tr class=\"navigation\">\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/M3TILE/en/\">English</a></td>\n<td width=\"50%\"><a href=\"https://vn.spoj.com/problems/M3TILE/vn/\">Vietnamese</a></td>\n</tr>\n</tbody>\n</table>\nHiện tại, b&agrave;i tập n&agrave;y đ&atilde; c&oacute; tr&ecirc;n online judge ch&iacute;nh thức của VNOI, bạn c&oacute; thể truy cập ở đ&acirc;y:&nbsp;<a href=\"https://oj.vnoi.info/problem/m3tile\" target=\"_blank\" rel=\"noopener\">https://oj.vnoi.info/problem/m3tile</a><br /><br /><br />\n<pre>Đ&ecirc;́m s&ocirc;́ cách lát hình chữ nh&acirc;̣t 3xn bằng các domino 2x1? \n\nDữ li&ecirc;̣u vào g&ocirc;̀m nhi&ecirc;̀u testcase k&ecirc;́t thúc là s&ocirc;́ -1. \nM&ocirc;̃i testcase là m&ocirc;̣t s&ocirc;́ nguy&ecirc;n n, 0 &le; n &le; 30. \n\nVới m&ocirc;̃i test case, in ra s&ocirc;́ nguy&ecirc;n là đáp s&ocirc;́ tr&ecirc;n m&ocirc;̣t dòng.\n</pre>\n<img src=\"http://www.spoj.com/content/cyclops:m3tile.png\" />\n<h3>SAMPLE INPUT</h3>\n<pre>2\n8\n12\n-1\n</pre>\n<h3>SAMPLE OUTPUT</h3>\n<pre>3\n153\n2131</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b8f4dcb6-46ee-43e0-ab30-e19daebedd66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "M3TILEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "match1-cap-ghep-khong-trong-so",
  "tags": [],
  "level": "BEGINNER",
  "title": "MATCH1 - Cặp ghép không trọng số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MATCH1 - Cặp gh&eacute;p kh&ocirc;ng trọng số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Cho đồ thị hai ph&iacute;a G = (X U Y, E); C&aacute;c đỉnh của X k&yacute; hiệu l&agrave; x1, x2, ..., xm, c&aacute;c đỉnh của Y k&yacute; hiệu l&agrave; y1, y2, ..., yn.<br />Một bộ gh&eacute;p tr&ecirc;n G l&agrave; một tập c&aacute;c cạnh thuộc E đ&ocirc;i một kh&ocirc;ng c&oacute; đỉnh chung.<br /><br /><strong>Y&ecirc;u cầu: H&atilde;y t&igrave;m bộ gh&eacute;p cực đại (c&oacute; nhiều cạnh nhất) tr&ecirc;n G.</strong><br /><br /><em>Ch&uacute; &yacute; : D&ugrave;ng&nbsp;<strong>Eof</strong>&nbsp;chứ kh&ocirc;ng d&ugrave;ng&nbsp;<strong>SeekEof.</strong></em></p>\n<h3>Input</h3>\n<p>&bull; D&ograve;ng 1: Chứa hai số m, n (1 &le; m, n &le; 100)<br />&bull; C&aacute;c d&ograve;ng tiếp, mỗi d&ograve;ng chứa hai số nguy&ecirc;n dương i, j cho biết th&ocirc;ng tin về một cạnh (xi, yj) thuộc E.</p>\n<h3>Output</h3>\n<p>&bull; D&ograve;ng 1: Ghi số cạnh trong bộ gh&eacute;p cực đại t&igrave;m được (K).<br />&bull; K d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi th&ocirc;ng tin về một cạnh được chọn v&agrave;o bộ gh&eacute;p cực đại: Gồm 2 số u, v thể hiện cho cạnh nối (xu, yv).</p>\n<h3>Example</h3>\n<img src=\"http://www.spoj.com/CSP/content/match1.gif\" alt=\"match1.gif\" width=\"169\" height=\"217\" />\n<pre><strong>Input:</strong>\n4 5\n1 1\n1 4\n2 1\n2 2\n2 4\n3 2\n3 3\n4 2\n4 3\n\n\n<strong>Output:</strong>\n4\n1 1\n2 4\n3 3\n4 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/aba12548-f7de-460f-a3f9-d641c1b610c4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MATCH1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "match2-bo-ghep-day-du-trong-so-cuc-tieu",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MATCH2 - Bộ ghép đầy đủ trọng số cực tiểu",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MATCH2 - Bộ gh&eacute;p đầy đủ trọng số cực tiểu</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho đồ thị hai ph&iacute;a G = (X U Y, E); C&aacute;c đỉnh của X k&yacute; hiệu l&agrave; x1, x2, ..., xn, c&aacute;c đỉnh của Y k&yacute; hiệu l&agrave; y1, y2, ..., yn. Mỗi cạnh của G được g&aacute;n một trọng số kh&ocirc;ng &acirc;m. Một bộ gh&eacute;p đầy đủ tr&ecirc;n G l&agrave; một tập n cạnh thuộc E đ&ocirc;i một kh&ocirc;ng c&oacute; đỉnh chung. Trọng số của bộ gh&eacute;p l&agrave; tổng trọng số c&aacute;c cạnh nằm trong bộ gh&eacute;p.<br /><br /><em>R&agrave;ng buộc: Lu&ocirc;n tồn tại &iacute;t nhất một bộ gh&eacute;p đầy đủ tr&ecirc;n G.</em><br /><em>Ch&uacute; &yacute; d&ugrave;ng&nbsp;<strong>Eof</strong>&nbsp;chứ kh&ocirc;ng d&ugrave;ng&nbsp;<strong>SeekEof</strong></em></p>\n<h3>Input</h3>\n<p>&bull; D&ograve;ng 1: Chứa số n (1 &le; n &le; 200)<br />&bull; C&aacute;c d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 3 số nguy&ecirc;n i, j, c cho biết c&oacute; một cạnh (xi, yj) v&agrave; trọng số cạnh đ&oacute; l&agrave; c (0 &le; c &le; 200).</p>\n<h3>Output</h3>\n<p>&bull; D&ograve;ng 1: Ghi trọng số bộ gh&eacute;p t&igrave;m được<br />&bull; n d&ograve;ng tiếp, mỗi d&ograve;ng ghi hai số (u, v) tượng trưng cho một cạnh (xu, yv) được chọn v&agrave;o bộ gh&eacute;p.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1 1 0\n1 2 0\n2 1 0\n2 4 2\n3 2 1\n3 3 0\n4 3 0\n4 4 9\n\n\n<strong>Output:</strong>\n3\n1 1\n2 4\n3 2\n4 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3c433c12-edb4-406a-864e-421477a8d7fd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MATCH2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef928f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maxarr1-help-conan-12",
  "tags": [],
  "level": "BEGINNER",
  "title": "MAXARR1 - Help Conan 12 !",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MAXARR1 - Help Conan 12 !</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Năm ngo&aacute;i Conan chỉ mới bước v&agrave;o học Tin học thật sự. Thế nhưng anh ta bị đ&agrave;n em l&agrave; Như Quỳnh th&aacute;ch đố b&agrave;i to&aacute;n sau:</p>\n<p>Cho T &le; 100000. Mỗi d&ograve;ng của T c&oacute; 1 số N (N &le; 100000). D&atilde;y số A được x&acirc;y dựng như sau:</p>\n<ul>\n<li>A[0] = 0</li>\n<li>A[1] = 1</li>\n<li>A[2i] = A[i]</li>\n<li>A[2i+1] = A[i] + A[i+1]</li>\n</ul>\n<p>Nhiệm vụ của bạn l&agrave; t&igrave;m số lớn nhất của d&atilde;y A từ 1 với N.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n l&agrave; số T.</p>\n<p>T d&ograve;ng sau, mỗi d&ograve;ng l&agrave; 1 số N.</p>\n<h3>Output</h3>\n<p>C&oacute; T d&ograve;ng tương ứng với gi&aacute; trị lớn nhất của c&aacute;c đoạn.</p>\n<h3>Example</h3>\n<pre>Input\n2\n5\n10\n\nOutput\n3\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5bedf253-0369-46a5-8c2d-562595a06319",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MAXARR1input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9290"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "maxcub-khoi-lap-phuong-lon-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MAXCUB - Khối lập phương lớn nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MAXCUB - Khối lập phương lớn nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Cho một khối lập phương k&iacute;ch thước n chia l&agrave;m n<sup>3</sup>&nbsp;khối lập phương đơn vị. Mỗi khối lập phương đơn vị chứa 1 số nguy&ecirc;n.<br />Bạn h&atilde;y t&igrave;m một khối lập phương con của khối lập phương đ&atilde; cho sao cho tổng c&aacute;c số trong khối lập phương con đ&oacute; l&agrave; lớn nhất.</p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu: số lượng test.<br />- Tiếp theo l&agrave; c&aacute;c test, mỗi test gồm: d&ograve;ng đầu l&agrave; n. Sau đ&oacute; n nh&oacute;m d&ograve;ng thể hiện lớp cắt của h&igrave;nh lập phương nh&igrave;n từ mặt trước từ gần ra xa, mỗi nh&oacute;m gồm n d&ograve;ng, mỗi d&ograve;ng gồm n số liệt k&ecirc; c&aacute;c số tr&ecirc;n lớp cắt từ tr&ecirc;n xuống dưới, tr&aacute;i qua phải.<br />Ch&uacute; &yacute;: n &lt;= 30. Gi&aacute; trị của khối lập phương đơn vị thuộc kiểu integer.</p>\n<h3>Output</h3>\n<p>Mỗi d&ograve;ng chứa tổng của khối lập phương con lớn nhất của test tương ứng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n3\n0 -1 3\n-5 7 4\n-8 9 1\n-1 -3 -1\n2 -1 5\n0 -1 3\n3 1 -1\n1 3 2\n1 -2 1\n4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n<strong>Output:</strong>\n27\n64</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a9c40e22-e99e-4b83-8731-4d5af724777b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MAXCUBinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9291"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mbeewalk-bee-walk",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MBEEWALK - Bee Walk",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MBEEWALK - Bee Walk</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<pre>Đ&ecirc;́m s&ocirc;́ cách đi của của 1 con ong. Nó bắt đ&acirc;̀u từ t&ocirc;̉ của nó, đi ra ngoài \nvà đi v&ecirc;̀ t&ocirc;̉ ở bước thứ n. Ở m&ocirc;̃i &ocirc;, nó có th&ecirc;̉ đi sang 1 trong 6 &ocirc; k&ecirc;̀ cạnh.\n</pre>\n<p><a href=\"http://tinypic.com/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://vn.spoj.com/content/simes:mbeewalk.jpg\" alt=\"Image and video hosting by TinyPic\" border=\"0\" /></a></p>\n<h3>Input</h3>\n<pre>Dòng đ&acirc;̀u ghi s&ocirc;́ test, m&ocirc;̃i dòng ti&ecirc;́p theo là 1 test, g&ocirc;̀m 1 s&ocirc;́ n, 1 &le; n &le; 14.\n\nSAMPLE INPUT\n2\n2\n4\n</pre>\n<h3>Output</h3>\n<pre> \nM&ocirc;̃i k&ecirc;́t quả ghi tr&ecirc;n 1 dòng, k&ecirc;́t quả &lt;= 2^31.\n\nSAMPLE OUTPUT\n6\n90</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b8e791f2-0dcc-4fc6-be31-31f52459ec08",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MBEEWALKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9292"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mcards-card-sorting",
  "tags": [],
  "level": "BEGINNER",
  "title": "MCARDS - Card Sorting",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MCARDS - Card Sorting</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Mav có n*c qu&acirc;n bài; m&ocirc;̃i qu&acirc;n bài 1 màu; và m&ocirc;̃i màu có n qu&acirc;n bài. Mav mu&ocirc;́n sắp x&ecirc;́p các qu&acirc;n bài cùng màu nằm cạnh nhau và chúng theo thứ tự tăng d&acirc;̀n v&ecirc;̀ giá trị.</p>\n<p><img src=\"https://vn.spoj.com/content/simes:MCARDS.jpg\" border=\"0\" /></p>\n<h3>Input</h3>\n<p>Dòng đ&acirc;̀u là 2 s&ocirc;́ C (s&ocirc;́ màu), (1 &le; C &le; 4), và N, s&ocirc;́ qu&acirc;n bài cùng màu m&ocirc;̃i loại, (1 &le; N &le; 100).</p>\n<p>N*C dòng ti&ecirc;́p theo m&ocirc;̃i dòng là 2 s&ocirc;́ nguy&ecirc;n X, Y; 1 &le; X &le; C, 1 &le; Y &le; N, là màu của qu&acirc;n bài và giá trị qu&acirc;n bài đó.</p>\n<p>Thứ tự qu&acirc;n bài ban đ&acirc;̀u (từ trái sang phải) chính là thứ tự dữ li&ecirc;̣u input.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>S&ocirc;́ l&acirc;̀n chuy&ecirc;̉n bài ít nh&acirc;́t đ&ecirc;̉ thu được dãy bài được sắp theo y&ecirc;u c&acirc;̀u tr&ecirc;n.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>CARDS.IN\n\n2 2\n2 1\n1 2\n1 1\n2 2\n\nCARDS.OUT\n\n2\n \nCARDS.IN\n\n4 1\n2 1\n3 1\n1 1\n4 1\n\nCARDS.OUT\n\n0\n \nCARDS.IN\n\n3 2\n3 2\n2 2\n1 1\n3 1\n2 1\n1 2\n\nCARDS.OUT\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ca58dc92-d145-4639-823d-0249cb1a2aba",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MCARDSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9293"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "message-truyen-tin",
  "tags": [],
  "level": "BEGINNER",
  "title": "MESSAGE - Truyền tin",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MESSAGE - Truy&ecirc;̀n tin</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Một lớp gồm N học sinh, mỗi học sinh cho biết những bạn m&agrave; học sinh đ&oacute; c&oacute; thể li&ecirc;n lạc được (ch&uacute; &yacute; li&ecirc;n lạc n&agrave;y l&agrave; li&ecirc;n lạc một chiều : u c&oacute; thể gửi tin tới v nhưng v th&igrave; chưa chắc đ&atilde; c&oacute; thể gửi tin tới u).</p>\n<p>Thầy chủ nhiệm đang c&oacute; một th&ocirc;ng tin rất quan trọng cần th&ocirc;ng b&aacute;o tới tất cả c&aacute;c học sinh. Để tiết kiệm thời gian, thầy chỉ nhắn tin tới 1 số học sinh rồi sau đ&oacute; nhờ c&aacute;c học sinh n&agrave;y nhắn lại cho tất cả c&aacute;c bạn m&agrave; c&aacute;c học sinh đ&oacute; c&oacute; thể li&ecirc;n lạc được, v&agrave; cứ lần lượt như thế l&agrave;m sao cho tất cả c&aacute;c học sinh trong lớp đều nhận được tin .</p>\n<p>H&atilde;y t&igrave;m một số &iacute;t nhất c&aacute;c học sinh m&agrave; thầy chủ nhiệm cần nhắn.</p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu l&agrave; N, M (N &lt;= 800, M l&agrave; số lượng li&ecirc;n lạc 1 chiều)</p>\n<p>- Một số d&ograve;ng tiếp theo mỗi d&ograve;ng gồm 2 số u , v cho biết học sinh u c&oacute; thể gửi tin tới học sinh v</p>\n<h3>Output</h3>\n<p>- Gồm 1 d&ograve;ng ghi số học sinh cần thầy nhắn tin.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n12 15\n1 3\n3 6\n6 1\n6 8\n8 12\n12 9\n9 6\n2 4\n4 5\n5 2\n4 6\n7 10\n10 11\n11 7\n10 9\n\n<strong>Output:</strong>\n2\n</pre>\n<em>Chọn c&aacute;c học sinh 7 v&agrave; 2.</em></div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/af34c326-4854-434c-ab89-190172ad0684",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MESSAGEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9294"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "median-phan-tu-trung-vi-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MEDIAN - Phần tử trung vị",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MEDIAN - Phần tử trung vị</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một d&atilde;y số a1, a2, ..., an được sinh ngẫu nhi&ecirc;n như sau:</p>\n<ul>\n<li>a1=seed</li>\n<li>a<sub>i</sub>=(a<sub>i-1</sub>*mul+add)%65536</li>\n</ul>\n<p>Với mul, add, seed l&agrave; c&aacute;c số cho trước.</p>\n<p>Cho một số k &le; n. D&atilde;y đ&atilde; cho c&oacute; n-k+1 d&atilde;y con độ d&agrave;i k. H&atilde;y t&iacute;nh tổng tất cả c&aacute;c phần tử trung vị (phần tử nhỏ thứ (k+1)/2) của n-k+1 d&atilde;y con n&agrave;y).</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa số test (kh&ocirc;ng qu&aacute; 30). Mỗi d&ograve;ng tiếp theo chứa 5 số nguy&ecirc;n seed, mul, add, N, K. (0 &le; seed, mul, add &le; 65535, 1 &le; N &le; 250000, 1 &le; K &le; 5000, K &le; N)</p>\n<h3>Kết quả</h3>\n<p>Với mỗi test in ra số hiệu test (theo mẫu) c&ugrave;ng với tổng c&aacute;c trung vị t&igrave;m được.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5\n3 1 1 10 3\n10 0 13 5 2\n4123 2341 1231 7 3\n47 5621 1 125000 1700\n32321 46543 32552 17 17\n\n<strong>Kết quả</strong>\nCase #1: 60\nCase #2: 49\nCase #3: 102186\nCase #4: 4040137193\nCase #5: 25569\n\n<strong>Giải th&iacute;ch</strong>\nVới test 1, d&atilde;y sinh ra l&agrave; 3, 4, 5, 6, 7, 8, 9, 10, 11, and 12.\nC&aacute;c d&atilde;y con l&agrave; (3, 4, 5), ..., (10, 11, 12).\nC&aacute;c trung vị l&agrave; 4, 5, ..., 11.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c82639ca-429d-4dd2-883b-b002339c226a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MEDIANinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9295"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mdolls-nested-dolls-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MDOLLS - Nested Dolls",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MDOLLS - Nested Dolls</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<pre>\"Dilworth\" có m&ocirc;̣t b&ocirc;̣ sưu t&acirc;̣p các con búp b&ecirc; Nga.  Búp b&ecirc; với chi&ecirc;̀u r&ocirc;̣ng w1 \nvà chi&ecirc;̀u cao h1 sẽ nằm trong được con l&acirc;̣t đ&acirc;̣t chi&ecirc;̀u r&ocirc;̣ng w2 và chi&ecirc;̀u cao h2\nn&ecirc;́u w1 &lt; w2 và h1 &lt; h2. \n\nTính s&ocirc;́ lớp búp b&ecirc; bao nhau ít nh&acirc;́t mà có th&ecirc;̉ tạo ra được từ các búp b&ecirc; ban đ&acirc;̀u.\n</pre>\n<p><img src=\"https://vn.spoj.com/content/simes:MDOLLS.jpg\" border=\"0\" /></p>\n<h3>Input</h3>\n<pre>Dòng đ&acirc;̀u là s&ocirc;́ test,  1 &le; t &le; 20. M&ocirc;̃i test bắt đ&acirc;̀u là s&ocirc;́ nguy&ecirc;n m, 1 &le; m &le; 20000, \ns&ocirc;́ lượng búp b&ecirc; ban đ&acirc;̀u. Dòng ti&ecirc;́p theo là 2m s&ocirc;́ nguy&ecirc;n w1, h1,w2, h2,\n... ,wm, hm, là chi&ecirc;̀u r&ocirc;̣ng và chi&ecirc;̀u cao của con búp b&ecirc; thứ i, 1 &le; wi, hi &le; 10000.\n\nSAMPLE INPUT\n4\n3\n20 30 40 50 30 40\n4\n20 30 10 10 30 20 40 50\n3\n10 30 20 20 30 10\n4\n10 10 20 30 40 50 39 51\n</pre>\n<h3>Output</h3>\n<pre> \nGhi s&ocirc;́ lớp búp b&ecirc; bao nhau ít nh&acirc;́t có th&ecirc;̉ tr&ecirc;n m&ocirc;̣t dòng cho từng test.\n\nSAMPLE OUTPUT\n1\n2\n3\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d93e89b3-235e-48c5-a89c-5f193e1d8d20",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MDOLLSinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9296"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mdigits2-first-number-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "MDIGITS2 - First Number",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MDIGITS2 - First Number</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>&nbsp;</p>\n<p>Vi&ecirc;́t các s&ocirc;́ th&acirc;̣p ph&acirc;n 1,2, ... li&ecirc;n ti&ecirc;́p thu được dãy s&ocirc;́ như sau :</p>\n<p>12345678910111213141516171819202122 ...</p>\n<p>etc. Vi&ecirc;́t chương trình tìm vị trí xu&acirc;́t hi&ecirc;̣n đ&acirc;̀u ti&ecirc;n của s&ocirc;́ N trong dãy tr&ecirc;n.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>G&ocirc;̀m duy nh&acirc;́t 1 s&ocirc;́ N, 1 &le; N &le; 100,000.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>S&ocirc;́ duy nh&acirc;́t là vị trí xu&acirc;́t hi&ecirc;̣n đ&acirc;̀u ti&ecirc;n của s&ocirc;́ N trong dãy.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>input \n15 \n \noutput \n20\n\ninput \n34 \n \noutput \n3 \n\ninput \n142 \n \noutput \n73 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/15ea2738-a60b-4899-8c08-e228470d7422",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MDIGITS2input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9297"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mincut-voi-2015-day-2-cat-hinh",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MINCUT - VOI 2015 Day 2 - Cắt hình",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MINCUT - VOI 2015 Day 2 - Cắt h&igrave;nh</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho&nbsp;<em>A&nbsp;</em>l&agrave; lưới &ocirc; vu&ocirc;ng gồm&nbsp;<em>m&nbsp;</em>d&ograve;ng v&agrave;&nbsp;<em>n&nbsp;</em>cột. C&aacute;c d&ograve;ng của lưới được đ&aacute;nh số từ 1 đến&nbsp;<em>m</em>, từ tr&ecirc;n xuống dưới. C&aacute;c cột của lưới được đ&aacute;nh số từ 1 đến&nbsp;<em>n</em>, từ tr&aacute;i sang phải. &Ocirc; nằm tr&ecirc;n giao của d&ograve;ng&nbsp;<em>i&nbsp;</em>v&agrave; cột&nbsp;<em>j&nbsp;</em>của lưới, được gọi l&agrave; &ocirc; (<em>i</em>,&nbsp;<em>j</em>), chứa&nbsp;số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><em><sub>i,j</sub>&nbsp;</em>c&oacute;&nbsp;gi&aacute; trị kh&ocirc;ng vượt qu&aacute; 10<sup>6</sup>.</p>\n<p>C&aacute;c lưới &ocirc; vu&ocirc;ng như vậy lu&ocirc;n l&agrave; đối tượng cho nhiều nghi&ecirc;n cứu th&uacute; vị. Vừa qua, trong giờ học &ocirc;n luyện cho kỳ thi học sinh giỏi Tin học, H&ugrave;ng được c&ocirc; gi&aacute;o giao cho giải quyết b&agrave;i to&aacute;n trả lời truy vấn sau đ&acirc;y đối với bảng đ&atilde; cho:</p>\n<p>Cho một h&igrave;nh chữ nhật con c&oacute; &ocirc; tr&aacute;i tr&ecirc;n l&agrave; &ocirc; (<em>x,y</em>) v&agrave; &ocirc; phải dưới l&agrave; &ocirc; (<em>u,v</em>), cần đưa ra ch&ecirc;nh lệch nhỏ nhất trong số c&aacute;c ch&ecirc;nh lệch giữa hai tổng c&aacute;c số trong hai h&igrave;nh chữ nhật thu được bằng việc cắt ngang hoặc cắt dọc h&igrave;nh chữ nhật đ&atilde; cho dọc theo đường kẻ của lưới. Giả thiết (<em>x,y</em>) v&agrave; (<em>u,v</em>) l&agrave; hai &ocirc; kh&aacute;c nhau tr&ecirc;n lưới.</p>\n<p>Bạn h&atilde;y gi&uacute;p H&ugrave;ng giải quyết b&agrave;i to&aacute;n đặt ra.</p>\n<p><strong>Y&ecirc;u</strong><strong>&nbsp;</strong><strong>cầu:</strong><strong>&nbsp;</strong>Cho lưới&nbsp;<em>A&nbsp;</em>v&agrave;&nbsp;<em>k&nbsp;</em>bộ&nbsp;<em>x</em><em><sub>q</sub></em>,&nbsp;<em>y</em><em><sub>q</sub></em><em>&nbsp;</em>,&nbsp;<em>u</em><em><sub>q</sub></em>,&nbsp;<em>v</em><em><sub>q</sub></em><em>&nbsp;</em>(<em>q</em><em>&nbsp;</em>= 1, 2, ...,&nbsp;<em>k</em>) tương ứng với&nbsp;<em>k&nbsp;</em>truy vấn, h&atilde;y đưa ra c&aacute;c c&acirc;u trả lời cho&nbsp;<em>k&nbsp;</em>truy vấn.</p>\n<p><strong>Dữ liệu v&agrave;o:&nbsp;</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa ba số nguy&ecirc;n&nbsp;<em>m</em>,&nbsp;<em>n</em>,&nbsp;<em>k&nbsp;</em>(<em>k&nbsp;</em>&le;&nbsp;<em>m</em>&times;<em>n</em>);</li>\n<li><em>m&nbsp;</em>d&ograve;ng tiếp theo, d&ograve;ng thứ&nbsp;<em>i&nbsp;</em>chứa&nbsp;<em>n&nbsp;</em>số nguy&ecirc;n kh&ocirc;ng &acirc;m&nbsp;<em>a</em><sub><em>i</em>1</sub>,&nbsp;<em>a</em><sub><em>i</em>2</sub>, ...,&nbsp;<em>a</em><em><sub>in</sub></em>;</li>\n<li>D&ograve;ng thứ&nbsp;<em>q&nbsp;</em>trong số&nbsp;<em>k&nbsp;</em>d&ograve;ng tiếp theo chứa 4 số nguy&ecirc;n&nbsp;<em>x</em><em><sub>q</sub></em>,&nbsp;<em>y</em><em><sub>q</sub></em>,&nbsp;<em>u</em><em><sub>q</sub></em>,&nbsp;<em>v</em><em><sub>q</sub></em><em>&nbsp;</em>(<em>q</em><em>&nbsp;</em>= 1, 2, ...,&nbsp;<em>k</em>).</li>\n</ul>\n<p><strong>Dữ liệu ra:</strong></p>\n<ul>\n<li>Ghi ra file văn bản MINCUT.OUT gồm&nbsp;<em>k&nbsp;</em>d&ograve;ng, mỗi d&ograve;ng chứa một số l&agrave; c&acirc;u trả lời cho một truy vấn theo thứ tự xuất hiện trong file dữ liệu v&agrave;o.</li>\n</ul>\n<p><strong>R&agrave;ng buộc:</strong></p>\n<ul>\n<li>C&oacute; 30% số test ứng với 30% số điểm của b&agrave;i c&oacute;&nbsp;<em>m</em>,&nbsp;<em>n&nbsp;</em>&le; 10.</li>\n<li>C&oacute; 30% số test kh&aacute;c ứng với 30% số điểm của b&agrave;i c&oacute;&nbsp;&nbsp;<em>m</em>,&nbsp;<em>n&nbsp;</em>&le; 100.</li>\n<li>C&oacute; 40% số test&nbsp; ứng với 40% số điểm c&ograve;n lại của b&agrave;i c&oacute;&nbsp;<em>m</em>,&nbsp;<em>n&nbsp;</em>&le; 1000.</li>\n</ul>\n<p><strong>&nbsp;</strong></p>\n<h3>V&iacute; dụ:</h3>\n<pre><strong>Input:</strong></pre>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>3</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>3</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>2</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>&nbsp;</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>3</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>3</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"19\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>1</p>\n</td>\n<td valign=\"top\" width=\"16\">\n<p>3</p>\n</td>\n<td valign=\"top\" width=\"141\">\n<p>2</p>\n</td>\n</tr>\n</tbody>\n</table>\n<pre>\n<strong>Output:</strong></pre>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"204\">\n<p>3</p>\n</td>\n<td width=\"0\" height=\"22\">&nbsp;</td>\n</tr>\n<tr>\n<td rowspan=\"5\" valign=\"top\" width=\"204\">\n<p>0</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/995f5910-815f-49cb-a92b-0a89443a5727",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MINCUTinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9298"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mink-huyen-thoai-luc-van-tien",
  "tags": [],
  "level": "BEGINNER",
  "title": "MINK - Huyền thoại Lục Vân Tiên",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MINK - Huyền thoại Lục V&acirc;n Ti&ecirc;n</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Dạo n&agrave;y tivi cũng đang chiếu phim Lục V&acirc;n Ti&ecirc;n , sẵn tiện lấy lu&ocirc;n l&agrave;m ti&ecirc;u đề .<br />Lục V&acirc;n Ti&ecirc;n cũng giống Samurai Jack , bị Quan Th&aacute;i Sư đẩy v&agrave;o v&ograve;ng xo&aacute;y thời gian v&agrave; bị chuyển tới tương lai của những năm 2777 .<br />Ở thời đại n&agrave;y , Tr&aacute;ng sỹ phải l&agrave; người th&ocirc;ng thạo m&aacute;y t&iacute;nh , g&otilde; b&agrave;n ph&iacute;m lia lịa như đấu sỹ thời xưa m&uacute;a kiếm ấy v&agrave; phải qua một cuộc thi lập tr&igrave;nh mới được phong danh hiệu .<br />Để vượt qua v&ograve;ng loại , V&acirc;n Ti&ecirc;n cần tham gia cuộc thi s&aacute;t hạch . Ban Gi&aacute;m Khảo cuộc thi s&aacute;t hạch gồm c&oacute; N người , họ đều l&agrave; c&aacute;c cao thủ trong giới IT . C&aacute;c th&agrave;nh vi&ecirc;n trong Ban Gi&aacute;m Khảo được đ&aacute;nh số từ 1 -&gt; N v&agrave; mỗi người lại c&oacute; một chỉ số sức mạnh gọi l&agrave; APM ( Actions Per Minute ) . C&aacute;c gi&aacute;m khảo sẽ xếp h&agrave;ng lần lượt từ 1 -&gt; N . Mỗi th&iacute; sinh sẽ phải đấu với K vị gi&aacute;m khảo v&agrave; K vị gi&aacute;m khảo n&agrave;y phải đứng liền th&agrave;nh 1 đoạn ( Tức l&agrave; i , i+1 , i+2 , ... i+K-1 ) , chỉ cần thắng 1 vị gi&aacute;m khảo th&igrave; sẽ vượt qua v&ograve;ng loại .<br />Tuy nhi&ecirc;n th&iacute; sinh k&ocirc; được chọn xem những gi&aacute;m khảo n&agrave;o sẽ đấu với m&igrave;nh .<br />V&acirc;n Ti&ecirc;n rất lo v&igrave; lỡ may đụng độ với những vị gi&aacute;m khảo n&agrave;o \"kh&oacute; nhằn\" th&igrave; sẽ ti&ecirc;u mất . N&ecirc;n chiến thuật của V&acirc;n Ti&ecirc;n l&agrave; tập trung hạ vị gi&aacute;m khảo c&oacute; chỉ số APM thấp nhất trong số K vị . Bạn h&atilde;y lập tr&igrave;nh để gi&uacute;p Lục V&acirc;n Ti&ecirc;n x&aacute;c định được ở tất cả c&aacute;c phương &aacute;n th&igrave; chỉ số APM của vị gi&aacute;m khảo thấp nhất sẽ l&agrave; bao nhi&ecirc;u ( C&oacute; tất cả N-k+1 phương &aacute;n :<br />Phương &aacute;n 1 : V&acirc;n Ti&ecirc;n phải đấu với vị 1 -&gt; vị k<br />Phương &aacute;n 2 : V&acirc;n Ti&ecirc;n phải đấu với vị 2 -&gt; vị k+1<br />&hellip;<br />Phương &aacute;n N-k+1 : V&acirc;n Ti&ecirc;n phải đấu với vị N-k+1 -&gt; vị N ) .<br /><br />( 1 &lt;= N &lt;= 17000 , chỉ số APM của 1 gi&aacute;m khảo &gt;= 1 v&agrave; &lt;= 2 tỉ , 1 &lt;= K &lt;= N ) .</p>\n<h3>B&agrave;i n&agrave;y O(N) mới thực sự coi l&agrave; accept . C&ograve;n lại O(NlogN) hay O(N*K) th&igrave; bạn chỉ may mắn accept th&ocirc;i .</h3>\n<h3>Input</h3>\n<p>D&ograve;ng 1 : số T l&agrave; số test .<br />Tiếp theo l&agrave; T bộ test , mỗi bộ test c&oacute; format như sau :<br />D&ograve;ng 1 : N k<br />D&ograve;ng 2 : N số nguy&ecirc;n dương A[1] , &hellip; A[N] .</p>\n<h3>Output</h3>\n<p>Kết quả mỗi test ghi ra tr&ecirc;n d&ograve;ng , d&ograve;ng thứ i gồm N-k+1 số , số thứ j tương ứng l&agrave; chỉ số APM của vị gi&aacute;m khảo yếu nhất trong phương &aacute;n j .</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n4 2\n3 2 4 1\n3 3\n1 2 3\n<strong>Output:</strong>\n2 2 1\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82e53f49-3cc8-4d4c-8737-d331d5f7cbd8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MINKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9299"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "minroad-voi-2014-con-duong-tung-truc",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MINROAD - VOI 2014 - Con duong Tung Truc",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MINROAD - VOI 2014 - Con duong Tung Truc</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Địa điểm du lịch Dailai nổi tiếng với con đường T&ugrave;ng-Tr&uacute;c. Đ&oacute; l&agrave; một con đường d&agrave;i v&agrave; thẳng, dọc b&ecirc;n đường người ta trồng rất nhiều c&acirc;y t&ugrave;ng v&agrave; c&acirc;y tr&uacute;c. Với mục đ&iacute;ch tạo điểm nhấn cho con đường, Ban quản l&yacute; khu du lịch muốn chọn một đoạn đường m&agrave; dọc theo n&oacute; c&oacute; &iacute;t nhất a c&acirc;y t&ugrave;ng v&agrave; c&oacute; &iacute;t nhất b c&acirc;y tr&uacute;c để trang tr&iacute;. Sau khi khảo s&aacute;t, Ban quản l&yacute; ghi nhận được vị tr&iacute; của từng c&acirc;y t&ugrave;ng v&agrave; c&acirc;y tr&uacute;c. Tr&ecirc;n con đường c&oacute; tất cả n c&acirc;y, kh&ocirc;ng c&oacute; hai c&acirc;y n&agrave;o ở c&ugrave;ng một vị tr&iacute;. C&acirc;y thứ i ở ị tr&iacute; c&oacute; khoảng c&aacute;ch đến vị tr&iacute; bắt đầu của con đường l&agrave; d_i (i = 1, 2, ..., n). Với kinh ph&iacute; c&oacute; hạn, Ban quản l&yacute; muốn chọn một đoạn đường thỏa m&atilde;n điều kiện đ&atilde; n&ecirc;u với độ d&agrave;i l&agrave; ngắn nhất.</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>Cho a, b v&agrave; vị tr&iacute; của n c&acirc;y. H&atilde;y t&igrave;m đoạn đường c&oacute; độ d&agrave;i ngắn nhất m&agrave; dọc theo đoạn đường đ&oacute; c&oacute; &iacute;t nhất a c&acirc;y t&ugrave;ng v&agrave; b c&acirc;y tr&uacute;c.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu chứa 3 số nguy&ecirc;n dương n, a, b (a + b &lt;= n)</li>\n<li>D&ograve;ng thứ i trong n d&ograve;ng tiếp theo mỗi d&ograve;ng chứa hai số nguy&ecirc;n dương d_i (d_i &lt;= 10^9) trong đ&oacute; d_i l&agrave; khoảng c&aacute;ch của c&acirc;y t&iacute;nh từ vị tr&iacute; bắt đầu của con đường, k_i = 1 nếu c&acirc;y thứ i l&agrave; c&acirc;y t&ugrave;ng, k_i = 2 nếu l&agrave; c&acirc;y tr&uacute;c.</li>\n<li>C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</li>\n</ul>\n<h3>Output</h3>\n<p>Ghi ra một số nguy&ecirc;n l&agrave; độ d&agrave;i đoạn đường ngắn nhất t&igrave;m được, quy ước ghi số -1 nếu kh&ocirc;ng tồn tại đoạn đường n&agrave;o thỏa m&atilde;n điều kiện đặt ra.</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>d_i &lt;= 10^9.</li>\n<li>30% số test c&oacute; n &lt;= 300.</li>\n<li>30% số test kh&aacute;c c&oacute; n &lt;= 3000.</li>\n<li>40 % số test c&ograve;n lại c&oacute; n &lt;= 300000.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7 2 2\n20 2\n30 1\n25 1\n35 1\n60 2\n65 2\n10 1\n\n<strong>Output:</strong>\n35</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/26945294-bc71-4ea5-89ae-3a3ef785faba",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MINROADinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mmaxper-rectangles-perimeter",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MMAXPER - Rectangles Perimeter",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MMAXPER - Rectangles Perimeter</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<pre><br />Cho n hình chữ nh&acirc;̣t đánh s&ocirc;́ từ 1 đ&ecirc;́n n, các hình chữ nh&acirc;̣t này được đặt \nti&ecirc;́p xúc với trục OX và nằm k&ecirc;̀ nhau từ trái qua phải theo thứ tự chỉ s&ocirc;́\nM&ocirc;̃i hình chữ nh&acirc;̣t có th&ecirc;̉ ti&ecirc;́p xúc với trục Ox theo b&acirc;́t kỳ cạnh cạnh (xem hình). \nC&acirc;̀n tính đ&ocirc;̣ dài lớn nh&acirc;́t của đường g&acirc;́p phía tr&ecirc;n (xem hình) \n</pre>\n<p><img src=\"https://vn.spoj.com/content/simes:MMAXPER.png\" alt=\"\" border=\"0\" /></p>\n<h3>INPUT</h3>\n<p>&nbsp;</p>\n<pre>Dòng đ&acirc;̀u ti&ecirc;n ghi s&ocirc;́ hình chữ nh&acirc;̣t n, n dòng ti&ecirc;́p theo m&ocirc;̃i dòng ghi \nhai s&ocirc;́ a_i  và b_i, đ&ocirc;̣ dài cạnh của hình chữ nh&acirc;̣t thứ i.\nRàng bu&ocirc;̣c : 0 &lt; n &lt; 1000; 0 &lt; a_i &lt; b_i &lt; 1000, với i = 1, 2, &hellip;, n. \n\nVí dụ:\n5 \n2 5 \n3 8 \n1 10 \n7 14 \n2 5 \n</pre>\n<p>&nbsp;</p>\n<h3>OUTPUT</h3>\n<p>&nbsp;</p>\n<pre>Ghi ra đ&ocirc;̣ dài lớn nh&acirc;́t tìm được \n\nVí dụ: \n\n68\n</pre>\n<p><strong>Giải thích</strong></p>\n<pre>Cách x&ecirc;́p mà thu được chi&ecirc;̀u dài lớn nh&acirc;́t là hình tr&ecirc;n. Cạnh phía \ntr&ecirc;n g&ocirc;̀m các đoạn  DC, CG, GF, FJ,  JI,  IM, ML, LP,  và PO. \nĐ&ocirc;̣ dài của đoạn này là 5 + 6 + 3 + 7 + 10 + 13 + 7 + 12 + 5 = 68</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/994bedb4-7797-45c3-af5e-366e89fdf225",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MMASS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mmmgame-mm-game",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MMMGAME - M&M Game",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MMMGAME - M&amp;M Game</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<pre><br />John và em trai thi ăn kẹo M&amp;M. M&ocirc;̃i người m&ocirc;̃i l&acirc;̀n ăn m&ocirc;̣t s&ocirc;́ kẹo cùng màu \n(ít nh&acirc;́t 1 cái). John được ăn trước. Ai ăn chi&ecirc;́c kẹo cu&ocirc;́i cùng sẽ thua và\nphải đi mua gói kẹo khác đ&ecirc;̉ chơi ti&ecirc;́p. Ặc!!!!! \n\nAi cũng tham ăn nhưng ti&ecirc;́c ti&ecirc;̀n n&ecirc;n đành chơi t&ocirc;́i ưu. Xác định người thắng.\n</pre>\n<p><img src=\"https://vn.spoj.com/content/simes:MMMGAME.jpg\" border=\"0\" /><br /><strong>Vừa ăn kẹo với bạn gái , vừa code !!!!</strong></p>\n<h3>Input</h3>\n<pre>Dòng đ&acirc;̀u là T- s&ocirc;́ test case. T dòng ti&ecirc;́p theo, s&ocirc;́ đ&acirc;̀u ti&ecirc;n m&ocirc;̃i dòng \nlà s&ocirc;́ màu kẹo, ti&ecirc;́p theo là s&ocirc;́ kẹo của từng loại màu, đánh s&ocirc;́ từ 1.\n\nRàng bu&ocirc;̣c:\n1 &lt;= T &lt;= 474, \n1 &lt;= N &lt;= 47, \n1 &lt;= Ai &lt;= 4747\n</pre>\n<h3>Output</h3>\n<pre>T dòng, m&ocirc;̃i dòng ghi ra \"John\" hoặc \"Brother\" - người thắng.\n</pre>\n<h3>Sample</h3>\n<pre>Sample input: \n2 \n3 \n3 5 1 \n1 \n1 \nSample output: \nJohn \nBrother </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4023f4f0-9267-4c69-bc34-9bc005f673b5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MMMGAME_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mnered-nered-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MNERED - NERED",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MNERED - NERED</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Cho hình vu&ocirc;ng NxN, m&ocirc;̣t s&ocirc;́ &ocirc; có các h&ocirc;̣p, m&ocirc;̃i &ocirc; có th&ecirc;̉ có nhi&ecirc;̀u h&ocirc;̣p bao nhau. Tính s&ocirc;́ h&ocirc;̣p c&acirc;̀n chuy&ecirc;̉n ít nh&acirc;́t đ&ecirc;̉ các h&ocirc;̣p này x&ecirc;́p thành 1 hình chữ nh&acirc;̣t (m&ocirc;̃i &ocirc; chỉ có 1 h&ocirc;̣p). Phép chuy&ecirc;̉n h&ocirc;̣p là chuy&ecirc;̉n 1 h&ocirc;̣p ở tr&ecirc;n cùng ở m&ocirc;̣t &ocirc; vu&ocirc;ng sang và đặt ở tr&ecirc;n cùng 1 &ocirc; vu&ocirc;ng nào khác.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>DÒng đ&acirc;̀u là 2 s&ocirc;́ N và M, (1 &le; N &le; 100, 1 &le; M &le; N^2), kích thước hình vu&ocirc;ng và s&ocirc;́ h&ocirc;̣p. M dòng ti&ecirc;́p theo là tọa đ&ocirc;̣ m&ocirc;̃i h&ocirc;̣p (hàng, c&ocirc;̣t).</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>S&ocirc;́ h&ocirc;̣p ít nh&acirc;́t c&acirc;̀n chuy&ecirc;̉n</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>input<br />4 3<br />2 2<br />4 4<br />1 1<br />output<br />2<br /><br />input<br />5 8<br />2 2<br />3 2<br />4 2<br />2 4<br />3 4<br />4 4<br />2 3<br />2 3<br />output<br />3<br /><br />Ở ví dụ 2, h&ocirc;̣p chuy&ecirc;̉n từ (2, 3) tới (3, 3), từ (4, 2)<br />tới (2, 5) và từ (4, 4) tới (3, 5).</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fd7f5572-cf02-46c0-ba49-9eacca1d2094",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MNERED_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mpilot-pilots",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MPILOT - Pilots",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MPILOT - Pilots</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>&nbsp;</p>\n<p>Charlie sở hữu vài cái máy bay bà già và c&acirc;̀n t&ocirc;́i ưu chi phi đ&ecirc;̉ ki&ecirc;́m lời</p>\n<p>Có N phi c&ocirc;ng (N chẵn) và c&acirc;̀n có N/2 phi hành đoàn.M&ocirc;̃i phi hành đoàn g&ocirc;̀m 2 người- 1 lái chính, 1 trợ lí. Lái chính phải cao tu&ocirc;̉i hơn trợ lý. Hợp đ&ocirc;̀ng cho m&ocirc;̃i phi c&ocirc;ng có ghi mức lương n&ecirc;́u anh ta là lái chính hoặc là trợ lí. Với m&ocirc;̃i 1 hợp đ&ocirc;̀ng thì lương lái chính &gt; lương trợ lí.</p>\n<p>Tìm cách ghép cặp sao cho t&ocirc;̉ng lương phải trả cho N người là ít nh&acirc;́t.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>Dòng đ&acirc;̀u là N (N chẵn), s&ocirc;́ phi c&ocirc;ng, 2 &le; N &le; 10,000.</p>\n<p>N dòng ti&ecirc;́p theo, m&ocirc;̃i dòng là 2 s&ocirc;́ X,Y là lương phi c&ocirc;ng thứ i n&ecirc;́u làm lái chính hoặc trợ lí,1 &le; Y &lt; X &le; 100,000.</p>\n<p>Các phi c&ocirc;ng sắp tăng d&acirc;̀n theo tu&ocirc;̉i.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>Lương nhỏ nh&acirc;́t c&acirc;̀n trả.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>input \n4 \n5000 3000 \n6000 2000 \n8000 1000 \n9000 6000 \n \noutput \n19000 \n\ninput \n6 \n10000 7000 \n9000 3000 \n6000 4000 \n5000 1000 \n9000 3000 \n8000 6000 \n \noutput \n32000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/374843f7-921f-4dc2-932f-a6b2dc358808",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MPILOT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mse07b-double-queue",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MSE07B - Double Queue",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MSE07B - Double Queue</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Ng&acirc;n hàng BIG-Bank mở m&ocirc;̣t chi nhánh ở Bucharest và được trang bị m&ocirc;̣t máy tính hi&ecirc;̣n đại với các c&ocirc;ng ngh&ecirc;̣ mới nh&acirc;̣p, C2#,VC3+ ... chỉ chu&ocirc;́i m&ocirc;̃i cái là kh&ocirc;ng ai bi&ecirc;́t l&acirc;̣p trình.</p>\n<p>Họ c&acirc;̀n m&ocirc;̣t ph&acirc;̀n m&ecirc;̀m m&ocirc; tả hoạt đ&ocirc;̣ng của ng&acirc;n hàng như sau: m&ocirc;̃i khách hàng có m&ocirc;̣t mã s&ocirc;́ là s&ocirc;́ nguy&ecirc;n K, và khi đ&ecirc;́n ng&acirc;n hàng giao dịch, họ sẽ nh&acirc;̣n được 1 s&ocirc;́ P là thứ tự ưu ti&ecirc;n của họ. Các thao tác chính như sau</p>\n<p>0 K&ecirc;́t thúc phục vụ</p>\n<p>1 K P Th&ecirc;m khách hàng K vào hàng đợi với đ&ocirc;̣ ưu ti&ecirc;n P</p>\n<p>2 Phục vụ người có đ&ocirc;̣ ưu ti&ecirc;n cao nh&acirc;́t và xóa khỏi danh sách hàng đợi</p>\n<p>3 Phục vụ người có đ&ocirc;̣ ưu ti&ecirc;n th&acirc;́p nh&acirc;́t và xóa khỏi danh sách hàng đợi.</p>\n<p>T&acirc;́t nhi&ecirc;n là họ c&acirc;̀n bạn giúp r&ocirc;̀i.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>M&ocirc;̃i dòng của input là 1 y&ecirc;u c&acirc;̀u, và chỉ y&ecirc;u c&acirc;̀u cu&ocirc;́i cùng mới có giá trị là 0. Giả thi&ecirc;́t là khi có y&ecirc;u c&acirc;̀u 1 thì kh&ocirc;ng có khách hàng nào khác có đ&ocirc;̣ ưu ti&ecirc;n là P.</p>\n<p>K&lt;=10^6, và P&lt;= 10^7.M&ocirc;̣t khách hàng có th&ecirc;̉ y&ecirc;u c&acirc;̀u phục vụ nhi&ecirc;̀u l&acirc;̀n và với các đ&ocirc;̣ ưu ti&ecirc;n khác nhau.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>Với m&ocirc;̃i y&ecirc;u c&acirc;̀u 2 hoặc 3, in ra tr&ecirc;n 1 dòng mã s&ocirc;́ của khách hàng được phục vụ tương ứng. N&ecirc;́u có y&ecirc;u c&acirc;̀u mà hàng đợi r&ocirc;̃ng, in ra s&ocirc;́ 0.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>Input :\n2 \n1 20 14 \n1 30 3 \n2 \n1 10 99 \n3 \n2 \n2 \n0 \nOuput: \n0 \n20 \n30 \n10 \n0 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e56a75f8-a32e-403b-a9e2-4db30c74fa8c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MSE07B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef929f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mstick-wooden-sticks",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MSTICK - Wooden Sticks",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MSTICK - Wooden Sticks</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<pre>Có n đoạn g&ocirc;̃. Đ&ecirc;̉ xử lý chúng c&acirc;̀n thời gian đ&ecirc;̉ chu&acirc;̉n bị : \n \n(a) Thời gian chu&acirc;̉n bị cho đoạn g&ocirc;̃ đ&acirc;̀u ti&ecirc;n là 1 phút. \n(b) Sau khi xử lý xong đoạn g&ocirc;̃ có chi&ecirc;̀u dài l và trọng lượng w , kh&ocirc;ng m&acirc;́t \nthời gian xử lý n&ecirc;́u đoạn g&ocirc;̃ ti&ecirc;́p theo có đ&ocirc;̣ dài l' và trọng lượng w' thỏa\nl &le; l' and  w &le; w'. Ngược lại m&acirc;́t 1 phút đ&ecirc;̉ chu&acirc;̉n bị.\n\n \nTìm thời gian chu&acirc;̉n bị ít nh&acirc;́t cho n đoạn g&ocirc;̃. Ví dụ có 5 đoạn ( 9 , 4 ) , \n( 2 , 5 ) , ( 1 , 2 ) , ( 5 , 3 ) , và ( 4 , 1 ) , thì thời gian ít nh&acirc;́t là 2\n vì có th&ecirc;̉  xử lý theo thứ tự như sau ( 4 , 1 ) , \n( 5 , 3 ) , ( 9 , 4 ) ,\n( 1 , 2 ) , ( 2 , 5 ) .\n</pre>\n<h3>Input</h3>\n<pre>Dòng đ&acirc;̀u là s&ocirc;́ lượng test, T. M&ocirc;̃i test g&ocirc;̀m 2 dòng : dòng đ&acirc;̀u là s&ocirc;́ n , 1 &lt;= n &lt;= 5000 , \nvà dòng thứ hai g&ocirc;̀m 2n s&ocirc;́ nguy&ecirc;n dương l1 , w1 , l2 , w2 ,..., ln , wn ,\n&lt;= 10000 , li và wi là đ&ocirc;̣ dài và trọng lượng của đoạn g&ocirc;̃ thứ i.\n \nSAMPLE INPUT\n3 \n5 \n4 9 5 2 2 1 3 5 1 4 \n3 \n2 2 1 1 2 2 \n3 \n1 3 2 2 3 1 \n\n</pre>\n<h3>Output</h3>\n<pre> \n\nGhi ra thời gian ít nh&acirc;́t tr&ecirc;n từng dòng.\nSAMPLE OUTPUT\n2\n1\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/54084219-d717-4f8e-9d70-7ce98060d5f0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MSTICKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mtwalk-mountain-walking",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MTWALK - Mountain Walking",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MTWALK - Mountain Walking</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Cho một bản đồ k&iacute;ch thước NxN (2 &lt;= N &lt;= 100), mỗi &ocirc; mang gi&aacute; trị l&agrave; độ cao của &ocirc; đ&oacute; (0 &lt;= độ cao &lt;= 110). B&aacute;c John v&agrave; b&ograve; Bessie đang ở &ocirc; tr&ecirc;n tr&aacute;i (d&ograve;ng 1, cột 1) v&agrave; muốn đi đến cabin (d&ograve;ng N, cột N). Họ c&oacute; thể đi sang phải, tr&aacute;i, l&ecirc;n tr&ecirc;n v&agrave; xuống dưới nhưng kh&ocirc;ng thể đi theo đường ch&eacute;o. H&atilde;y gi&uacute;p b&aacute;c John v&agrave; b&ograve; Bessie t&igrave;m đường đi sao cho ch&ecirc;nh lệch giữa điểm cao nhất v&agrave; thấp nhất tr&ecirc;n đường đi l&agrave; nhỏ nhất.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: N</li>\n<li>D&ograve;ng 2..N+1: Mỗi d&ograve;ng chứa N số nguy&ecirc;n, mỗi số cho biết cao độ của một &ocirc;.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Một số nguy&ecirc;n l&agrave; ch&ecirc;nh lệch cao độ nhỏ nhất.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5\n1 1 3 6 8\n1 2 2 5 5\n4 4 0 3 3\n8 0 2 3 4\n4 3 0 2 1\n\n<strong>Kết quả</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f6f1e74a-5545-4dd5-8bd8-9ade0a223938",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MTWALKinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mulone-nhan-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "MULONE - Nhân 1",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MULONE - Nh&acirc;n 1</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho số S = 111...11 (n chữ số 1, hệ thập ph&acirc;n), t&iacute;nh S<sup>2</sup>.</p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu ti&ecirc;n: số lượng test k.</p>\n<p>- k d&ograve;ng tiếp, mỗi d&ograve;ng ghi số n - số lượng chữ số 1 của S. (1 &lt;= n &lt;= 1000000)</p>\n<h3>Output</h3>\n<p>- Với mỗi test ghi kết quả tr&ecirc;n 1 d&ograve;ng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1\n2\n\n<strong>Output:</strong>\n1\n121</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e6a50d23-66b6-4c73-83aa-ecb425cf7aa8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MULONEinput.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mystery-so-huyen-bi",
  "tags": [],
  "level": "BEGINNER",
  "title": "MYSTERY - Số huyền bí",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>MYSTERY - Số huyền b&iacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Đất nước Văn Lang thời cổ xưa đ&atilde; c&oacute; những hiểu biết t&acirc;n tiến về số học. Tương truyền rằng, vua H&ugrave;ng Vương thứ 17 c&ugrave;ng c&aacute;c trưởng l&atilde;o trong triều đ&igrave;nh đ&atilde; ph&aacute;t minh ra c&aacute;c số huyền b&iacute;. C&aacute;c số n&agrave;y gi&uacute;p chỉ dẫn đường v&agrave;o kho t&agrave;ng của đất nước.</p>\n<p>Theo c&aacute;c chứng t&iacute;ch khảo cổ, c&aacute;c nh&agrave; khoa học kết luận rằng số huyền b&iacute; cơ sở a bằng t&iacute;ch của (3<sup>d</sup>-1) với mọi ước số d &gt; 0 của a.</p>\n<p>Bờm th&iacute;ch số học đồng thời cũng rất th&iacute;ch t&igrave;m hiểu lịch sử đất nước. Bạn h&atilde;y gi&uacute;p Bờm t&iacute;nh số huyền b&iacute; cơ sở a (1 &le; a &le; 10<sup>9</sup>). Do kết quả c&oacute; thể rất lớn, bạn chỉ cần in ra phần dư của số huyền b&iacute; cơ sở a khi chia cho 20122007.</p>\n<h3>Dữ liệu</h3>\n<p>Gồm một số nguy&ecirc;n a duy nhất.</p>\n<h3>Kết qủa</h3>\n<p>In ra số nguy&ecirc;n duy nhất l&agrave; phần dư của số huyền b&iacute; cơ sở a khi chia cho 20122007.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n10\n\n<strong>Kết qủa</strong>\n7291779</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f4bbe0ff-5007-422b-a980-ba25d05c0faa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MYSTERY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ncob-cuoc-dau-can-nao",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NCOB - Cuộc đấu cân não",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NCOB - Cuộc đấu c&acirc;n n&atilde;o</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Người h&agrave;nh tinh BrainPower vừa mời Nuga tham dự một cuộc thi đấu th&uacute; vị. Đ&oacute; l&agrave; giải &ldquo;Cờ Chạy&rdquo; li&ecirc;n h&agrave;nh tinh.</p>\n<p>&ldquo;Cờ Chạy&rdquo; l&agrave; thể loại cờ do Co &amp; Da &ndash; người h&agrave;nh tinh BP đưa ra v&agrave;o năm 3101. Mỗi v&aacute;n c&oacute; 2 người chơi, lu&acirc;n phi&ecirc;n nhau thực hiện nước đi của m&igrave;nh, bốc thăm để chọn người chơi trước. B&agrave;n cờ l&agrave; một d&atilde;y N &ocirc; vu&ocirc;ng, đ&aacute;nh số từ 1 đến N từ tr&aacute;i sang phải, v&agrave; chỉ c&oacute; 2 qu&acirc;n cờ duy nhất, ban đầu được đặt ở 2 &ocirc; vu&ocirc;ng do 2 người chơi tự do lựa chọn (hai &ocirc; vu&ocirc;ng n&agrave;y c&oacute; thể tr&ugrave;ng nhau). Giả sử 2 qu&acirc;n cờ đang ở 2 &ocirc; vu&ocirc;ng c&oacute; chỉ số l&agrave; X v&agrave; Y ( X &le; Y). Người chơi thực hiện nước đi bằng c&aacute;ch di chuyển qu&acirc;n cờ ở vị tr&iacute; Y đi K &ocirc; về b&ecirc;n tr&aacute;i, sao cho K phải l&agrave; một bội số dương của X, v&agrave; qu&acirc;n cờ vẫn ở tr&ecirc;n b&agrave;n cờ. N&oacute;i c&aacute;ch kh&aacute;c, vị tr&iacute; mới của qu&acirc;n cờ Y l&agrave; Y&rsquo; = Y &ndash; K, Y&rsquo; &ge; 1. Tr&ograve; chơi kết th&uacute;c khi kh&ocirc;ng thể thực hiện được nước đi n&agrave;o nữa. V&agrave; người kh&ocirc;ng thực hiện được nước đi của m&igrave;nh l&agrave; người thua cuộc.</p>\n<p>Cuộc thi c&oacute; nhiều v&ograve;ng, mỗi v&ograve;ng gồm c&aacute;c cặp đấu loại trực tiếp. Người thắng được lọt v&agrave;o v&ograve;ng trong. Người thắng trong tất cả c&aacute;c trận, tất nhi&ecirc;n, trở th&agrave;nh Nh&agrave; v&ocirc; địch, v&agrave; được thưởng 100 Triệu USD.</p>\n<p>Nuga rất muốn gi&agrave;nh được số tiền khổng lồ n&agrave;y v&igrave; c&ocirc; b&eacute; đang c&oacute; &yacute; định t&acirc;n trang lại con t&agrave;u si&ecirc;u tốc của m&igrave;nh. Những người tham gia tr&ograve; chơi đều l&agrave; những bộ &oacute;c vĩ đại đến từ c&aacute;c h&agrave;nh tinh kh&aacute;c nhau, họ đều chơi tối ưu cho mọi nước đi, v&igrave; thế, Nuga phải chuẩn bị trước một số khả năng chọn &ocirc; ban đầu đặt qu&acirc;n cờ sao cho m&igrave;nh chắc chắn thắng. Cho một loạt cặp 2 số X, Y l&agrave; chỉ số của 2 &ocirc; vu&ocirc;ng ban đầu đặt 2 qu&acirc;n cờ. Bạn h&atilde;y gi&uacute;p Nuga x&aacute;c định xem Nuga phải đi trước hay đi sau th&igrave; chắc chắn sẽ thắng?</p>\n<p>(P/S: Nuga hứa sẽ chia cho bạn một nửa giải thưởng nếu V&ocirc; địch! :P)</p>\n<h3>Dữ liệu</h3>\n<p>Gồm nhiều d&ograve;ng, mỗi d&ograve;ng ghi 2 số nguy&ecirc;n dương X Y. Kết th&uacute;c bằng cặp số 0 0.</p>\n<h3>Kết quả</h3>\n<p>Tương ứng với mỗi X Y, ghi ra tr&ecirc;n một d&ograve;ng, T nếu Nuga phải đi trước, S nếu Nuga phải đi sau để chắc chắn thắng.</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>X, Y &le; 2^31 &ndash; 1</li>\n<li>Trong 50% số điểm, c&oacute; X, Y &le; 1000</li>\n<li>Thời gian: 1s</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n1 1\n9 2\n0 0\n\n\n<strong>Kết quả:</strong>\nS\nT</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3af16f93-3bae-4133-b7fd-bcfdb9e265d9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NCOB_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ndccard-cac-la-bai-blackjack-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "NDCCARD - Các lá bài Blackjack",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NDCCARD - C&aacute;c l&aacute; b&agrave;i Blackjack</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Blackjack l&agrave; tr&ograve; chơi đ&aacute;nh b&agrave;i kh&aacute; phổ biến, mục ti&ecirc;u l&agrave; c&oacute; được những l&aacute; b&agrave;i m&agrave; tổng của n&oacute; l&agrave; lớn nhất nhưng kh&ocirc;ng vượt qu&aacute; 21. Lấy &yacute; tưởng từ tr&ograve; chơi n&agrave;y c&aacute;c bạn&nbsp;<a href=\"http://vnoi.info/index.php?option=com_voj2&amp;page=user&amp;user=khaihanhdk\">khaihanhdk</a>&nbsp;<a href=\"http://vnoi.info/index.php?option=com_voj2&amp;page=user&amp;user=huytion156\">huytion156</a>&nbsp;<a href=\"http://vnoi.info/index.php?option=com_voj2&amp;page=user&amp;user=thanhdat01234\">thanhdat01234</a>&nbsp;đ&atilde; s&aacute;ng tạo ra một phi&ecirc;n bản mới của tr&ograve; chơi cho ri&ecirc;ng m&igrave;nh.</p>\n<p>&nbsp;</p>\n<p>Trong phi&ecirc;n bản tr&ograve; chơi mới n&agrave;y c&aacute;c bạn đ&atilde; viết l&ecirc;n mỗi l&aacute; b&agrave;i một số nguy&ecirc;n dương. Người tham gia tr&ograve; chơi được cung cấp một tập gồm N l&aacute; b&agrave;i v&agrave; một số nguy&ecirc;n dương M. Nhiệm vụ của người chơi l&agrave; phải chọn ra 3 l&aacute; b&agrave;i từ tập l&aacute; b&agrave;i đ&atilde; cho sao cho tổng c&aacute;c số tr&ecirc;n 3 l&aacute; b&agrave;i đ&atilde; chọn l&agrave; lớn nhất v&agrave; kh&ocirc;ng vượt qu&aacute; M.</p>\n<p>&nbsp;</p>\n<h3>Y&ecirc;u cầu:&nbsp;&nbsp;Bạn h&atilde;y t&igrave;m kết quả tốt nhất c&oacute; thể c&oacute; của tr&ograve; chơi tr&ecirc;n.</h3>\n<p>&nbsp;</p>\n<h3>Dữ liệu:</h3>\n<p>&nbsp;</p>\n<ul>\n<li>D&ograve;ng đầu ghi số nguy&ecirc;n dương N,M (N&lt;=10000 , M&lt;=500000).</li>\n<li>N d&ograve;ng sau ghi N số nguy&ecirc;n dương đ&ocirc;i một kh&aacute;c nhau l&agrave; c&aacute;c số được ghi tr&ecirc;n N l&aacute; b&agrave;i&nbsp;( 1 &le; a[i] &le; 10000).</li>\n</ul>\n<p>&nbsp;</p>\n<h3>Kết quả:</h3>\n<p>&nbsp;</p>\n<p>Ghi tr&ecirc;n một d&ograve;ng duy nhất l&agrave; kết quả b&agrave;i to&aacute;n. Test lu&ocirc;n đảm bảo c&oacute; kết quả.</p>\n<p>&nbsp;</p>\n<h3>V&iacute; dụ:</h3>\n<p>&nbsp;</p>\n<p><strong>Dữ liệu:</strong></p>\n<p>6 20</p>\n<p>7</p>\n<p>9</p>\n<p>6</p>\n<p>2</p>\n<p>1</p>\n<p>5</p>\n<p><strong>Kết quả:</strong>&nbsp;20</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>=&gt; Giải th&iacute;ch: Chọn c&aacute;c l&aacute; b&agrave;i mang số 9 , 6 , 5 ta c&oacute; 9+6+5 = 20 &lt;= M</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/35bbd95f-7cd7-479c-b842-872557c7b1b2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NDCCARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "netaccel-tang-toc-mang-may-tinh",
  "tags": [],
  "level": "BEGINNER",
  "title": "NETACCEL - Tăng tốc mạng máy tính",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NETACCEL - Tăng tốc mạng m&aacute;y t&iacute;nh</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Cho mạng m&aacute;y t&iacute;nh gồm N m&aacute;y v&agrave; M li&ecirc;n kết hai chiều giữa c&aacute;c m&aacute;y. C&aacute;c m&aacute;y được đ&aacute;nh số từ 1 đến N. M&aacute;y của Bờm l&agrave; m&aacute;y 1 c&ograve;n m&aacute;y của Cuội l&agrave; m&aacute;y N. Mỗi đường nối cần tốn một gi&aacute; trị thời gian kh&aacute;c nhau để dữ liệu truyền qua. Tốc độ kết nối giữa hai m&aacute;y l&agrave; độ d&agrave;i đường truyền dữ liệu ngắn nhất giữa hai m&aacute;y đ&oacute;.</p>\n<p>Tốc độ kết nối của mạng kh&aacute; chậm khiến Bờm v&agrave; Cuội kh&ocirc;ng thể chơi Dota được, do đ&oacute; Bờm quyết định mua K thiết bị tăng tốc mạng. Thiết bị tăng tốc mạng được gắn v&agrave;o c&aacute;c đường truyền dữ liệu giữa hai m&aacute;y. Mỗi thiết bị sẽ l&agrave;m giảm thời gian truyền dữ liệu của đường truyền đi một nửa.</p>\n<p>H&atilde;y gi&uacute;p Bờm đặt c&aacute;c thiết bị tăng tốc sao cho tốc độ kết nối giữa m&aacute;y của Bờm v&agrave; Cuội l&agrave; nhanh nhất c&oacute; thể để hai bạn c&oacute; thể chơi Dota m&agrave; kh&ocirc;ng bị lag!</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng đầu chứa 3 số N, M, K.</p>\n<p>M d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 3 số x, y, c m&ocirc; tả một đường truyền dữ liệu: x, y l&agrave; số hiệu của hai m&aacute;y t&iacute;nh, c&ograve;n c l&agrave; thời gian truyền dữ liệu.</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &lt;= N &lt;= 1000</li>\n<li>1 &lt;= M &lt;= 100,000</li>\n<li>1 &lt;= K &lt;= 10</li>\n<li>1 &lt;= c &lt;= 1,000,000</li>\n</ul>\n<h3>Kết quả</h3>\n<p>In ra 1 số duy nhất l&agrave; tốc độ kết nối nhanh nhất c&oacute; thể sau khi đ&atilde; lắp đặt c&aacute;c thiết bị tăng tốc, l&agrave;m tr&ograve;n đến 2 chữ số thập ph&acirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5 5 2\n1 2 1\n2 3 9\n3 5 1\n1 4 5\n4 5 5\n\n<strong>Kết quả</strong>\n4.25\n</pre>\n<h3>Giải th&iacute;ch</h3>\n<p>Bờm lắp cả 2 thiết bị tăng tốc l&ecirc;n đường nối giữa m&aacute;y 2 v&agrave; m&aacute;y 3.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0f30a568-e06f-47da-be4e-eb1529a89979",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NETACCEL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nicequad-tu-giac-dep",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NICEQUAD - Tứ giác đẹp",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NICEQUAD - Tứ gi&aacute;c đẹp</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>C&oacute; N điểm tọa độ nguy&ecirc;n tr&ecirc;n mặt phẳng, một tứ gi&aacute;c ABCD với 4 đỉnh trong N điểm tr&ecirc;n gọi l&agrave; đẹp nếu Ax &gt; 0 v&agrave; Ay &gt; 0; Bx &gt; 0 v&agrave; By &lt; 0; Cx &lt; 0 v&agrave; Cy &lt; 0; Dx &lt; 0 v&agrave; Dy &gt; 0; ABCD c&oacute; diện t&iacute;ch nguy&ecirc;n. Nhiệm vụ của bạn l&agrave; đếm tất cả c&aacute;c c&aacute;ch chọn 4 đỉnh tạo n&ecirc;n tứ gi&aacute;c đẹp.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n l&agrave; số bộ test T (T &lt; 11).</li>\n<li>T nh&oacute;m d&ograve;ng tiếp theo, mỗi nh&oacute;m d&ograve;ng gồm số điểm N (N &lt; 30001), sau đ&oacute; l&agrave; N d&ograve;ng, mối d&ograve;ng gồm tọa độ 1 điểm (x, y) (-3000 &lt; x, y &lt; 30000).</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Ghi tr&ecirc;n T d&ograve;ng, mỗi d&ograve;ng l&agrave; kết quả tương ứng của từng test.</p>\n<h3>V&iacute; dụ</h3>\n<pre> \n<strong>Dữ liệu:</strong> \n1\n6\n1 1\n2 2\n-1 -1\n-2 2\n2 -1\n-3 -4\n<strong>Kết qủa</strong> \n2 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2f09e717-09f9-450b-9920-08ab4a328f5c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NICEQUAD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nk05mnim-boc-soi",
  "tags": [],
  "level": "BEGINNER",
  "title": "NK05MNIM - Bốc sỏi",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NK05MNIM - Bốc sỏi</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Hai bạn Nam v&agrave; Mai c&ugrave;ng chơi một tr&ograve; chơi với n đống sỏi. Luật chơi như sau:</p>\n<ul>\n<li>Hai bạn sẽ lần lượt đi. Bạn Mai l&agrave; người đi trước</li>\n<li>Trong mỗi lượt đi, bạn đi sẽ được quyền bốc một số sỏi bất kỳ từ một đống nhất định v&agrave; phải bốc tối thiểu l&agrave; 1 vi&ecirc;n sỏi.</li>\n<li>Bạn n&agrave;o bốc phải vi&ecirc;n sỏi cuối c&ugrave;ng l&agrave; người thua cuộc</li>\n</ul>\n<p>Bạn h&atilde;y gi&uacute;p Mai x&aacute;c định xem bạn ấy c&oacute; thể thắng được trong tr&ograve; chơi hay kh&ocirc;ng</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một nguy&ecirc;n t l&agrave; số bộ test. C&aacute;c d&ograve;ng sau l&agrave; t bộ test.</p>\n<p>Mỗi bộ test bao gồm:</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n n (n&lt;=100) l&agrave; số đống sỏi</li>\n<li>D&ograve;ng thứ hai gồm n số nguy&ecirc;n a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>,... , a<sub>n</sub>, ngăn c&aacute;ch nhau bởi một khoảng trắng. Số nguy&ecirc;n ai cho biết số lượng vi&ecirc;n sỏi c&oacute; trong đống thứ i (1&lt;=a<sub>i</sub>&lt;=100)</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Với mỗi bộ test, in ra 1 nếu bạn Mai thắng, -1 nếu bạn Mai thua</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n2\n4\n30 4 19 75\n3\n1 4 5\n\n\n<strong>Kết qủa</strong>\n1\n-1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/969af0a0-8dd9-4e5b-936e-8d368c96d612",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NK05MNIM_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a8"
  },
  "memoryLimit": 1,
  "source": 0,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkabd-so-phong-phu",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKABD - Số phong phú",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKABD - Số phong ph&uacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Trong số học, số phong ph&uacute; l&agrave; c&aacute;c số m&agrave; tổng c&aacute;c ước số của số đ&oacute; (kh&ocirc;ng kể ch&iacute;nh n&oacute;) lớn hơn số đ&oacute;. V&iacute; dụ, số 12 c&oacute; tổng c&aacute;c ước số (kh&ocirc;ng kể 12) l&agrave; 1 + 2 + 3 + 4 + 6 = 16 &gt; 12. Do đ&oacute; 12 l&agrave; một số phong ph&uacute;.</p>\n<p>Bạn h&atilde;y lập tr&igrave;nh đếm xem c&oacute; bao nhi&ecirc;u số phong ph&uacute; trong đoạn [L,R].</p>\n<h3>Dữ liệu</h3>\n<p>Gồm 2 số L, R (1 &lt;= L &lt;= R &lt;= 10<sup>5</sup>)</p>\n<h3>Kết quả</h3>\n<p>Gồm 1 số nguy&ecirc;n duy nhất l&agrave; số số phong ph&uacute; trong đoạn [L, R].</p>\n<h3>Ch&uacute; &yacute;</h3>\n<p>C&oacute; 50% số test c&oacute; 1 &lt;= L &lt;= R &lt;= 10<sup>3</sup></p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n1 50\n\n<strong>Kết quả</strong>\n9\n\n<strong>Giải th&iacute;ch:</strong>\nTừ 1 đến 50 c&oacute; 9 số phong ph&uacute; l&agrave;: \n12, 18, 20, 24, 30, 36, 40, 42, 48</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9baf1752-5586-4833-bc7c-1ff843b371b3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKABD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92a9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkbus-bus",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKBUS - Bus",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKBUS - Bus</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Một xe bu&yacute;t của c&ocirc;ng ty c&oacute; nhiệm vụ đ&oacute;n nh&acirc;n vi&ecirc;n đến trụ sở l&agrave;m việc. Tr&ecirc;n h&agrave;nh tr&igrave;nh, xe bu&yacute;t sẽ tiếp nhận nh&acirc;n vi&ecirc;n đứng chờ ở c&aacute;c điểm hẹn nếu như xe c&ograve;n chỗ trống. Xe bu&yacute;t c&oacute; thể đỗ lại để chờ những c&ocirc;ng nh&acirc;n chưa kịp đến điểm hẹn.</p>\n<p>Cho biết thời điểm m&agrave; mỗi nh&acirc;n vi&ecirc;n đến điểm hẹn của m&igrave;nh v&agrave; thời điểm qua mỗi điểm hẹn của xe bu&yacute;t. Giả thiết rằng xe bu&yacute;t đến điểm hẹn đầu ti&ecirc;n tại thời điểm 0 v&agrave; thời gian xếp kh&aacute;ch l&ecirc;n xe được bằng 0.</p>\n<p>Xe bu&yacute;t cần phải chở một số lượng nhiều nhất c&aacute;c nh&acirc;n vi&ecirc;n c&oacute; thể được đến trụ sở. H&atilde;y x&aacute;c định khoảng thời gian ngắn nhất để xe bu&yacute;t thực hiện c&ocirc;ng việc.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa 2 số nguy&ecirc;n dương n, m theo thứ tự l&agrave; số điểm hẹn v&agrave; số chỗ ngồi của xe bu&yacute;t</p>\n<p>D&ograve;ng thứ i trong số n d&ograve;ng tiếp theo chứa số nguy&ecirc;n t<sub>i</sub>&nbsp;l&agrave; thời gian cần thiết để xe bu&yacute;t di chuyển từ điểm hẹn thứ i đến điểm hẹn thứ i+1 (điểm hẹn thứ n+1 sẽ l&agrave; trụ sở l&agrave;m việc của c&ocirc;ng ty) v&agrave; số nguy&ecirc;n k l&agrave; số lượng nh&acirc;n vi&ecirc;n đến điểm hẹn i, tiếp theo k số nguy&ecirc;n l&agrave; c&aacute;c thời điểm đến điểm hẹn của k nh&acirc;n vi&ecirc;n.</p>\n<h3>Kết qủa</h3>\n<p>Gồm một d&ograve;ng duy nhất, l&agrave; thời gian ngắn nhất t&igrave;m được.</p>\n<h3>Giới hạn</h3>\n<p>1 &le; n &le; 200000, 1 &le; m &le; 20000</p>\n<p>Tổng số nh&acirc;n vi&ecirc;n kh&ocirc;ng vượt qu&aacute; 200000.</p>\n<p>Kết quả kh&ocirc;ng vượt qu&aacute; 2<sup>31</sup>-1.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n3 2\n3 2 4 3\n1 3 6 3 7\n5 1 5\n\n<strong>Kết qủa</strong>\n10\n</pre>\n<p>Giải th&iacute;ch: Tr&ecirc;n đường đến c&ocirc;ng ty c&oacute; 3 trạm xe bu&yacute;t. Từ trạm 1 đến trạm 2, trạm 2 đến trạm 3, v&agrave; từ trạm 3 đến c&ocirc;ng ty lần lượt mất 3, 1 v&agrave; 5 đơn vị thời gian. Xe bu&yacute;t c&oacute; thể đi như sau: đến thẳng trạm 2, đ&oacute;n người thứ 2, đến trạm 3, chờ 1 đơn vị thời gian để đ&oacute;n người duy nhất ở trạm n&agrave;y, v&agrave; cuối c&ugrave;ng đến c&ocirc;ng ty. Tổng cộng xe bu&yacute;t đi mất 3 + 1 + 1 + 5 = 10 đơn vị thời gian.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0f12700e-479c-43b6-9be1-98963eb26cca",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKBUS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92aa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkcable-noi-mang",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKCABLE - Nối mạng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKCABLE - Nối mạng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>C&aacute;c học sinh khi đến thực tập trong ph&ograve;ng m&aacute;y t&iacute;nh thường hay chơi tr&ograve; chơi điện tử tr&ecirc;n mạng. Để ngăn ngừa, người trực ph&ograve;ng m&aacute;y đ&atilde; ngắt tất cả c&aacute;c m&aacute;y t&iacute;nh ra khỏi mạng v&agrave; xếp ch&uacute;ng th&agrave;nh một d&atilde;y tr&ecirc;n một c&aacute;i b&agrave;n d&agrave;i v&agrave; gắn chặt m&aacute;y xuống mặt b&agrave;n rồi đ&aacute;nh số thứ tự c&aacute;c m&aacute;y từ 1 đến N theo chiều từ tr&aacute;i sang phải. C&aacute;c học sinh tinh nghịch kh&ocirc;ng chịu thua, họ đ&atilde; quyết định t&igrave;m c&aacute;ch nối c&aacute;c m&aacute;y tr&ecirc;n b&agrave;n bởi c&aacute;c đoạn d&acirc;y nối sao cho mỗi m&aacute;y được nối với &iacute;t nhất một m&aacute;y kh&aacute;c. Để tiến h&agrave;nh c&ocirc;ng việc n&agrave;y, họ đ&atilde; đo khoảng c&aacute;ch giữa hai m&aacute;y li&ecirc;n tiếp. Bạn h&atilde;y gi&uacute;p c&aacute;c học sinh n&agrave;y t&igrave;m c&aacute;ch nối mạng thoả m&atilde;n y&ecirc;u cầu đặt ra sao cho tổng độ d&agrave;i c&aacute;p nối phải sử dụng l&agrave; &iacute;t nhất.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số lượng m&aacute;y N (1 &le; N &le; 25000).</li>\n<li>D&ograve;ng thứ i trong số N-1 d&ograve;ng tiếp theo chứa c&aacute;c khoảng c&aacute;ch từ m&aacute;y i đến m&aacute;y i+1 (i=1,2,...,N-1). Giả thiết rằng khoảng c&aacute;ch từ m&aacute;y 1 đến m&aacute;y N kh&ocirc;ng vượt qu&aacute; 10<sup>6</sup>.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Ghi ra độ d&agrave;i của c&aacute;p nối cần sử dụng.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n6\n2\n2\n3\n2\n2\n\n<strong>Kết qủa</strong>\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b7a9a01b-8806-4b61-b67d-7cb5c2dfd707",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKCABLE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ab"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkcity-xay-dung-thanh-pho",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKCITY - Xây dựng thành phố",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKCITY - X&acirc;y dựng th&agrave;nh phố</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Nước Anpha đang lập kế hoạch x&acirc;y dựng một th&agrave;nh phố mới v&agrave; hiện đại. Theo kế hoạch, th&agrave;nh phố sẽ c&oacute; N vị tr&iacute; quan trọng, được gọi l&agrave; N trọng điểm v&agrave; c&aacute;c trọng điểm n&agrave;y được đ&aacute;nh số từ 1 tới N. Bộ giao th&ocirc;ng đ&atilde; lập ra một danh s&aacute;ch M tuyến đường hai chiều c&oacute; thể x&acirc;y dựng được giữa hai trọng điểm n&agrave;o đ&oacute;. Mỗi tuyến đường c&oacute; một thời gian ho&agrave;n th&agrave;nh kh&aacute;c nhau.</p>\n<p>C&aacute;c tuyến đường phải được x&acirc;y dựng sao cho N trọng điểm li&ecirc;n th&ocirc;ng với nhau. N&oacute;i c&aacute;ch kh&aacute;c, giữa hai trọng điểm bất kỳ cần phải di chuyển được đến nhau qua một số tuyến đường. Bộ giao th&ocirc;ng sẽ chọn ra một số tuyến đường từ trong danh s&aacute;ch ban đầu để đưa v&agrave;o x&acirc;y dựng sao cho điều kiện n&agrave;y được thỏa m&atilde;n.</p>\n<p>Do nhận được đầu tư rất lớn từ ch&iacute;nh phủ, bộ giao th&ocirc;ng sẽ thu&ecirc; hẳn một đội thi c&ocirc;ng ri&ecirc;ng cho mỗi tuyến đường cần x&acirc;y dựng. Do đ&oacute;, thời gian để ho&agrave;n th&agrave;nh to&agrave;n bộ c&aacute;c tuyến đường cần x&acirc;y dựng sẽ bằng thời gian l&acirc;u nhất ho&agrave;n th&agrave;nh một tuyến đường n&agrave;o đ&oacute;.</p>\n<p>Y&ecirc;u cầu: Gi&uacute;p bộ giao th&ocirc;ng t&iacute;nh thời gian ho&agrave;n th&agrave;nh c&aacute;c tuyến đường sớm nhất thỏa m&atilde;n y&ecirc;u cầu đ&atilde; n&ecirc;u.</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng chứa số N v&agrave; M (1 &le; N &le; 1000; 1 &le; M &le; 10000).</p>\n<p>M tiếp theo, mỗi d&ograve;ng chứa ba số nguy&ecirc;n u, v v&agrave; t cho biết c&oacute; thể x&acirc;y dựng tuyến đường nối giữa trọng điểm u v&agrave; trọng điểm v trong thời gian t. Kh&ocirc;ng c&oacute; hai tuyến đường n&agrave;o nối c&ugrave;ng một cặp trọng điểm.</p>\n<h3>Kết quả</h3>\n<p>Một số nguy&ecirc;n duy nhất l&agrave; thời gian sớm nhất ho&agrave;n th&agrave;nh c&aacute;c tuyến đường thỏa m&atilde;n y&ecirc;u cầu đ&atilde; n&ecirc;u.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\t\n5 7\n1 2 2\n1 5 1\n2 5 1\n1 4 3\n1 3 2\n5 3 2\n3 4 4\t\n\n<strong>Kết quả</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/99f79c9d-8297-464f-9b3a-b9ba4f563a34",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKCITY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ac"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkflow-luong-cuc-dai-tren-mang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKFLOW - Luồng cực đại trên mạng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKFLOW - Luồng cực đại tr&ecirc;n mạng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br /><br />\n<p>Trong l&yacute; thuyết đồ thị,&nbsp;<em>mạng luồng</em>&nbsp;l&agrave; một đồ thị c&oacute; hướng, trong đ&oacute; mỗi cạnh c&oacute; một độ th&ocirc;ng qua v&agrave; một gi&aacute; trị luồng. Lượng luồng tr&ecirc;n mỗi cạnh kh&ocirc;ng được vượt qu&aacute; độ th&ocirc;ng qua của cạnh đ&oacute;. Lượng luồng đi v&agrave;o một đỉnh phải bằng lượng luồng đi ra khỏi n&oacute;, trừ khi đ&oacute; l&agrave; đỉnh nguồn (c&oacute; nhiều lượng luồng đi ra hơn), hay đỉnh đ&iacute;ch (c&oacute; nhiều lượng luồng đi v&agrave;o hơn). Mạng luồng c&oacute; thể d&ugrave;ng để m&ocirc; h&igrave;nh h&oacute;a hệ thống đường giao th&ocirc;ng, d&ograve;ng chảy của chất lỏng trong ống, d&ograve;ng điện trong mạch, hay bất kỳ c&aacute;c b&agrave;i to&aacute;n n&agrave;o tương tự khi c&oacute; sự di chuyển trong một mạng c&aacute;c n&uacute;t.</p>\n<p>M&ocirc; h&igrave;nh c&aacute;c ống dẫn nước bằng một mạng luồng. Mỗi ống nước c&oacute; đường k&iacute;nh x&aacute;c định n&ecirc;n chỉ cho ph&eacute;p một lưu lượng nước x&aacute;c định chảy qua. Ở nơi giao điểm giữa c&aacute;c ống, lưu lượng nước đi v&agrave;o phải bằng lưu lượng nước đi ra nếu kh&ocirc;ng nước sẽ nhanh ch&oacute;ng bị thất tho&aacute;t. Ta c&oacute; một bồn nước, hay đỉnh ph&aacute;t, v&agrave; một v&ograve;i nước, hay đỉnh thu. Một c&aacute;ch trực quan, gi&aacute; trị luồng tr&ecirc;n mạng ch&iacute;nh l&agrave; vận tốc nước chảy ra từ v&ograve;i. Luồng c&ograve;n c&oacute; thể m&ocirc; h&igrave;nh sự lưu chuyển của người hay h&agrave;ng h&oacute;a tr&ecirc;n c&aacute;c mạng giao th&ocirc;ng, d&ograve;ng điện trong hệ thống ph&acirc;n phối,... Đối với c&aacute;c hệ thống mạng n&agrave;y, luồng đi v&agrave;o c&aacute;c n&uacute;t trung gian cần phải bằng luồng đi ra khỏi n&uacute;t đ&oacute;. T&iacute;nh chất n&agrave;y cũng giống như định luật d&ograve;ng điện Kirchhoff. Mạng luồng c&ograve;n được ứng dụng trong sinh th&aacute;i học: mạng luồng xuất hiện khi xem x&eacute;t sự lưu chuyển chất dinh dưỡng v&agrave; năng lượng giữa c&aacute;c nh&oacute;m kh&aacute;c nhau trong một mạng thức ăn. C&aacute;c b&agrave;i to&aacute;n gắn với loại mạng sinh th&aacute;i n&agrave;y ho&agrave;n to&aacute;n kh&aacute;c với trường hợp mạng chất lỏng hay mạng giao th&ocirc;ng.</p>\n<p>B&agrave;i to&aacute;n&nbsp;<em>luồng cực đại tr&ecirc;n mạng</em>&nbsp;y&ecirc;u cầu t&igrave;m một luồng tương th&iacute;ch c&oacute; gi&aacute; trị lớn nhất trong mạng luồng c&oacute; một đỉnh ph&aacute;t v&agrave; một đỉnh thu. B&agrave;i to&aacute;n luồng cực đại tr&ecirc;n mạng c&oacute; thể xem như trường hợp đặc biệt của lớp c&aacute;c b&agrave;i to&aacute;n mạng phức tạp hơn, chẳng hạng như b&agrave;i to&aacute;n&nbsp;<em>lưu th&ocirc;ng</em>. Định l&yacute; luồng cực đại-l&aacute;t cắt hẹp nhất (max-flow min-cut theorem) chỉ ra gi&aacute; trị luồng cực đại từ s đến t (đỉnh ph&aacute;t đến đỉnh thu) bằng gi&aacute; trị của l&aacute;t cắt s-t hẹp nhất tr&ecirc;n mạng.</p>\n<p>Bạn h&atilde;y thử giải quyết b&agrave;i to&aacute;n luồng cực đại tr&ecirc;n mạng: cho một mạng luồng, h&atilde;y t&igrave;m gi&aacute; trị luồng cực đại.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 4 số nguy&ecirc;n dương n, m, s, t, (2 &le; n &le; 1000) tương ứng l&agrave; số đỉnh, số cạnh của đồ thị, chỉ số của đỉnh ph&aacute;t v&agrave; đỉnh thu.</li>\n<li>m d&ograve;ng tiếp theo, mỗi d&ograve;ng c&oacute; dạng ba số u, v, c c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch thể hiện c&oacute; cung u, v trong mạng với khả năng th&ocirc;ng qua l&agrave; c (1 &le; c &le; 10<sup>6</sup>).</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>In ra một số duy nhất l&agrave; gi&aacute; trị của luồng cực đại tr&ecirc;n mạng.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n6 8 1 6\n1 2 5\n1 3 5\n2 4 6\n2 5 3\n3 4 3\n3 5 1\n4 6 6\n5 6 6\n\n<strong>Kết qủa</strong>\n9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/235d7d9d-58a8-444c-9e13-ea8adf2bf1b7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKFLOW_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ad"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkguard-bao-ve-nong-trang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKGUARD - Bảo vệ nông trang",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKGUARD - Bảo vệ n&ocirc;ng trang</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>N&ocirc;ng trang c&oacute; rất nhiều ngọn đồi n&uacute;i, để bảo vệ n&ocirc;ng trang n&ocirc;ng d&acirc;n John muốn đặt người canh g&aacute;c tr&ecirc;n c&aacute;c ngọn đồi n&agrave;y.</p>\n<p>Anh ta băn khoăn kh&ocirc;ng biết sẽ cần bao nhi&ecirc;u người canh g&aacute;c nếu như anh ta muốn đặt 1 người canh g&aacute;c tr&ecirc;n đỉnh của mỗi đồi. Anh ta c&oacute; bản đồ của n&ocirc;ng trang l&agrave; một ma trận gồm N (1 &lt; N &lt;= 700) h&agrave;ng v&agrave; M (1 &lt; M &lt;= 700) cột. Mỗi phần tử của ma trận l&agrave; độ cao H_ij so với mặt nước biển (0 &lt;= H_ij &lt;= 10,000) của &ocirc; (i, j). H&atilde;y gi&uacute;p anh ta x&aacute;c định số lượng đỉnh đồi tr&ecirc;n bản đồ.</p>\n<p>Đỉnh đồi l&agrave; 1 hoặc nhiều &ocirc; nằm kề nhau của ma trận c&oacute; c&ugrave;ng độ cao được bao quanh bởi cạnh của bản đồ hoặc bởi c&aacute;c &ocirc; c&oacute; độ cao nhỏ hơn. Hai &ocirc; gọi l&agrave; kề nhau nếu độ ch&ecirc;nh lệch giữa tọa độ X kh&ocirc;ng qu&aacute; 1 v&agrave; ch&ecirc;nh lệch tọa độ Y kh&ocirc;ng qu&aacute; 1.</p>\n<h3>Dữ liệu</h3>\n<p>* D&ograve;ng 1: Hai số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; M</p>\n<p>* D&ograve;ng 2..N+1: D&ograve;ng i+1 m&ocirc; tả h&agrave;ng i của ma trận với M số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: H_ij</p>\n<h3>Kết quả</h3>\n<p>* D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; số lượng đỉnh đồi.</p>\n<h3>V&iacute; dụ</h3>\n<pre>Dữ liệu:\n8 7\n4 3 2 2 1 0 1\n3 3 3 2 1 0 1\n2 2 2 2 1 0 0\n2 1 1 1 1 0 0\n1 1 0 0 0 1 0\n0 0 0 1 1 1 0\n0 1 2 2 1 1 0\n0 1 1 1 2 1 0\n\nKết quả:\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a56fe910-cc76-4bca-8826-18a6657928aa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKGUARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ae"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkinv-day-nghich-the",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKINV - Dãy nghịch thế",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKINV - D&atilde;y nghịch thế</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một d&atilde;y số a<sub>1</sub>.. a<sub>N</sub>. Một nghịch thế l&agrave; một cặp số u, v sao cho u &lt; v v&agrave; a<sub>u</sub>&nbsp;&gt; a<sub>v</sub>. Nhiệm vụ của bạn l&agrave; đếm số nghịch thế.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ghi số nguy&ecirc;n dương N.</li>\n<li>N d&ograve;ng sau mỗi d&ograve;ng ghi một số a<sub>i</sub>&nbsp;( 1 &le; i &le; N ).</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Ghi tr&ecirc;n một d&ograve;ng số M duy nhất l&agrave; số nghịch thế.</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; N &le; 60000</li>\n<li>1 &le; a<sub>i</sub>&nbsp;&le; 60000</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n3\n3\n1\n2\n\n<strong>Kết qủa</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f7de7b4a-b7a2-4c34-9f58-49d3700644e2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKINV_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92af"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nklineup-xep-hang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKLINEUP - Xếp hàng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKLINEUP - Xếp h&agrave;ng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>H&agrave;ng ng&agrave;y khi lấy sữa, N con b&ograve; của b&aacute;c John (1 &le; N &le; 50000) lu&ocirc;n xếp h&agrave;ng theo thứ tự kh&ocirc;ng đổi. Một h&ocirc;m b&aacute;c John quyết định tổ chức một tr&ograve; chơi cho một số con b&ograve;. Để đơn giản, b&aacute;c John sẽ chọn ra một đoạn li&ecirc;n tiếp c&aacute;c con b&ograve; để tham dự tr&ograve; chơi. Tuy nhi&ecirc;n để tr&ograve; chơi diễn ra vui vẻ, c&aacute;c con b&ograve; phải kh&ocirc;ng qu&aacute; ch&ecirc;nh lệch về chiều cao.</p>\n<p>B&aacute;c John đ&atilde; chuẩn bị một danh s&aacute;ch gồm Q (1 &le; Q &le; 200000) đoạn c&aacute;c con b&ograve; v&agrave; chiều cao của ch&uacute;ng (trong phạm vi [1, 1000000]). Với mỗi đoạn, b&aacute;c John muốn x&aacute;c định ch&ecirc;nh lệch chiều cao giữa con b&ograve; thấp nhất v&agrave; cao nhất. Bạn h&atilde;y gi&uacute;p b&aacute;c John thực hiện c&ocirc;ng việc n&agrave;y!</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 2 số nguy&ecirc;n N v&agrave; Q.</li>\n<li>D&ograve;ng thứ i trong số N d&ograve;ng sau chứa 1 số nguy&ecirc;n duy nhất, l&agrave; độ cao của con b&ograve; thứ i.</li>\n<li>D&ograve;ng thứ i trong số Q trong tiếp theo chứa 2 số nguy&ecirc;n A, B (1 &le; A &le; B &le; N), cho biết đoạn c&aacute;c con b&ograve; từ A đến B.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Gồm Q d&ograve;ng, mỗi d&ograve;ng chứa 1 số nguy&ecirc;n, l&agrave; ch&ecirc;nh lệch chiều cao giữa con b&ograve; thấp nhất v&agrave; cao nhất thuộc đoạn tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n6 3\n1\n7\n3\n4\n2\n5\n1 5\n4 6\n2 2\n\n<strong>Kết qủa</strong>\n6\n3\n0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9f779d22-4fb4-497a-834f-4cf0db5d8bf5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKLINEUP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkluck-day-so-may-man",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKLUCK - Dãy số may mắn",
  "content": "<table style=\"font-weight: 400;\">\n<tbody>\n<tr>\n<td>\n<h2 style=\"font-weight: 500;\">NKLUCK - D&atilde;y số may mắn</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-weight: 400;\"><br /><br /></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;H&ocirc;m nay l&agrave; bữa học đầu ti&ecirc;n của lớp đội tuyển sau khi đ&oacute;n ch&agrave;o năm mới 2014. Thầy đ&atilde; cho c&aacute;c học sinh của m&igrave;nh ăn chơi một ng&agrave;y. Để lấy h&ecirc;n đầu năm mới thầy đ&atilde; ghi l&ecirc;n n mẫu giấy một số nguy&ecirc;n c&ocirc;ng việc n&agrave;y đ&atilde; được thầy chuẩn bị trước ở nh&agrave;. Sau đ&oacute; thầy &uacute;p n mẫu giấy l&ecirc;n b&agrave;n để kh&ocirc;ng ai biết. Mỗi người sẽ l&ecirc;n v&agrave; chọn một đoạn con li&ecirc;n tiếp t&ugrave;y &yacute;. Một đoạn được gọi l&agrave; may mắn nếu trung vị của n&oacute; đ&uacute;ng bằng X. Trung vị của một d&atilde;y số gồm m phần tử l&agrave; số ở vị tr&iacute; thứ (m div 2)+1 trong d&atilde;y sau khi d&atilde;y đ&atilde; được sắp xếp. Thầy gi&aacute;o muốn biết x&aacute;c suất để một học sinh c&oacute; thể chọn được một d&atilde;y số may mắn. V&igrave; đi chơi xu&acirc;n nhiều qu&aacute; n&ecirc;n thầy kh&aacute; mệt mỏi, c&aacute;c bạn h&atilde;y gi&uacute;p thầy giải quyết vấn đề n&agrave;y nh&eacute;.</p>\n<p>&nbsp;</p>\n<p><strong>Dữ liệu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu chứa số nguy&ecirc;n dương n v&agrave; số nguy&ecirc;n X.</li>\n<li>n d&ograve;ng tiếp theo mỗi d&ograve;ng chứa gi&aacute; trị của số được ghi tr&ecirc;n mẫu giấy thứ i.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Giới hạn</strong></p>\n<ul>\n<li>n &lt;= 5*10^5.</li>\n<li>gi&aacute; trị tuyệt đối của c&aacute;c số c&ograve;n lại trong dữ liệu v&agrave;o &lt;= 10^9.</li>\n<li>25% số test c&oacute; n &lt;= 100.</li>\n<li>50% số test c&oacute; n &lt;= 500.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Dữ liệu ra</strong></p>\n<ul>\n<li>Chứa một số duy nhất l&agrave; kết quả b&agrave;i to&aacute;n với đọ sai lệch kh&ocirc;ng qu&aacute; 0.000001.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p>&nbsp;</p>\n<p><strong>Dữ liệu v&agrave;o:</strong></p>\n<p>&nbsp;4 1</p>\n<p>&nbsp;1</p>\n<p>&nbsp;2</p>\n<p>&nbsp;3</p>\n<p>&nbsp;4</p>\n<p>&nbsp;</p>\n<p><strong>Dữ liệu ra:</strong></p>\n<p>&nbsp;0.1</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/40f5cd3e-363c-423a-a902-cc790576de79",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKLUCK_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkmaxseq-day-con-dai-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKMAXSEQ - Dãy con dài nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKMAXSEQ - D&atilde;y con d&agrave;i nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho d&atilde;y số nguy&ecirc;n a<sub>1</sub>, a<sub>2</sub>, &hellip;, a<sub>n</sub>.</p>\n<p>D&atilde;y số a<sub>i</sub>, a<sub>i+1</sub>, &hellip;, a<sub>j</sub>&nbsp;với 1 &le; i &le; j &le; n được gọi l&agrave; d&atilde;y con của d&atilde;y số đ&atilde; cho v&agrave; khi đ&oacute;, j-i+1 được gọi l&agrave; độ d&agrave;i, c&ograve;n a<sub>i</sub>+a<sub>i+1</sub>...+a<sub>j</sub>&nbsp;được gọi l&agrave; trọng lượng của d&atilde;y con n&agrave;y.</p>\n<p>Y&ecirc;u cầu: cho số nguy&ecirc;n p, trong số c&aacute;c d&atilde;y con của d&atilde;y số đ&atilde; cho c&oacute; trọng lượng kh&ocirc;ng nhỏ hơn p h&atilde;y t&igrave;m d&atilde;y con c&oacute; độ d&agrave;i lớn nhất.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi hai số nguy&ecirc;n n v&agrave; p c&aacute;ch nhau bởi dấu c&aacute;ch.</li>\n<li>D&ograve;ng thứ i trong số n d&ograve;ng tiếp theo chứa số nguy&ecirc;n a<sub>i</sub>&nbsp;l&agrave; số hạng thứ i của d&atilde;y số đ&atilde; cho, i = 1, 2, &hellip;, n.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Ghi ra số nguy&ecirc;n k l&agrave; độ d&agrave;i của d&atilde;y con t&igrave;m được (qui ước: nếu kh&ocirc;ng c&oacute; d&atilde;y con n&agrave;o thỏa m&atilde;n điều kiện đặt ra th&igrave; k = -1).</p>\n<h3>Hạn chế</h3>\n<p>Trong tất cả c&aacute;c test: 1 &le; n &le; 50000; |a<sub>i</sub>| &le; 20000; |p| &le; 10<sup>9</sup>. C&oacute; 50% số lượng test với n &le; 2000.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n5 6\n-2\n3\n2\n-2\n3\n\n<strong>Kết qủa</strong>\n4\n\n<strong>Dữ liệu mẫu</strong>\n4 9\n2\n3\n2\n-2\n\n<strong>Kết qủa</strong>\n-1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/22215c4f-4cd6-402d-9857-b4415fb2f9da",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKMAXSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nknumfre-so-than-thien",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKNUMFRE - Số thân thiện",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKNUMFRE - Số th&acirc;n thiện</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Số tự nhi&ecirc;n c&oacute; rất nhiều t&iacute;nh chất th&uacute; vị. V&iacute; dụ với số 23, số đảo ngược của n&oacute; l&agrave; 32. Hai số n&agrave;y c&oacute; ước chung lớn nhất l&agrave; 1. Những số như thế được gọi l&agrave; số th&acirc;n thiện, tức l&agrave; số 23 được gọi l&agrave; số th&acirc;n thiện, số 32 cũng được gọi l&agrave; số th&acirc;n thiện.</p>\n<p>H&atilde;y nhập v&agrave;o 2 số nguy&ecirc;n a,b (10&le;a&le;b&le;30000). H&atilde;y đếm xem trong khoảng từ a đến b (kể cả a v&agrave; b) c&oacute; bao nhi&ecirc;u số th&acirc;n thiện.</p>\n<h3>Dữ liệu</h3>\n<p>Bao gồm một d&ograve;ng chứa 2 số a,b. Hai số được c&aacute;ch nhau bằng một khoảng trắng</p>\n<h3>Kết quả</h3>\n<p>Bao gồm một d&ograve;ng l&agrave; kết quả của b&agrave;i to&aacute;n.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n20 30\t\t\n\n<strong>Kết quả</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e56b514b-25fd-4af5-89ff-893b610022fe",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKNUMFRE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkonearc-mang-may-tinh",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKONEARC - Mạng máy tính",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKONEARC - Mạng m&aacute;y t&iacute;nh</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Một hệ thống n m&aacute;y t&iacute;nh (c&aacute;c m&aacute;y t&iacute;nh được đ&aacute;nh số từ 1 đến n) được nối lại th&agrave;nh một mạng bởi m k&ecirc;nh nối, mỗi k&ecirc;nh nối hai m&aacute;y n&agrave;o đ&oacute; v&agrave; cho ph&eacute;p ta truyền tin một chiều từ m&aacute;y n&agrave;y đến m&aacute;y kia. Giả sử s v&agrave; t l&agrave; 2 m&aacute;y t&iacute;nh trong mạng. Ta gọi đường truyền từ m&aacute;y s đến m&aacute;y t l&agrave; một d&atilde;y c&aacute;c m&aacute;y t&iacute;nh v&agrave; c&aacute;c k&ecirc;nh nối ch&uacute;ng c&oacute; dạng:</p>\n<p>s = u<sub>1</sub>, e<sub>1</sub>, u<sub>2</sub>, ..., u<sub>i</sub>, e<sub>i</sub>, u<sub>i+1</sub>, ..., u<sub>k-1</sub>, e<sub>k-1</sub>, u<sub>k</sub>&nbsp;= t</p>\n<p>trong đ&oacute; u<sub>1</sub>, u<sub>2</sub>, ..., u<sub>k</sub>&nbsp;l&agrave; c&aacute;c m&aacute;y t&iacute;nh trong mạng, e<sub>i</sub>&nbsp;- k&ecirc;nh truyền tin từ m&aacute;y u<sub>i</sub>&nbsp;đến m&aacute;y u<sub>i+1</sub>. (i = 1, 2,... , k-1).</p>\n<p>Mạng m&aacute;y t&iacute;nh được gọi l&agrave; th&ocirc;ng suốt nếu như đối với hai m&aacute;y u, v bất kỳ ta lu&ocirc;n c&oacute; đường truyền tin từ u đến v v&agrave; đường truyền tin từ v đến u. Mạng m&aacute;y t&iacute;nh được gọi l&agrave; hầu như th&ocirc;ng suốt nếu đối với hai m&aacute;y u, v bất kỳ, hoặc l&agrave; c&oacute; đường truyền từ u đến v, hoặc l&agrave; c&oacute; đường truyền từ v đến u.</p>\n<p>Biết rằng mạng m&aacute;y t&iacute;nh đ&atilde; cho l&agrave; hầu như th&ocirc;ng suốt nhưng kh&ocirc;ng th&ocirc;ng suốt.</p>\n<p>Y&ecirc;u cầu: h&atilde;y x&aacute;c định xem c&oacute; thể bổ sung đ&uacute;ng một k&ecirc;nh truyền tin để biến mạng đ&atilde; cho trở th&agrave;nh th&ocirc;ng suốt được kh&ocirc;ng?</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi 2 số nguy&ecirc;n n v&agrave; m.</li>\n<li>D&ograve;ng thứ i trong số m d&ograve;ng tiếp theo m&ocirc; tả k&ecirc;nh nối thứ i bao gồm 2 số nguy&ecirc;n dương u<sub>i</sub>&nbsp;v&agrave; v<sub>i</sub>&nbsp;cho biết k&ecirc;nh nối thứ i cho ph&eacute;p truyền tin từ m&aacute;y u<sub>i</sub>&nbsp;đến m&aacute;y v<sub>i</sub>, i=1,2,...,m.</li>\n</ul>\n<p>C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<h3>Kết qủa</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi 'YES' nếu c&acirc;u trả lời l&agrave; khẳng định, ghi 'NO' nếu c&acirc;u trả lời l&agrave; phủ định.</li>\n<li>Nếu c&acirc;u trả lời l&agrave; khẳng định th&igrave; d&ograve;ng thứ hai ghi hai số nguy&ecirc;n dương u, v c&aacute;ch nhau bởi dấu c&aacute;ch cho biết cần bổ sung k&ecirc;nh truyền tin từ m&aacute;y u đến m&aacute;y v để biến mạng th&agrave;nh th&ocirc;ng suốt.</li>\n</ul>\n<h3>Hạn chế</h3>\n<p>Trong tất cả c&aacute;c test, n &le; 2000, m &le; 30000.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n3 2\n1 2\n2 3\n\n<strong>Kết qủa</strong>\nYES\n3 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cca0edf2-59d3-496f-b4a0-0ba948d2f769",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKONEARC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkpalin-chuoi-doi-xung",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKPALIN - Chuỗi đối xứng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKPALIN - Chuỗi đối xứng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Một chuỗi được gọi l&agrave; đối xứng (palindrome) nếu như khi đọc chuỗi n&agrave;y từ phải sang tr&aacute;i cũng thu được chuỗi ban đầu.</p>\n<p>Y&ecirc;u cầu: t&igrave;m một chuỗi con đối xứng d&agrave;i nhất của một chuỗi s cho trước. Chuỗi con l&agrave; chuỗi thu được khi x&oacute;a đi một số k&yacute; tự từ chuỗi ban đầu.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<p>Gồm một d&ograve;ng duy nhất chứa chuỗi s, chỉ gồm những chữ c&aacute;i in thường.</p>\n<h3>Kết qủa</h3>\n<p>Gồm một d&ograve;ng duy nhất l&agrave; một x&acirc;u con đối xứng d&agrave;i nhất của x&acirc;u s. Nếu c&oacute; nhiều kết quả, chỉ cần in ra một kết quả bất kỳ.</p>\n<h3>Giới hạn</h3>\n<p>Chuỗi s c&oacute; độ d&agrave;i kh&ocirc;ng vượt qu&aacute; 2000.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\nlmevxeyzl\n\n<strong>Kết qủa</strong>\nlevel</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/68376c61-062d-4732-a3b0-e5ebaad17fd3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKPALIN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkpath-duong-di-tren-luoi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKPATH - Đường đi trên lưới",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKPATH - Đường đi tr&ecirc;n lưới</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một lưới &ocirc; vu&ocirc;ng gồm m d&ograve;ng v&agrave; n cột. C&aacute;c d&ograve;ng được đ&aacute;nh số từ 1 đến m từ tr&ecirc;n xuống dưới, c&aacute;c cột được đ&aacute;nh số từ 1 đến n từ tr&aacute;i qua phải. &Ocirc; nằm ở vị tr&iacute; d&ograve;ng i v&agrave; cột j của lưới được gọi l&agrave; &ocirc; (i, j) v&agrave; khi đ&oacute;, i được gọi l&agrave; tọa độ d&ograve;ng c&ograve;n j được gọi l&agrave; tọa độ cột của &ocirc; n&agrave;y. Tr&ecirc;n &ocirc; (i, j) của lưới ghi số nguy&ecirc;n dương a<sub>ij</sub>, i = 1, 2, &hellip;, m; j = 1, 2, &hellip;, n. Tr&ecirc;n lưới đ&atilde; cho, từ &ocirc; (i, j) ta c&oacute; thể di chuyển đến &ocirc; (p, q) nếu c&aacute;c điều kiện sau đ&acirc;y được thỏa m&atilde;n:</p>\n<ul>\n<li>j &lt; n; i &le; p; j &le; q v&agrave; i + j &lt; p + q;</li>\n<li>a<sub>ij</sub>&nbsp;v&agrave; a<sub>pq</sub>&nbsp;c&oacute; ước số chung lớn hơn 1.</li>\n</ul>\n<p>Ta gọi một c&aacute;ch di chuyển từ m&eacute;p tr&aacute;i sang m&eacute;p phải của lưới l&agrave; c&aacute;ch di chuyển bắt đầu từ một &ocirc; c&oacute; tọa độ cột bằng 1 qua c&aacute;c &ocirc; của lưới theo qui tắc di chuyển đ&atilde; n&ecirc;u v&agrave; kết th&uacute;c ở một &ocirc; c&oacute; tọa độ cột bằng n.</p>\n<p>Y&ecirc;u cầu: T&iacute;nh số c&aacute;ch di chuyển từ m&eacute;p tr&aacute;i lưới sang m&eacute;p phải lưới.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi 2 số nguy&ecirc;n dương m, n.</li>\n<li>D&ograve;ng thứ i trong số m d&ograve;ng tiếp theo ghi n số nguy&ecirc;n dương a<sub>i1</sub>, a<sub>i2</sub>, &hellip;, a<sub>in</sub>&nbsp;l&agrave; c&aacute;c số tr&ecirc;n d&ograve;ng thứ i của lưới, i = 1, 2, &hellip;, m.</li>\n</ul>\n<p>Hai số li&ecirc;n tiếp tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch bởi &iacute;t nhất một dấu c&aacute;ch.</p>\n<h3>Kết qủa</h3>\n<p>Ghi ra 1 số nguy&ecirc;n l&agrave; phần dư của số lượng c&aacute;ch di chuyển t&igrave;m được cho 10<sup>9</sup>.</p>\n<h3>Hạn chế</h3>\n<p>Trong tất cả c&aacute;c test: 1 &lt; m, n &le; 100; a<sub>ij</sub>&nbsp;&le; 30000, i=1,2,&hellip;,m;j=1,2,&hellip;,n. C&oacute; 50% số lượng test với m, n &le; 50.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n2 2\n2 4\n6 8\n\n<strong>Kết qủa</strong>\n4\n\n<strong>Dữ liệu mẫu</strong>\n2 2\n2 5\n6 7\n\n<strong>Kết qủa</strong>\n0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5ae66c3a-c62f-44fe-b104-a1f6aa96d1a2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKPATH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkpolice-police",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKPOLICE - Police",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKPOLICE - Police</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Để truy bắt tội phạm, cảnh s&aacute;t x&acirc;y dựng một hệ thống m&aacute;y t&iacute;nh mới. Bản đồ khu vực bao gồm N th&agrave;nh phố v&agrave; E đường nối 2 chiều. C&aacute;c th&agrave;nh phố được đ&aacute;nh số từ 1 đến N.</p>\n<p>Cảnh s&aacute;t muốn bắt c&aacute;c tội phạm di chuyển từ th&agrave;nh phố n&agrave;y đến th&agrave;nh phố kh&aacute;c. C&aacute;c điều tra vi&ecirc;n, theo d&otilde;i bản đồ, phải x&aacute;c định vị tr&iacute; thiết lập trạm g&aacute;c. Hệ thống m&aacute;y t&iacute;nh mới phải trả lời được 2 loại truy vấn sau:</p>\n<ul>\n<li>1. Đối với hai th&agrave;nh phố A, B v&agrave; một đường nối giữa hai th&agrave;nh phố G<sub>1</sub>, G<sub>2</sub>, hỏi tội phạm c&oacute; thể di chuyển từ A đến B nếu đường nối n&agrave;y bị chặn (nghĩa l&agrave; t&ecirc;n tội phạm kh&ocirc;ng thể sử dụng con đường n&agrave;y) kh&ocirc;ng?</li>\n<li>2. Đối với 3 th&agrave;nh phố A, B, C, hỏi tội phạm c&oacute; thể di chuyển từ A đến B nếu như to&agrave;n bộ th&agrave;nh phố C bị kiểm so&aacute;t (nghĩa l&agrave; t&ecirc;n tội phạm kh&ocirc;ng thể đi v&agrave;o th&agrave;nh phố n&agrave;y) kh&ocirc;ng?</li>\n</ul>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 2 số nguy&ecirc;n N v&agrave; E ( 2 &le; N &le; 100 000, 1 &le; E &le; 500 000), số th&agrave;nh phố v&agrave; số đường nối.</li>\n<li>Mỗi d&ograve;ng trong số E d&ograve;ng tiếp theo chứa 2 số nguy&ecirc;n ph&acirc;n biệt thuộc phạm vi [1, N] - cho biết nh&atilde;n của hai th&agrave;nh phố nối với nhau bởi một con đường. Giữa hai th&agrave;nh phố c&oacute; nhiều nhất một đường nối.</li>\n<li>D&ograve;ng tiếp theo chứa số nguy&ecirc;n Q (1 &le; Q &le; 300 000), số truy vấn được thử nghiệm tr&ecirc;n hệ thống.</li>\n<li>Mỗi d&ograve;ng trong Q d&ograve;ng tiếp theo chứa 4 hoặc 5 số nguy&ecirc;n. Số đầu ti&ecirc;n cho biết loại truy vấn - 1 hoặc 2.\n<ul>\n<li>Nếu loại truy vấn l&agrave; 1, tiếp theo tr&ecirc;n c&ugrave;ng d&ograve;ng l&agrave; 4 số nguy&ecirc;n A, B, G<sub>1</sub>, G<sub>2</sub>&nbsp;với &yacute; nghĩa như đ&atilde; m&ocirc; tả. A kh&aacute;c B; G<sub>1</sub>, G<sub>2</sub>&nbsp;m&ocirc; tả một con đường c&oacute; sẵn.</li>\n<li>Nếu loại truy vấn l&agrave; 2, tiếp theo tr&ecirc;n c&ugrave;ng d&ograve;ng l&agrave; 3 số nguy&ecirc;n A, B, C với &yacute; nghĩa như đ&atilde; m&ocirc; tả. A, B, C đ&ocirc;i một kh&aacute;c nhau.</li>\n</ul>\n</li>\n</ul>\n<p>Dữ liệu được cho sao cho ban đầu lu&ocirc;n c&oacute; c&aacute;ch di chuyển giữa hai th&agrave;nh phố bất kỳ.</p>\n<h3>Kết qủa</h3>\n<p>Gồm Q d&ograve;ng, mỗi d&ograve;ng chứa c&acirc;u trả lời cho một truy vấn. Nếu c&acirc;u trả lời l&agrave; khẳng định, in ra \"yes\". Nếu c&acirc;u trả lời l&agrave; phủ định, in ra \"no\".</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n13 15\n1 2\n2 3\n3 5\n2 4\n4 6\n2 6\n1 4\n1 7\n7 8\n7 9\n7 10\n8 11\n8 12\n9 12\n12 13\n5\n1 5 13 1 2\n1 6 2 1 4\n1 13 6 7 8\n2 13 6 7\n2 13 6 8\n\n<strong>Kết qủa</strong>\nyes\nyes\nyes\nno\nyes</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/68f99ad1-1f16-4356-95a5-6ac48af194a6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKPOLICE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkrez-hoi-truong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKREZ - Hội trường",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKREZ - Hội trường</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>Nh&agrave; trường c&oacute; một ph&ograve;ng hội trường. C&oacute; những y&ecirc;u cầu muốn sử dụng ph&ograve;ng hội trường n&agrave;y, mỗi y&ecirc;u cầu cho biết thời điểm bắt đầu v&agrave; thời điểm kết th&uacute;c. Nh&agrave; trường c&oacute; thể chấp nhận hoặc từ chối đối với một y&ecirc;u cầu.</p>\n<p>Y&ecirc;u cầu: h&atilde;y gi&uacute;p nh&agrave; trường chọn c&aacute;c y&ecirc;u cầu sử dụng hội trường sao cho tổng thời gian hội trường được sử dụng l&agrave; lớn nhất.</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n dương n (n &le; 10000), số y&ecirc;u cầu.</p>\n<p>Mỗi d&ograve;ng trong số n d&ograve;ng tiếp theo chứa 2 số nguy&ecirc;n dương p v&agrave; k (0 &le; p &lt; k &le; 30000), m&ocirc; tả một y&ecirc;u cầu bắt đầu tại thời điểm p v&agrave; kết th&uacute;c tại thời điểm k.</p>\n<h3>Kết qủa</h3>\n<p>Gồm một d&ograve;ng duy nhất l&agrave; tổng thời gian lớn nhất m&agrave; hội trường được sử dụng</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n12\n1 2\n3 5\n0 4\n6 8\n7 13\n4 6\n9 10\n9 12\n11 14\n15 19\n14 16\n18 20\n\n<strong>Kết qủa</strong>\n16</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1402cdd3-5d00-4b66-aa81-bd46c6bbe8cb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKREZ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkseq-day-so",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKSEQ - Dãy số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKSEQ - D&atilde;y số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cho d&atilde;y số nguy&ecirc;n a1, a2, ..., an (1&le; n&le; 100000), mỗi số kh&ocirc;ng vượt q&uacute;a 10000. D&atilde;y số n&agrave;y được viết tr&ecirc;n một v&ograve;ng tr&ograve;n. Nghĩa l&agrave;, khi cắt v&ograve;ng tr&ograve;n tại vị tr&iacute; j, ta thu được:</p>\n<p>aj, aj+1,..., an, a1, a2, ..., aj&ndash;1</p>\n<p>Vị tr&iacute; j được gọi l&agrave; vị tr&iacute; tốt, nếu c&aacute;c điều kiện sau đ&acirc;y được thỏa m&atilde;n:</p>\n<ul>\n<li>aj &gt; 0</li>\n<li>aj + aj+1 &gt; 0</li>\n<li>....</li>\n<li>aj + aj+1 + ... + an &gt; 0</li>\n<li>aj + aj+1 + ... + an + a1 &gt; 0</li>\n<li>...</li>\n<li>aj + aj+1 + ... + an + a1 + a2 + ... + aj─2 &gt; 0</li>\n<li>aj + aj+1 + ... + an + a1 + a2 + ... + aj─2 + aj─1 &gt; 0</li>\n</ul>\n<p>Y&ecirc;u cầu: h&atilde;y đếm số vị tr&iacute; tốt.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n n.</li>\n<li>D&ograve;ng thứ 2 chứa d&atilde;y số a1, a2,...,an.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>In ra 1 số nguy&ecirc;n duy nhất l&agrave; số vị tr&iacute; tốt.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n5\n0 1 -2 10 3\n\n<strong>Kết qủa</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/32397db2-09d5-42a1-8800-8c46122b1866",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92b9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nksgame-voi08-tro-choi-voi-day-so",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKSGAME - VOI08 Trò chơi với dãy số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKSGAME - VOI08 Tr&ograve; chơi với d&atilde;y số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Hai bạn học sinh trong l&uacute;c nh&agrave;n rỗi nghĩ ra tr&ograve; chơi sau đ&acirc;y. Mỗi bạn chọn trước một d&atilde;y số gồm n số nguy&ecirc;n. Giả sử d&atilde;y số m&agrave; bạn thứ nhất chọn l&agrave;:</p>\n<p><em>b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>n</sub></em></p>\n<p>c&ograve;n d&atilde;y số m&agrave; bạn thứ hai chọn l&agrave;</p>\n<p><em>c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>n</sub></em></p>\n<p>Mỗi lượt chơi mỗi bạn đưa ra một số hạng trong d&atilde;y số của m&igrave;nh. Nếu bạn thứ nhất đưa ra số hạng b<sub>i</sub>&nbsp;(1 &le; i &le; n), c&ograve;n bạn thứ hai đưa ra số hạng c<sub>j</sub>&nbsp;(1 &le; j &le; n) th&igrave; gi&aacute; của lượt chơi đ&oacute; sẽ l&agrave; |b<sub>i</sub>+c<sub>j</sub>|.</p>\n<p>V&iacute; dụ: Giả sử d&atilde;y số bạn thứ nhất chọn l&agrave; 1, -2; c&ograve;n d&atilde;y số m&agrave; bạn thứ hai chọn l&agrave; 2, 3. Khi đ&oacute; c&aacute;c khả năng c&oacute; thể của một lượt chơi l&agrave; (1, 2), (1, 3), (-2, 2), (-2, 3). Như vậy, gi&aacute; nhỏ nhất của một lượt chơi trong số c&aacute;c lượt chơi c&oacute; thể l&agrave; 0 tương ứng với gi&aacute; của lượt chơi (-2, 2).</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>H&atilde;y x&aacute;c định gi&aacute; nhỏ nhất của một lượt chơi trong số c&aacute;c lượt chơi c&oacute; thể.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n dương n (n &le; 10<sup>5</sup>)</li>\n<li>D&ograve;ng thứ hai chứa d&atilde;y số nguy&ecirc;n b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>n</sub>&nbsp;(|b<sub>i</sub>| &le; 10<sup>9</sup>, i=1, 2, ..., n)</li>\n<li>D&ograve;ng thứ hai chứa d&atilde;y số nguy&ecirc;n c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>n</sub>&nbsp;(|c<sub>i</sub>| &le; 10<sup>9</sup>, i=1, 2, ..., n)</li>\n</ul>\n<p>Hai số li&ecirc;n tiếp tr&ecirc;n một d&ograve;ng được ghi c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<h3>Kết quả</h3>\n<p>Ghi ra gi&aacute; nhỏ nhất t&igrave;m được.</p>\n<h3>R&agrave;ng buộc</h3>\n<ul>\n<li>60% số tests ứng với 60% số điểm của b&agrave;i c&oacute; 1 &le; n &le; 1000.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n2\n1 -2\n2 3\n\n<strong>Kết qủa</strong>\n0</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/06fa33ff-fe9a-4d40-9e69-b5ad0ce1bc7e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKSGAME_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ba"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nktable-nktable",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKTABLE - NKTable",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKTABLE - NKTable</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho bảng m * n &ocirc;, mỗi &ocirc; c&oacute; 1 trong 3 số: 0, 1, 2:</p>\n<p>-&nbsp;&nbsp; 0, 1 : &ocirc; được ph&eacute;p đi v&agrave;o.</p>\n<p>-&nbsp;&nbsp; 2 : &ocirc; cấm, kh&ocirc;ng được đi v&agrave;o.</p>\n<p>&nbsp;</p>\n<p><strong>Y&ecirc;u cầu:</strong><strong>&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p>-&nbsp;Xuất ph&aacute;t từ &ocirc; (1, 1), chỉ d&ugrave;ng c&aacute;c ph&eacute;p di chuyển&nbsp;<strong>sang phải hoặc xuống dưới</strong>&nbsp;&ocirc; kề cạnh, h&atilde;y di chuyển đến &ocirc; (m; n) sao cho d&atilde;y nhị ph&acirc;n tạo th&agrave;nh từ c&aacute;c &ocirc; tr&ecirc;n đường đi l&agrave; số&nbsp;<strong>lớn nhất</strong>&nbsp;c&oacute; thể (trong hệ thập ph&acirc;n).</p>\n<p>-&nbsp;Dữ liệu đảm bảo lu&ocirc;n t&igrave;m được đường đi.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Giới hạn:</strong></p>\n<p>-&nbsp;&nbsp; 2 &lt;= m, n &lt;= 500</p>\n<p><br /><strong>Input:</strong><strong>&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p>- D&ograve;ng đầu ti&ecirc;n gồm 2 số m, n.</p>\n<p>- m d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm n số thuộc tập {0, 1, 2}. Số thứ j ở d&ograve;ng i biểu diễn &ocirc; (i, j) tr&ecirc;n bảng.</p>\n<p>- C&aacute;c số c&ugrave;ng d&ograve;ng trong input c&aacute;ch nhau một hoặc nhiều dấu c&aacute;ch.</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>-&nbsp;&nbsp; Một d&ograve;ng duy nhất l&agrave; chuỗi nhị ph&acirc;n c&oacute; gi&aacute; trị số ở hệ thập ph&acirc;n lớn nhất t&igrave;m được (c&aacute;c số in liền).</p>\n<p>&nbsp;</p>\n<p><strong>V&iacute; dụ:</strong><strong>&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p>Input :</p>\n<p>&nbsp;</p>\n<p>3 5</p>\n<p>&nbsp;</p>\n<p>0 1 2 0 2</p>\n<p>&nbsp;</p>\n<p>0 1 0 0 1</p>\n<p>&nbsp;</p>\n<p>1 2 1 2 1</p>\n<p>&nbsp;</p>\n<p>Output :</p>\n<p>&nbsp;</p>\n<p>0110011</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7f9ad89e-8981-47dd-bbd6-9da0026662ab",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKTABLE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92bb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkteam-team-selection",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKTEAM - Team Selection",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKTEAM - Team Selection</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>C&aacute;c trưởng đo&agrave;n đội tuyển tin học v&ugrave;ng Balkan muốn chọn ra những th&iacute; sinh mạnh nhất trong khu vực từ N th&iacute; sinh (3 &le; N &le; 100000). C&aacute;c trưởng đo&agrave;n tổ chức 3 kỳ thi, mỗi th&iacute; sinh sẽ tham dự cả 3. Biết rằng kh&ocirc;ng c&oacute; 2 th&iacute; sinh n&agrave;o c&oacute; c&ugrave;ng điểm số trong mỗi kỳ thi. Ta n&oacute;i th&iacute; sinh A&nbsp;<strong>giỏi hơn</strong>&nbsp;th&iacute; sinh B nếu A được xếp hạng trước B trong cả 3 kỳ thi. Một th&iacute; sinh A được gọi l&agrave;&nbsp;<strong>xuất sắc</strong>&nbsp;nếu như kh&ocirc;ng c&oacute; th&iacute; sinh n&agrave;o giỏi hơn A.</p>\n<p>Y&ecirc;u cầu: H&atilde;y gi&uacute;p c&aacute;c trưởng đo&agrave;n đếm số th&iacute; sinh xuất sắc.</p>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng thứ nhất chứa 1 số nguy&ecirc;n dương N.</li>\n<li>3 d&ograve;ng sau, mỗi d&ograve;ng chứa N số nguy&ecirc;n dương c&aacute;ch nhau bởi khoảng trắng, l&agrave; chỉ số của c&aacute;c th&iacute; sinh theo thứ tự xếp hạng từ cao đến thấp của kỳ thi tương ứng.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Gồm 1 số nguy&ecirc;n duy nhất cho biết số th&iacute; sinh xuất sắc.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu mẫu</strong>\n3 \n2 3 1\n3 1 2\n1 2 3\n\n<strong>Kết qủa</strong>\n3\n</pre>\n<p>Kh&ocirc;ng c&oacute; th&iacute; sinh n&agrave;o giỏi hơn th&iacute; sinh kh&aacute;c n&ecirc;n cả 3 th&iacute; sinh đều xuất sắc.</p>\n<pre><strong>Dữ liệu mẫu</strong>\n10 \n2 5 3 8 10 7 1 6 9 4\n1 2 3 4 5 6 7 8 9 10\n3 8 7 10 5 4 1 2 6 9\n\n<strong>Kết qủa</strong>\n4\n</pre>\n<p>Th&iacute; sinh 1, 2, 3, 5 l&agrave; những th&iacute; sinh xuất sắc.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1f860ab0-24fa-4f97-aade-780122fb947d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKTEAM_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92bc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nktick-xep-hang-mua-ve",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKTICK - Xếp hàng mua vé",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKTICK - Xếp h&agrave;ng mua v&eacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>C&oacute; N người sắp h&agrave;ng mua v&eacute; dự buổi ho&agrave; nhạc. Ta đ&aacute;nh số họ từ 1 đến N theo thứ tự đứng trong h&agrave;ng. Mỗi người cần mua một v&eacute;, song người b&aacute;n v&eacute; được ph&eacute;p b&aacute;n cho mỗi người tối đa hai v&eacute;. V&igrave; thế, một số người c&oacute; thể rời h&agrave;ng v&agrave; nhờ người đứng trước m&igrave;nh mua hộ v&eacute;. Biết t<sub>i</sub>&nbsp;l&agrave; thời gian cần thiết để người i mua xong v&eacute; cho m&igrave;nh. Nếu người i+1 rời khỏi h&agrave;ng v&agrave; nhờ người i mua hộ v&eacute; th&igrave; thời gian để người thứ i mua được v&eacute; cho cả hai người l&agrave; r<sub>i</sub>.</p>\n<p>Y&ecirc;u cầu: X&aacute;c định xem những người n&agrave;o cần rời khỏi h&agrave;ng v&agrave; nhờ người đứng trước mua hộ v&eacute; để tổng thời gian phục vụ b&aacute;n v&eacute; l&agrave; nhỏ nhất.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số N (1 &le; N &le; 60000).</li>\n<li>D&ograve;ng thứ 2 ghi N số nguy&ecirc;n dương t<sub>1</sub>, t<sub>2</sub>, ..., t<sub>N</sub>. (1 &le; t<sub>i</sub>&nbsp;&le; 30000)</li>\n<li>D&ograve;ng thứ ba ghi N-1 số nguy&ecirc;n dương r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>N-1</sub>. (1 &le; r<sub>i</sub>&nbsp;&le; 30000)</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>In ra tổng thời gian phục vụ nhỏ nhất.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n5\n2 5 7 8 4\n4 9 10 10 \n\n<strong>Kết qủa</strong>\n18\n\n<strong>Dữ liệu:</strong>\n4\n5 7 8 4\n50 50 50 \n\n<strong>Kết qủa</strong>\n24</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/289690e6-e566-48bb-b170-21f735c589e2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKTICK_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92bd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nktoss-tung-dong-xu",
  "tags": [],
  "level": "BEGINNER",
  "title": "NKTOSS - Tung đồng xu",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKTOSS - Tung đồng xu</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Ng&agrave;y xưa, c&aacute;ch đ&acirc;y đ&atilde; l&acirc;u lắm rồi, ở vương quốc Byteland tươi đẹp c&oacute; một n&agrave;ng c&ocirc;ng ch&uacute;a xinh đẹp tuyệt trần. Thật kh&ocirc;ng may, ch&iacute;nh v&igrave; sự xinh đẹp đ&oacute; đ&atilde; l&agrave;m ph&ugrave; thủy Astral đ&atilde; bắt l&agrave;m về l&agrave;m người hầu cho &ocirc;ng ta. Đức Vua v&ocirc; c&ugrave;ng hoang mang khi chuyện n&agrave;y xảy ra, &ocirc;ng kh&ocirc;ng biết phải l&agrave;m c&aacute;ch n&agrave;o để giải cứu con m&igrave;nh (&ocirc;ng kh&ocirc;ng thể mang qu&acirc;n đến đ&aacute;nh v&igrave; điều đ&oacute; l&agrave; v&ocirc; nghĩa). Tuy nhi&ecirc;n, t&ecirc;n ph&ugrave; thủy n&agrave;y lại rất sợ một c&acirc;u thần ch&uacute; được suy ra từ việc giải một b&agrave;i to&aacute;n cổ của Thần Sphinx. B&agrave;i to&aacute;n đ&oacute; c&oacute; thể được m&ocirc; tả một c&aacute;ch đơn giản như sau: &ldquo;Khi ta tung một đồng xu, ta sẽ nhận được mặt sấp hoặc ngửa. Nếu ta tung lần lượt N đồng xu th&igrave; c&oacute; bao nhi&ecirc;u trường hợp m&agrave; c&oacute; &iacute;t nhất K đồng xu li&ecirc;n tiếp c&ugrave;ng l&agrave; ngửa ?&rdquo; . Đức vua hứa sẽ thưởng rất hậu hĩnh v&agrave; gả c&ocirc;ng ch&uacute;a cho ai giải được b&agrave;i to&aacute;n n&agrave;y. Thực ra c&ocirc;ng ch&uacute;a v&agrave; anh ch&agrave;ng l&agrave;m vườn trong ho&agrave;ng cung đ&atilde; y&ecirc;u thương nhau từ l&acirc;u. Anh ch&agrave;ng giờ đ&acirc;y đang rất bối rối v&agrave; cần sự gi&uacute;p đỡ của bạn.</p>\n<h3>Dữ liệu</h3>\n<p>Một d&ograve;ng duy nhất ghi hai số N v&agrave; K.</p>\n<h3>Kết qủa</h3>\n<p>Một d&ograve;ng duy nhất ghi số trường hợp đếm được.</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>1 &le; K &le; N &le; 10000</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n4 2\n\n<strong>Kết qủa</strong>\n8\n\n<strong>Dữ liệu:</strong>\n4 3\n\n<strong>Kết qủa</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b3b57c79-7943-4f08-9ffe-fdcf8306d094",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKTOSS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92be"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nktree-cay-nhi-phan-tim-kiem",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NKTREE - Cây nhị phân tìm kiếm",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NKTREE - C&acirc;y nhị ph&acirc;n t&igrave;m kiếm</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>M&ocirc;̣t trong những c&acirc;́u trúc dữ li&ecirc;̣u n&ocirc;̉i ti&ecirc;́ng đ&ecirc;̉ lưu trữ dữ liệu là c&acirc;y nhị ph&acirc;n tìm ki&ecirc;́m. Mỗi n&uacute;t tr&ecirc;n c&acirc;y c&oacute; nhiều nhất l&agrave; hai n&uacute;t con v&agrave; nhiều nhất l&agrave; một n&uacute;t cha. C&aacute;c n&uacute;t con được chia th&agrave;nh hai loại: n&uacute;t con tr&aacute;i v&agrave; n&uacute;t con phải. Mỗi c&acirc;y t&igrave;m kiếm c&oacute; một n&uacute;t kh&ocirc;ng c&oacute; n&uacute;t cha gọi l&agrave; n&uacute;t gốc, v&agrave; c&oacute; &iacute;t nhất một n&uacute;t kh&ocirc;ng c&oacute; n&uacute;t con gọi l&agrave; n&uacute;t l&aacute;. Mỗi một n&uacute;t c&oacute; gắn một gi&aacute; trị n&agrave;o đ&oacute; thỏa điều kiện sau: Tại một n&uacute;t v bất kỳ t&acirc;́t cả các gi&aacute; trị thuộc c&acirc;y con trái với gốc v nhỏ hơn gi&aacute; trị tại n&uacute;t v, và t&acirc;́t cả các gi&aacute; trị ở c&aacute;c n&uacute;t thuộc c&acirc;y con b&ecirc;n phải với gốc v lớn hơn gi&aacute; trị tại nút v.</p>\n<p>Hình b&ecirc;n dưới m&ocirc; tả m&ocirc;̣t c&acirc;y nhị ph&acirc;n tìm ki&ecirc;́m trong đ&oacute; n&uacute;t c&oacute; gi&aacute; trị 5 l&agrave; gốc, c&aacute;c nút với gi&aacute; trị 2, 4 và 8 l&agrave; c&aacute;c n&uacute;t l&aacute;.</p>\n<p>Đường đi tr&ecirc;n c&acirc;y là dãy các gi&aacute; trị tại c&aacute;c n&uacute;t li&ecirc;n ti&ecirc;́p, trong đó m&ocirc;̃i n&uacute;t sau là n&uacute;t con trực tiếp của n&uacute;t trước đ&oacute;.</p>\n<p>Y&ecirc;u cầu: Cho m&ocirc;̣t dãy gồm c&aacute;c gi&aacute; trị đ&ocirc;i một kh&aacute;c nhau. H&atilde;y cho biết t&ocirc;̀n tại hay kh&ocirc;ng c&acirc;y tìm ki&ecirc;́m nhị ph&acirc;n, m&agrave; tr&ecirc;n đ&oacute; tồn tại một đường đi với d&atilde;y gi&aacute; trị tương ứng l&agrave; d&atilde;y đ&atilde; cho.</p>\n<p>Ví dụ, tồn tại c&acirc;y nhị ph&acirc;n t&igrave;m kiếm với dãy 5 1 3 2, c&ograve;n kh&ocirc;ng tồn tại c&acirc;y nhị ph&acirc;n t&igrave;m kiếm với d&atilde;y 5 2 3 1.</p>\n<h3>Dữ li&ecirc;̣u</h3>\n<p>Lần lượt liệt k&ecirc; c&aacute;c gi&aacute; trị của d&atilde;y đ&atilde; cho. Hai ph&acirc;n tử được ghi c&aacute;ch nhau bởi khoảng trắng hoặc dấu xuống d&ograve;ng. Số lượng phần tử của d&atilde;y kh&ocirc;ng vượt qu&aacute; 50 000 v&agrave; mỗi phần tử của d&atilde;y c&oacute; gi&aacute; trị tuyệt đối kh&ocirc;ng vượt qu&aacute; 2<sup>31</sup>.</p>\n<h3>Kết quả</h3>\n<p>Ghi ra từ &ldquo;YES&rdquo;, n&ecirc;́u tồn tại c&acirc;y, tương ứng d&atilde;y đ&atilde; cho hoặc từ &ldquo;NO&rdquo; trong trường hợp ngược lại.</p>\n<h3>Ví dụ</h3>\n<pre><strong>Dữ liệu</strong>\n5 1 3 2\t\n<strong>Kết quả</strong>\nYES\n\n<strong>Dữ liệu</strong>\n5 2 3 1\t\n<strong>Kết quả</strong>\nNO</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/456aeef1-b328-44d4-99f8-419032eab94c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKTREE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92bf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "note-gap-tien",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NOTE - Gấp tiền",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NOTE - Gấp tiền</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>LSM l&agrave; cố vấn cao cấp của HAOI 2008 v&agrave; được giao nhiệm vụ ra đề thi. Hạn nộp b&agrave;i đang đến gần m&agrave; LSM kh&ocirc;ng c&oacute; một &yacute; tưởng n&agrave;o. Thư k&iacute; Lola th&uacute;c giục ng&agrave;y đ&ecirc;m cộng th&ecirc;m khoản tiền bồi thường nếu kh&ocirc;ng ho&agrave;n th&agrave;nh c&ocirc;ng t&aacute;c đ&uacute;ng hạn l&agrave;m LSM hết sức lo lắng. Trong l&uacute;c tuyệt vọng, LSM v&ocirc; t&igrave;nh gập đ&ocirc;i li&ecirc;n tiếp tờ tiền 100$ trước mặt. Khi mở tờ tiền ra, trong tay LSM l&agrave; tờ giấy bạc c&oacute; c&aacute;c vết gấp l&ecirc;n xuống. Đột nhi&ecirc;n, một &yacute; tưởng l&oacute;e s&aacute;ng: nếu c&oacute; c&aacute;ch n&agrave;o đ&oacute; x&aacute;c định được nếp gấp thứ p t&iacute;nh từ tr&aacute;i sang phải của tờ tiền tiền l&agrave; l&ecirc;n hay xuống, th&igrave; đ&acirc;y sẽ l&agrave; một b&agrave;i to&aacute;n hay cho c&aacute;c th&iacute; sinh của HAOI 2008. H&atilde;y gi&uacute;p LSM tho&aacute;t khỏi t&igrave;nh thế kh&oacute; khăn n&agrave;y nh&eacute;!</p>\n<p>Tờ tiền c&oacute; h&igrave;nh dạng chữ nhật v&agrave; lu&ocirc;n được thực hiện sao cho m&eacute;p tr&aacute;i được gập đ&egrave; l&ecirc;n m&eacute;p phải. LSM thực hiện gấp như vậy f lần. Tuy nhi&ecirc;n trong thực tế, tới một l&uacute;c n&agrave;o đ&oacute; đồng tiền sẽ kh&ocirc;ng thể gấp được do qu&aacute; d&agrave;y, nhưng ch&uacute;ng ta bỏ qua thực tế n&agrave;y v&agrave; tờ tiền vẫn được gấp đ&ocirc;i ch&iacute;nh x&aacute;c sau f lần.</p>\n<a href=\"http://s37.photobucket.com/albums/e81/beo_chay_so/?action=view&amp;current=note.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://i37.photobucket.com/albums/e81/beo_chay_so/note.png\" alt=\"Photobucket\" border=\"0\" /></a>\n<h3>Dữ liệu</h3>\n<ul>\n<li>Gồm nhiều d&ograve;ng mỗi d&ograve;ng chứa đ&uacute;ng 2 số nguy&ecirc;n ngăn c&aacute;ch nhau bởi dấu c&aacute;ch f v&agrave; p tương ứng l&agrave; số lần gấp tờ tiền v&agrave; vị tr&iacute; nếp gấp cần x&aacute;c định. (1 &le; f &le; 31. p thỏa m&atilde;n kh&ocirc;ng vượt qu&aacute; số lượng nếp gấp được tạo ra sau f lần gấp)</li>\n<li>Dữ liệu được kết th&uacute;c bởi 2 số 0 v&agrave; kh&ocirc;ng y&ecirc;u cầu in ra kết quả cho 2 số n&agrave;y.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Với mỗi d&ograve;ng tương ứng với dữ liệu v&agrave;o, in ra một k&iacute; tự duy nhất ở mỗi d&ograve;ng: U cho nếp gấp l&ecirc;n tr&ecirc;n v&agrave; D cho nếp gấp xuống dưới.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n2 1\n2 2\n2 3\n0 0\t\n\n<strong>Kết quả</strong>\nU\nD\nD</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/59617579-299a-4846-af88-4abab16dc91f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NOTE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nttree-tong-trong-so-tren-cay",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NTTREE - Tổng trọng số trên cây",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NTTREE - Tổng trọng số tr&ecirc;n c&acirc;y</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cho một c&acirc;y n đỉnh được đ&aacute;nh số từ 0 đến n-1. H&atilde;y t&iacute;nh tổng khoảng c&aacute;ch giữa mọi cặp đỉnh tr&ecirc;n c&acirc;y.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n dương n (n&le;10000)</li>\n<li>n-1 d&ograve;ng tiếp theo mỗi d&ograve;ng ghi 3 số u,v,w thể hiện một cạnh của c&acirc;y c&oacute; 2 đỉnh l&agrave; u,v v&agrave; trọng số l&agrave; w</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một d&ograve;ng duy nhất ghi kết quả t&igrave;m được (kết quả thuộc phạm vi số nguy&ecirc;n 64-bit)</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2<br />0 1 1<br /><strong>Output:</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/686e42a7-cd9a-429b-9a62-66424faba4eb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NTTREE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "number-bien-doi-so",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "NUMBER - Biến đổi số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>NUMBER - Biến đổi số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho M m&aacute;y biến đổi số được đ&aacute;nh số từ 1 đến M v&agrave; 1 số nguy&ecirc;n dương N. Hoạt động của m&aacute;y i được x&aacute;c định bởi cặp số nguy&ecirc;n dương (ai,bi) (1&lt;=ai,bi&lt;=N). M&aacute;y nhận đầu v&agrave;o l&agrave; số nguy&ecirc;n dương ai v&agrave; trả lại ở đầu ra số nguy&ecirc;n dương bi.</p>\n<p>Ta n&oacute;i một số nguy&ecirc;n dương X c&oacute; thể biến đổi th&agrave;nh số nguy&ecirc;n dương Y nếu hoặc X=Y hoặc tồn tại d&atilde;y hữu hạn c&aacute;c số nguy&ecirc;n dương X= P1,P2,...,Pk =Y sao cho đối với 2 phần tử li&ecirc;n tiếp Pi v&agrave; Pi+1 bất kỳ trong d&atilde;y, lu&ocirc;n t&igrave;m được 1 trong số c&aacute;c m&aacute;y đ&atilde; cho để biến đổi Pi th&agrave;nh Pi+1</p>\n<p>Cho trước 1 số nguy&ecirc;n dương T (T&lt;=N). H&atilde;y bổ sung th&ecirc;m 1 số &iacute;t nhất c&aacute;c m&aacute;y biến đổi số để bất k&igrave; số nguy&ecirc;n dương n&agrave;o từ 1 đến N đều c&oacute; thể biến đổi th&agrave;nh T</p>\n<h3>Input</h3>\n<p>- D&ograve;ng 1: 3 số nguy&ecirc;n dương N, M, T (1&lt;=N,M,T&lt;=10^4)</p>\n<p>- M d&ograve;ng tiếp theo mỗi d&ograve;ng chứa 1 cặp số tương ứng với một m&aacute;y biến đổi số. C&aacute;c số tr&ecirc;n một d&ograve;ng c&aacute;ch nhau bởi 1 dấu c&aacute;ch</p>\n<h3>Output</h3>\n<p>Ghi ra 1 d&ograve;ng duy nhất chứa 1 số nguy&ecirc;n dương l&agrave; số lượng m&aacute;y biến đổi số cần th&ecirc;m</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 4 5\n1 3\n2 3\n4 5\n6 5\n\n<strong>Output:</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f5005dea-82fe-4a46-9252-ad53396256af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NUMBER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "one4ever-forever-alone-person",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ONE4EVER - Forever Alone Person",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>ONE4EVER - Forever Alone Person</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>D&ugrave; th&ocirc;ng minh, đẹp trai, học giỏi nhưng vẫn kh&ocirc;ng tho&aacute;t khỏi kiếp FA v&igrave; chỉ c&oacute; 8cm v&agrave; lười tắm, Kh&aacute;nh 3508 lại buồn b&atilde; trở về vnoi code lại từ đầu. Trong một ng&agrave;y ch&aacute;n như con gi&aacute;n, Kh&aacute;nh 3508 nhổ trộm b&ocirc;ng hướng dương nh&agrave; h&agrave;ng x&oacute;m v&agrave; ngồi &hellip; đếm c&aacute;nh hoa. Mỗi lần một c&aacute;nh hoa rụng xuống l&agrave; c&acirc;u n&oacute;i &ldquo;Tắm&rdquo;, &ldquo;Kh&ocirc;ng tắm&rdquo; lại vang l&ecirc;n. Đ&atilde; ba năm tr&ocirc;i qua Kh&aacute;nh 3508 vẫn chỉ ngồi đếm l&aacute; v&agrave; chưa tắm rồi đột nhi&ecirc;n anh ta đứng l&ecirc;n v&agrave; chạy về m&aacute;y t&iacute;nh : &ldquo;Đ&uacute;ng rồi số ngẫu nhi&ecirc;n!&rdquo;. H&oacute;a ra Kh&aacute;nh 3508 đ&atilde; nghĩ ra c&aacute;ch l&agrave;m mới m&agrave; kh&ocirc;ng phải nhổ trộm hoa + ngồi đếm số c&aacute;nh hoa. Ch&uacute;ng ta biết rằng số ngẫu nhi&ecirc;n được sinh ra bởi bộ ba số a,b,m theo quy tắc:</p>\n<p>+Số thứ nhất l&agrave; x<sub>1</sub>=b mod m</p>\n<p>+Số thứ k l&agrave; (a*x<sub>k-1</sub>+b) mod m với k&gt;1</p>\n<p>Kh&aacute;nh 3508 sẽ lấy số x<sub>k</sub>&nbsp;để so với lịch xem n&oacute; c&oacute; phải ng&agrave;y đẹp hay kh&ocirc;ng để quyết định tắm rửa. Tuy nhi&ecirc;n do th&iacute;ch chơi trội Kh&aacute;nh 3508 đ&atilde; để a,b,m,k rất lớn khiến m&aacute;y t&iacute;nh bị đơ. Bạn h&atilde;y gi&uacute;p Kh&aacute;nh t&iacute;nh x<sub>k</sub>&nbsp;thật nhanh để cậu ta c&oacute; thể tắm.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: Số nguy&ecirc;n T (1&le;T&le;10) l&agrave; số lượng test</li>\n<li>T d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm 4 số nguy&ecirc;n a,b,m,k (1&le;a,b,m,k&le;10<sup>15</sup>)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm T d&ograve;ng, mỗi d&ograve;ng in ra số x<sub>k</sub>&nbsp;tương ứng.<sub><br /></sub></li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3<br />1 1 1 1<br />2 5 100 6<br />1 8 777 6\n\n<strong>Output:</strong>\n0<br />15<br />48</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3bd9d653-6653-4230-bea2-35a3cb9b6f64",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ONE4EVER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "optcut-chat-cay",
  "tags": [],
  "level": "BEGINNER",
  "title": "OPTCUT - Chặt cây",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>OPTCUT - Chặt c&acirc;y</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Bạn cần chặt một thanh gỗ ra th&agrave;nh n đoạn, mỗi đoạn c&oacute; độ d&agrave;i a<sub>i</sub>. C&aacute;c đoạn được chặt phải c&oacute; độ d&agrave;i&nbsp;<strong>theo đ&uacute;ng thứ tự</strong>&nbsp;a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&nbsp;từ tr&aacute;i sang phải.</p>\n<p>Tại mỗi bước, bạn c&oacute; thể chặt một nh&aacute;t chia một thanh gỗ l&agrave;m hai, v&agrave; chi ph&iacute; cho nh&aacute;t chặt n&agrave;y bằng độ d&agrave;i của thanh gỗ trước khi chặt.</p>\n<p>Thứ tự chặt kh&aacute;c nhau sẽ cho ra tổng chi ph&iacute; kh&aacute;c nhau khi chặt thanh gỗ th&agrave;nh n đoạn y&ecirc;u cầu.</p>\n<p>V&iacute; dụ bạn cần chặt một thanh gỗ độ d&agrave;i 20 ra th&agrave;nh 4 đoạn độ d&agrave;i 3, 5, 2 v&agrave; 10 theo thứ tự.</p>\n<p>Khi chặt từ tr&aacute;i sang phải:</p>\n<p>20 chặt th&agrave;nh 3 v&agrave; 17, chi ph&iacute; 20.</p>\n<p>17 chặt th&agrave;nh 5 v&agrave; 12, chi ph&iacute; 17.</p>\n<p>12 chặt th&agrave;nh 2 v&agrave; 10, chi ph&iacute; 12.</p>\n<p>Tổng chi ph&iacute;: 49</p>\n<p>Khi chặt từ phải sang tr&aacute;i:</p>\n<p>20 chặt th&agrave;nh 10 v&agrave; 10, chi ph&iacute; 20.</p>\n<p>10 chặt th&agrave;nh 8 v&agrave; 2, chi ph&iacute; 10.</p>\n<p>8 chặt th&agrave;nh 3 v&agrave; 5, chi ph&iacute; 8.</p>\n<p>Tổng chi ph&iacute;: 38</p>\n<p>Bạn h&atilde;y t&igrave;m c&aacute;ch chặt c&oacute; tổng chi ph&iacute; nhỏ nhất.</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng 1: n (1 &le; n &le; 2000)</p>\n<p>D&ograve;ng 2: n số nguy&ecirc;n dương a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, biết rằng độ d&agrave;i của thanh gỗ a<sub>1</sub>+a<sub>2</sub>+...+a<sub>n</sub>&nbsp;&le; 500000</p>\n<h3>Kết quả</h3>\n<p>Một số nguy&ecirc;n duy nhất l&agrave; chi ph&iacute; nhỏ nhất t&igrave;m được.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n4\n3 5 2 10\n\n<strong>Kết quả</strong>\n37</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/51903803-5395-4663-b4e3-bfc55e16cbe0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "OPTCUT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "parigame-voi-2011-tro-choi-chan-le",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PARIGAME - VOI 2011 Trò chơi chẵn lẻ",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PARIGAME - VOI 2011 Tr&ograve; chơi chẵn lẻ</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Tr&ograve; chơi chẵn lẻ l&agrave; tr&ograve; chơi hai đối thủ được m&ocirc; tả như sau: Xuất ph&aacute;t từ bảng tr&ograve; chơi l&agrave; một bảng vu&ocirc;ng k&iacute;ch thước n x n gồm n d&ograve;ng v&agrave; n cột. C&aacute;c d&ograve;ng của bảng được đ&aacute;nh số từ 1 đến n, từ tr&ecirc;n xuống dưới. C&aacute;c cột của bảng được đ&aacute;nh số từ 1 đến n, từ tr&aacute;i sang phải. Tr&ecirc;n mỗi &ocirc; của bảnh ghi một số nguy&ecirc;n. Hai đối thủ lu&acirc;n phi&ecirc;n thực hiện nước đi. Đối thủ đến lượt chơi của m&igrave;nh được ph&eacute;p x&oacute;a d&ograve;ng cuối c&ugrave;ng nếu tổng c&aacute;c số tr&ecirc;n d&ograve;ng đ&oacute; l&agrave; số chẵn hoặc l&agrave; cột cuối c&ugrave;ng nếu tổng c&aacute;c số tr&ecirc;n cột đ&oacute; l&agrave; số chẵn.</p>\n<p>Đối thủ thắng cuộc l&agrave; người x&oacute;a được &ocirc; cuối c&ugrave;ng của bảng hoặc sau khi thực hiện nước đi của m&igrave;nh th&igrave; tổng c&aacute;c số tr&ecirc;n d&ograve;ng cuối c&ugrave;ng v&agrave; tổng c&aacute;c số tr&ecirc;n cột cuối c&ugrave;ng của bảng đều l&agrave; số lẻ.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Cho biết bảng số của tr&ograve; chơi, h&atilde;y x&aacute;c định xem người đi trước c&oacute; c&aacute;ch chơi gi&agrave;nh phần thắng hay kh&ocirc;ng?</p>\n<p><strong>Dữ liệu:</strong></p>\n<ul>\n<li>D&ograve;ng thứ nhất chứa số nguy&ecirc;n dương k l&agrave; số lượng bộ dữ liệu.</li>\n<li>Tiếp theo l&agrave; k nh&oacute;m d&ograve;ng, mỗi nh&oacute;m d&ograve;ng tương ứng với một bộ dữ liệu c&oacute; dạng:</li>\n</ul>\n<p>o&nbsp;&nbsp; D&ograve;ng thứ nhất chứa số nguy&ecirc;n dương n (n &lt;= 500).</p>\n<p>o&nbsp;&nbsp; D&ograve;ng thứ i trong số n d&ograve;ng tiếp theo chứa n số nguy&ecirc;n dương (mỗi số kh&ocirc;ng vượt qu&aacute; 10^9) l&agrave; c&aacute;c số tr&ecirc;n d&ograve;ng thứ i của bảng tr&ograve; chơi, i = 1, 2, &hellip;, n.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</p>\n<p><strong>Kết quả:</strong>&nbsp;Ghi ra k d&ograve;ng, mỗi d&ograve;ng l&agrave; kết quả tương ứng với một bộ dữ liệu theo thứ tự xuất hiện trong file dữ liệu v&agrave;o: ghi th&ocirc;ng b&aacute;o&nbsp;<strong>&ldquo;YES&rdquo;</strong>&nbsp;nếu người đi trước c&oacute; c&aacute;ch chơi gi&agrave;nh chiến thắng v&agrave;&nbsp;<strong>&ldquo;NO&rdquo;</strong>&nbsp; trong trường hợp ngược lại.</p>\n<p><strong>V&iacute; dụ:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"151\">\n<p>Dữ liệu</p>\n</td>\n<td valign=\"top\" width=\"142\">\n<p>Kết quả</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"151\">\n<p>2<br />3<br />1 2 2<br />1 2 3<br />2 3 1<br />4<br />2 2 2 2<br />2 2 2 2<br />2 2 2 2<br />2 2 2 2</p>\n</td>\n<td valign=\"top\" width=\"142\">\n<p>YES<br />NO</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>R&agrave;ng buộc:</strong>&nbsp;50% số test ứng với 50% số điểm của b&agrave;i c&oacute; n &lt;= 50.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1ee78d0e-a1c0-47cc-9fdd-bb12346dee04",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PARIGAME_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "patuljci-snow-white-and-the-n-dwarfs-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PATULJCI - Snow White and the N dwarfs",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PATULJCI - Snow White and the N dwarfs</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Snow White and the N dwarfs live in the forest. While the dwarfs mine away Snow White hangs&nbsp;around social networks.</p>\n<p>Each morning the dwarfs form a long line and go whistling away to the mine. Snow White runs around&nbsp;them and snaps pictures to upload onto her favorite social network.</p>\n<p>When dwarfs enter the mine, Snow White goes back to their house and goes through the pictures,&nbsp;selecting pretty ones. Each dwarf has a colored cap, and there are C different colors. A picture is pretty&nbsp;if more than half caps on it are of the same color. In other words, if there are K dwarfs on the picture,&nbsp;it is pretty if strictly more than K / 2 dwarfs have same colored caps.</p>\n<p>Write a program that will check for a set of M pictures if they are pretty, and what color is dominating&nbsp;if they are.</p>\n<h3><strong>Input</strong></h3>\n<p>First line contains two integers N and C (3 &le; N &le; 300000, 1 &le; C &le; 100000) number of dwarfs and&nbsp;number of colors.</p>\n<p>Second line contains N integers between 1 and C (inclusive), colors of dwarves hats, ordered the way&nbsp;they formed the line that morning.</p>\n<p>Third line contains M (1 &le; M &le; 100000), number of pictures.</p>\n<p>Next M lines contain two integers A and B (1 &le; A &le; B &le; N). Each line describes one picture. On it&nbsp;there are all dwarves starting from A-th all the way to the B-th.</p>\n<h3>Output</h3>\n<p>Output M lines. For each picture output &ldquo;no&rdquo; if Snow White doesn't think the picture is pretty, and&nbsp;&ldquo;yes X&rdquo;, where X is the color dominating on the picture, if she does.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10 3\n1 2 1 2 1 2 3 2 3 3\n8\n1 2\n1 3\n1 4\n1 5\n2 5\n2 6\n6 9\n7 10\n\n<strong>Output:</strong>\nno\nyes 1\nno\nyes 1\nno\nyes 2\nno\nyes 3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/36039de0-4c87-4ff6-a587-baad604ae52e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PATULJCI_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pbcdem-dem-day",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PBCDEM - Đếm dãy",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PBCDEM - Đếm d&atilde;y</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Đếm số d&atilde;y tăng dần(độ d&agrave;i d&atilde;y phải &gt;=2)c&oacute; c&aacute;c phần tử nguy&ecirc;n dương m&agrave; tổng đ&uacute;ng bằng n</p>\n<h3>Giới hạn</h3>\n<ul>\n<ul>n&lt;=4000</ul>\n</ul>\n<h3>Dữ liệu v&agrave;o</h3>\n<ul>\n<li>Ghi duy nhất số n</li>\n</ul>\n<h3>Dữ liệu ra</h3>\n<ul>\n<li>Ghi ra số c&aacute;ch</li>\n</ul>\n<h3>V&iacute; Dụ</h3>\n<pre><strong>Input:</strong>\n   5\n<strong>Output:</strong>\n   2</pre>\n<p>Giải th&iacute;ch: C&oacute; 2 d&atilde;y l&agrave; (1,4)v&agrave; (2,3)</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/53fb70f7-100f-44c7-a55e-e691fcbc8764",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PBCDEM_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "pbcpoint-noi-diem",
  "tags": [],
  "level": "EXPERT",
  "title": "PBCPOINT - Nối điểm",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PBCPOINT - Nối điểm</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Tr&ecirc;n mặt phẳng toạ độ x&eacute;t c&aacute;c điểm c&oacute; toạ độ nguy&ecirc;n. C&oacute; N điểm m&agrave;u đỏ. bnta2 bắt đầu tr&ograve; chơi như sau: với 2 điểm m&agrave;u đỏ c&ugrave;ng d&ograve;ng hay c&ugrave;ng cột, nối 2 điểm đ&oacute; bằng 1 đoạn thẳng, c&aacute;c điểm c&oacute; toạ độ nguy&ecirc;n nằm tr&ecirc;n đoạn thẳng đ&oacute; sẽ được t&ocirc; đỏ. bnta2 cứ l&agrave;m như vậy cho đến khi kh&ocirc;ng c&oacute; th&ecirc;m điểm đỏ n&agrave;o nữa. T&iacute;nh xem c&oacute; bao nhi&ecirc;u điểm đỏ khi kết th&uacute;c tr&ograve; chơi. Hai điểm được xem l&agrave; kh&aacute;c nhau nếu c&oacute; tọa độ kh&aacute;c nhau</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: chứa số nguy&ecirc;n dương N, N&lt;=10^5.</li>\n<li>D&ograve;ng thứ i trong N d&ograve;ng tiếp theo: chứa 2 số c&oacute; gi&aacute; trị tuyệt đối kh&ocirc;ng qu&aacute; 10^3 l&agrave; toạ độ của 1 điểm đỏ. (Ch&uacute; &yacute;: trong bộ test c&aacute;c gi&aacute; trị tọa độ của c&aacute;c điểm được cho c&oacute; thể bị tr&ugrave;ng nhau)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm 1 d&ograve;ng duy nhất l&agrave; số điểm đỏ cuối c&ugrave;ng.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input</strong><br />4 <br />0 2 <br />3 1 <br />1 4 <br />4 4 <br /><br /><strong>Output</strong><br />12</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f9f66526-af65-43b2-ad60-c4793c572173",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PBCPOINT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pbcseq-cac-doan-nguyen",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PBCSEQ - Các đoạn nguyên",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PBCSEQ - C&aacute;c đoạn nguy&ecirc;n</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Mirko c&oacute; một tập hợp c&aacute;c đoạn nguy&ecirc;n. Đầu ti&ecirc;n, anh ấy lấy ra 1 đoạn bất k&igrave;. Sau đ&oacute; thực hiện lấy c&aacute;c đoạn kh&aacute;c, sao cho: đoạn lấy ra nằm trong đoạn vừa được lấy trước n&oacute;. Mirko tiếp tục cho đến khi kh&ocirc;ng t&igrave;m được đoạn thoả m&atilde;n nữa.</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>T&igrave;m số đoạn lớn nhất c&oacute; thể lấy ra.</p>\n<h3>Dữ liệu</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n N, l&agrave; số đoạn nguy&ecirc;n trong tập hợp.</p>\n<p>D&ograve;ng thứ i trong số N d&ograve;ng sau, chứa 2 số nguy&ecirc;n A,B biểu thị cho đoạn i.</p>\n<h3>Kết quả</h3>\n<p>Một số duy nhất l&agrave; kết quả của b&agrave;i to&aacute;n.</p>\n<h3>Giới hạn</h3>\n<p>1 &lt;= N &lt;= 100000</p>\n<p>1 &lt;= A &lt; B &lt;= 1000000</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong></pre>\n<p>3</p>\n<p>1 6</p>\n<p>2 5</p>\n<p>3 4 <strong>Kết quả</strong></p>\n<p>3</p>\n<pre><strong>Dữ liệu</strong></pre>\n<p>6</p>\n<p>1 4</p>\n<p>1 5</p>\n<p>1 6</p>\n<p>1 7</p>\n<p>2 5</p>\n<p>3 5 <strong>Kết quả</strong></p>\n<p>5</p>\n<strong>Ch&uacute; &yacute;:</strong>&nbsp;O(N^2) ăn được 50% số test.</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f237c266-1099-4a0a-8333-2d107dd65448",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PBCSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92c9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pbcwater-tinh-toan-luong-nuoc",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PBCWATER - Tính toán lượng nước",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PBCWATER - T&iacute;nh to&aacute;n lượng nước</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nền phẳng của 1 c&ocirc;ng tr&igrave;nh x&acirc;y dựng được chia th&agrave;nh lưới &ocirc; vu&ocirc;ng đơn vị k&iacute;ch thước&nbsp; MxN &ocirc;. Tr&ecirc;n mỗi &ocirc; (i,j) của lưới, người ta dựng 1 cột b&ecirc; t&ocirc;ng h&igrave;nh hộp c&oacute; đ&aacute;y l&agrave; &ocirc; (i,j) v&agrave; chiều cao l&agrave; h[i,j] đơn vị. Sau khi dựng xong th&igrave; trời đổ mưa to v&agrave; đủ l&acirc;u. Nh&agrave; thầu x&acirc;y dựng muốn t&iacute;nh lượng nước đọng lại giữa c&aacute;c cột để c&oacute; kế hoạch thi c&ocirc;ng tiếp theo. Giả thiết, nước ko thẩm thấu qua c&aacute;c cột b&ecirc; t&ocirc;ng cũng như ko r&ograve; rỉ qua c&aacute;c đường gh&eacute;p giữa ch&uacute;ng.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nhiệm vụ của bạn l&agrave; gi&uacute;p nh&agrave; thầu t&iacute;nh to&aacute;n lượng nước đọng lại giữa c&aacute;c cột.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi 2 số nguy&ecirc;n dương M v&agrave; N</p>\n<p>D&ograve;ng thứ i trong M d&ograve;ng tiếp theo, ghi N số nguy&ecirc;n dương h[i,1],h[i,2]...h[i,N].</p>\n<h3>Output</h3>\n<p>1 d&ograve;ng duy nhất chứa số đơn vị khối nước đọng lại.</p>\n<p>&nbsp;</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />5 5<br />9 9 9 9 9<br />9 2 2 2 9<br />9 2 5 2 9<br />9 2 2 2 9<br />9 9 9 9 9<br /><br /><strong>Output:</strong><br />60<br /><br /><strong>Giới hạn:     </strong>1&lt;=M,N&lt;=100,1&lt;=H[i,j]&lt;=1000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/191a8c16-ac91-43b4-a80a-cee5a141c412",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PBCWATER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ca"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pcircle-vong-so-nguyen-to",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PCIRCLE - Vòng số nguyên tố",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PCIRCLE - V&ograve;ng số nguy&ecirc;n tố</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br /><br />\n<p>Một v&ograve;ng tr&ograve;n chứa 2*n v&ograve;ng tr&ograve;n nhỏ (Xem h&igrave;nh vẽ). C&aacute;c v&ograve;ng tr&ograve;n nhỏ được đ&aacute;nh số từ 1 đến 2*n theo chiều kim đồng hồ. Cần điền c&aacute;c số tự nhi&ecirc;n từ 1 đến 2*n mỗi số v&agrave;o một v&ograve;ng tr&ograve;n nhỏ sao cho tổng của hai số tr&ecirc;n hai v&ograve;ng tr&ograve;n nhỏ li&ecirc;n tiếp l&agrave; số nguy&ecirc;n tố. Số điền ở v&ograve;ng tr&ograve;n nhỏ 1 lu&ocirc;n l&agrave; số 1.</p>\n<center><img src=\"http://vn.spoj.com/content/pcircle.gif\" alt=\"clock3.jpg\" width=\"211\" height=\"218\" /></center>\n<h3>Input</h3>\n<p>Số nguy&ecirc;n dương n ( 1 &lt; n &lt; 10 ) .</p>\n<h3>Output</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi ra số k l&agrave; số c&aacute;ch t&igrave;m được.<br />K d&ograve;ng tiếp theo mỗi d&ograve;ng ghi ra 1 c&aacute;ch điền c&aacute;c số v&agrave;o c&aacute;c v&ograve;ng tr&ograve;n nhỏ. C&aacute;ch điền n&agrave;o c&oacute; thứ tự từ điển nhỏ hơn th&igrave; xếp trước. Nếu K &gt; 10000 th&igrave; chỉ cần ghi ra 10000 c&aacute;ch đầu ti&ecirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n4\n\n<strong>Output:</strong>\n4\n1 2 3 8 5 6 7 4\n1 2 5 8 3 4 7 6\n1 4 7 6 5 8 3 2\n1 6 7 4 3 8 5 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1a5bfe67-8b26-492f-b272-6b51d122592a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PCIRCLE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92cb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pizzaloc-pizza-location-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PIZZALOC - Pizza Location",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PIZZALOC - Pizza Location</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Picko mu&ocirc;́n mở m&ocirc;̣t s&ocirc;́ cửa h&agrave;ng pizza tại 1 s&ocirc;́ địa đi&ecirc;̉m. B&aacute;nh pizza sẽ cung c&acirc;́p cho mọi kh&aacute;ch h&agrave;ng nằm trong h&igrave;nh tr&ograve;n b&aacute;n k&iacute;nh R với t&acirc;m l&agrave; c&aacute;c địa đi&ecirc;̉m được chọn.</p>\n<p>X&aacute;c định s&ocirc;́ kh&aacute;ch h&agrave;ng lớn nh&acirc;́t c&oacute; th&ecirc;̉ phục vụ.</p>\n<p>&nbsp;</p>\n<h3>Input</h3>\n<p>&nbsp;</p>\n<p>D&ograve;ng đ&acirc;̀u l&agrave; hai s&ocirc;́ K, R : s&ocirc;́ nh&agrave; h&agrave;ng c&oacute; th&ecirc;̉ được mở v&agrave; b&aacute;n k&iacute;nh phục vụ của m&ocirc;̃i nh&agrave; h&agrave;ng,1 &le; K &le; 10, 1 &le; R &le; 500.</p>\n<p>D&ograve;ng thứ hai l&agrave; M, s&ocirc;́ địa đi&ecirc;̉m c&oacute; th&ecirc;̉ đặt nh&agrave; h&agrave;ng, K &le; M &le; 20.</p>\n<p>M d&ograve;ng ti&ecirc;́p theo, m&ocirc;̃i d&ograve;ng l&agrave; 2 s&ocirc;́ nguy&ecirc;n X v&agrave; Y, -1000 &le; X,Y &le; 1000.</p>\n<p>D&ograve;ng ti&ecirc;́p theo l&agrave; N, s&ocirc;́ khu nh&agrave;, 1 &le; N &le; 100.</p>\n<p>M&ocirc;̃i d&ograve;ng trong N d&ograve;ng ti&ecirc;́p theo l&agrave; 3 s&ocirc;́ nguy&ecirc;n X, Y , S, l&agrave; tọa đ&ocirc;̣ v&agrave; s&ocirc;́ người ở khu nh&agrave; đ&oacute;, -1000 &le; X,Y &le; 1000, 1 &le; S &le; 100.</p>\n<p>Khu nh&agrave; nằm trong b&aacute;n k&iacute;nh của nh&agrave; h&agrave;ng n&ecirc;́u khoảng c&aacute;ch giữa ch&uacute;ng &lt;= R. Kh&ocirc;ng c&oacute; 2 khu nh&agrave; tại c&ugrave;ng 1 địa đi&ecirc;̉m.</p>\n<p>&nbsp;</p>\n<h3>Output</h3>\n<p>&nbsp;</p>\n<p>Ghi ra s&ocirc;́ người t&ocirc;́i đa c&oacute; th&ecirc;̉ được phục vụ.</p>\n<p>&nbsp;</p>\n<h3>Sample</h3>\n<pre>pizza.in \n \n2 2 \n3 \n1 0 \n4 0 \n7 0 \n4 \n0 0 1 \n3 0 7 \n5 0 9 \n8 0 1 \n \npizza.out \n \n18 \n\npizza.in \n \n2 2 \n3 \n-2 0 \n0 1 \n3 0 \n8 \n-3 1 1 \n-3 0 1 \n-3 -1 1 \n-2 -1 1 \n0 0 3 \n0 2 1 \n2 1 3 \n4 0 2 \n \npizza.out \n \n12 \n\npizza.in \n \n3 3 \n5 \n0 0 \n1 6 \n2 3 \n6 6 \n7 2 \n8 \n0 1 2 \n0 5 3 \n0 6 1 \n1 0 1 \n3 2 3 \n3 6 2 \n6 2 4 \n8 6 3 \n \npizza.out \n \n17 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/12ae48ce-53e2-487f-9ebb-837f9c582f7a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PIZZALOC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92cc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pnumber-tim-so-nguyen-to",
  "tags": [],
  "level": "BEGINNER",
  "title": "PNUMBER - Tìm số nguyên tố",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PNUMBER - T&igrave;m số nguy&ecirc;n tố</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>H&atilde;y t&igrave;m tất cả c&aacute;c số nguy&ecirc;n tố trong đoạn [A,B] .</p>\n<h3>Input</h3>\n<p>Gồm 2 số nguy&ecirc;n A v&agrave; B c&aacute;ch nhau bởi 1 dấu c&aacute;ch ( 1 &le; A &le; B &le; 200000 ) .</p>\n<h3>Output</h3>\n<p>Ghi ra tất cả c&aacute;c số nguy&ecirc;n tố trong khoảng [A,B]. Mỗi số tr&ecirc;n 1 d&ograve;ng .</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n1 10\n\n<strong>Output:</strong>\n2\n3\n5\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/30cf7129-bd7a-4711-99a7-7e90679c6524",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PNUMBER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92cd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "post-a-cong-b",
  "tags": [],
  "level": "BEGINNER",
  "title": "POST - A cộng B",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>POST - A cộng B</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho 2 số nguy&ecirc;n A v&agrave; B . H&atilde;y t&iacute;nh A + B .</p>\n<h3>Input</h3>\n<p>Gồm 1 d&ograve;ng chứa 2 số nguy&ecirc;n A v&agrave; B , c&aacute;ch bởi 1 dấu c&aacute;ch.</p>\n<h3>Output</h3>\n<p>Ghi ra tổng A+B .</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n3 4\n\n<strong>Output:</strong>\n7\n\n\n<strong>Gợi &yacute;:</strong>\nSử dụng to&aacute;n tử \"+\" .</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e5263b7f-7efa-4ac0-bed7-d4a632ad7d51",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "POST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ce"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "post3-ai-cong-nhanh-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "POST3 - Ai cộng nhanh nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>POST3 - Ai cộng nhanh nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cho 2 số nguy&ecirc;n A v&agrave; B . H&atilde;y t&iacute;nh A + B .</p>\n<h3>Input</h3>\n<p>Gồm 1 d&ograve;ng chứa 2 số nguy&ecirc;n A v&agrave; B , c&aacute;ch bởi 1 dấu c&aacute;ch.</p>\n<h3>Output</h3>\n<p>Ghi ra tổng A+B .</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n3 4\n\n<strong>Output:</strong>\n7\n\n\n<strong>Gợi &yacute;:</strong>\nSử dụng to&aacute;n tử \"+\" .\n</pre>\n<h3>Điểm</h3>\nĐ&acirc;y l&agrave; b&agrave;i v&iacute; dụ cho mục challenge. Điểm của bạn bằng m&atilde; nguồn chương tr&igrave;nh. Điểm c&agrave;ng thấp th&igrave; c&agrave;ng tốt.</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/97c1f2e0-4ec4-4ab6-bd8a-886e59e93dfd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "POST3_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92cf"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ptqmseq-day-so-vong-tron",
  "tags": [],
  "level": "BEGINNER",
  "title": "PTQMSEQ - Dãy số vòng tròn",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PTQMSEQ - D&atilde;y số v&ograve;ng tr&ograve;n</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Leaxtanh l&agrave; ch&aacute;u của nh&agrave; th&ocirc;ng th&aacute;i Anhxtanh hiện tại đang l&agrave;m 1 học sinh chuy&ecirc;n tin. Anh đ&atilde; đem l&ograve;ng y&ecirc;u mến c&ocirc; bạn chuy&ecirc;n to&aacute;n c&ugrave;ng kh&oacute;a từ l&acirc;u nhưng chưa được đ&aacute;p ứng. V&igrave; l&agrave; 1 học sinh chuy&ecirc;n to&aacute;n n&ecirc;n c&ocirc; n&agrave;ng muốn thử th&aacute;ch leaxtanh bằng một b&agrave;i to&aacute;n như sau :&nbsp;</p>\n<p>&nbsp; &nbsp;Tr&ecirc;n một v&ograve;ng tr&ograve;n người ta đ&aacute;nh dấu n vị tr&iacute;. C&aacute;c vị tr&iacute; được đ&aacute;nh số thứ tự từ 1 đến n theo chiều kim đồng hồ. Tại vị tr&iacute; i người ta ghi số nguy&ecirc;n a[i] (i=1..n). Cần t&igrave;m c&aacute;ch chọn ra d&atilde;y con độ d&agrave;i k li&ecirc;n tiếp ( 0&lt;k&lt;n) tr&ecirc;n=\"\" v&ograve;ng=\"\" tr&ograve;n=\"\" (=\"\" theo=\"\" chiều=\"\" kim=\"\" đồng=\"\" hồ=\"\" )=\"\" để=\"\" tổng=\"\" c&aacute;c=\"\" số=\"\" hạng=\"\" trong=\"\" d&atilde;y=\"\" con=\"\" n&agrave;y=\"\" l&agrave;=\"\" lớn=\"\" nhất.&lt;=\"\" p=\"\"&gt;&lt;/k&lt;n)&gt;</p>\n<p>C&aacute;c bạn h&atilde;y nể t&igrave;nh Anhxtanh gi&uacute;p Leaxtanh nh&eacute;.</p>\n<h3>Input</h3>\n<p>- D&ograve;ng đầu ti&ecirc;n ghi số n</p>\n<p>C&oacute; 2 kiểu input</p>\n<p>- Ghi ra c&aacute;c số a[i], mỗi số c&aacute;ch nhau 1 dấu c&aacute;ch.</p>\n<p>- Ghi ra c&aacute;c số a[i], mỗi số tr&ecirc;n 1 d&ograve;ng.</p>\n<h3>Output</h3>\n<p><strong>1 d&ograve;ng duy nhất l&agrave; tổng c&aacute;c số hạng của d&atilde;y t&igrave;m được.</strong></p>\n<p><strong>C&ograve;n lại kh&ocirc;ng in ra g&igrave;.</strong></p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7</pre>\n<pre>2 -4 1 -7 4 6 -1</pre>\n<pre><strong>Output:</strong>\n11</pre>\n<pre>Giới hạn |a[i]| &lt;=70000; n&lt;=1094782;  </pre>\n<pre>C&aacute;ch đọc hơi lạ nhưng cũng kh&ocirc;ng ảnh hưởng nhiều tới kết quả b&agrave;i to&aacute;n.</pre>\n<pre>C&aacute;c bạn n&ecirc;n đọc kĩ d&ograve;ng m&igrave;nh in đậm kh&ocirc;ng lại xảy ra sự việc đ&aacute;ng tiếc.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2eaca264-5c90-4967-a208-38bba038f6a9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PTQMSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "ptrang-phan-trang",
  "tags": [],
  "level": "BEGINNER",
  "title": "PTRANG - Phân Trang",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PTRANG - Ph&acirc;n Trang</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Văn bản l&agrave; một d&atilde;y gồm N từđ&aacute;nh số từ 1 đến N. Từ thứ i c&oacute; độ d&agrave;i l&agrave; wi (i=1, 2,... N). Ph&acirc;n trang l&agrave; một c&aacute;ch xếp lần lượt c&aacute;c từ của văn bản v&agrave;o d&atilde;y c&aacute;c d&ograve;ng, mỗi d&ograve;ng c&oacute;độ d&agrave;i L, sao cho tổng độ d&agrave;i của c&aacute;c từ tr&ecirc;n c&ugrave;ng một d&ograve;ng kh&ocirc;ng vượt qu&aacute; L.Ta gọi hệ số phạt của mỗi d&ograve;ng trong c&aacute;ch ph&acirc;n trang l&agrave; hiệu số (L-S), trong đ&oacute;S l&agrave; tổng độ d&agrave;i của c&aacute;c từ xếp tr&ecirc;n d&ograve;ng đ&oacute;. Hệ số phạt của c&aacute;ch ph&acirc;n trang l&agrave; gi&aacute; trị lớn nhất trong số c&aacute;c hệ số phạt của c&aacute;c d&ograve;ng.T&igrave;m c&aacute;ch ph&acirc;n trang với hệ số phạt nhỏ nhất.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1 chứa 2 số nguy&ecirc;n dương N, L (N&lt;=6000,L&lt;=1000)</li>\n<li>D&ograve;ng thứ i trong số N d&ograve;ng tiếp theo chứa số nguy&ecirc;n dương wi (wi&lt;=L), i=1, 2,.., N</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>In ra hệ số phạt nhỏ nhất</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input:</strong>\n4 5\n3\n2\n2\n4\n<strong>Output:</strong>\n2 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3e110d38-6cdf-42e1-91c8-b5b9c2ae75e1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PTRANG_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pvoi14_1-dinh-ghim",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PVOI14_1 - ĐINH GHIM",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PVOI14_1 - ĐINH GHIM</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Sau h&agrave;ng chục năm giảng dạy, thầy Minh đ&atilde; sưu tập được rất nhiều b&agrave;i tập tin học v&agrave; giờ đ&acirc;y thầy muốn tổng hợp v&agrave; ph&acirc;n loại ch&uacute;ng. C&aacute;c b&agrave;i tập được in trong N tờ giấy đặt tr&ecirc;n b&agrave;n l&agrave;m việc v&agrave; thầy Minh muốn ghim c&aacute;c tờ giấy xuống dưới mặt b&agrave;n bằng một đinh ghim duy nhất (việc n&agrave;y l&agrave; cần thiết nhằm tr&aacute;nh cho ch&uacute;ng bị x&ecirc; dịch hoặc bị gi&oacute; thổi bay).</p>\n<div id=\"_mcePaste\">Mặt b&agrave;n c&oacute; thể coi như mặt phẳng với hệ tọa độ Descartes vu&ocirc;ng g&oacute;c &Omicron;. Vị tr&iacute; của c&aacute;c tờ giấy được x&aacute;c định bởi &nbsp;h&igrave;nh chữ nhật đ&aacute;nh số từ 1 tới . Mỗi cạnh của mỗi h&igrave;nh chữ nhật song song hoặc vu&ocirc;ng g&oacute;c với đường ph&acirc;n gi&aacute;c của g&oacute;c phần tư thứ nhất (g&oacute;c ). Đinh ghim phải đặt ở vị tr&iacute; l&agrave; điểm c&oacute; ho&agrave;nh độ v&agrave; tung độ đều l&agrave; số nguy&ecirc;n, đồng thời điểm đ&oacute; phải thuộc miền trong của tất cả c&aacute;c h&igrave;nh chữ nhật (kh&ocirc;ng t&iacute;nh đường bi&ecirc;n).</div>\n<p>Mặt b&agrave;n c&oacute; thể coi như mặt phẳng với hệ tọa độ Descartes vu&ocirc;ng g&oacute;c &Omicron;xy. Vị tr&iacute; của c&aacute;c tờ giấy được x&aacute;c định bởi N h&igrave;nh chữ nhật đ&aacute;nh số từ 1 tới N. Mỗi cạnh của mỗi h&igrave;nh chữ nhật song song hoặc vu&ocirc;ng g&oacute;c với đường ph&acirc;n gi&aacute;c của g&oacute;c phần tư thứ nhất (g&oacute;c xOy). Đinh ghim phải đặt ở vị tr&iacute; l&agrave; điểm c&oacute; ho&agrave;nh độ v&agrave; tung độ đều l&agrave; số nguy&ecirc;n, đồng thời điểm đ&oacute; phải thuộc miền trong của tất cả c&aacute;c h&igrave;nh chữ nhật (kh&ocirc;ng t&iacute;nh đường bi&ecirc;n).</p>\n<div><strong>Y&ecirc;u cầu</strong>: H&atilde;y gi&uacute;p thầy Minh đếm số vị tr&iacute; c&oacute; thể đặt đinh ghim.</div>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1 chứa số nguy&ecirc;n dương N (N &le; 10<sup>5</sup>).</li>\n<li>N d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 8 số nguy&ecirc;n x<sub>A</sub>, y<sub>A</sub>, x<sub>B</sub>, y<sub>B</sub>, x<sub>C</sub>, y<sub>C</sub>, x<sub>D</sub>, y<sub>D</sub>&nbsp;c&aacute;ch nhau bởi dấu c&aacute;ch l&agrave; tọa độ 4 đỉnh (x<sub>A</sub>, y<sub>A</sub>), (x<sub>B</sub>, y<sub>B</sub>), (x<sub>C</sub>, y<sub>C</sub>), (x<sub>D</sub>, y<sub>D</sub>) của một tờ giấy theo đ&uacute;ng thứ tự x&aacute;c định h&igrave;nh chữ nhật tương ứng. C&aacute;c tọa độ l&agrave; số nguy&ecirc;n c&oacute; gi&aacute; trị tuyệt đối kh&ocirc;ng qu&aacute; 10<sup>9</sup>.</li>\n<li>40% số điểm tương ứng với c&aacute;c test c&oacute; N&nbsp;&le; 100 v&agrave; c&aacute;c tọa độ c&oacute; gi&aacute; trị tuyệt đối kh&ocirc;ng qu&aacute; 100.</li>\n</ul>\n<h3>Output</h3>\n<p>Ghi ra một số nguy&ecirc;n duy nhất l&agrave; số vị tr&iacute; c&oacute; thể đặt đinh ghim.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3\n3 0 0 3 4 7 7 4 \n5 0 7 2 2 7 0 5 \n5 7 7 5 3 1 1 3\n\n<strong>Output:</strong>\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f389f161-620b-46e8-a551-5ed7ab904cf1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "output-4.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pvoi14_4-chu-m",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PVOI14_4 - Chữ M",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PVOI14_4 - Chữ M</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Gi&aacute;ng Sinh sắp đến, thầy Minh quyết định trang tr&iacute; khu du lịch của m&igrave;nh. Trước cửa khu du lịch, c&oacute; một h&agrave;ng gồm N c&acirc;y, đ&aacute;nh số từ 1 đến N theo chiều từ tr&aacute;i sang phải, c&acirc;y thứ i c&oacute; độ cao h_i. Thầy Minh quyết định chọn một số c&acirc;y để treo mỗi c&acirc;y một đ&egrave;n lồng đỏ tr&ecirc;n ngọn, sao cho khi nh&igrave;n từ vịnh Hạ Long v&agrave;o, c&aacute;c đ&egrave;n lồng sẽ tạo th&agrave;nh một chữ M.</p>\n<p>Chữ M được định nghĩa như sau: Đ&oacute; l&agrave; một d&atilde;y c&aacute;c c&acirc;y, khi x&eacute;t từ tr&aacute;i sang phải, c&oacute; thể chia th&agrave;nh 4 ph&acirc;n đoạn, trong đ&oacute; độ cao c&aacute;c d&atilde;y trong đoạn đầu ti&ecirc;n tăng nghi&ecirc;m ngặt, trong đoạn thứ hai giảm nghi&ecirc;m ngặt, trong đoạn thứ ba tăng nghi&ecirc;m ngặt v&agrave; trong đoạn thứ tư giảm nghi&ecirc;m ngặt.</p>\n<p>Tức l&agrave;, c&oacute; một d&atilde;y c&aacute;c chỉ số a_1 &lt; a_2 &lt; ... &lt; a_i &lt; b_1 &lt; b_2 &lt; ... &lt; b_j &lt; c_1 &lt; c_2 &lt; ... &lt; c_k &lt; d_1 &lt; d_2 &lt; ... &lt; d_l sao cho:</p>\n<ul>\n<li>D&atilde;y h_a1, h_a2, ..., h_ai l&agrave; d&atilde;y tăng nghi&ecirc;m ngặt, v&agrave; i &ge;&nbsp;2.</li>\n<li>D&atilde;y h_ai, h_b1, ..., h_bj l&agrave; d&atilde;y giảm nghi&ecirc;m ngặt, j&nbsp;&ge;&nbsp;1.</li>\n<li>D&atilde;y h_bj, h_c1, ..., h_ck l&agrave; d&atilde;y tăng nghi&ecirc;m ngặt, k&nbsp;&ge; 1.</li>\n<li>D&atilde;y h_ck, h_d1, ..., h_dl l&agrave; d&atilde;y giảm nghi&ecirc;m ngặt, l&nbsp;&ge; 1.</li>\n</ul>\n<p>Độ ho&agrave;nh tr&aacute;ng của chữ M l&agrave; số lượng đ&egrave;n lồng tạo th&agrave;nh chữ M.</p>\n<p><strong>Y&ecirc;u cầu</strong>: H&atilde;y t&igrave;m độ ho&agrave;nh tr&aacute;ng lớn nhất của một chữ M m&agrave; thầy Minh c&oacute; thể tạo được.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1 chứa số nguy&ecirc;n dương N &le; 50,000</li>\n<li>D&ograve;ng 2 chứa N số nguy&ecirc;n dương kh&ocirc;ng vượt qu&aacute; 10<sup>9</sup>.&nbsp;</li>\n<li>Dữ liệu đảm bảo tồn tại &iacute;t nhất một c&aacute;ch treo đ&egrave;n. C&aacute;c số tr&ecirc;n một d&ograve;ng của file input được ghi c&aacute;ch nhau bởi dấu c&aacute;ch.</li>\n</ul>\n<h3>Output</h3>\n<p>Ghi ra độ ho&agrave;nh tr&aacute;ng lớn nhất của một chữ M c&oacute; thể c&oacute;.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n15\n1 20 15 30 25 20 15 40 30 20 10 5 4 6 8\n\n<strong>Output:</strong>\n12</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bbb50147-7757-4325-8008-c6aa4d7e64cd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PVOI14_4_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "pvoi14_5-chu-p",
  "tags": [],
  "level": "BEGINNER",
  "title": "PVOI14_5 - Chữ P",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PVOI14_5 - Chữ P</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Nh&acirc;n dịp tổ chức PreVOI ở Quảng Ninh, thầy Minh mời N bạn th&iacute; sinh, đ&aacute;nh số từ 1 đến N tham gia tr&ograve; chơi \"Dịch chuyển thức thời\" trong khu du lịch của m&igrave;nh.</p>\n<p>Mỗi th&iacute; sinh sẽ c&oacute; một tấm v&aacute;n to&aacute;n học mượn được của gi&aacute;o sư Ng&ocirc; Bảo Ch&acirc;u. Trong mỗi bước dịch chuyển, tấm v&aacute;n sẽ đưa th&iacute; sinh đang ở tọa độ x đến tọa độ x*p hoặc x/p (nếu x chia hết cho p). Ở đ&acirc;y p l&agrave; số nguy&ecirc;n tố bất kỳ.</p>\n<p>Ban đầu, N bạn th&iacute; sinh đứng ở c&aacute;c tọa độ nguy&ecirc;n dương x_1, x_2, ..., x_N.</p>\n<p>Thầy Minh muốn đặt một b&agrave;n ăn tại một tọa độ sao cho tổng số bước dịch chuyển của tất cả c&aacute;c bạn th&iacute; sinh từ vị tr&iacute; ban đầu đến b&agrave;n ăn l&agrave; nhỏ nhất.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1 chứa số nguy&ecirc;n dương N &le; 100,000</li>\n<li>D&ograve;ng 2 chứa N số nguy&ecirc;n dương, số thứ i l&agrave; x_i&nbsp;&le; 10,000.</li>\n</ul>\n<p>C&aacute;c số tr&ecirc;n một d&ograve;ng c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<h3>Output</h3>\n<p>In ra 2 số nguy&ecirc;n c&aacute;ch nhau 1 dấu c&aacute;ch: số thứ nhất l&agrave; tổng số bước di chuyển tối thiểu. Số thứ 2 l&agrave; tọa độ thầy Minh đặt b&agrave;n ăn. Nếu c&oacute; nhiều tọa độ thỏa m&atilde;n th&igrave; in ra tọa độ bế nhất.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2</pre>\n<pre>2 3\n\n<strong>Output:</strong>\n2 1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ba8bd492-38fa-4233-9ac5-7ba1ed81cd3e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PVOI14_5_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pwalk-dao-choi-dong-co",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PWALK - Dạo chơi đồng cỏ",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PWALK - Dạo chơi đồng cỏ</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">&nbsp;</div>\n<div class=\"prob\"><br />\n<p>C&oacute; N con b&ograve; (1 &lt;= N &lt;= 1,000), để thuận tiện ta đ&aacute;nh số từ 1-&gt;N, đang ăn cỏ tr&ecirc;n N đồng cỏ, để thuận tiện ta cũng đ&aacute;nh số c&aacute;c đồng cỏ từ 1-&gt;N. Biết rằng con b&ograve; i đang ăn cỏ tr&ecirc;n đồng cỏ i.</p>\n<p>Một v&agrave;i cặp đồng cỏ được nối với nhau bởi 1 trong N-1 con đường 2 chiều m&agrave; c&aacute;c con b&ograve; c&oacute; thể đi qua. Con đường i nối 2 đồng cỏ A_i v&agrave; B_i (1 &lt;= A_i &lt;= N; 1 &lt;= B_i &lt;= N) v&agrave; c&oacute; độ d&agrave;i l&agrave; L_i (1 &lt;= L_i &lt;= 10,000).</p>\n<p>C&aacute;c con đường được thiết kế sao cho với 2 đồng cỏ bất kỳ đều c&oacute; duy nhất 1 đường đi giữa ch&uacute;ng. Như vậy c&aacute;c con đường n&agrave;y đ&atilde; h&igrave;nh th&agrave;nh 1 cấu tr&uacute;c c&acirc;y.</p>\n<p>C&aacute;c ch&uacute; b&ograve; rất c&oacute; tinh thần tập thể v&agrave; muốn được thăm thường xuy&ecirc;n. V&igrave; vậy lũ b&ograve; muốn bạn gi&uacute;p ch&uacute;ng t&iacute;nh to&aacute;n độ d&agrave;i đường đi giữa Q (1 &lt;= Q &lt;= 1,000) cặp đồng cỏ (mỗi cặp được m&ocirc; tả l&agrave; 2 số nguy&ecirc;n p1,p2 (1 &lt;= p1 &lt;= N; 1 &lt;= p2 &lt;= N).</p>\n<h3>DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; Q</li>\n<li>D&ograve;ng 2..N: D&ograve;ng i+1 chứa 3 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: A_i, B_i, v&agrave; L_i</li>\n<li>D&ograve;ng N+1..N+Q: Mỗi d&ograve;ng chứa 2 số nguy&ecirc;n kh&aacute;c nhau c&aacute;ch nhau bởi dấu c&aacute;ch m&ocirc; tả 1 y&ecirc;u cầu t&iacute;nh to&aacute;n độ d&agrave;i 2 đồng cỏ m&agrave; lũ b&ograve; muốn đi thăm qua lại p1 v&agrave; p2.</li>\n</ul>\n<h3>KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1..Q: D&ograve;ng i chứa độ d&agrave;i đường đi giữa 2 đồng cỏ ở y&ecirc;u cầu thứ i.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre><strong>Dữ liệu</strong>\n4 2\n2 1 2\n4 3 2\n1 4 3\n1 2\n3 2\n\n<strong>Kết quả</strong>\n2\n7\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>Y&ecirc;u cầu 1: Con đường giữa đồng cỏ 1 v&agrave; 2 c&oacute; độ d&agrave;i l&agrave; 2. Y&ecirc;u cầu 2: Đi qua con đường nối đồng cỏ 3 v&agrave; 4, rồi tiếp tục đi qua con đường nối 4 v&agrave; 1, v&agrave; cuối c&ugrave;ng l&agrave; con đướng nối 1 v&agrave; 2, độ d&agrave;i tổng cộng l&agrave; 7.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a513f3f0-e5b2-41e5-a829-18099d979764",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PWALK_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "pwrfail-mat-dien",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "PWRFAIL - Mất điện",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>PWRFAIL - Mất điện</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Một cơn b&atilde;o đ&atilde; ph&aacute; hủy 1 số đường d&acirc;y điện của n&ocirc;ng trang! N&ocirc;ng d&acirc;n John c&oacute; một bản đồ tất cả N (2 &lt;= N &lt;= 1,000) c&acirc;y cột điện, để thuận tiện ta đ&aacute;nh số c&aacute;c cột n&agrave;y từ 1-&gt;N, mỗi cột n&agrave;y được x&aacute;c định tr&ecirc;n mặt phẳng bởi 2 số nguy&ecirc;n x_i, y_i (-100,000 &lt;= x_i &lt;= 100000; -100,000 &lt;= y_i &lt;= 100,000).</p>\n<p>Hiện đang c&oacute; W (1 &lt;= W &lt;= 10,000) đường d&acirc;y điện nối c&aacute;c cặp cột điện Pi v&agrave; Pj (1 &lt;= Pi &lt;= N; 1 &lt;= Pj &lt;= N). John cần mang điện từ cột 1 tới cột N (th&ocirc;ng qua c&aacute;c đường d&acirc;y điện v&agrave; c&aacute;c cột điện kh&aacute;c).</p>\n<p>Cho tọa độ của N cột điện v&agrave; danh s&aacute;ch những đường d&acirc;y điện vẫn c&ograve;n hoạt động. H&atilde;y x&aacute;c định độ d&agrave;i nhỏ nhất của c&aacute;c đường d&acirc;y điện cần th&ecirc;m để sao cho điện từ cột 1 c&oacute; thể truyền tới cột N. Biết rằng độ d&agrave;i tối đa của 1 đường d&acirc;y điện l&agrave; 1 số thực M (0.0 &lt; M &lt;= 200,000.0).</p>\n<p>V&iacute; dụ, dưới đ&acirc;y l&agrave; b&ecirc;n tr&aacute;i l&agrave; bản đồ 9 cột điện v&agrave; 3 d&acirc;y nối vẫn c&ograve;n hoạt động sau cơn b&atilde;o. Trong v&iacute; dụ n&agrave;y, M = 2.0. C&aacute;ch tốt nhất l&agrave; ta th&ecirc;m 2 đường d&acirc;y điện nối 4-6 v&agrave; 6-9.</p>\n<pre>      Sau cơn b&atilde;o                   Phương &aacute;n tối ưu\n\n3  . . . 7 9 . . . . .          3  . . . 7 9 . . . . .\n                                          /\n2  . . 5 6 . . . . . .          2  . . 5 6 . . . . . .\n                                        /\n1  2-3-4 . 8 . . . . .          1  2-3-4 . 8 . . . . .\n   |                               |\n0  1 . . . . . . . . .          0  1 . . . . . . . . .\n\n   0 1 2 3 4 5 6 7 8 9             0 1 2 3 4 5 6 7 8 9\n</pre>\n<p>Tổng độ d&agrave;i l&agrave; 1.414213562 + 1.414213562 = 2.828427124 .</p>\n<h3>DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: Hai số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; W</li>\n<li>D&ograve;ng 2: Một số thực: M</li>\n<li>D&ograve;ng 3..N+2: Mỗi d&ograve;ng gồm 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: x_i v&agrave; y_i</li>\n<li>D&ograve;ng N+3..N+2+W: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: Pi v&agrave; Pj</li>\n</ul>\n<h3>KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n tr&ecirc;n 1 d&ograve;ng. Nếu kh&ocirc;ng c&oacute; phương &aacute;n để cấp điện cho cột N từ cột 1 th&igrave; ghi ra -1. Ngược lại, ghi ra 1 số nguy&ecirc;n l&agrave; tổng độ d&agrave;i nhỏ nhất nh&acirc;n với 1000.</li>\n<li>Ch&uacute; &yacute; kh&ocirc;ng l&agrave;m tr&ograve;n, l&agrave;m giảm t&iacute;ch thu được ở tr&ecirc;n.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre><strong>Dữ liệu</strong>\n9 3\n2.0\n0 0\n0 1\n1 1\n2 1\n2 2\n3 2\n3 3\n4 1\n4 3\n1 2\n2 3\n3 4\n\n<strong>Kết quả</strong>\n2828\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>Như h&igrave;nh b&ecirc;n tr&ecirc;n.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/067e260d-c957-4139-b991-ee9fc6195c54",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "PWRFAIL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbagents-cac-dai-ly",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBAGENTS - Các đại lý",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBAGENTS - C&aacute;c đại l&yacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Sau một số rủi ro v&agrave; thất bại trong kinh doanh, tổng gi&aacute;m đốc c&ocirc;ng ty Fsoft l&agrave; Zone quyết định tổ chức cho c&aacute;c sếp nhỏ của c&aacute;c đại l&yacute; thuộc c&ocirc;ng ty gặp mặt v&agrave; thảo luận với nhau. C&ocirc;ng ty Fsoft l&agrave; một c&ocirc;ng ty cực k&igrave; lớn trải khắp to&agrave;n cầu n&ecirc;n một vấn đề lớn đặt ra l&agrave; l&agrave;m sao tổ chức cho 2 sếp nhỏ gặp nhau trong thời gian sớm nhất. Vấn đề đặc biệt trở n&ecirc;n h&oacute;c b&uacute;a v&igrave; c&aacute;c nh&acirc;n vi&ecirc;n của c&ocirc;ng ty chỉ được đi bằng mạng giao th&ocirc;ng của c&ocirc;ng ty để đảm bảo an to&agrave;n, bảo mật v&agrave; chi ph&iacute;. Nhưng mạng n&agrave;y lại hơi tệ:</p>\n<p>- C&aacute;c nh&acirc;n vi&ecirc;n buộc phải di chuyển theo c&aacute;c tuyến giao th&ocirc;ng giữa c&aacute;c đại l&yacute;.</p>\n<p>- Mạng giao th&ocirc;ng của c&ocirc;ng ty l&agrave; mạng gồm c&aacute;c tuyến đường 1 chiều.</p>\n<p>- C&aacute;c nh&acirc;n vi&ecirc;n khi đi trong mạng th&igrave; mỗi giờ đi được theo đ&uacute;ng 1 tuyến đường v&agrave; phải li&ecirc;n tục di chuyển (nghĩa l&agrave; kh&ocirc;ng được dừng lại).</p>\n<p>Được c&aacute;i đ&acirc;y l&agrave; mạng nội bộ v&agrave; với c&ocirc;ng nghệ đỉnh cao n&ecirc;n kh&ocirc;ng c&oacute; chuyện tắc đường. V&igrave; vậy, trong 1 giờ lu&ocirc;n c&oacute; thể di chuyển từ đại l&yacute; n&agrave;y sang đại l&yacute; kh&aacute;c nếu c&oacute; đường.</p>\n<p>Zone muốn nh&acirc;n vi&ecirc;n của m&igrave;nh kh&ocirc;ng l&atilde;ng ph&iacute; thời gian. Bởi vậy &ocirc;ng muốn t&iacute;nh thời gian ngắn nhất m&agrave; 2 sếp ở 2 đại l&yacute; cho trước c&oacute; thể gặp nhau. Đ&aacute;ng tiếc l&agrave; Zone chỉ giỏi kinh doanh, c&ograve;n lập tr&igrave;nh th&igrave; qu&aacute; yếu k&eacute;m. Bạn l&agrave; nh&acirc;n vi&ecirc;n dưới quyền Zone v&agrave; đang rất muốn thể hiện khả năng của m&igrave;nh. Vậy th&igrave;, h&atilde;y nh&acirc;n cơ hội n&agrave;y để cho Zone thấy tr&igrave;nh độ tuyệt vời của bạn.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ghi 2 số N, M l&agrave; số đại l&yacute; v&agrave; số tuyến đường trong mạng giao th&ocirc;ng của c&ocirc;ng ty Fsoft. (N &le; 250)</p>\n<p>D&ograve;ng thứ 2 ghi S,T lần lượt l&agrave; số thứ tự 2 đại l&yacute; c&oacute; 2 sếp cần phải gặp nhau.</p>\n<p>M d&ograve;ng tiếp theo mỗi d&ograve;ng ghi 2 số nguy&ecirc;n U, V thể hiện c&oacute; đường đi một chiều từ U tới V.</p>\n<h3>Output</h3>\n<p>Gồm một d&ograve;ng duy nhất ghi thời gian nhỏ nhất 2 sếp c&oacute; thể gặp nhau.</p>\n<p>Nếu 2 sếp kh&ocirc;ng thể gặp nhau ghi -1.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 7\n1 5\n1 2\n4 5\n2 3\n3 4\n4 1\n5 4\n5 6\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7d0598c2-819f-41aa-8210-0f4b8b32a2c4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBAGENTS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "qbdivseq-chia-day",
  "tags": [],
  "level": "BEGINNER",
  "title": "QBDIVSEQ - Chia dãy",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBDIVSEQ - Chia d&atilde;y</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>D&atilde;y số M phần tử B được gọi l&agrave; d&atilde;y con của d&atilde;y số A gồm N phần tử nếu tồn tại một m&atilde; chuyển C gồm M phần tử thoả m&atilde;n B[i]=A[C[i]] với mọi I = 1&hellip;M v&agrave; 1 &le; C[1] &lt; C[2] &lt; ... &lt; C[m] &le; N.</p>\n<p>Một c&aacute;ch chia d&atilde;y A th&agrave;nh c&aacute;c d&atilde;y con \"được chấp nhận\" nếu c&aacute;c d&atilde;y con n&agrave;y l&agrave; c&aacute;c d&atilde;y kh&ocirc;ng giảm v&agrave; mỗi phần tử của d&atilde;y A thuộc đ&uacute;ng một d&atilde;y con.</p>\n<p>Y&ecirc;u cầu: Bạn h&atilde;y chia d&atilde;y con ban đầu th&agrave;nh &iacute;t d&atilde;y con nhất m&agrave; vẫn \"được chấp nhận\".</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi số N l&agrave; số phần tử của d&atilde;y A. ( N &le; 10<sup>5</sup>&nbsp;)</p>\n<p>N d&ograve;ng tiếp theo ghi N số tự nhi&ecirc;n l&agrave; c&aacute;c phần tử của d&atilde;y A. ( A<sub>i</sub>&nbsp;&le; 10<sup>9</sup>&nbsp;)</p>\n<h3>Output</h3>\n<p>Ghi một duy nhất l&agrave; số lượng d&atilde;y con &iacute;t nhất thỏa m&atilde;n.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n1\n5\n4\n6\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d188298f-ed6c-481e-a520-48600c0b8b48",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBDIVSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbmax-duong-di-co-tong-lon-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBMAX - Đường đi có tổng lớn nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBMAX - Đường đi c&oacute; tổng lớn nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Cho một bảng A k&iacute;ch thước m x n (1 &lt;= m, n &lt;= 100), tr&ecirc;n đ&oacute; ghi c&aacute;c số nguy&ecirc;n a<sub>ij</sub>&nbsp;(|a<sub>ij</sub>| &lt;= 100). Một người xuất ph&aacute;t tại &ocirc; n&agrave;o đ&oacute; của cột 1, cần sang cột n (tại &ocirc; n&agrave;o cũng được).</p>\n<p>Quy tắc đi: Từ &ocirc; (i, j) chỉ được quyền sang một trong 3 &ocirc; (i, j + 1); (i - 1, j + 1); (i + 1, j + 1)</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: Ghi hai số m, n l&agrave; số h&agrave;ng v&agrave; số cột của bảng.</p>\n<p>M d&ograve;ng tiếp theo, d&ograve;ng thứ i ghi đủ n số tr&ecirc;n h&agrave;ng i của bảng theo đ&uacute;ng thứ tự từ tr&aacute;i qua phải</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi tổng lớn nhất t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 7\n9 -2 6 2 1 3 4\n0 -1 6 7 1 3 3\n8 -2 8 2 5 3 2\n1 -1 6 2 1 6 1\n7 -2 6 2 1 3 7\n\n<strong>Output:</strong>\n41</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b9b23bec-a029-4341-940a-ea539d15af01",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBMAX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92d9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbmseq-voi07-day-con-khong-giam-dai-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBMSEQ - VOI07 Dãy con không giảm dài nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBMSEQ - VOI07 D&atilde;y con kh&ocirc;ng giảm d&agrave;i nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho d&atilde;y số nguy&ecirc;n dương a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>.</p>\n<p>D&atilde;y số: a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j</sub>&nbsp;thỏa m&atilde;n a<sub>i</sub>&nbsp;&le; a<sub>i+1</sub>&nbsp;&le; ... &le; a<sub>j</sub>. Với 1 &le; i &le; j &le; n được gọi l&agrave; d&atilde;y con kh&ocirc;ng giảm của d&atilde;y số đ&atilde; cho v&agrave; khi đ&oacute; số j-i+1 được gọi l&agrave; độ d&agrave;i của d&atilde;y con n&agrave;y.</p>\n<p>Y&ecirc;u cầu: Trong số c&aacute;c d&atilde;y con kh&ocirc;ng giảm của d&atilde;y số đ&atilde; cho m&agrave; c&aacute;c phần tử của n&oacute; đều thuộc d&atilde;y số {u<sub>k</sub>} x&aacute;c định bởi u<sub>1</sub>&nbsp;= 1, u<sub>k = uk-1</sub>&nbsp;+ k (k &ge; 2), h&atilde;y t&igrave;m d&atilde;y con c&oacute; độ d&agrave;i lớn nhất.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n dương n (n &le; 10<sup>4</sup>).</p>\n<p>D&ograve;ng thứ i trong n d&ograve;ng tiếp theo chứa một số nguy&ecirc;n dương a<sub>i</sub>&nbsp;(a<sub>i</sub>&nbsp;&le; 10<sup>8</sup>) l&agrave; số hạng thứ i của d&atilde;y số đ&atilde; cho, i = 1, 2, ..., n.</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi số nguy&ecirc;n d l&agrave; độ d&agrave;i của d&atilde;y con kh&ocirc;ng giảm t&igrave;m được (quy ước rằng nếu kh&ocirc;ng c&oacute; d&atilde;y con n&agrave;o thỏa m&atilde;n điều kiện đặt ra th&igrave; d = 0).</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n8\n2\n2007\n6\n6\n15\n16\n3\n21\n<strong>Output:</strong>\n3\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/fb019dd0-c141-4098-9cec-6deb75b77dab",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBMSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92da"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbmst-cay-khung-nho-nhat-heap",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBMST - Cây khung nhỏ nhất ( HEAP )",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBMST - C&acirc;y khung nhỏ nhất ( HEAP )</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho đơn đồ thị v&ocirc; hướng li&ecirc;n th&ocirc;ng G = (V, E) gồm n đỉnh v&agrave; m cạnh, c&aacute;c đỉnh được đ&aacute;nh số từ 1 tới n v&agrave; c&aacute;c cạnh được đ&aacute;nh số từ 1 tới m. H&atilde;y t&igrave;m c&acirc;y khung nhỏ nhất của đồ thị G</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: Chứa hai số n, m (1 &lt;= n &lt;= 10000; 1 &lt;= m &lt;= 15000)</p>\n<p>M d&ograve;ng tiếp theo, d&ograve;ng thứ i c&oacute; dạng ba số nguy&ecirc;n u, v, c. Trong đ&oacute; (u, v) l&agrave; chỉ số hai đỉnh đầu m&uacute;t của cạnh thứ i v&agrave; c trọng số của cạnh đ&oacute; (1 &lt;= u, v &lt;= n; 0 &lt;= c &lt;= 10000).</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất: Ghi trọng số c&acirc;y khung nhỏ nhất</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />6 9<br />1 2 1<br />1 3 1<br />2 4 1<br />2 3 2<br />2 5 1<br />3 5 1<br />3 6 1<br />4 5 2<br />5 6 2<br /><br /><strong>Output:</strong><br />5</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1fec5772-c0f6-41cf-8070-7abfb9aa21ce",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBMST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92db"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "qbpal-dem-chuoi-doi-xung",
  "tags": [],
  "level": "BEGINNER",
  "title": "QBPAL - Đếm chuỗi đối xứng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBPAL - Đếm chuỗi đối xứng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Trong một buổi học viết chữ, Bờm ph&aacute;t hiện trong một số từ khi bỏ đi một số k&yacute; tự th&igrave; đọc ngược hay đọc xu&ocirc;i đều giống nhau.</p>\n<p>V&iacute; dụ từ IOICAMP, khi x&oacute;a đi c&aacute;c chữ c&aacute;i C,A,M,P, th&igrave; c&ograve;n lại IOI l&agrave; một từ đối xứng.</p>\n<p>Bờm cảm thấy th&uacute; vị, v&agrave; cậu tiếp tục thử x&oacute;a c&aacute;c k&yacute; tự kh&aacute;c, kết quả l&agrave; c&oacute; th&ecirc;m nhiều từ đối xứng nữa: II, I, O, C&hellip; Nhưng nếu với một từ d&agrave;i, cứ thử từng c&aacute;ch x&oacute;a như vậy th&igrave; thật mất thời gian. Bạn h&atilde;y viết chương tr&igrave;nh gi&uacute;p Bờm t&iacute;nh số c&aacute;ch x&oacute;a sao cho từ thu được đối xứng. Hai c&aacute;ch x&oacute;a chỉ kh&aacute;c nhau bởi thứ tự x&oacute;a c&aacute;c k&yacute; tự th&igrave; coi như tr&ugrave;ng nhau.</p>\n<h3>Input</h3>\n<p>Một d&ograve;ng duy nhất l&agrave; từ cần t&iacute;nh số c&aacute;ch x&oacute;a, từ n&agrave;y chỉ chứa c&aacute;c chữ c&aacute;i in hoa A, B, .., Z. ( Độ d&agrave;i từ kh&ocirc;ng qu&aacute; 120 )</p>\n<h3>Output</h3>\n<p>Một số duy nhất l&agrave; số c&aacute;ch x&oacute;a.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\nIOICAMP\n\n<strong>Output:</strong>\n9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1f91d564-2528-41fc-8ec0-bf2646307b34",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBPAL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92dc"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbpoint-bo-ba-diem-thang-hang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBPOINT - Bộ ba điểm thẳng hàng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBPOINT - Bộ ba điểm thẳng h&agrave;ng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Trong c&aacute;c cuộc thi tin học, sự xuất hiện của những b&agrave;i to&aacute;n h&igrave;nh học l&agrave;m đội tuyển CBQ kh&aacute; l&uacute;ng t&uacute;ng. Do đ&oacute; thầy Thạch quyết định cho đội tuyển luyện tập c&aacute;c b&agrave;i to&aacute;n h&igrave;nh học. Bắt đầu từ điểm, thầy đưa ra b&agrave;i to&aacute;n:</p>\n<p>Cho n điểm trong mặt phẳng Oxy, h&atilde;y đếm số bộ 3 điểm thằng h&agrave;ng</p>\n<h3>Input</h3>\n<p>D&ograve;ng thứ nhất ghi số N l&agrave; số điểm tr&ecirc;n mặt phẳng.</p>\n<p>N d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi tọa độ của một điểm.</p>\n<h3>Output</h3>\n<p>Một số duy nhất l&agrave; số bộ 3 điểm thẳng h&agrave;ng.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6\n0 0\n0 1\n0 2\n1 1\n2 0\n2 2\n<strong>Output:</strong>\n3\n\n<strong>Giới hạn:</strong>\n1 &le; N &le; 2000.\nTọa độ c&aacute;c điểm c&oacute; trị tuyệt đối kh&ocirc;ng qu&aacute; 10000.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b41ae45d-1547-44bf-a2f9-9dd1e005a2c9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBPOINT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92dd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbrect-hinh-chu-nhat-0-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBRECT - Hình chữ nhật 0 1",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBRECT - H&igrave;nh chữ nhật 0 1</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\"><br />\n<p>Cho một bảng k&iacute;ch thước MxN, được chia th&agrave;nh lưới &ocirc; vu&ocirc;ng đơn vị M d&ograve;ng N cột ( 1 &lt;= M, N &lt;= 1000 )</p>\n<p>Tr&ecirc;n c&aacute;c &ocirc; của bảng ghi số 0 hoặc 1. C&aacute;c d&ograve;ng của bảng được đ&aacute;nh số 1, 2... M theo thứ tự từ tr&ecirc;n xuống dưới v&agrave; c&aacute;c cột của bảng được đ&aacute;nh số 1, 2..., N theo thứ tự từ tr&aacute;i qua phải</p>\n<p>Y&ecirc;u cầu:</p>\n<p>H&atilde;y t&igrave;m một h&igrave;nh chữ nhật gồm c&aacute;c &ocirc; của bảng thoả m&atilde;n c&aacute;c điều kiện sau:</p>\n<p>1 - H&igrave;nh chữ nhật đ&oacute; chỉ gồm c&aacute;c số 1</p>\n<p>2 - Cạnh h&igrave;nh chữ nhật song song với cạnh bảng</p>\n<p>3 - Diện t&iacute;ch h&igrave;nh chữ nhật l&agrave; lớn nhất c&oacute; thể</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: Ghi hai số M, N</p>\n<p>M d&ograve;ng tiếp theo, d&ograve;ng thứ i ghi N số m&agrave; số thứ j l&agrave; số ghi tr&ecirc;n &ocirc; (i, j) của bảng</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi diện t&iacute;ch của h&igrave;nh chữ nhật t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n11 13\n0 0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 1 1 1 0 0 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 1 1 1 1 1 1 1 1 1 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 0 0\n0 1 1 1 1 1 1 1 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 0 0 0 0 1 1\n0 0 0 0 0 1 0 0 0 0 0 1 1\n\n\n<strong>Output:</strong>\n49</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82538cfc-a7ef-4acc-a9fa-f69bd9a5ab08",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBRECT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92de"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbrobot-voi07-robot-cuu-hoa",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBROBOT - VOI07 Robot cứu hỏa",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBROBOT - VOI07 Robot cứu hỏa</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Tr&ecirc;n một mạng lưới giao th&ocirc;ng c&oacute; n n&uacute;t, c&aacute;c n&uacute;t được đ&aacute;nh số từ 1 đến n v&agrave; giữa hai n&uacute;t bất kỳ c&oacute; kh&ocirc;ng qu&aacute; một đường nối trực tiếp (đường nối trực tiếp l&agrave; một đường hai chiều). Ta gọi đường đi từ n&uacute;t s đến n&uacute;t t l&agrave; một d&atilde;y c&aacute;c n&uacute;t v&agrave; c&aacute;c đường nối trực tiếp c&oacute; dạng:</p>\n<p>s = u<sub>1</sub>, e<sub>1</sub>, u<sub>2</sub>,..., u<sub>i</sub>, e<sub>i</sub>, u<sub>i+1</sub>, ..., u<sub>k-1</sub>, e<sub>k-1</sub>, u<sub>k</sub>&nbsp;= t,</p>\n<p>trong đ&oacute; u<sub>1</sub>, u<sub>2</sub>, &hellip;, u<sub>k</sub>&nbsp;l&agrave; c&aacute;c n&uacute;t trong mạng lưới giao th&ocirc;ng, e<sub>i</sub>&nbsp;l&agrave; đường nối trực tiếp giữa n&uacute;t u<sub>i</sub>&nbsp;v&agrave; u<sub>i+1</sub>&nbsp;(kh&ocirc;ng c&oacute; n&uacute;t u<sub>j</sub>&nbsp;n&agrave;o xuất hiện nhiều hơn một lần trong d&atilde;y tr&ecirc;n, j = 1, 2, &hellip;, k).</p>\n<p>Biết rằng mạng lưới giao th&ocirc;ng được x&eacute;t lu&ocirc;n c&oacute; &iacute;t nhất một đường đi từ n&uacute;t 1 đến n&uacute;t n.</p>\n<p>Một robot chứa đầy b&igrave;nh với w đơn vị năng lượng, cần đi từ trạm cứu hoả đặt tại n&uacute;t 1 đến nơi xảy ra hoả hoạn ở n&uacute;t n, trong thời gian &iacute;t nhất c&oacute; thể. Thời gian v&agrave; chi ph&iacute; năng lượng để robot đi tr&ecirc;n đường nối trực tiếp từ n&uacute;t i đến n&uacute;t j tương ứng l&agrave; t<sub>ij</sub>&nbsp;v&agrave; c<sub>ij</sub>&nbsp;(1 &le; i, j &le; n). Robot chỉ c&oacute; thể đi được tr&ecirc;n đường nối trực tiếp từ n&uacute;t i đến n&uacute;t j nếu năng lượng c&ograve;n lại trong b&igrave;nh chứa kh&ocirc;ng &iacute;t hơn c<sub>ij</sub>&nbsp;(1 &le; i, j &le; n). Nếu robot đi đến một n&uacute;t c&oacute; trạm tiếp năng lượng (một n&uacute;t c&oacute; thể c&oacute; hoặc kh&ocirc;ng c&oacute; trạm tiếp năng lượng) th&igrave; n&oacute; tự động được nạp đầy năng lượng v&agrave;o b&igrave;nh chứa với thời gian nạp coi như kh&ocirc;ng đ&aacute;ng kể.</p>\n<p>Y&ecirc;u cầu: H&atilde;y x&aacute;c định gi&aacute; trị w nhỏ nhất để robot đi được tr&ecirc;n một đường đi từ n&uacute;t 1 đến n&uacute;t n trong thời gian &iacute;t nhất.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n dương n (2 &le; n &le; 500);</p>\n<p>D&ograve;ng thứ hai chứa n số, trong đ&oacute; số thứ j bằng 1 hoặc 0 tương ứng ở n&uacute;t j c&oacute; hoặc kh&ocirc;ng c&oacute; trạm tiếp năng lượng (j = 1, 2, &hellip;, n);</p>\n<p>D&ograve;ng thứ ba chứa số nguy&ecirc;n dương m (m &le; 30000) l&agrave; số đường nối trực tiếp c&oacute; trong mạng lưới giao th&ocirc;ng;</p>\n<p>D&ograve;ng thứ k trong số m d&ograve;ng tiếp theo chứa 4 số nguy&ecirc;n dương i, j, t<sub>ij</sub>, c<sub>ij</sub>&nbsp;(t<sub>ij</sub>, c<sub>ij</sub>&nbsp;&le; 10000) m&ocirc; tả đường nối trực tiếp từ n&uacute;t i đến n&uacute;t j, thời gian v&agrave; chi ph&iacute; năng lượng tương ứng.</p>\n<p>Hai số li&ecirc;n tiếp tr&ecirc;n một d&ograve;ng trong file dữ liệu c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</p>\n<h3>Output</h3>\n<p>Ghi ra số nguy&ecirc;n dương w t&igrave;m được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n4\n0 1 1 0\n5\n1 2 5 4\n1 3 4 3\n1 4 9 4\n2 4 4 1\n3 4 5 2\n\n<strong>Output:</strong>\n3\n</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c8cd57f6-053e-499d-b305-1ce83a002bb6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBROBOT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92df"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbschool-den-truong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBSCHOOL - Đến trường",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBSCHOOL - Đến trường</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br /><br />\n<p>Ng&agrave;y 27/11 tới l&agrave; ng&agrave;y tổ chức thi học kỳ I ở trường ĐH BK. L&agrave; sinh vi&ecirc;n năm thứ nhất, Hiếu kh&ocirc;ng muốn v&igrave; đi muộn m&agrave; gặp trục trặc ở ph&ograve;ng thi n&ecirc;n đ&atilde; chuẩn bị kh&aacute; kỹ c&agrave;ng. Chỉ c&ograve;n lại một c&ocirc;ng việc kh&aacute; gay go l&agrave; Hiếu kh&ocirc;ng biết đi đường n&agrave;o tới trường l&agrave; nhanh nhất.</p>\n<p>Thường ng&agrave;y Hiếu kh&ocirc;ng quan t&acirc;m tới vấn đề n&agrave;y lắm cho n&ecirc;n b&acirc;y giờ Hiếu kh&ocirc;ng biết phải l&agrave;m sao cả . Bản đồ th&agrave;nh phố l&agrave; gồm c&oacute; N n&uacute;t giao th&ocirc;ng v&agrave; M con đường nối c&aacute;c n&uacute;t giao th&ocirc;ng n&agrave;y. C&oacute; 2 loại con đường l&agrave; đường 1 chiều v&agrave; đường 2 chiều. Độ d&agrave;i của mỗi con đường l&agrave; một số nguy&ecirc;n dương.</p>\n<p>Nh&agrave; Hiếu ở n&uacute;t giao th&ocirc;ng 1 c&ograve;n trường ĐH BK ở n&uacute;t giao th&ocirc;ng N. V&igrave; một lộ tr&igrave;nh đường đi từ nh&agrave; Hiếu tới trường c&oacute; thể gặp nhiều yếu tố kh&aacute;c như l&agrave; gặp nhiều đ&egrave;n đỏ , đi qua c&ocirc;ng trường x&acirc;y dựng, ... phải giảm tốc độ cho n&ecirc;n Hiếu muốn biết l&agrave; c&oacute; tất cả bao nhi&ecirc;u lộ tr&igrave;nh ngắn nhất đi từ nh&agrave; tới trường. Bạn h&atilde;y lập tr&igrave;nh gi&uacute;p Hiếu giải quyết b&agrave;i to&aacute;n kh&oacute; n&agrave;y.</p>\n<h3>Input</h3>\n<p>D&ograve;ng thứ nhất ghi hai số nguy&ecirc;n N v&agrave; M.</p>\n<p>M d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi 4 số nguy&ecirc;n dương K, U, V, L. Trong đ&oacute;:</p>\n<p>K = 1 c&oacute; nghĩa l&agrave; c&oacute; đường đi một chiều từ U đến V với độ d&agrave;i L.</p>\n<p>K = 2 c&oacute; ngh&igrave;a l&agrave; c&oacute; đường đi hai chiều giữa U v&agrave; V với độ d&agrave;i L.</p>\n<h3>Output</h3>\n<p>Ghi hai số l&agrave; độ d&agrave;i đường đi ngắn nhấn v&agrave; số lượng đường đi ngắn nhất. Biết rằng số lượng đường đi ngắn nhất kh&ocirc;ng vượt qu&aacute; phạm v&igrave; int64 trong pascal hay long long trong C++.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 2\n1 1 2 3\n2 2 3 1\n\n<strong>Output:</strong>\n4 1\n\n<strong>Giới hạn:</strong>\n1 &le; N &le; 5000\n1 &le; M &le; 20000\nĐộ d&agrave;i c&aacute;c con đường &le; 32000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/a7367433-1501-4189-bb40-cd8f1a35ffd0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBSCHOOL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbseq-day-con-dai-nhat-co-tong-chia-het-cho-k",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBSEQ - Dãy con dài nhất có tổng chia hết cho K",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBSEQ - D&atilde;y con d&agrave;i nhất c&oacute; tổng chia hết cho K</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một d&atilde;y gồm n ( n &lt;= 1000) số nguy&ecirc;n dương A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>n</sub>&nbsp;v&agrave; số nguy&ecirc;n dương k (k &lt;= 50). H&atilde;y t&igrave;m d&atilde;y con gồm nhiều phần tử nhất của d&atilde;y đ&atilde; cho sao cho tổng c&aacute;c phần tử của d&atilde;y con n&agrave;y chia hết cho k.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa hai số n, k ghi c&aacute;ch nhau bởi &iacute;t nhất 1 dấu trống.</p>\n<p>C&aacute;c d&ograve;ng tiếp theo chứa c&aacute;c số A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>n</sub>&nbsp;được ghi theo đ&uacute;ng thứ tự c&aacute;ch nhau &iacute;t nhất một dấu trống hoặc xuống d&ograve;ng</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi số lượng phần tử của d&atilde;y con d&agrave;i nhất thoả m&atilde;n</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n10 3\n2 3 5 7\n9 6 12 7\n11 15\n\n<strong>Output:</strong>\n9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dbaef66b-d69b-4d53-9b07-c08a690855ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbsquare-hinh-vuong-0-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBSQUARE - Hình vuông 0 1",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBSQUARE - H&igrave;nh vu&ocirc;ng 0 1</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một bảng k&iacute;ch thước MxN, được chia th&agrave;nh lưới &ocirc; vu&ocirc;ng đơn vị M d&ograve;ng N cột ( 1 &lt;= M, N &lt;= 1000 )</p>\n<p>Tr&ecirc;n c&aacute;c &ocirc; của bảng ghi số 0 hoặc 1. C&aacute;c d&ograve;ng của bảng được đ&aacute;nh số 1, 2... M theo thứ tự từ tr&ecirc;n xuống dưới v&agrave; c&aacute;c cột của bảng được đ&aacute;nh số 1, 2..., N theo thứ tự từ tr&aacute;i qua phải</p>\n<p>Y&ecirc;u cầu:</p>\n<p>H&atilde;y t&igrave;m một h&igrave;nh vu&ocirc;ng gồm c&aacute;c &ocirc; của bảng thoả m&atilde;n c&aacute;c điều kiện sau:</p>\n<p>1 - H&igrave;nh vu&ocirc;ng l&agrave; đồng nhất: tức l&agrave; c&aacute;c &ocirc; thuộc h&igrave;nh vu&ocirc;ng đ&oacute; phải ghi c&aacute;c số giống nhau (0 hoặc 1)</p>\n<p>2 - Cạnh h&igrave;nh vu&ocirc;ng song song với cạnh bảng.</p>\n<p>3 - K&iacute;ch thước h&igrave;nh vu&ocirc;ng l&agrave; lớn nhất c&oacute; thể</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: Ghi hai số m, n</p>\n<p>M d&ograve;ng tiếp theo, d&ograve;ng thứ i ghi N số m&agrave; số thứ j l&agrave; số ghi tr&ecirc;n &ocirc; (i, j) của bảng</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi k&iacute;ch thước cạnh của h&igrave;nh vu&ocirc;ng t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n11 13\n0 0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 1 1 1 0 0 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 1 1 1 1 1 1 1 1 1 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 0 0\n0 1 1 1 1 1 1 1 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 0 0 0 0 1 1\n0 0 0 0 0 1 0 0 0 0 0 1 1\n\n<strong>Output:</strong>\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2f1d972b-1ea9-4103-ad19-5f7392f95497",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBSQUARE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "qbstr-xau-con-chung-dai-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "QBSTR - Xâu con chung dài nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBSTR - X&acirc;u con chung d&agrave;i nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>X&acirc;u k&yacute; tự X được gọi l&agrave; x&acirc;u con của x&acirc;u k&yacute; tự Y nếu ta c&oacute; thể xo&aacute; đi một số k&yacute; tự trong x&acirc;u Y để được x&acirc;u X.</p>\n<p>Cho biết hai x&acirc;u k&yacute; tự A v&agrave; B, h&atilde;y t&igrave;m x&acirc;u k&yacute; tự C c&oacute; độ d&agrave;i lớn nhất v&agrave; l&agrave; con của cả A v&agrave; B.</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: chứa x&acirc;u A</p>\n<p>D&ograve;ng 2: chứa x&acirc;u B</p>\n<h3>Output</h3>\n<p>Chỉ gồm một d&ograve;ng ghi độ d&agrave;i x&acirc;u C t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\nabc1def2ghi3\nabcdefghi123\n\n<strong>Output:</strong>\n10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/75e215b4-50f5-411b-867c-b564072aa052",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qbticket-mua-ve-tau-hoa",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QBTICKET - Mua vé tàu hoả",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QBTICKET - Mua v&eacute; t&agrave;u hoả</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Tuyến đường sắt từ th&agrave;nh phố A đến th&agrave;nh phố B đi qua một số nh&agrave; ga. Tuyến đường c&oacute; thể biểu diễn bởi một đoạn thẳng, c&aacute;c nh&agrave; ga l&agrave; c&aacute;c điểm tr&ecirc;n đ&oacute;. Tuyến đường bắt đầu từ A v&agrave; kết th&uacute;c ở B, v&igrave; thế c&aacute;c nh&agrave; ga sẽ được đ&aacute;nh số bắt đầu từ A (c&oacute; số hiệu l&agrave; 1) v&agrave; B l&agrave; nh&agrave; ga cuối c&ugrave;ng.</p>\n<p>Gi&aacute; v&eacute; đi lại giữa hai nh&agrave; ga chỉ phụ thuộc v&agrave;o khoảng c&aacute;ch giữa ch&uacute;ng. C&aacute;ch t&iacute;nh gi&aacute; v&eacute; như sau:</p>\n<p>Khoảng c&aacute;ch giữa hai nh&agrave; ga (X)</p>\n<p>Khoảng c&aacute;ch 0 &lt; X &lt;= L1 -&gt; Gi&aacute; v&eacute; C1</p>\n<p>Khoảng c&aacute;ch 0 &lt; X &lt;= L2 -&gt; Gi&aacute; v&eacute; C2</p>\n<p>Khoảng c&aacute;ch 0 &lt; X &lt;= L3 -&gt; Gi&aacute; v&eacute; C3</p>\n<p>Nghĩa l&agrave; với c&aacute;c gi&aacute; v&eacute; C1, C2, C3 tương ứng bạn sẽ đi quảng đường tối đa l&agrave; L1, L2, L3.</p>\n<p>V&eacute; để đi thẳng từ nh&agrave; ga n&agrave;y đến nh&agrave; ga kh&aacute;c chỉ c&oacute; thể đặt mua nếu khoảng c&aacute;ch giữa ch&uacute;ng kh&ocirc;ng vượt qu&aacute; L3. V&igrave; thế nhiều khi để đi từ nh&agrave; ga n&agrave;y đến nh&agrave; ga kh&aacute;c ta phải đặt mua một số v&eacute;. Hơn thế nữa, nh&acirc;n vi&ecirc;n đường sắt y&ecirc;u cầu h&agrave;nh kh&aacute;ch chỉ được giữ đ&uacute;ng một v&eacute; khi đi tr&ecirc;n t&agrave;u v&agrave; v&eacute; đ&oacute; sẽ bị huỷ khi h&agrave;nh kh&aacute;ch xuống t&agrave;u.</p>\n<p>Y&ecirc;u cầu: T&igrave;m c&aacute;ch đặt mua v&eacute; để đi lại giữa hai nh&agrave; ga cho trước với chi ph&iacute; mua v&eacute; l&agrave; nhỏ nhất</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n ghi c&aacute;c số nguy&ecirc;n L1, L2, L3, C1, C2, C3 (1 &lt;= L1 &lt;= L2 &lt;= L3 &lt;= 10<sup>9</sup>; 1 &lt;= C1 &lt;= C2 &lt;= C3 &lt;= 10<sup>9</sup>) theo đ&uacute;ng thứ tự liệt k&ecirc; ở tr&ecirc;n.</p>\n<p>D&ograve;ng thứ hai chứa số lượng nh&agrave; ga N ( 2 &lt;= N &lt;= 100000 )</p>\n<p>D&ograve;ng thứ ba ghi hai số nguy&ecirc;n s, f l&agrave; c&aacute;c chỉ số của hai nh&agrave; ga cần t&igrave;m c&aacute;ch đặt mua v&eacute; với chi ph&iacute; nhỏ nhất để đi lại giữa ch&uacute;ng.</p>\n<p>D&ograve;ng thứ i trong số N - 1 d&ograve;ng tiếp theo ghi số nguy&ecirc;n l&agrave; khoảng c&aacute;ch từ nh&agrave; ga A (ga 1) đến nh&agrave; ga thứ i + 1.</p>\n<h3>Output</h3>\n<p>Gồm 1 d&ograve;ng duy nhất ghi chi ph&iacute; nhỏ nhất t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 6 8 20 30 40\n7\n2 6\n3\n7\n8\n13\n15\n23\n\n<strong>Output:</strong>\n70</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6e85d6fd-25f9-4b5f-b6af-ed67fd6523b2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QBTICKET_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qhroad-pha-duong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QHROAD - Phá đường",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QHROAD - Ph&aacute; đường</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Đất nước nọ c&oacute; N th&agrave;nh phố v&agrave; M con đường 2 chiều, mỗi con đường nối 2 th&agrave;nh phố. Ch&uacute; &yacute; l&agrave; giữa hai th&agrave;nh phố c&oacute; thể c&oacute; nhiều con đường kh&aacute;c nhau nối giữa ch&uacute;ng, v&agrave; cũng c&oacute; những con đường nối 1 th&agrave;nh phố với ch&iacute;nh n&oacute; (d&ugrave;ng cho du lịch chẳng hạn, đi loanh quanh chơi rồi trở về th&agrave;nh phố).</p>\n<p>Một nh&oacute;m c&aacute;c th&agrave;nh phố được gọi l&agrave; một v&ugrave;ng li&ecirc;n th&ocirc;ng nếu:</p>\n<ul>\n<li>Bất k&igrave; 2 th&agrave;nh phố n&agrave;o trong nh&oacute;m cũng đi đến được với nhau</li>\n<li>Kh&ocirc;ng thể th&ecirc;m bất k&igrave; một th&agrave;nh phố n&agrave;o kh&aacute;c v&agrave;o nh&oacute;m</li>\n</ul>\n<p>Một ng&agrave;y, đất nước bị giặc ngoại x&acirc;m đến x&acirc;m lược. Địch rất đ&ocirc;ng v&agrave; nguy hiểm, người ta quyết định ph&aacute; đi Q con đường để l&agrave;m chậm bước tiến của qu&acirc;n th&ugrave;.</p>\n<p>C&oacute; một c&acirc;u hỏi được đặt ra cho bạn l&agrave; sau khi ph&aacute; xong mỗi con đường, số v&ugrave;ng li&ecirc;n th&ocirc;ng l&agrave; bao nhi&ecirc;u.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: Ba số nguy&ecirc;n N, M, Q. (1 &le; N, M &le; 10<sup>5</sup>, 1 &le;&nbsp;Q &le; M).</li>\n<li>D&ograve;ng thứ i trong M d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 2 số x<sub>i</sub>, y<sub>i</sub>&nbsp;với &yacute; nghĩa: con đường thứ i nối 2 th&agrave;nh phố x<sub>i</sub>&nbsp;v&agrave; y<sub>i</sub>.</li>\n<li>D&ograve;ng thứ i trong Q d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa số id<sub>i</sub>&nbsp;l&agrave; số&nbsp;hiệu của con đường bị ph&aacute;. (Dữ liệu đảm b&agrave;o l&agrave; kh&ocirc;ng c&oacute; chuyện ph&aacute; lại con đường đ&atilde; ph&aacute;).</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>Gồm Q d&ograve;ng, d&ograve;ng thứ i trong Q d&ograve;ng n&agrave;y l&agrave; số v&ugrave;ng li&ecirc;n th&ocirc;ng sau khi ph&aacute; con đường id<sub>i</sub>.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Input 1:</strong>\n4 4 3<br />1 2<br />2 3<br />1 3<br />3 4<br />2<br />4<br />3\n\n<strong>Output 1:</strong>\n1<br />2<br />3\n\n<strong>Input 2:</strong>\n3 1 1<br />1 2<br />1&nbsp;</pre>\n<pre><strong>Output 2:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c53cd6f-a8a0-49a3-a975-d63bb9bac69f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QHROAD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qmax-gia-tri-lon-nhat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QMAX - Giá trị lớn nhất",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QMAX - Gi&aacute; trị lớn nhất</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một d&atilde;y gồm n phần tử c&oacute; gi&aacute; trị ban đầu bằng 0.</p>\n<p>Cho m ph&eacute;p biến đổi, mỗi ph&eacute;p c&oacute; dạng (u, v, k): tăng mỗi phần tử từ vị tr&iacute; u đến vị tr&iacute; v l&ecirc;n k đơn vị.</p>\n<p>Cho q c&acirc;u hỏi, mỗi c&acirc;u c&oacute; dạng (u, v): cho biết phần tử c&oacute; gi&aacute; trị lớn nhất thuộc đoạn [u, v]</p>\n<h3>Giới hạn</h3>\n<ul>\n<li>n, m, q &lt;= 50000</li>\n<li>k &gt; 0</li>\n<li>Gi&aacute; trị của một phần tử lu&ocirc;n kh&ocirc;ng vượt qu&aacute; 2<sup>31</sup>-1</li>\n</ul>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng 1: n, m</li>\n<li>m d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa u, v, k cho biết một ph&eacute;p biến đổi</li>\n<li>D&ograve;ng thứ m+2: p</li>\n<li>p d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa u, v cho biết một ph&eacute;p biến đổi</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm p d&ograve;ng chứa kết quả tương ứng cho từng c&acirc;u hỏi.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 2\n1 3 2\n4 6 3\n1\n3 4\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f759cd57-1171-411f-9c26-d9d3b03422ce",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QMAX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "qmax2-gia-tri-lon-nhat-ver2",
  "tags": [],
  "level": "BEGINNER",
  "title": "QMAX2 - Giá trị lớn nhất ver2",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QMAX2 - Gi&aacute; trị lớn nhất ver2</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Giống b&agrave;i \"Gi&aacute; trị lớn nhất\" ở tr&ecirc;n.</p>\n<h3>Input</h3>\n<p>- n: số phần tử của d&atilde;y (n &lt;= 50000).<br />- m: số lượng biến đổi v&agrave; c&acirc;u hỏi (m &lt;= 100000).<br />+) biến đổi c&oacute; dạng: 0 x y value<br />+) c&acirc;u hỏi c&oacute; dạng : 1 x y.</p>\n<h3>Output</h3>\n<p>Ghi ra trả lời cho lần lượt từng c&acirc;u hỏi.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n6 3\n0 1 3 3\n0 4 6 4\n1 1 6\n\n<strong>Output:</strong>\n4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/723344a2-be5f-46f7-ae85-5bec1f7e4dc5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QMAX2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "qtlove2-hoa-huong-duong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "QTLOVE2 - Hoa hướng dương",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QTLOVE2 - Hoa hướng dương</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Ng&agrave;y kỉ niệm 1 năm quen nhau của MN v&agrave; MH đ&atilde; tới. Ch&agrave;ng trai MN của ch&uacute;ng ta quyết định chuẩn bị 1 m&oacute;n qu&agrave; thật đặc biệt để tặng cho người y&ecirc;u của m&igrave;nh. MN đ&atilde; tự l&agrave;m cho MH một b&ocirc;ng hoa hướng dương thật to bằng giấy. Với t&agrave;i năng thi&ecirc;n bẩm c&ugrave;ng với sự tỉ mỉ, MN đ&atilde; l&agrave;m xong 1 b&ocirc;ng hoa thật to, nhị hoa l&agrave; 1 h&igrave;nh tr&ograve;n với N c&aacute;nh hoa c&aacute;ch đều nhau&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;C&ocirc;ng việc cuối c&ugrave;ng l&agrave; t&ocirc; m&agrave;u c&aacute;c c&aacute;nh hoa, c&ocirc;ng việc n&agrave;y kh&ocirc;ng hề đơn giản. Biết người y&ecirc;u m&igrave;nh rất th&iacute;ch m&agrave;u sắc sặc sỡ v&agrave; kh&ocirc;ng th&iacute;ch những b&ocirc;ng hoa n&agrave;o c&oacute; 2 c&aacute;nh hoa gần nhau c&oacute; m&agrave;u giống nhau. MN đ&atilde; chuẩn bị M m&agrave;u để trang tr&iacute;. MN muốn l&agrave;m thật nhiều b&ocirc;ng hoa kh&aacute;c nhau từ M m&agrave;u đ&oacute; để g&oacute;p th&agrave;nh một b&oacute; hoa thật lớn đem tặng MH. Nhưng khổ nỗi MN kh&ocirc;ng biết được b&oacute; hoa của m&igrave;nh sẽ c&oacute; bao nhi&ecirc;u b&ocirc;ng hoa để chuẩn bị. H&atilde;y gi&uacute;p anh bạn si t&igrave;nh khốn khổ của ch&uacute;ng ta n&agrave;o, đừng để người y&ecirc;u của m&igrave;nh nổi giận, con g&aacute;i nổi giận th&igrave; phải mất cả tuần để xin lỗi đ&oacute;&hellip;&hellip;.</p>\n<p><strong>Lưu &yacute;:</strong>&nbsp;Hai b&ocirc;ng hoa được gọi l&agrave; kh&aacute;c nhau nếu ch&uacute;ng c&oacute; 1 c&aacute;nh hoa c&oacute; m&agrave;u kh&aacute;c nhau</p>\n<p>&nbsp;</p>\n<p><strong>2 cặp hoa với n=5 v&agrave; n=6 tr&ecirc;n l&agrave; 2 cặp hoa kh&aacute;c nhau</strong></p>\n<p><strong>Input:</strong>&nbsp;Hai số N,M.</p>\n<p><strong>Output:</strong>&nbsp;Số b&ocirc;ng hoa sau khi modul 10<sup>9</sup>+7.</p>\n<p><strong>Example:</strong></p>\n<p>3 4</p>\n<p>24</p>\n<p>&nbsp;</p>\n<p>4 3</p>\n<p>18</p>\n<p><strong>Giới hạn:</strong>&nbsp;N&le;10<sup>18</sup>. M&le;10<sup>9</sup>.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cc50a9a7-d7f4-4e08-b9b5-05eea26c0371",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QTLOVE2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "quad-xay-hang-rao",
  "tags": [],
  "level": "BEGINNER",
  "title": "QUAD - Xây hàng rào",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>QUAD - X&acirc;y h&agrave;ng r&agrave;o</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N&ocirc;ng d&acirc;n John muốn x&acirc;y một c&aacute;i h&agrave;ng r&agrave;o c&oacute; 4 mặt v&acirc;y lấy đ&agrave;n b&ograve;. &Ocirc;ng ta c&oacute; một thanh gỗ c&oacute; độ d&agrave;i l&agrave; 1 số nguy&ecirc;n N (4 &lt;= N &lt;= 2,500), &ocirc;ng ta muốn cắt thanh gỗ n&agrave;y tại 3 điểm để chia th&agrave;nh 4 miếng nhỏ hơn, mỗi miếng c&oacute; độ d&agrave;i l&agrave; 1 số nguy&ecirc;n.</p>\n<p>4 miếng n&agrave;y d&agrave;i ngắn thế n&agrave;o cũng được miễn l&agrave; c&oacute; thể gi&uacute;p n&ocirc;ng d&acirc;n John đ&oacute;ng được 1 c&aacute;i h&agrave;ng r&agrave;o h&igrave;nh tứ gi&aacute;c l&agrave; được. Hỏi c&oacute; bao nhi&ecirc;u c&aacute;ch kh&aacute;c nhau cắt thanh gỗ ban đầu để tạo th&agrave;nh được h&agrave;ng r&agrave;o ?</p>\n<h3>CH&Uacute; &Yacute;</h3>\n<ul>\n<li>Hai c&aacute;ch cắt gọi l&agrave; kh&aacute;c nhau nếu một c&aacute;ch c&oacute; 1 nh&aacute;t cắt tại 1 điểm m&agrave; c&aacute;ch kia kh&ocirc;ng c&oacute;.</li>\n<li>Đảm bảo rằng h&agrave;ng r&agrave;o n&agrave;y x&acirc;y dựng c&oacute; diện t&iacute;ch lớn hơn 0.</li>\n<li>Ch&uacute; &yacute; đ&aacute;p &aacute;n lu&ocirc;n nằm trong phạm vi 1 số nguy&ecirc;n 32 bit c&oacute; dấu.</li>\n</ul>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: 1 số nguy&ecirc;n duy nhất: N</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; số c&aacute;ch m&agrave; n&ocirc;ng d&acirc;n John c&oacute; thể cắt thanh gỗ th&agrave;nh 4 miếng nhỏ hơn m&agrave; c&oacute; thể tạo được 1 tứ gi&aacute;c.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n6\n\n<strong>Kết quả</strong>\n6\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>N&ocirc;ng d&acirc;n John c&oacute; thể cắt thanh gỗ theo 10 c&aacute;ch: (1, 1, 1, 3); (1, 1, 2, 2); (1, 1, 3, 1); (1, 2, 1, 2); (1, 2, 2, 1); (1, 3, 1, 1); (2, 1, 1, 2); (2, 1, 2, 1); (2, 2, 1, 1); or (3, 1, 1, 1). Trong đ&oacute; 4 c&aacute;ch -- (1, 1, 1, 3), (1, 1, 3, 1), (1, 3, 1, 1), v&agrave; (3, 1, 1, 1) -- kh&ocirc;ng thể sử dụng để tạo th&agrave;nh 1 tứ gi&aacute;c.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/abb03d9b-dd72-496e-ad26-03ec2d34ea45",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QUAD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92e9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "revamp-revamping-trails",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "REVAMP - Revamping Trails",
  "content": "<div>\n<table>\n<tbody>\n<tr>\n<td>\n<h2>REVAMP - Revamping Trails</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Farmer John sẵn l&ograve;ng kiểm tra những ch&uacute; b&ograve; mỗi ngay. Anh ta đi ngang một số trong M (1 &lt;= M &lt;= 50,000) đường m&ograve;n được đ&aacute;nh số từ 1 đến M từ b&atilde;i cỏ 1, tất cả đường đi đến b&atilde;i cỏ N (một h&agrave;nh tr&igrave;nh sẽ tồn trại trong bản đồ trong dữ liệu kiểm tra). N b&atilde;i cỏ (1 &lt;= N &lt;= 10,000) được đ&aacute;nh số li&ecirc;n tiếp 1..N, trong trang trại của Farmer John, được nối bằng những đường m&ograve;n hai chiều. Mỗi đường m&ograve;n i nối b&atilde;i cỏ P1_i v&agrave; P2_i (1 &lt;= P1_i &lt;= N; 1 &lt;= P2_i &lt;= N) v&agrave; y&ecirc;u cầu T_i (1 &lt;= T_i &lt;= 1,000,000) đơn vị thời gian để đi qua.</p>\n<p>Anh ta muốn sử lại một số đường m&ograve;n trong trang trại để tiết kiệm thời gian trong h&agrave;nh tr&igrave;nh của anh ta. Đặc biệt, anh ta sẽ chọn K (1 &lt;= K &lt;= 20) đường m&ograve;n th&agrave;nh đường cao tốc, m&agrave; thời gian sẽ giảm xuống 0. H&atilde;y gi&uacute;p FJ chọn những đường m&ograve;n để tối thiểu thời gian từ b&atilde;i cỏ 1 đến N.</p>\n<h3>Dữ liệu</h3>\n<p>* D&ograve;ng 1: Ba số nguy&ecirc;n c&aacute;ch nhau: N, M, and K</p>\n<p>* D&ograve;ng 2..M+1: D&ograve;ng i+1 mi&ecirc;u tả đường m&ograve;n i với ba dấu c&aacute;ch nhau: P1_i, P2_i, and T_i</p>\n<h3>Kết quả</h3>\n<p>* D&ograve;ng 1: Chiều d&agrave;i ngắn nhất sẽ khi sửa kh&ocirc;ng nhiều hơn K đường m&ograve;n</p>\n<h3>V&iacute; dụ</h3>\n<p>Dữ liệu:</p>\n<p>4 4 1<br />1 2 10<br />2 4 10<br />1 3 1<br />3 4 100</p>\n<p>Kết quả</p>\n<p>1</p>\n</div>\n</div>\n<div>&nbsp;</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6c75b76b-daee-4881-8cb7-38c3e27c6096",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "REVAMP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ea"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "robocon-voi-2012-robocon",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ROBOCON - VOI 2012 Robocon",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>ROBOCON - VOI 2012 Robocon</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Cuộc thi v&ograve;ng loại Robocon năm nay c&oacute; chủ đề \"Gặp gỡ\". C&aacute;c Robot sẽ tranh t&agrave;i tr&ecirc;n một lưới &ocirc; vu&ocirc;ng gồm n h&agrave;ng n cột. C&aacute;c h&agrave;ng của lưới được đ&aacute;nh số từ 1 đến n, từ tr&ecirc;n xuống dưới. C&aacute;c cột của lưới được đ&aacute;nh số từ 1 đến n, từ tr&aacute;i sang phải. Tr&ecirc;n k &ocirc; vu&ocirc;ng của lưới c&oacute; đặt chướng ngại vật. Ở phần thi Robot tự động, mỗi đội sẽ phải sử dụng đồng thời hai con Robot.<br /><br />Tại thời điểm xuất ph&aacute;t, Robot thứ nhất được đặt tại &ocirc; (1,1), mỗi bước chỉ được ph&eacute;p di chuyển sang &ocirc; kề cạnh b&ecirc;n phải, hoặc xuống &ocirc; kề cạnh b&ecirc;n dưới hoặc xuống &ocirc; kề đỉnh ph&iacute;a dưới b&ecirc;n phải.<br /><br />Robot thứ hai được đặt tại &ocirc; (1,n), mỗi bước chỉ được ph&eacute;p di chuyển sang &ocirc; kề cạnh b&ecirc;n tr&aacute;i hoặc xuống &ocirc; kề cạnh b&ecirc;n dưới hoặc xuống &ocirc; kề đỉnh ph&iacute;a dưới b&ecirc;n tr&aacute;i.<br /><br />Bắt đầu từ thời điểm xuất ph&aacute;t được t&iacute;nh l&agrave; 0, hai Robot phải di chuyển li&ecirc;n tục theo qui tắc đ&atilde; n&ecirc;u. Thời gian di chuyển từ một &ocirc; sang &ocirc; kế tiếp được t&iacute;nh l&agrave; 1 gi&acirc;y. Nhiệm vụ của đội chơi l&agrave; phải lập tr&igrave;nh điều khiển hai Robot xuất ph&aacute;t c&ugrave;ng l&uacute;c, di chuyển tr&aacute;nh chướng ngại vật để gặp nhau tại một &ocirc; vu&ocirc;ng kh&ocirc;ng c&oacute; chướng ngại vật. Hai Robot gặp nhau c&agrave;ng sớm đội chơi c&agrave;ng được nhiều điểm. Lưới &ocirc; vu&ocirc;ng được thiết kế đảm bảo l&agrave; lu&ocirc;n c&oacute; c&aacute;ch đi để hai Robot gặp được nhau.<br /><br /><strong>Y&ecirc;u cầu</strong>: H&atilde;y t&igrave;m c&aacute;ch điều khiển sao cho hai Robot gặp nhau ở thời điểm sớm nhất.</p>\n<p><strong>R&agrave;ng buộc</strong>: 50% số tests ứng với 50% số điểm của b&agrave;i c&oacute; n &le; 100.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng thứ nhất chứa hai số nguy&ecirc;n dương n, k (n &le; 500, k &le; 10000).</li>\n<li>D&ograve;ng thứ i trong số k d&ograve;ng tiếp theo chứa 2 số nguy&ecirc;n dương u<sub>i</sub>, v<sub>i</sub>&nbsp;tương ứng l&agrave; tọa độ h&agrave;ng v&agrave; cột của &ocirc; c&oacute; đặt chướng ngại vật (i = 1, 2, ..., k).</li>\n</ul>\n<p>C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</p>\n<h3>Output</h3>\n<p>Ghi ra một số nguy&ecirc;n dương l&agrave; thời điểm sớm nhất t&igrave;m được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5 5<br />2 2<br />1 4<br />2 3<br />3 5<br />4 2\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/de895f9e-da8d-46f7-924e-3b2f9153f6ad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ROBOCON_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92eb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rotation-quay-banh-xe",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ROTATION - Quay bánh xe",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>ROTATION - Quay b&aacute;nh xe</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N&ocirc;ng d&acirc;n John c&oacute; một c&aacute;i m&aacute;y gặt đập cũ, m&aacute;y n&agrave;y y&ecirc;u cầu một số d&acirc;y curoa được đặt tr&ecirc;n c&aacute;c b&aacute;nh xe kh&aacute;c nhau để quay c&aacute;c bộ phận. Động cơ sẽ l&agrave;m quay b&aacute;nh xe 1 theo chiều kim đồng hồ, b&aacute;nh xe 1 lại được gắn k&egrave;m 1 d&acirc;y curoa với b&aacute;nh xe 2. B&aacute;nh xe 2 lại được gắn k&egrave;m 1 d&acirc;y curoa với b&aacute;nh xe 3 , v.v.. v&agrave; cứ như vậy c&oacute; tổng cộng N (1 &lt;= N &lt;= 1,000) b&aacute;nh xe (v&agrave; N-1 d&acirc;y curoa).</p>\n<p><img src=\"https://vn.spoj.com/SPOJVN/content/rotation1.jpg\" alt=\"\" /></p>\n<p>H&igrave;nh ở tr&ecirc;n minh họa 2 c&aacute;ch đặt d&acirc;y curoa giữa 2 b&aacute;nh xe. Trong h&igrave;nh minh họa, d&acirc;y curoa của b&aacute;nh xe 1 đ&atilde; trực tiếp l&agrave;m b&aacute;nh xe 2 chuyển động v&agrave; quay c&ugrave;ng chiều với b&aacute;nh xe 1 (gọi l&agrave; d&acirc;y curoa thẳng - straight belt). B&aacute;nh xe 3 quay k&eacute;o theo b&aacute;nh xe 4 cũng quay nhờ v&agrave;o d&acirc;y curoa ch&eacute;o (crossed belt) khiến cho b&aacute;nh xe 4 chuyển động ngược chiều so với b&aacute;nh xe 3 =&gt; Đảo ngược chiều chuyển động.</p>\n<p>Cho danh s&aacute;ch c&aacute;c dạng của curoa nối c&aacute;c b&aacute;nh xe với nhau. Biết rằng b&aacute;nh xe 1 được động cơ quay theo chiều kim đồng hồ. H&atilde;y x&aacute;c định chiều quay của b&aacute;nh xe N. Mỗi d&acirc;y curoa được m&ocirc; tả bởi 3 số nguy&ecirc;n:</p>\n<ul>\n<li>S_i -- b&aacute;nh xe t&aacute;c động (nguồn)</li>\n<li>D_i -- b&aacute;nh xe bị t&aacute;c động (đ&iacute;ch)</li>\n<li>C_i -- dạng của d&acirc;y curoa (0=d&acirc;y thẳng, 1=d&acirc;y ch&eacute;o)</li>\n</ul>\n<p>Thật kh&ocirc;ng may, FJ lại đưa ra danh s&aacute;ch c&aacute;c d&acirc;y curoa theo 1 thứ tự ngẫu nhi&ecirc;n.</p>\n<p>Dưới đ&acirc;y l&agrave; 1 v&iacute; dụ với N=4, b&aacute;nh xe 1 quay theo chiều kim đồng hồ.</p>\n<p><img src=\"https://vn.spoj.com/content/rotation2.jpg\" alt=\"\" /></p>\n<p>D&acirc;y curoa thẳng được nối tới b&aacute;nh xe 2 v&agrave; 3 bởi vậy m&agrave; ch&uacute;ng cũng chuyển động c&ugrave;ng chiều kim đồng hồ. C&ograve;n lại d&acirc;y curoa ch&eacute;o đảo ngược chuyển động v&igrave; vậy b&aacute;nh xe 4 (b&aacute;nh xe N) chuyển động ngược chiều kim đồng hồ.</p>\n<h3>DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất: N</li>\n<li>D&ograve;ng 2..N: Mỗi d&ograve;ng m&ocirc; tả 1 d&acirc;y curoa với 3 số nguy&ecirc;n: S_i, D_i, v&agrave; C_i</li>\n</ul>\n<h3>KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; chiều quay của b&aacute;nh xe N. (0=c&ugrave;ng chiều kim đồng hồ, 1=ngược chiều kim đồng hồ)</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre><strong>Dữ liệu</strong>\n4\n2 3 0\n3 4 1\n1 2 0\n\n<strong>Kết quả</strong>\n1</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/12527b93-f051-4e57-87b6-790061f7ec59",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ROTATION_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ec"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "safenet2-mang-may-tinh-an-toan",
  "tags": [],
  "level": "BEGINNER",
  "title": "SAFENET2 - Mạng máy tính an toàn",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>SAFENET2 - Mạng m&aacute;y t&iacute;nh an to&agrave;n</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>C&oacute; n m&aacute;y t&iacute;nh đ&aacute;nh số từ 1 đến n v&agrave; m d&acirc;y c&aacute;p mạng,giữa 2 m&aacute;y t&iacute;nh c&oacute; thể c&oacute; một hoặc nhiều đường d&acirc;y c&aacute;p mạng nối ch&uacute;ng,kh&ocirc;ng c&oacute; c&aacute;p mạng nối một m&aacute;y với ch&iacute;nh n&oacute;.Hai m&aacute;y t&iacute;nh c&oacute; thể truyền dữ liệu cho nhau nếu c&oacute; đường c&aacute;p nối trực tiếp giữa ch&uacute;ng hoặc truyền qua một số m&aacute;y trung gian.</p>\n<p>Một tập S c&aacute;c m&aacute;y t&iacute;nh được gọi l&agrave; hệ thống an to&agrave;n nếu d&ugrave; một m&aacute;y t&iacute;nh bất kỳ bị tấn c&ocirc;ng (do sự t&ograve; m&ograve; của người d&acirc;n :-(,cứ th&iacute;ch truy cập v&agrave; hack những trang cấm :-( ) th&igrave; trong số những m&aacute;y t&iacute;nh c&ograve;n lại,những m&aacute;y t&iacute;nh thuộc tập S vẫn c&oacute; thể truyền được dữ liệu cho nhau. X&aacute;c định số lượng lớn nhất c&oacute; thể c&aacute;c m&aacute;y t&iacute;nh của tập S</p>\n<h3>Input</h3>\n<p>-D&ograve;ng 1 chứa 2 số nguy&ecirc;n n,m(1&lt;=n&lt;=30.000,0&lt;=m&lt;=100.000)</p>\n<p>-m d&ograve;ng tiếp theo ghi th&ocirc;ng tin về c&aacute;c d&acirc;y c&aacute;p mạng,gồm 2 chỉ số của 2 m&aacute;y được d&acirc;y đ&oacute; nối trực tiếp</p>\n<h3>Output</h3>\n<p>Ghi một số nguy&ecirc;n duy nhất l&agrave; số lượng m&aacute;y t&iacute;nh lớn nhất t&igrave;m đc</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />8 10<br />1 2<br />2 3<br />3 1<br />1 4<br />4 5<br />5 1<br />1 6<br />6 7<br />7 8<br />8 1<br /><strong>Output:</strong><br />4</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/41eaca6b-b36c-45d2-b928-2137876143d6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SAFENET2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ed"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "search-day-so",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SEARCH - Dãy số",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>SEARCH - D&atilde;y số</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho ba d&atilde;y số nguy&ecirc;n dương A=(A_1,..,A_M) B=(B_1,...,B_N) v&agrave; C=(C_1,...,C_P)</p>\n<p>H&atilde;y t&igrave;m một d&atilde;y con d&agrave;i nhất gồm c&aacute;c phần tử&nbsp;<strong>li&ecirc;n tiếp&nbsp;</strong>của d&atilde;y C thỏa m&atilde;n hai điều kiện:</p>\n<ul>\n<li>Mọi phần tử của d&atilde;y A đều xuất hiện trong d&atilde;y con được chọn</li>\n<li>Kh&ocirc;ng phần tử n&agrave;o của d&atilde;y B xuất hiện trong d&atilde;y con được chọn</li>\n</ul>\n<p><em>&nbsp;</em></p>\n<h3>Input</h3>\n<p>D&ograve;ng 1 chứa ba số nguy&ecirc;n dương M, N, P</p>\n<p>D&ograve;ng 2 chứa M số nguy&ecirc;n dương A_1,...,A_M</p>\n<p>D&ograve;ng 3 chứa N số nguy&ecirc;n dương B_1,...,B_N</p>\n<p>D&ograve;ng 4 chứa P số nguy&ecirc;n dương P_1,...,P_N</p>\n<p><em>C&aacute;c số trong file dữ liệu đều l&agrave; số nguy&ecirc;n dương kh&ocirc;ng lớn hơn 10^5</em><em>, c&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau bởi dấu c&aacute;ch. Dữ liệu v&agrave;o đảm bảo t&igrave;m được d&atilde;y con kh&aacute;c rỗng gồm c&aacute;c phần tử li&ecirc;n tiếp của&nbsp;</em><em>&nbsp;thỏa m&atilde;n y&ecirc;u cầu đề b&agrave;i. Trong 50% số test, m,n,p &lt;= 1000</em></p>\n<h3>Output</h3>\n<p>Một số nguy&ecirc;n duy nhất l&agrave; độ d&agrave;i của d&atilde;y con t&igrave;m được</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>3 2 11</p>\n<p>1 2 3</p>\n<p>5 9</p>\n<p>1 2 9 2 2 1 4 5 3 1 2</p>\n<pre>\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6241b2e3-eac3-4012-b872-ba8b3841da42",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SEARCH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ee"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "search1-other-search-problem",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SEARCH1 - Other search problem",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>SEARCH1 - Other search problem</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Đề b&agrave;i v&agrave; y&ecirc;u cầu giữ nguy&ecirc;n như b&agrave;i Search&nbsp;</p>\n<p>&nbsp;</p>\n<p>Kh&aacute;c chỗ y&ecirc;u cầu phải c&oacute; đầy đủ cả số lượng c&aacute;c phần tử của d&atilde;y A trong d&atilde;y con của C.</p>\n<p>Xin lỗi c&aacute;c bạn, kết quả c&oacute; thể rỗng :\"&gt;</p>\n<p><strong>Example</strong></p>\n<p>&nbsp;</p>\n<p><strong>Input</strong></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>4 2 12</p>\n<p>&nbsp;</p>\n<p>1 1 2 3</p>\n<p>5 9</p>\n<p>1 2 9 2 2 1 4 5 3 1 1 2</p>\n<p>&nbsp;<strong>Output</strong></p>\n<p>4</p>\n<p>&nbsp;</p>\n<p><strong>Input</strong></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>4 2 11</p>\n<p>&nbsp;</p>\n<p>1 1 2 3</p>\n<p>5 9</p>\n<p>1 2 9 2 2 1 4 5 3 1 2</p>\n<p>&nbsp;<strong>Output</strong></p>\n<p>0</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5ee13a34-2b55-46f4-a1dd-d4a1b76b0ccf",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SEARCH1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ef"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sec-tin-mat",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "SEC - Tin mật",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>SEC - Tin mật</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Bessie định dẫn đ&agrave;n b&ograve; đi trốn. Để đảm bảo b&iacute; mật, đ&agrave;n b&ograve; li&ecirc;n lạc với nhau bằng c&aacute;ch tin nhắn nhị ph&acirc;n.</p>\n<p>Từng l&agrave; một nh&acirc;n vi&ecirc;n phản gi&aacute;n th&ocirc;ng minh, John đ&atilde; thu được M (1 &lt;= M &lt;= 50,000) tin nhắn mật, tuy nhi&ecirc;n với tin nhắn i John chỉ thu được b_i (1 &lt;= b_i &lt;= 10,000) bit đầu ti&ecirc;n.</p>\n<p>John đ&atilde; bi&ecirc;n soạn ra 1 danh s&aacute;ch N (1 &lt;= N &lt;= 50,000) c&aacute;c từ m&atilde; h&oacute;a m&agrave; đ&agrave;n b&ograve; c&oacute; khả năng đang sử dụng. Thật kh&ocirc;ng may, John chỉ biết được c_j (1 &lt;= c_j &lt;= 10,000) bit đầu ti&ecirc;n của từ m&atilde; h&oacute;a thứ j.</p>\n<p>Với mỗi từ m&atilde; h&oacute;a j, John muốn biết số lượng tin nhắn m&agrave; John thu được c&oacute; khả năng l&agrave; từ m&atilde; h&oacute;a j n&agrave;y. Tức l&agrave; với từ m&atilde; h&oacute;a j, c&oacute; bao nhi&ecirc;u tin nhắn thu được c&oacute; phần đầu giống với từ m&atilde; h&oacute;a j n&agrave;y. Việc của bạn l&agrave; phải t&iacute;nh số lượng n&agrave;y.</p>\n<p>Tổng số lượng c&aacute;c bit trong dữ liệu đầu v&agrave;o (tổng c&aacute;c b_i v&agrave; c_j) kh&ocirc;ng qu&aacute; 500,000.</p>\n<h3>QUY C&Aacute;CH NHẬP DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: 2 số nguy&ecirc;n: M v&agrave; N</li>\n<li>D&ograve;ng 2..M+1: D&ograve;ng i+1 m&ocirc; tả tin nhắn thứ i thu được, đầu ti&ecirc;n l&agrave; b_i sau đ&oacute; l&agrave; b_i bit c&aacute;ch nhau bởi dấu c&aacute;ch, c&aacute;c bit c&oacute; gi&aacute; trị 0 hoặc 1.</li>\n<li>D&ograve;ng M+2..M+N+1: D&Ograve;ng M+j+1 m&ocirc; tả từ m&atilde; h&oacute;a thứ j, đầu ti&ecirc;n l&agrave; c_j sau đ&oacute; l&agrave; c_j bit c&aacute;ch nhau bởi dấu c&aacute;ch.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre>4 5\n3 0 1 0\n1 1\n3 1 0 0\n3 1 1 0\n1 0\n1 1\n2 0 1\n5 0 1 0 0 1\n2 1 1\n</pre>\n<h3>GIẢI TH&Iacute;CH V&Iacute; DỤ</h3>\n<p>C&oacute; 4 tin nhắn v&agrave; 5 từ m&atilde; h&oacute;a. C&aacute;c tin nhắn thu được c&oacute; phần đầu l&agrave; 010, 1, 100 v&agrave; 110. C&aacute;c từ m&atilde; h&oacute;a c&oacute; phần đầu l&agrave; 0, 1, 01, 01001, v&agrave; 11.</p>\n<h3>QUY C&Aacute;CH GHI KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1..M: D&ograve;ng j: Số lượng tin nhắn m&agrave; c&oacute; khả năng l&agrave; từ m&atilde; h&oacute;a thứ j</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre>1\n3\n1\n1\n2\n</pre>\n<h3>GIẢI TH&Iacute;CH</h3>\n<p>0 chỉ c&oacute; khả năng l&agrave; 010 -&gt; 1 tin nhắn. 1 chỉ c&oacute; khả năng l&agrave; 1, 100, hoặc 110 -&gt; 3 tin nhắn. 01 chỉ c&oacute; thể l&agrave; 010 -&gt; 1 tin nhắn. 01001 chỉ c&oacute; thể l&agrave; 010 -&gt; 1 tin nhắn. 11 chỉ c&oacute; thể l&agrave; 1 hoặc 110 -&gt; 2 tin nhắn.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/037b4f07-549b-4eb7-9f2d-686fd77fa538",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SEC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f0"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "spseq-sequences",
  "tags": [],
  "level": "BEGINNER",
  "title": "SPSEQ - Sequences",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>SPSEQ - Sequences</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>W. l&agrave; 1 d&atilde;y c&aacute;c số nguy&ecirc;n dương. N&oacute; c&oacute; c&aacute;c đặc điểm sau:</p>\n<p>- Độ d&agrave;i của d&atilde;y l&agrave; 1 số lẻ:&nbsp;<strong>L = 2*N + 1</strong></p>\n<p>-&nbsp;<strong>N + 1</strong>&nbsp;số nguy&ecirc;n đầu ti&ecirc;n của d&atilde;y tạo th&agrave;nh 1 d&atilde;y tăng</p>\n<p><strong>- N + 1</strong>&nbsp;số nguy&ecirc;n cuối của d&atilde;y tạo th&agrave;nh 1 d&atilde;y giảm</p>\n<p>- Kh&ocirc;ng c&oacute; 2 số nguy&ecirc;n n&agrave;o cạnh nhau trong d&atilde;y c&oacute; gi&aacute; trị bằng nhau</p>\n<p>V&iacute; dụ:&nbsp;<strong>1, 2, 3, 4, 5, 4, 3, 2, 1</strong>&nbsp;l&agrave; 1 d&atilde;y W. độ d&agrave;i&nbsp;<strong>9</strong>. Tuy nhi&ecirc;n, d&atilde;y&nbsp;<strong>1, 2, 3, 4, 5, 4, 3, 2, 2&nbsp;</strong>kh&ocirc;ng l&agrave; 1 d&atilde;y W.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;Trong c&aacute;c d&atilde;y con của d&atilde;y số cho trước, t&igrave;m d&atilde;y W. c&oacute; độ d&agrave;i d&agrave;i nhất.</p>\n<h3>Input</h3>\n<p>D&ograve;ng 1: số nguy&ecirc;n dương N (N &lt;= 100000), độ d&agrave;i d&atilde;y số.</p>\n<p>D&ograve;ng 2: N số nguy&ecirc;n dương a<sub>i</sub>&nbsp;(a<sub>i</sub>&nbsp;&lt;= 10<sup>9</sup>).</p>\n<h3>Output</h3>\n<p>1 số nguy&ecirc;n dương duy nhất l&agrave; độ d&agrave;i d&atilde;y W. d&agrave;i nhất.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br />10<br />1 2 3 4 5 4 3 2 1 10<br /><br /><strong>Output:</strong><br />9<br /><br /><strong>Input:</strong><br />19<br />1 2 3 2 1 2 3 4 3 2 1 5 4 1 2 3 2 2 1<strong><br /><br /></strong><strong>Output:</strong><br />9</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9f363a69-77a3-43aa-ae45-968f34844e68",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SPSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f1"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "stable-on-dinh",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "STABLE - Ổn định",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>STABLE - Ổn định</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Trong mạng x&atilde; hội, mỗi trang web được tổ chức tr&ecirc;n một m&aacute;y t&iacute;nh th&agrave;nh vi&ecirc;n v&agrave; cung cấp dịch vụ truy nhập tới một số trang web kh&aacute;c. Để truy nhập tới một trang web n&agrave;o đ&oacute; kh&ocirc;ng c&oacute; trong danh mục kết nối trực tiếp của m&igrave;nh, người d&ugrave;ng phải truy nhập tới trang web kh&aacute;c c&oacute; kết nối với m&igrave;nh, dựa v&agrave;o danh mục dịch vụ của trang web n&agrave;y để chuyển tới trang web kh&aacute;c theo t&ugrave;y chọn, cứ như thế cho đến khi tới được trang web m&igrave;nh cần. Thời gian để truy nhập tới một trang web phụ thuộc chủ yếu v&agrave; số lần mở trang web trong qu&aacute; tr&igrave;nh truy nhập. Như vậy, người d&ugrave;ng cần chủ động chọn lộ tr&igrave;nh truy nhập hợp l&iacute;.</p>\n<p>Sau một thời gian l&agrave;m việc tr&ecirc;n mạng, S&aacute;ng - một th&agrave;nh vi&ecirc;n nhiệt th&agrave;nh đ&atilde; t&iacute;ch lũy kinh nghiệm, tạo một cơ sở dữ liệu, cho biết từ một trang web c&oacute; thể đi tới những trang web n&agrave;o trong mạng. Trong cơ sở dữ liệu, c&aacute;c trang web được đ&aacute;nh số từ 1 đến n v&agrave; c&oacute; m bản ghi, mỗi bản ghi c&oacute; dạng cặp c&oacute; thứ tự (u, v) cho biết trang web u c&oacute; kết nối tới trang web v ( 1 &le; u, v &le; n, u &ne; v). Cơ sở dữ liệu chưa được chuẩn h&oacute;a, v&igrave; vậy c&oacute; thể chứa c&aacute;c cặp (u, v) giống nhau.</p>\n<p>Trang web của S&aacute;ng c&oacute; số hiệu l&agrave; s. Dựa v&agrave;o cơ sở dữ liệu, S&aacute;ng c&oacute; thể x&aacute;c định lộ tr&igrave;nh truy nhập nhanh nhất (tức l&agrave; số lần phải mở trang web l&agrave; &iacute;t nhất) từ trang web s tới trang web u bất k&igrave;. Tuy vậy, ở mạng x&atilde; hội, mọi chuyện đều c&oacute; thể xảy ra: một khu vực n&agrave;o đ&oacute; bị mất điện, m&aacute;y của một th&agrave;nh vi&ecirc;n bị hỏng, trang web đ&oacute; đang bị đ&oacute;ng để n&acirc;ng cấp, ... Kết quả l&agrave; một v&agrave;i trang web n&agrave;o đ&oacute; c&oacute; thể tạm thời kh&ocirc;ng hoạt động. Như vậy, nếu từ s c&oacute; &iacute;t nhất hai lộ tr&igrave;nh nhanh nhất kh&aacute;c nhau tới u th&igrave; khả năng thực hiện truy nhập được một c&aacute;ch nhanh nhất tới u l&agrave; lớn hơn so với những trang web chỉ c&oacute; duy nhất một lộ tr&igrave;nh nhanh nhất. Hai lộ tr&igrave;nh gọi l&agrave; kh&aacute;c nhau nếu c&oacute; &iacute;t nhất một trang web c&oacute; ở lộ tr&igrave;nh n&agrave;y m&agrave; kh&ocirc;ng c&oacute; ở lộ tr&igrave;nh kia hoặc cả hai lộ tr&igrave;nh c&ugrave;ng đi qua những trang web như nhau nhưng theo c&aacute;c tr&igrave;nh tự kh&aacute;c nhau. Những trang web m&agrave; từ s tới đ&oacute; c&oacute; &iacute;t ra l&agrave; hai lộ tr&igrave;nh nhanh nhất kh&aacute;c nhau được gọi l&agrave;&nbsp;<strong>ổn định đối với s</strong>. Trang web m&agrave; từ s kh&ocirc;ng c&oacute; lộ tr&igrave;nh tới n&oacute; l&agrave; kh&ocirc;ng ổn định đối với s.</p>\n<p>&nbsp;</p>\n<center><img src=\"http://i228.photobucket.com/albums/ee103/AnhDQ/img132.jpg\" /></center>\n<p>&nbsp;</p>\n<p>V&iacute; dụ, với mạng n&ecirc;u ở h&igrave;nh tr&ecirc;n (n = 6, m = 9) c&aacute;c trang web 4 v&agrave; 3 l&agrave; ổn định với s = 1 (từ 1 tới 4 c&oacute; 2 lộ tr&igrave;nh nhanh nhất: 1 - 2 - 4 v&agrave; 1 - 5 - 4, từ 1 tới 3 cũng c&oacute; 2 lộ tr&igrave;nh nhanh nhất: 1 - 2 - 4 - 3 v&agrave; 1 - 5 - 4 - 3).</p>\n<center>\n<h2>Y&ecirc;u cầu</h2>\n</center>\n<p>Cho c&aacute;c số nguy&ecirc;n dương n, m, s v&agrave; m cặp số (u, v) x&aacute;c định từ u c&oacute; thể kết nối trực tiếp tới được v. H&atilde;y x&aacute;c định số lượng trang web ổn định đối với s.</p>\n<center>\n<h2>Dữ liệu</h2>\n</center>\n<p>&nbsp;</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 3 số nguy&ecirc;n n, m v&agrave; s (2 &le; 10000, 1 &le; m &le; 50000, 1 &le; s &le; n).</li>\n<li>Mỗi d&ograve;ng trong m d&ograve;ng tiếp theo chứa 2 số nguy&ecirc;n u v&agrave; v (1 &le; u, v &le; n, u &ne; v).</li>\n</ul>\n<br />C&aacute;c số tr&ecirc;n một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.\n<p>&nbsp;</p>\n<center>\n<h2>Kết quả</h2>\n</center>\n<p>Một số nguy&ecirc;n - số trang web ổn định đối với s.</p>\n<center>\n<h2>V&iacute; dụ</h2>\n</center><br />(giống v&iacute; dụ n&ecirc;u trong đề b&agrave;i, nhưng c&oacute; chứa c&aacute;c cặp dữ liệu lặp)\n<pre>Input:\n6 11 1\n1 5\n1 5\n5 6\n1 2\n5 4\n2 4\n4 3\n5 4\n5 2\n3 2\n6 5\n\nOutput:\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92369882-4fcd-43cd-90f7-bba6d2dea097",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "STABLE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f2"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "stmerge-voi-2013-tron-xau",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "STMERGE - VOI 2013 - Trộn xâu",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>STMERGE - VOI 2013 - Trộn x&acirc;u</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho 2 x&acirc;u k&yacute; tự&nbsp;<em>X</em>&nbsp;=&nbsp;<em>x<sub>1</sub>, x<sub>2</sub>, .., x<sub>m</sub></em>&nbsp;v&agrave;&nbsp;<em>Y</em>&nbsp;=&nbsp;<em>y<sub>1</sub>, y<sub>2</sub>, ..., y<sub>n</sub></em>. Cần x&acirc;y dựng x&acirc;u&nbsp;<em>T</em>&nbsp;=&nbsp;<em>t<sub>1</sub>, t<sub>2</sub>, t<sub>3</sub>, ..,t<sub>n+m</sub></em><sub>.&nbsp;</sub>gồm tất cả c&aacute;c k&yacute; tự trong x&acirc;u X v&agrave; tất cả c&aacute;c k&yacute; tự trong x&acirc;u&nbsp;<em>Y</em>, sao cho c&aacute;c k&yacute; tự trong&nbsp;<em>X</em>&nbsp;xuất hiện trong&nbsp;<em>T</em>&nbsp;theo thứ tự xuất hiện trong&nbsp;<em>X</em>&nbsp;v&agrave; c&aacute;c k&yacute; tự trong&nbsp;<em>Y</em>&nbsp;xuất hiện trong T theo đ&uacute;ng thứ tự xuất hiện trong&nbsp;<em>Y</em>, đồng thời với tổng chi ph&iacute; trộn l&agrave; nhỏ nhất. Tổng chi ph&iacute; trộn hai x&acirc;u&nbsp;<em>X</em>&nbsp;v&agrave;&nbsp;<em>Y</em>&nbsp;để thu được x&acirc;u&nbsp;<em>T</em>&nbsp;được t&iacute;nh bởi c&ocirc;ng thức c(<em>T</em>) = sum(c(<em>t<sub>k</sub>, t<sub>k+1</sub></em><sub>&nbsp;</sub>)) với k = 1, 2, .., &nbsp;n+m-1; trong đ&oacute;, c&aacute;c chi ph&iacute; c(<em>t<sub>k</sub>, t<sub>k+1</sub></em>) được t&iacute;nh như sau:</p>\n<ul>\n<li>Nếu hai k&yacute; tự li&ecirc;n tiếp&nbsp;<em>t<sub>k</sub>, t<sub>k+1</sub></em>&nbsp;được lấy từ c&ugrave;ng một x&acirc;u X hoặc Y th&igrave; c(<em>t<sub>k</sub>, t<sub>k+1</sub></em>) = 0</li>\n<li>Nếu hai k&yacute; tự li&ecirc;n tiếp&nbsp;<em>t<sub>k</sub>, t<sub>k+</sub>1</em>&nbsp;l&agrave; x<sub>i</sub>&nbsp;y<sub>j</sub>&nbsp;th&igrave; chi ph&iacute; phải trả l&agrave; c(<em>x<sub>i</sub>, y<sub>j</sub></em>). Nếu hai k&yacute; tự li&ecirc;n tiếp&nbsp;<em>t<sub>k</sub>, t<sub>k+1</sub></em><sub>&nbsp;</sub>l&agrave;&nbsp;<em>y<sub>j</sub>, x<sub>i</sub></em><sub>&nbsp;</sub>th&igrave; chi ph&iacute; phải trả l&agrave; c(<em>y<sub>j</sub>, x<sub>i</sub></em>) = c(<em>x<sub>i</sub>, y<sub>j</sub></em>)</li>\n</ul>\n<h3>Input</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa Q l&agrave; số lượng bộ dữ liệu. tiếp đến l&agrave; Q nh&oacute;m d&ograve;ng, mỗi nh&oacute;m cho thong tin về 1 bộ dữ liệu theo khu&ocirc;n dạng sau:</p>\n<ul>\n<li>D&ograve;ng thứ nhất chứa 2 số nguy&ecirc;n duong m, n (m, n &lt;= 1000);</li>\n<li>D&ograve;ng thứ&nbsp;<em>i</em>&nbsp;trong m d&ograve;ng tiếp theo chứa n số nguy&ecirc;n dương, mỗi số kh&ocirc;ng vượt qu&aacute; 10^9: c(<em>x<sub>i</sub>, y<sub>1</sub></em>), c(<em>x<sub>i</sub>, y<sub>2</sub></em>), &hellip;, c(<em>x<sub>i</sub>, y<sub>n</sub></em>),&nbsp;<em>i</em>&nbsp;= 1, 2,&hellip;, m.</li>\n</ul>\n<p>R&agrave;ng buộc : C&oacute; 60% số test ứng với 60% số điểm của b&agrave;i đ&oacute; c&oacute; m, n &lt;= 10</p>\n<h3>Output</h3>\n<ul>\n<li>Gồm Q d&ograve;ng, mỗi d&ograve;ng chứa một số nguy&ecirc;n l&agrave; tổng chi ph&iacute; theo c&aacute;ch x&acirc;y dựng x&acirc;u&nbsp;<em>T</em>&nbsp;t&igrave;m được tương ứng với bộ dữ liệu v&agrave;o.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>1</p>\n<p>2 3</p>\n<p>3 2 30</p>\n<pre>15 5 4\n\n<strong>Output:</strong>\n</pre>\n<pre>6</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e52be6f9-0726-4ba1-8c9b-49d2addcfa18",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "STMERGE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f3"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "stone1-rai-soi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "STONE1 - Rải sỏi",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>STONE1 - Rải sỏi</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>X&eacute;t tr&ograve; chơi rải sỏi với một người chơi như sau:</p>\n<p>Cho c&acirc;y T v&agrave; một đống sỏi gồm K vi&ecirc;n. Ở mỗi bước người ta lấy 1 vi&ecirc;n sỏi từ đống sỏi v&agrave; đặt v&agrave;o một n&uacute;t l&aacute; tuỳ &yacute;. Nếu n&uacute;t p c&oacute; r n&uacute;t l&aacute; v&agrave; tất cả c&aacute;c n&uacute;t l&aacute; đều đ&atilde; c&oacute; sỏi th&igrave; người ta gom tất cả c&aacute;c vi&ecirc;n sỏi ở c&aacute;c n&uacute;t l&aacute; lại, đặt 1 vi&ecirc;n ở n&uacute;t p, xo&aacute; c&aacute;c n&uacute;t l&aacute; v&agrave; trả r - 1 vi&ecirc;n sỏi c&ograve;n lại v&agrave;o đống sỏi.</p>\n<p>Tr&ograve; chơi kết th&uacute;c khi đ&atilde; đặt được 1 vi&ecirc;n sỏi v&agrave;o n&uacute;t gốc</p>\n<p>Y&ecirc;u cầu: cho c&acirc;y T, x&aacute;c định số vi&ecirc;n sỏi tối thiểu cần c&oacute; để tr&ograve; chơi c&oacute; thể kết th&uacute;c. C&acirc;y c&oacute; n n&uacute;t (N &lt;= 400), n&uacute;t gốc được đ&aacute;nh số 1.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu: số n.</li>\n<li>Một số d&ograve;ng tiếp theo, mỗi d&ograve;ng c&oacute; dạng: i m i1 i2 ... im. Trong đ&oacute; m l&agrave; số n&uacute;t con của n&uacute;t i; i1, i2, ..., im: c&aacute;c n&uacute;t con của n&uacute;t i.</li>\n</ul>\n<h3>Output</h3>\n<p>Số lượng vi&ecirc;n sỏi &iacute;t nhất cần c&oacute;.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n7\n1 2 2 3\n2 2 5 4\n3 2 6 7\n\n<strong>Output:</strong>\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0dd95252-25d4-41de-84d7-d00cfe02c47e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "STONE1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f4"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "taytruc-duong-len-tay-truc",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TAYTRUC - Đường lên Tây Trúc",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>TAYTRUC - Đường l&ecirc;n T&acirc;y Tr&uacute;c</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<div id=\"_mcePaste\"></div>\n<div id=\"_mcePaste\">Một h&agrave;nh giả (nh&agrave; tu h&agrave;nh) muốn đến được T&acirc;y Tr&uacute;c cần lần lượt thỉnh hết N ng&ocirc;i ch&ugrave;a (c&aacute;c&nbsp;</div>\n<div id=\"_mcePaste\">ng&ocirc;i ch&ugrave;a được đ&aacute;nh số từ 1 đến N theo tr&igrave;nh tự thỉnh) đồng thời phải tr&uacute;t bỏ hết số hồ l&ocirc; mang tr&ecirc;n&nbsp;</div>\n<div id=\"_mcePaste\">người sau khi thỉnh hết N ng&ocirc;i ch&ugrave;a đ&oacute; v&agrave; t&iacute;ch lũy được c&agrave;ng nhiều c&agrave;ng tốt số hạt x&aacute; lợi khi kết th&uacute;c&nbsp;</div>\n<div id=\"_mcePaste\">h&agrave;nh tr&igrave;nh. Tại mỗi ng&ocirc;i ch&ugrave;a đều đặt một hồ l&ocirc; c&oacute; chứa một số n&agrave;o đ&oacute; c&aacute;c hạt x&aacute; lợi: hồ l&ocirc; ở ng&ocirc;i&nbsp;</div>\n<div id=\"_mcePaste\">ch&ugrave;a i c&oacute; chứa X</div>\n<div id=\"_mcePaste\">i</div>\n<div id=\"_mcePaste\">&nbsp;hạt.&nbsp;</div>\n<div id=\"_mcePaste\">Xuất ph&aacute;t từ ng&ocirc;i ch&ugrave;a 1 (trước khi xuất ph&aacute;t, h&agrave;nh giả kh&ocirc;ng c&oacute; hồ l&ocirc; n&agrave;o mang tr&ecirc;n người),&nbsp;</div>\n<div id=\"_mcePaste\">mỗi khi đặt ch&acirc;n đến một ng&ocirc;i ch&ugrave;a i h&agrave;nh giả c&oacute; thể c&oacute; một trong hai lựa chọn: &nbsp;</div>\n<div id=\"_mcePaste\"> &nbsp;Lấy &nbsp;quả hồ l&ocirc; ở đ&oacute; v&agrave; được thu &nbsp;giữ to&agrave;n &nbsp;bộ x&aacute; &nbsp;lợi &nbsp;c&oacute; &nbsp;trong hồ l&ocirc;. Trường &nbsp;hợp &nbsp;n&agrave;y&nbsp;</div>\n<div id=\"_mcePaste\">khiến h&agrave;nh giả phải mang theo tr&ecirc;n người hồ l&ocirc; n&agrave;y để tiếp tục h&agrave;nh tr&igrave;nh. &nbsp;</div>\n<div id=\"_mcePaste\"> &nbsp;Bỏ qua, kh&ocirc;ng lấy quả hồ l&ocirc; đ&oacute;. Trường hợp n&agrave;y khiến h&agrave;nh giả kh&ocirc;ng lấy được số x&aacute;&nbsp;</div>\n<div id=\"_mcePaste\">lợi c&oacute; trong hồ l&ocirc;.&nbsp;</div>\n<div id=\"_mcePaste\">Việc lấy th&ecirc;m hoặc tr&uacute;t bỏ bớt hồ l&ocirc; phải tu&acirc;n theo quy tắc nghi&ecirc;m ngặt sau đ&acirc;y.&nbsp;</div>\n<div id=\"_mcePaste\">Khi đang thỉnh tại ch&ugrave;a i (1 &le; i &le; N) v&agrave; số hồ l&ocirc; đang mang tr&ecirc;n người l&agrave; K (K &ge; 0) th&igrave;:&nbsp;</div>\n<div id=\"_mcePaste\">&nbsp; 1. Trong mọi t&igrave;nh huống, h&agrave;nh giả được quyền kh&ocirc;ng lấy hồ l&ocirc; tại đ&acirc;y nếu muốn. &nbsp;</div>\n<div id=\"_mcePaste\">&nbsp; 2. H&agrave;nh giả chỉ được lấy th&ecirc;m hồ l&ocirc; tại đ&acirc;y khi một trong hai trường hợp sau xảy ra:&nbsp;</div>\n<div id=\"_mcePaste\">- Trường hợp 1: &nbsp;K = 0 ;&nbsp;</div>\n<div id=\"_mcePaste\">- Trường hợp 2: &nbsp;0 &lt; K &lt; M v&agrave; trước đ&oacute;, tại ch&ugrave;a i -1 h&agrave;nh giả c&oacute; lấy hồ l&ocirc;. &nbsp;&nbsp;</div>\n<div id=\"_mcePaste\">&nbsp; 3. H&agrave;nh giả chỉ được bỏ bớt đ&uacute;ng một hồ l&ocirc; mang tr&ecirc;n người khi K &gt; 0 đồng thời tại ch&ugrave;a&nbsp;</div>\n<div id=\"_mcePaste\">n&agrave;y h&agrave;nh giả đ&atilde; kh&ocirc;ng lấy hồ l&ocirc;.&nbsp;</div>\n<div id=\"_mcePaste\">(Như vậy, nếu tại ch&ugrave;a i h&agrave;nh giả kh&ocirc;ng lấy hồ l&ocirc; v&agrave; số hồ l&ocirc; đang mang tr&ecirc;n người l&agrave; K th&igrave;&nbsp;</div>\n<div id=\"_mcePaste\">h&agrave;nh giả được tr&uacute;t bỏ bớt 1 hồ l&ocirc; tại đ&acirc;y nhưng nếu K &gt; 1 th&igrave; h&agrave;nh giả kh&ocirc;ng được lấy hồ l&ocirc;&nbsp;</div>\n<div id=\"_mcePaste\">tại K-1 ch&ugrave;a tiếp theo để tr&uacute;t bỏ hết K-1 hồ l&ocirc; đ&oacute; rồi mới c&oacute; thể tiếp tục lấy th&ecirc;m hồ l&ocirc; (nếu&nbsp;</div>\n<div id=\"_mcePaste\">c&ograve;n v&agrave; nếu muốn)).&nbsp;</div>\n<div id=\"_mcePaste\"></div>\n<div id=\"_mcePaste\">Y&ecirc;u cầu: X&aacute;c định số S, l&agrave; số nhiều nhất hạt x&aacute; lợi m&agrave; h&agrave;nh giả c&oacute; thể thu được sau khi đến được&nbsp;</div>\n<div id=\"_mcePaste\">T&acirc;y Tr&uacute;c.&nbsp;</div>\n<div id=\"_mcePaste\">Dữ liệu: Đọc từ file văn bản TAYTRUC.INP, c&oacute; cấu tr&uacute;c: &nbsp;</div>\n<div id=\"_mcePaste\"> &nbsp;D&ograve;ng đầu ghi lần lượt 2 số nguy&ecirc;n N v&agrave; M (2 &le; N &le; 10000; 1 &le; M &le; 500);&nbsp;</div>\n<div id=\"_mcePaste\"> &nbsp;N d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi một số nguy&ecirc;n dương: d&ograve;ng i+1 ghi số Xi</div>\n<div id=\"_mcePaste\">, (Xi &nbsp;&le; 1000).&nbsp;</div>\n<div id=\"_mcePaste\">Kết quả: &nbsp;Ghi ra file văn bản TAYTRUC.OUT duy nhất số nguy&ecirc;n S t&igrave;m được.&nbsp;</div>\n<div id=\"_mcePaste\">V&iacute; dụ:&nbsp;</div>\n<div id=\"_mcePaste\">&nbsp;TAYTRUC.INP &nbsp;TAYTRUC.OUT&nbsp;</div>\n<div id=\"_mcePaste\">9 4&nbsp;</div>\n<div id=\"_mcePaste\">1&nbsp;</div>\n<div id=\"_mcePaste\">9&nbsp;</div>\n<div id=\"_mcePaste\">8&nbsp;</div>\n<div id=\"_mcePaste\">3&nbsp;</div>\n<div id=\"_mcePaste\">4&nbsp;</div>\n<div id=\"_mcePaste\">9&nbsp;</div>\n<div id=\"_mcePaste\">8&nbsp;</div>\n<div id=\"_mcePaste\">9&nbsp;</div>\n<div id=\"_mcePaste\">7&nbsp;</div>\n<div id=\"_mcePaste\">35&nbsp;</div>\n<div id=\"_mcePaste\">Giải th&iacute;ch: H&agrave;nh giả sẽ lấy hồ l&ocirc; tại c&aacute;c ch&ugrave;a 2, 3, 6, 8.&nbsp;</div>\n<p>Một h&agrave;nh giả (nh&agrave; tu h&agrave;nh) muốn đến được T&acirc;y Tr&uacute;c cần lần lượt thỉnh hết N ng&ocirc;i ch&ugrave;a (c&aacute;c</p>\n<p>ng&ocirc;i ch&ugrave;a được đ&aacute;nh số từ 1 đến N theo tr&igrave;nh tự thỉnh) đồng thời phải tr&uacute;t bỏ hết số hồ l&ocirc; mang tr&ecirc;n</p>\n<p>người sau khi thỉnh hết N ng&ocirc;i ch&ugrave;a đ&oacute; v&agrave; t&iacute;ch lũy được c&agrave;ng nhiều c&agrave;ng tốt số hạt x&aacute; lợi khi kết th&uacute;c</p>\n<p>h&agrave;nh tr&igrave;nh. Tại mỗi ng&ocirc;i ch&ugrave;a đều đặt một hồ l&ocirc; c&oacute; chứa một số n&agrave;o đ&oacute; c&aacute;c hạt x&aacute; lợi: hồ l&ocirc; ở ng&ocirc;i&nbsp;</p>\n<div>ch&ugrave;a i c&oacute; chứa X<sub>i</sub>&nbsp;hạt.</div>\n<div>&nbsp;</div>\n<div>Xuất ph&aacute;t từ ng&ocirc;i ch&ugrave;a 1 (trước khi xuất ph&aacute;t, h&agrave;nh giả kh&ocirc;ng c&oacute; hồ l&ocirc; n&agrave;o mang tr&ecirc;n người),</div>\n<div>mỗi khi đặt ch&acirc;n đến một ng&ocirc;i ch&ugrave;a i h&agrave;nh giả c&oacute; thể c&oacute; một trong hai lựa chọn :</div>\n<div>-&nbsp;Lấy &nbsp;quả hồ l&ocirc; ở đ&oacute; v&agrave; được thu &nbsp;giữ to&agrave;n &nbsp;bộ x&aacute; &nbsp;lợi &nbsp;c&oacute; &nbsp;trong hồ l&ocirc;. Trường &nbsp;hợp &nbsp;n&agrave;y&nbsp;</div>\n<div>khiến h&agrave;nh giả phải mang theo tr&ecirc;n người hồ l&ocirc; n&agrave;y để tiếp tục h&agrave;nh tr&igrave;nh. &nbsp;</div>\n<div>-&nbsp;Bỏ qua, kh&ocirc;ng lấy quả hồ l&ocirc; đ&oacute;. Trường hợp n&agrave;y khiến h&agrave;nh giả kh&ocirc;ng lấy được số x&aacute;&nbsp;</div>\n<div>lợi c&oacute; trong hồ l&ocirc;.</div>\n<div>&nbsp;</div>\n<div>Việc lấy th&ecirc;m hoặc tr&uacute;t bỏ bớt hồ l&ocirc; phải tu&acirc;n theo quy tắc nghi&ecirc;m ngặt sau đ&acirc;y :</div>\n<div>&nbsp;</div>\n<div>Khi đang thỉnh tại ch&ugrave;a i (1 &le; i &le; N) v&agrave; số hồ l&ocirc; đang mang tr&ecirc;n người l&agrave; K (K &ge; 0) th&igrave;:&nbsp;</div>\n<div>&nbsp; 1. Trong mọi t&igrave;nh huống, h&agrave;nh giả được quyền kh&ocirc;ng lấy hồ l&ocirc; tại đ&acirc;y nếu muốn. &nbsp;</div>\n<div>&nbsp; 2. H&agrave;nh giả chỉ được lấy th&ecirc;m hồ l&ocirc; tại đ&acirc;y khi một trong hai trường hợp sau xảy ra:&nbsp;</div>\n<div>- Trường hợp 1 : &nbsp;K = 0</div>\n<div>- Trường hợp 2 : &nbsp;0 &lt; K &lt; M v&agrave; trước đ&oacute;, tại ch&ugrave;a i -1 h&agrave;nh giả c&oacute; lấy hồ l&ocirc;</div>\n<div>&nbsp; 3. H&agrave;nh giả chỉ được bỏ bớt đ&uacute;ng một hồ l&ocirc; mang tr&ecirc;n người khi K &gt; 0 đồng thời tại ch&ugrave;a</div>\n<div>n&agrave;y h&agrave;nh giả đ&atilde; kh&ocirc;ng lấy hồ l&ocirc;.</div>\n<div>&nbsp;</div>\n<div>(Như vậy, nếu tại ch&ugrave;a i h&agrave;nh giả kh&ocirc;ng lấy hồ l&ocirc; v&agrave; số hồ l&ocirc; đang mang tr&ecirc;n người l&agrave; K th&igrave;&nbsp;</div>\n<div>h&agrave;nh giả được tr&uacute;t bỏ bớt 1 hồ l&ocirc; tại đ&acirc;y nhưng nếu K &gt; 1 th&igrave; h&agrave;nh giả kh&ocirc;ng được lấy hồ l&ocirc;&nbsp;</div>\n<div>tại K-1 ch&ugrave;a tiếp theo để tr&uacute;t bỏ hết K-1 hồ l&ocirc; đ&oacute; rồi mới c&oacute; thể tiếp tục lấy th&ecirc;m hồ l&ocirc; (nếu&nbsp;</div>\n<div>c&ograve;n v&agrave; nếu muốn)).&nbsp;</div>\n<div>&nbsp;</div>\n<div><strong>Y&ecirc;u cầu :</strong>&nbsp;X&aacute;c định số S, l&agrave; số nhiều nhất hạt x&aacute; lợi m&agrave; h&agrave;nh giả c&oacute; thể thu được sau khi đến được&nbsp;</div>\n<div>T&acirc;y Tr&uacute;c</div>\n<div>&nbsp;</div>\n<div><strong>Dữ liệu v&agrave;o :</strong></div>\n<div>-&nbsp;D&ograve;ng đầu ghi lần lượt 2 số nguy&ecirc;n N v&agrave; M (2 &le; N &le; 10000; 1 &le; M &le; 500)</div>\n<div>-&nbsp;N d&ograve;ng tiếp theo, mỗi d&ograve;ng ghi một số nguy&ecirc;n dương: d&ograve;ng i+1 ghi số X<sub>i</sub>&nbsp;(X<sub>i</sub>&nbsp;&nbsp;&le; 1000)</div>\n<div>&nbsp;</div>\n<div><strong>Kết quả:</strong>&nbsp;&nbsp;Ghi ra duy nhất số nguy&ecirc;n S t&igrave;m được</div>\n<div>&nbsp;</div>\n<div><strong>V&iacute; dụ:&nbsp;</strong></div>\n<div><strong> Input :</strong></div>\n<div>9 4</div>\n<div>1</div>\n<div>9</div>\n<div>8</div>\n<div>3</div>\n<div>4</div>\n<div>9</div>\n<div>8</div>\n<div>9</div>\n<div>7</div>\n<div><strong> Output :</strong></div>\n<div>35</div>\n<div>&nbsp;</div>\n<div><strong>Giải th&iacute;ch :</strong>&nbsp;H&agrave;nh giả sẽ lấy hồ l&ocirc; tại c&aacute;c ch&ugrave;a 2, 3, 6, 8</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ee058d86-74dc-4504-83b8-57b60c4e569a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TAYTRUC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f5"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tcdfz-chu-so-tan-cung-khac-0",
  "tags": [],
  "level": "BEGINNER",
  "title": "TCDFZ - Chữ số tận cùng khác 0",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>TCDFZ - Chữ số tận c&ugrave;ng kh&aacute;c 0</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho số tự nhi&ecirc;n n (n &lt;= 10^9). H&atilde;y t&igrave;m chữ số tận c&ugrave;ng kh&aacute;c 0 của n!</p>\n<h3>Input</h3>\n<p>- D&ograve;ng duy nhất ghi số N.</p>\n<h3>Output</h3>\n<p>- Gồm 1 d&ograve;ng duy nhất ghi kết quả t&igrave;m được.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5\n\n<strong>Output:</strong>\n2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4f4c2ac3-b5a5-4535-a5a3-1458ae05cfa5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TCDFZ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f6"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "tjalg-tim-tplt-manh",
  "tags": [],
  "level": "BEGINNER",
  "title": "TJALG - Tìm TPLT mạnh",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>TJALG - T&igrave;m TPLT mạnh</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho đồ thị G(V,E) c&oacute; hướng n (1&lt;=n&lt;=10^4)&nbsp; đỉnh m (1&lt;=m&lt;=10^5) cung, H&atilde;y đếm số th&agrave;nh phần li&ecirc;n th&ocirc;ng mạnh của G.</p>\n<h3>Input</h3>\n<p>+D&ograve;ng đầu ti&ecirc;n l&agrave; n,m.</p>\n<p>+M d&ograve;ng tiếp theo m&ocirc; tả một cung của G.</p>\n<h3>Output</h3>\n<p>Gồm một d&ograve;ng duy nhất l&agrave; số TPLT mạnh.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong><br /><br />3 2<br />1 2<br />2 3<br /><br /><strong>Output:</strong><br /><br />3<br /><br /></pre>\n<pre><strong>Input:<br /><br />3 3<br />1 2<br />2 3<br />3 1<br /><br />Output<br /><br />1<br /></strong></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f27db57a-8436-43a0-9589-234c0bb0a589",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TJALG_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f7"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "trafficn-traffic-network-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TRAFFICN - Traffic Network",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>TRAFFICN - Traffic Network</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>The city traffic network consists of n nodes numbered from 1 to n and m one-way roads connecting pairs of nodes. In order to reduce the length of the shortest path between two different critical nodes s and t, a list of k two-way roads are proposed as candidates to be constructed. Your task is to write a program to choose one two-way road from the proposed list in order to minimize the resulting shortest path between s and t.</p>\n<h3>Input</h3>\n<p>The input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than 20. The following lines describe the data sets.</p>\n<p>For each data set, the first line contains five positive integers n (n &le; 10 000), m (m &le; 100 000), k (k &lt; 300), s (1 &le; s &le; n), t (1 &le; t &le; n) separated by space. The ith line of the following m lines contains three integers di, ci, li separated by space, representing the length li ( 0&lt; li &le; 1000) of the ith one-way road connecting node di to ci. The jth line of the next k lines contains three positive integers uj, vj and qj (qj &le; 1000) separated by space, representing the jth proposed two-way road of length qj connecting node uj to vj.</p>\n<h3>Output</h3>\n<p>For each data set, write on one line the smallest possible length of the shortest path after building the chosen one two-way road from the proposed list. In case, there does not exist a path from s to t, write -1.</p>\n<h3>Example</h3>\n<pre><strong>Sample Input</strong>\n1\n4 5 3 1 4\n1 2 13\n2 3 19\n3 1 25\n3 4 17\n4 1 18\n1 3 23\n2 3 5\n2 4 25\t\n\n<strong>Sample Output</strong>\n35</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cb1b6300-08d1-40b4-bb07-07807c41cbc7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRAFFICN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f8"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "treat-cho-keo-hay-bi-pha-nao",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "TREAT - Cho kẹo hay bị phá nào",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>TREAT - Cho kẹo hay bị ph&aacute; n&agrave;o</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Hằng năm ở Wisconsin tụi b&ograve; lại tổ chức ng&agrave;y hội Halloween v&agrave;o kỳ nghỉ Thu. Ch&uacute;ng sẽ mặc đồ h&oacute;a trang v&agrave; đi xin kẹo n&ocirc;ng d&acirc;n John đ&atilde; đặt trong N (1 &lt;= N &lt;= 100,000) chuồng b&ograve; (để thuận tiện ta đ&aacute;nh số c&aacute;c chuồng b&ograve; từ 1 -&gt; N).</p>\n<p>Để cho lũ b&ograve; chơi vui hơn, ở chuồng i John sẽ cắm 1 biển b&aacute;o next_i (1 &lt;= next_i &lt;= N) cho biết sau khi xin kẹo ở chuồng i th&igrave; b&ograve; sẽ phải tiếp tục đi tới chuồng next_i để xin kẹo tiếp.</p>\n<p>B&ograve; i sẽ bắt đầu xin kẹo từ chuồng i. V&agrave; một con b&ograve; sẽ dừng việc xin kẹo nếu n&oacute; đi tới 1 chuồng m&agrave; n&oacute; đ&atilde; từng đi qua rồi.</p>\n<p>T&iacute;nh xem mỗi con b&ograve; sẽ xin được bao nhi&ecirc;u kẹo, biết rằng ở mỗi chuồng ch&uacute;ng chỉ xin được 1 vi&ecirc;n kẹo m&agrave; th&ocirc;i.</p>\n<h3>QUY C&Aacute;CH NHẬP DỮ LIỆU</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất: N</li>\n<li>D&ograve;ng 2..N+1: D&ograve;ng i+1 gồm 1 số nguy&ecirc;n duy nhất: next_i</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre>4\n1\n3\n2\n3\n</pre>\n<h3>QUY C&Aacute;CH GHI KẾT QUẢ</h3>\n<ul>\n<li>D&ograve;ng 1..N: D&ograve;ng i chứa 1 số nguy&ecirc;n l&agrave; số kẹo m&agrave; b&ograve; i nhận được</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<pre>1\n2\n2\n3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/885d7650-e336-471e-97d3-828e5ea57125",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TREAT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92f9"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "upgranet-voi-2011-nang-cap-mang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "UPGRANET - VOI 2011 Nâng cấp mạng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>UPGRANET - VOI 2011 N&acirc;ng cấp mạng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Một hệ thống gồm n m&aacute;y t&iacute;nh đ&aacute;nh số từ 1 đến n được kết nối th&agrave;nh một mạng bởi m đoạn c&aacute;p mạng đ&aacute;nh số từ 1 đến m. Đoạn c&aacute;p mạng thứ i c&oacute; th&ocirc;ng lượng w<sub>i</sub>&nbsp;kết nối hai m&aacute;y u<sub>i</sub>, v<sub>i</sub>&nbsp;cho ph&eacute;p truyền dữ liệu theo cả hai chiều giữa hai m&aacute;y n&agrave;y.</p>\n<p>Một d&atilde;y c&aacute;c m&aacute;y x<sub>1</sub>, x<sub>2</sub>, &hellip;, x<sub>p</sub>&nbsp;trong đ&oacute; giữa hai m&aacute;y x<sub>j</sub>&nbsp;v&agrave; x<sub>j+1&nbsp;</sub>(j = 1, 2, &hellip;, p-1) c&oacute; đoạn c&aacute;p nối được gọi l&agrave; một đường truyền tin từ m&aacute;y x<sub>1</sub>&nbsp;tới m&aacute;y x<sub>p</sub>. Th&ocirc;ng lượng của đường truyền tin được x&aacute;c định như l&agrave; th&ocirc;ng lượng nhỏ nhất trong số c&aacute;c th&ocirc;ng lượng của c&aacute;c đoạn c&aacute;p mạng tr&ecirc;n đường truyền. Giả thiết l&agrave; mạng được kết nối sao cho c&oacute; đường truyền tin giữa hai m&aacute;y bất k&igrave; v&agrave; giữa hai m&aacute;y c&oacute; kh&ocirc;ng qu&aacute; một đoạn c&aacute;p mạng nối ch&uacute;ng.</p>\n<p>Người ta muốn n&acirc;ng cấp mạng bằng c&aacute;ch tăng th&ocirc;ng lượng của một số đoạn c&aacute;p nối trong mạng. Để tăng th&ocirc;ng lượng của mỗi đoạn c&aacute;p mạng th&ecirc;m một lượng d (d &gt; 0) ta phải trả một chi ph&iacute; đ&uacute;ng bằng d. Việc n&acirc;ng cấp mạng phải đảm bảo l&agrave; sau khi ho&agrave;n tất, th&ocirc;ng lượng của mỗi đoạn c&aacute;p mạng i đều bằng th&ocirc;ng lượng của đường truyền tin c&oacute; th&ocirc;ng lượng lớn nhất từ m&aacute;y u<sub>i</sub>&nbsp;tới m&aacute;y v<sub>i</sub>.</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;T&igrave;m phương &aacute;n n&acirc;ng cấp c&aacute;c đoạn c&aacute;p mạng sao cho tổng chi ph&iacute; n&acirc;ng cấp l&agrave; nhỏ nhất.</p>\n<p><strong>Dữ liệu:</strong></p>\n<ul>\n<li>D&ograve;ng thứ nhất: Chứa hai số nguy&ecirc;n dương n, m (n, m &lt;= 10^5).</li>\n</ul>\n<ul>\n<li>D&ograve;ng thứ i trong số m d&ograve;ng tiếp theo chứa ba số nguy&ecirc;n dương u<sub>i</sub>, v<sub>i</sub>, w<sub>i</sub>&nbsp;(w<sub>i</sub>&nbsp;&lt;= 10^6),<br />i = 1, 2, &hellip;, m.</li>\n</ul>\n<p>&nbsp;&nbsp;&nbsp; C&aacute;c số tr&ecirc;n c&ugrave;ng một d&ograve;ng được ghi c&aacute;ch nhau &iacute;t nhất một dấu c&aacute;ch.</p>\n<p><strong>Kết quả:</strong>&nbsp;ghi ra một số nguy&ecirc;n duy nhất l&agrave; tổng chi ph&iacute; n&acirc;ng cấp theo phương &aacute;n t&igrave;m được.</p>\n<p><strong>V&iacute; dụ:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"158\">\n<p><strong>Dữ liệu</strong></p>\n</td>\n<td valign=\"top\" width=\"151\">\n<p><strong>Kết quả</strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"158\">\n<p>6 7<br />1 2 6<br />1 3 5<br />2 4 3<br />3 4 9<br />4 5 4<br />4 6 8<br />5 6 7</p>\n</td>\n<td valign=\"top\" width=\"151\">\n<p>5</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://vn.spoj.com/content/voj:upgranet.png\" alt=\"\" /></p>\n<p><strong>R&agrave;ng buộc:</strong>&nbsp;50% số test ứng với 50% số điểm của b&agrave;i c&oacute; n &lt;= 100.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/07270ebc-7e9d-4b50-8705-516d0a7a5ece",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "UPGRANET_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92fa"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "v11water-nuoc-dong",
  "tags": [],
  "level": "BEGINNER",
  "title": "V11WATER - Nước đọng",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>V11WATER - Nước đọng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Năm 2011, t&igrave;nh trạng ngập lụt trong th&agrave;nh phố trở l&ecirc;n nghi&ecirc;m trọng hơn. V&igrave; vậy, mọi người quyết định x&acirc;y dựng hệ thống m&aacute;i che cho to&agrave;n th&agrave;nh phố.</p>\n<p><br />M&aacute;i che c&oacute; bề rộng l&agrave; N, được chia l&agrave;m N phần c&oacute; độ d&agrave;i như nhau. Độ cao của mỗi phần l&agrave; h1, h2, ..., hn. Khi trời mưa, một phần nước sẽ đọng lại tr&ecirc;n m&aacute;i v&agrave; một phần sẽ tho&aacute;t ra ngo&agrave;i theo hai b&ecirc;n tr&aacute;i v&agrave; phải của m&aacute;i che. Do đ&oacute;, th&agrave;nh phố sẽ kh&ocirc;ng phải chịu cảnh mưa lụt như trước.</p>\n<p><br />Nhằm mục đ&iacute;ch bảo tr&igrave; m&aacute;i che, bạn cần viết chương tr&igrave;nh t&iacute;nh lượng nước lớn nhất c&oacute; thể đọng lại tr&ecirc;n m&aacute;i che.</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu ghi số N. (1 &lt;= N &lt;= 100000)</li>\n</ul>\n<ul>\n<li>D&ograve;ng sau ghi N số tự nhi&ecirc;n h1, h2, ..., hn. (1 &lt;= hi &lt;= 100000)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm một số duy nhất thể hiện lượng nước t&igrave;m được.</li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li>50% số test c&oacute; N &lt;= 1000.</li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n5<br />1 3 1 2 3<br /><strong>Output:</strong><br />3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d9af2fd0-0be2-4440-8878-278ee3bd429d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "V11WATER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92fb"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vcowflix-di-xem-phim",
  "tags": [],
  "level": "BEGINNER",
  "title": "VCOWFLIX - Đi xem phim",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VCOWFLIX - Đi xem phim</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N&ocirc;ng d&acirc;n John đang đưa c&aacute;c con b&ograve; của anh ta đi xem phim! Xe tải của anh ta th&igrave; c&oacute; sức chứa c&oacute; hạn th&ocirc;i, l&agrave; C (100 &lt;= C &lt;= 5000) kg, anh ta muốn đưa 1 số con b&ograve; đi xem phim sao cho tổng khối lượng của đống b&ograve; n&agrave;y l&agrave; lớn nhất, đồng thời xe tải của anh ta vẫn chịu được.</p>\n<p>Cho N (1 &lt;= N &lt;= 16) con b&ograve; v&agrave; khối lượng W_i của từng con, h&atilde;y cho biết khối lượng b&ograve; lớn nhất m&agrave; John c&oacute; thể đưa đi xem phim l&agrave; bao nhi&ecirc;u.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: C v&agrave; N</li>\n<li>D&ograve;ng 2..N+1: D&ograve;ng i+1 chứa 1 số nguy&ecirc;n: W_i</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n l&agrave; tổng khối lượng b&ograve; lớn nhất m&agrave; John c&oacute; thể mang đi xem phim.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n259 5\n81\n58\n42\n33\n61\n\n<strong>Kết quả</strong>\n242\n</pre>\n<h3>Giải th&iacute;ch</h3>\n<p>81+58+42+61 = 242; đ&acirc;y l&agrave; tổng khối lượng b&ograve; lớn nhất c&oacute; thể được.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9f33a7c9-4789-44cd-895d-28d44a318e7a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VCOWFLIX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92fc"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 12,
  "slug": "vdanger-nguy-hiem-ro-rang-truoc-mat",
  "tags": [
    "2"
  ],
  "level": "INTERMEDIATE",
  "title": "VDANGER - Nguy hiểm rõ ràng trước mắt",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VDANGER - Nguy hiểm r&otilde; r&agrave;ng trước mắt</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N&ocirc;ng d&acirc;n John đang ở tr&ecirc;n một con thuyền nhỏ v&agrave; đang t&igrave;m kiếm kho b&aacute;u ở 1 trong số N (1 &lt;= N &lt;= 100) h&ograve;n đảo (đ&aacute;nh số từ 1..N) ở v&ugrave;ng biển Ca-ri-b&ograve;.</p>\n<p>Bản đồ kho b&aacute;u cho John biết John cần phải thực hiện 1 h&agrave;nh tr&igrave;nh đi qua đảo A_1, A_2, &hellip; A_M (2 &lt;= M &lt;= 10,000), bắt đầu từ đảo 1 v&agrave; kết th&uacute;c ở đảo N trước khi kho b&aacute;u biến mất. Anh ta c&oacute; thể đến thăm c&aacute;c đảo kh&aacute;c v&agrave; thăm bao nhi&ecirc;u lần t&ugrave;y th&iacute;ch, miễn l&agrave; h&agrave;nh tr&igrave;nh của &ocirc;ng ta phải chứa d&atilde;y A_1,..A_M l&agrave; 1 d&atilde;y con (kh&ocirc;ng nhất thiết phải li&ecirc;n tiếp nhau).</p>\n<p>John muốn tr&aacute;nh đụng độ cướp biển v&agrave; biết được mức-độ-bị-cướp (0 &lt;= mức-độ-bị-cướp &lt;= 100,000) khi đi lại giữa 2 h&ograve;n đảo với nhau. Độ nguy hiểm của h&agrave;nh tr&igrave;nh của John sẽ l&agrave; tổng c&aacute;c mức-độ-bị-cướp tr&ecirc;n c&aacute;c tuyến đường m&agrave; John đi qua.</p>\n<p>H&atilde;y gi&uacute;p John t&igrave;m được 1 h&agrave;nh tr&igrave;nh &iacute;t nguy hiểm nhất để c&oacute; thể lấy được kho b&aacute;u.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; M</li>\n<li>D&ograve;ng 2..M+1: D&ograve;ng i+1 m&ocirc; tả chứa 1 số nguy&ecirc;n l&agrave; đảo thứ i m&agrave; John cần phải tới: A_i</li>\n<li>D&ograve;ng M+2..N+M+1: D&ograve;ng i+M+1 chứa N số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch tương ứng l&agrave; mức-độ-bị-cướp tr&ecirc;n tuyến đường đi giữa đảo i v&agrave; đảo 1, 2,&hellip;N; đảm bảo số nguy&ecirc;n thứ i lu&ocirc;n l&agrave; số 0.</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>D&ograve;ng 1: Độ nguy hiểm nhỏ nhất của h&agrave;nh tr&igrave;nh của John.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n3 4\n1\n2\n1\n3\n0 5 1\n5 0 2\n1 2 0\n\nGiải th&iacute;ch:\nC&oacute; 3 h&ograve;n đảo v&agrave; bản đồ kho b&aacute;u y&ecirc;u cầu John phải thực hiện 1 h&agrave;nh \ntr&igrave;nh tới c&aacute;c đảo như sau: từ đảo 1 tới đảo 2, quay lại đảo 1 v&agrave; cuối \nc&ugrave;ng l&agrave; tới đảo 3. Mức-độ-bị-cướp tr&ecirc;n c&aacute;c tuyến đường đ&atilde; được \ncho: (1, 2); (2, 3); (3, 1) c&oacute; độ lớn tương ứng l&agrave; 5, 2 v&agrave; 1.\n\n<strong>Kết quả</strong>\n7\n\nGiải th&iacute;ch:\nH&agrave;nh tr&igrave;nh c&oacute; độ nguy hiểm nhỏ nhất l&agrave; 7. John sẽ đi như sau: \n1, 3, 2, 3, 1, and 3. Y&ecirc;u cầu của bản đồ l&agrave; phải chứa d&atilde;y\n(1, 2, 1, v&agrave; 3) v&agrave; h&agrave;nh tr&igrave;nh n&agrave;y thỏa m&atilde;n y&ecirc;u cầu. Ch&uacute;ng ta sẽ tr&aacute;nh đi \ntr&ecirc;n đường nối giữa 2 đảo 1 v&agrave; 2 v&igrave; n&oacute; c&oacute; mức-độ-bị-cướp lớn.</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2cbc2606-caf3-4dba-a683-0d5fffdc470f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VDANGER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92fd"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vmcandle-aladdin-va-cay-den-cay",
  "tags": [],
  "level": "BEGINNER",
  "title": "VMCANDLE - Aladdin và cây đèn cầy",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VMCANDLE - Aladdin v&agrave; c&acirc;y đ&egrave;n cầy</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;Nến (c&ograve;n gọi l&agrave; đ&egrave;n cầy) thường được thắp trong c&aacute;c buổi tiệc ngo&agrave;i tời để tạo kh&ocirc;ng kh&iacute; huyền ảo, ấm c&uacute;ng, l&atilde;ng mạn. H&ocirc;m nay l&agrave; sinh nhật Jasmine! Aladdin, Abu v&agrave; thần đ&egrave;n đ&atilde; tổ chức một buổi tiệc thịnh soạn gồm cơ man n&agrave;o l&agrave; sơn h&agrave;o hải vị. Tr&ecirc;n b&agrave;n tiệc l&agrave; một h&agrave;ng N c&acirc;y nến bằng đ&uacute;ng số tuổi của Jasmine. Điều đặc biệt l&agrave; những c&acirc;y nến n&agrave;y c&oacute; ph&eacute;p (do của thần đ&egrave;n).</p>\n<p>Ban đầu N nến đều đang ch&aacute;y.</p>\n<p>Nếu thổi lần đầu th&igrave; cả N nến sẽ tắt.</p>\n<p>Thổi lần hai th&igrave; c&aacute;c nến số chẵn ch&aacute;y trở lại.</p>\n<p>Thổi sang lần thứ 3 th&igrave; nến 3, 6, 9, 12, &hellip;. nếu đang ch&aacute;y sẽ tắt, c&ograve;n nếu đang tắt sẽ ch&aacute;y.</p>\n<p>Tương tự vậy với c&aacute;c lần 4, 5, 6, &hellip; , N.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Aladdin nhận thấy l&agrave; sau khi thổi nến một số lần th&igrave; một số nến sẽ kh&ocirc;ng bị t&aacute;c động nữa, từ đ&oacute; nghĩ ra một tr&ograve; chơi. Aladdin đố Jasmine t&igrave;m ra c&acirc;y nến c&ograve;n s&aacute;ng thứ K sau khi thổi hết cả N lần. Nếu Jasmine trả lời đ&uacute;ng sẽ nhận được một phần qu&agrave; đặc biệt m&agrave; Aladdin bỏ ra cả mấy ng&agrave;y để chuẩn bị :D.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Phải thối hết N lần th&igrave; mất c&ocirc;ng qu&aacute; L. Tuy nhi&ecirc;n Aladdin c&oacute; một mẹo, kh&ocirc;ng cần thổi m&agrave; cũng kh&ocirc;ng cần biết c&oacute; bao nhi&ecirc;u nến tất cả vẫn t&iacute;nh được ngay số thứ tụ của c&acirc;y nến đang ch&aacute;y thứ K. H&atilde;y gi&uacute;p Jasmine gi&agrave;nh được qu&agrave; n&agrave;o!</p>\n<h3>Y&ecirc;u cầu</h3>\n<p>Cho K. T&igrave;m số thứ tụ của c&acirc;y nến đang ch&aacute;y thứ K sau N lần thổi nến</p>\n<h3>Input</h3>\n<ul>\n<li>Một số nguy&ecirc;n dương duy nhất&nbsp;<strong>K</strong></li>\n</ul>\n<h3>Giới hạn</h3>\n<ul>\n<li><strong>K</strong>&nbsp;&lt;= 10<sup>18</sup></li>\n<li>33% số test c&oacute; K &lt;= 4000</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Một số nguy&ecirc;n dương l&agrave; số thứ tự của c&acirc;y nến s&aacute;ng thứ K.</li>\n</ul>\n<h3>Chấm b&agrave;i</h3>\n<p>B&agrave;i của bạn sẽ được chấm tr&ecirc;n thang điểm 100. Điểm m&agrave; bạn nhận được sẽ tương ứng với % test m&agrave; bạn giải đ&uacute;ng.</p>\n<p>Trong qu&aacute; tr&igrave;nh thi, b&agrave;i của bạn sẽ chỉ được chấm với 3 test (kh&ocirc;ng nhất thiết tr&ugrave;ng với test v&iacute; dụ)</p>\n<p>Khi v&ograve;ng thi kết th&uacute;c, b&agrave;i của bạn sẽ được chấm với bộ test đầy đủ.</p>\n<h3>Example</h3>\n<pre><strong>Input 1:<br /></strong>1</pre>\n<pre><strong>Output 1:<br /></strong>2</pre>\n<pre><strong>&nbsp;</strong></pre>\n<pre><strong>Input 2:<br /></strong>6&nbsp;</pre>\n<pre>Output 2:<br />8</pre>\n<pre><strong>&nbsp;</strong></pre>\n<pre><strong>Input 3:</strong></pre>\n<pre>21&nbsp;</pre>\n<pre>Output 3:</pre>\n<pre>26</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/148b276f-c2cf-4653-b512-9c10191067c7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VMCANDLE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92fe"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "vmst-cay-khung",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VMST - Cây khung",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VMST - C&acirc;y khung</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Cho một đơn đồ thị li&ecirc;n th&ocirc;ng gồm N đỉnh, M cạnh. C&aacute;c đỉnh của đồ thị được đ&aacute;nh số từ 1 đến N. T&igrave;m 3 c&acirc;y khung kh&aacute;c nhau của đồ thị.<br />Định nghĩa c&acirc;y khung của đồ thị:<br />C&acirc;y khung của đồ thị G gồm N đỉnh, M cạnh, l&agrave; một đồ thị G&rsquo; gồm tất cả N đỉnh của đồ thị G, v&agrave; đ&uacute;ng N-1 cạnh của đồ thị G, v&agrave; G&rsquo; l&agrave; đồ thị li&ecirc;n th&ocirc;ng.</p>\n<h3>Input</h3>\n<p>D&ograve;ng đầu: 2 số nguy&ecirc;n dương N v&agrave; M (1 &lt; N &lt;= M, N &lt;= 1000, M &lt;= 1500)<br />M d&ograve;ng tiếp theo, mỗi d&ograve;ng gồm 2 số nguy&ecirc;n dương u, v (u kh&aacute;c v) thể hiện 1 cạnh nối giữa u v&agrave; v. Input đảm bảo đồ thị li&ecirc;n th&ocirc;ng v&agrave; c&oacute; &iacute;t nhất 3 c&acirc;y khung kh&aacute;c nhau.</p>\n<h3>Output</h3>\n<p>D&ograve;ng 1 gồm 1 số nguy&ecirc;n dương K duy nhất - số c&acirc;y khung m&agrave; bạn t&igrave;m được (0 &lt;= K &lt;= 3).<br />Tiếp theo l&agrave; K nh&oacute;m d&ograve;ng, mỗi nh&oacute;m d&ograve;ng gồm đ&uacute;ng N-1 d&ograve;ng, thể hiện 1 c&acirc;y khung.</p>\n<h3>C&aacute;ch t&iacute;nh điểm</h3>\n<ul>\n<li>Nếu trong K c&acirc;y khung m&agrave; bạn t&igrave;m được, c&oacute; một c&acirc;y khung kh&ocirc;ng hợp lệ (c&oacute; chu tr&igrave;nh, kh&ocirc;ng li&ecirc;n th&ocirc;ng), hoặc c&oacute; 2 c&acirc;y khung giống nhau th&igrave; bạn kh&ocirc;ng được điểm n&agrave;o</li>\n<li>Nếu K = 0, bạn kh&ocirc;ng được điểm n&agrave;o</li>\n<li>Nếu K = 1, bạn được 20% số điểm của test</li>\n<li>Nếu K = 2, bạn được 40% số điểm của test</li>\n<li>Nếu K = 3, bạn được 100% số điểm của test</li>\n</ul>\n<p>B&agrave;i n&agrave;y c&oacute; đ&uacute;ng 20 test, tổng điểm l&agrave; 100. Trong l&uacute;c thi bạn chỉ được chấm với 2 test (kh&ocirc;ng bao gồm test đề b&agrave;i), v&agrave; điểm tối đa m&agrave; bạn c&oacute; thể nhận được l&agrave; 10 điểm.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n3 3</pre>\n<pre>1 2</pre>\n<pre>2 3</pre>\n<pre>3 1\n\n<strong>Output:</strong>\n3</pre>\n<pre>1 2</pre>\n<pre>2 3</pre>\n<pre>2 3</pre>\n<pre>3 1</pre>\n<pre>3 1</pre>\n<pre>1 2</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/18522bbc-b8e1-43ac-b81c-9e6330be38ff",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VMST_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef92ff"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vnempire-de-che",
  "tags": [],
  "level": "BEGINNER",
  "title": "VNEMPIRE - Đế chế",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VNEMPIRE - Đế chế</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>Một đế chế đang x&acirc;y dựng mạng lưới cho c&aacute;c h&agrave;nh tinh trong n&oacute;. Đế chế gồm c&oacute; N h&agrave;nh tinh được biểu diễn như c&aacute;c điểm trong kh&ocirc;ng gian 3 chiều. Chi ph&iacute; phải chi cho việc nối giữa h&agrave;nh tinh A v&agrave; h&agrave;nh tinh B l&agrave; min{ |xA - xB|, |yA - yB|, |zA - zB| } với (xA, yA, zA), (xB, yB, zB) l&agrave; tọa độ của h&agrave;nh tinh A, B trong kh&ocirc;ng gian 3 chiều. Đế chế dự t&iacute;nh sẽ x&acirc;y dựng N &ndash; 1 cầu nối như vậy để c&aacute;c h&agrave;nh tinh li&ecirc;n th&ocirc;ng với nhau v&agrave; chi ph&iacute; để trả sao cho phải nhỏ nhất c&oacute; thể.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu l&agrave; số h&agrave;nh tinh N (N &lt; 100001).</li>\n<li>N d&ograve;ng sau mỗi d&ograve;ng l&agrave; tọa độ của một h&agrave;nh tinh.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>Ghi tr&ecirc;n một d&ograve;ng duy nhất chi ph&iacute; nhỏ nhất c&oacute; thể.</p>\n<h3>V&iacute; dụ</h3>\n<pre> \n<strong>Dữ liệu</strong> \n5\n11 -15 -15\n14 -5 -15\n-1 -1 -5\n10 -4 -1\n19 -4 19\n\n<strong>Kết qủa</strong> \n4 </pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c24a685d-2e6b-4e33-aeb3-01bf9d5cbb10",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VNEMPIRE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9300"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "vosrtri-tam-giac-vuong",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VOSRTRI - Tam giác vuông",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VOSRTRI - Tam gi&aacute;c vu&ocirc;ng</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>&nbsp; &nbsp; &nbsp; &nbsp;Cho&nbsp;<strong>N</strong>&nbsp;điểm tr&ecirc;n mặt phẳng tọa độ. Y&ecirc;u cầu đếm số tam gi&aacute;c vu&ocirc;ng c&oacute; cạnh b&ecirc;n song song với trục&nbsp;<strong>Ox</strong>&nbsp;v&agrave;&nbsp;<strong>Oy</strong>&nbsp;tr&ecirc;n trục tọa độ Oxy.</p>\n<h3>DỮ LIỆU V&Agrave;O</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa N l&agrave; số lượng điểm tr&ecirc;n mặt phẳng tọa độ.</li>\n<li>N d&ograve;ng tiếp theo, mỗi d&ograve;ng mi&ecirc;u tả tọa độ của một điểm trong N điểm tr&ecirc;n.</li>\n<li>Lưu y: dữ liệu đảm bảo kh&ocirc;ng c&oacute; 2 điểm tr&ugrave;ng nhau.</li>\n</ul>\n<h3>DỮ LIỆU RA</h3>\n<ul>\n<li>Một d&ograve;ng chứa kết quả b&agrave;i to&aacute;n.</li>\n</ul>\n<h3>R&Agrave;NG BUỘC</h3>\n<ul>\n<li>N &lt;= 100 000.</li>\n<li>1 &lt;= X, Y &lt;= 100 000.</li>\n</ul>\n<h3>V&Iacute; DỤ</h3>\n<p><strong>Dữ liệu v&agrave;o:</strong></p>\n<p>6</p>\n<p>10 10</p>\n<p>20 10</p>\n<p>10 20</p>\n<p>20 20</p>\n<p>30 20</p>\n<p>30 30</p>\n<p><strong>Dữ liệu ra:</strong></p>\n<p>8</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/920e25a4-608d-45d4-b4f0-f690342fbc4c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VOSRTRI_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9301"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vosseven-bai-toan-so-7",
  "tags": [],
  "level": "BEGINNER",
  "title": "VOSSEVEN - Bài toán số 7",
  "content": "<table style=\"font-weight: 400;\">\n<tbody>\n<tr>\n<td>\n<h2 style=\"font-weight: 500;\">VOSSEVEN - B&agrave;i to&aacute;n số 7</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-weight: 400;\">&nbsp;</p>\n<p>Cho chuỗi gồm N k&yacute; tự, mỗi k&yacute; tự l&agrave; một chữ số từ 0 đến 9</p>\n<p><strong><em>Y&ecirc;u cầu:</em></strong>&nbsp;Với mỗi đoạn con c&oacute; số 7 li&ecirc;n tiếp h&atilde;y đếm xem đoạn con đ&oacute; xuất hiện bao nhi&ecirc;u lần trong chuỗi.</p>\n<h3 style=\"font-weight: 500;\">Input</h3>\n<p>Chuỗi s</p>\n<h3 style=\"font-weight: 500;\">Output</h3>\n<p>Mỗi d&ograve;ng ghi một độ d&agrave;i tương ứng từ thấp đến cao k&egrave;m số lần xuất hiện của n&oacute;. Dữ liệu v&agrave;o đảm bảo x&acirc;u c&oacute; &iacute;t nhất 1 số 7. Nếu số lần xuất hiện bằng 0 th&igrave; kh&ocirc;ng in ra g&igrave;.</p>\n<p>&nbsp;<strong>Example</strong></p>\n<p style=\"font-weight: 400;\"><strong>Input:</strong> 72774777 <strong>Output:</strong></p>\n<p>1 6</p>\n<p>2 3</p>\n<p style=\"font-weight: 400;\">3 1</p>\n<p><strong>Giới hạn:</strong></p>\n<ul>\n<li>30%&nbsp;số test c&oacute; N &lt;= 10^3.</li>\n<li>30%&nbsp;số test c&oacute; N &lt;= 10^5.</li>\n<li>Trong tất cả c&aacute;c test&nbsp; N &lt;= 10^6.</li>\n</ul>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/cc320eb3-c053-4c15-9233-b0640b106891",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VOSSEVEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9302"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "vostravl-du-lich",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VOSTRAVL - Du lịch",
  "content": "<table style=\"font-weight: 400;\">\n<tbody>\n<tr>\n<td>\n<h2 style=\"font-weight: 500;\">VOSTRAVL - Du lịch</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-weight: 400;\"><br /><br /></p>\n<p>Đất nước Monterey c&oacute; rất nhiều danh lam th&aacute;nh cảnh đẹp. Brogan đ&atilde; l&ecirc;n kế hoạch cho chuyến du lịch sắp tới của m&igrave;nh ở Monterey. Theo kế hoạch, Brogan sẽ đi tham quan <strong>K</strong> danh lam th&aacute;nh cảnh đẹp nhất ở Monterey. Nhưng Brogan vẫn chưa biết chọn lộ tr&igrave;nh sao cho hợp l&yacute;. Brogan muốn lộ tr&igrave;nh sẽ kh&ocirc;ng đi qua một con đường theo c&ugrave;ng một chiều qu&aacute; 1 lần v&agrave; khi kết th&uacute;c lộ tr&igrave;nh Brogan phải quay về th&agrave;nh phố l&uacute;c ban đầu. Ban đầu, Brogan ở th&agrave;nh phố <strong>S</strong>.</p>\n<p>H&atilde;y kiểm tra xem Brogan c&oacute; thể t&igrave;m được lộ tr&igrave;nh thỏa c&aacute;c điều kiện tr&ecirc;n hay kh&ocirc;ng. Nếu kh&ocirc;ng tồn tại lộ tr&igrave;nh như tr&ecirc;n th&igrave; xuất ra <strong>&ldquo;NIE&rdquo;</strong> c&ograve;n nếu tồn tại th&igrave; xuất ra &nbsp;<strong>&ldquo;TAK&rdquo;</strong> v&agrave; một lộ tr&igrave;nh bất kỳ thỏa mản y&ecirc;u cầu tr&ecirc;n.</p>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\"><strong>DỮ LIỆU V&Agrave;O</strong></h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa 3 số nguy&ecirc;n N, M, S, K lần lượt l&agrave; số lượng th&agrave;nh phố ở Monterey, &nbsp;số lượng đường đi ở Monterey, th&agrave;nh phố hiện giờ Brogan ở v&agrave; số lượng danh lam th&aacute;nh cảnh m&agrave; Brogan muốn tham quan.</li>\n<li>M d&ograve;ng tiếp theo mỗi d&ograve;ng chứa hai số u, v &nbsp;c&oacute; nghĩa l&agrave; c&oacute; đương đi hai chiều từ th&agrave;nh phố u tới th&agrave;nh phố v.</li>\n<li>D&ograve;ng tiếp theo chứa K số l&agrave; gồm thử tự của những th&agrave;nh phố m&agrave; Brogan muốn tham quan.</li>\n<li>Lưu &yacute;: đồ thị nhập v&agrave;o đảm bảo l&agrave; đồ thị đơn.</li>\n</ul>\n<h3 style=\"font-weight: 500;\">DỮ LIỆU RA</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa &ldquo;NIE&rdquo; hoặc &ldquo;TAK&rdquo;.</li>\n<li>Nếu l&agrave; &ldquo;TAK&rdquo;, d&ograve;ng tiếp theo se chứa số nguy&ecirc;n D l&agrave; số lượng th&agrave;nh phố nằm tr&ecirc;n lộ tr&igrave;nh kể cả th&agrave;nh phố xuất ph&aacute;t. Theo sau số D sẽ l&agrave; d&atilde;y gồm D số mi&ecirc;u tả lộ tr&igrave;nh t&igrave;m được.</li>\n</ul>\n<h3 style=\"font-weight: 500;\">R&Agrave;NG BUỘC</h3>\n<ul>\n<li>N, M &lt;= 106.</li>\n<li>K &lt;= N.</li>\n<li>10% số test M &lt;= 10.</li>\n<li>20% số test đồ thị kh&ocirc;ng c&oacute; chu tr&igrave;nh.</li>\n</ul>\n<p>&nbsp;</p>\n<h3 style=\"font-weight: 500;\">V&Iacute; DỤ</h3>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n<table>\n<tbody>\n<tr>\n<td>\n<p>Input</p>\n</td>\n<td>\n<p>Output</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>3 2 1 1</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>3</p>\n</td>\n<td>\n<p>TAK</p>\n<p>5 1 2 3 2 1</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p><strong>Giải th&iacute;ch:</strong> ta kh&ocirc;ng thể chọn lộ tr&igrave;nh 1 -&gt; 2 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 2 -&gt; 1 v&igrave; đoạn đường 1-&gt; 2 đi qua 2 lần theo c&ugrave;ng một chiều từ 1 sang 2.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/06f87b4c-51c4-4a39-88a0-961b66df1ce9",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VOSTRAVL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9303"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "vostribo-tribonacci",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "VOSTRIBO - Tribonacci",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VOSTRIBO - Tribonacci</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N&oacute;i đến d&atilde;y số Fibonacci, chắc chắn ai trong ch&uacute;ng ta &iacute;t nhiều cũng đ&atilde; biết tới. Bờm vừa được thầy của m&igrave;nh dạy cho về d&atilde;y Fibonacci, anh ta rất th&iacute;ch th&uacute; với d&atilde;y số n&agrave;y nhưng lại cảm thấy c&ocirc;ng thức của d&atilde;y số n&agrave;y qu&aacute; đơn giản, do đ&oacute; Bờm nghĩ đến một d&atilde;y số phức tạp hơn c&oacute; c&ocirc;ng thức gần giống với d&atilde;y Fibonacci, Bờm đặt t&ecirc;n cho d&atilde;y đ&oacute; l&agrave;&nbsp;<strong>Tribonacci.</strong></p>\n<p>D&atilde;y Tribonacci l&agrave; d&atilde;y số c&oacute; c&ocirc;ng thức như sau:</p>\n<ul>\n<li>T(i) = i ; với mọi số nguy&ecirc;n dương i &lt;= 3</li>\n<li>T(i) = T(i-1) + T(i-2) + T(i-3) ; với mọi số nguy&ecirc;n dương i &gt; 3</li>\n</ul>\n<p>Bờm khoe d&atilde;y số mới với T&egrave;o, vốn l&agrave; một người rất th&ocirc;ng minh nhưng cũng rất gian xảo n&ecirc;n T&egrave;o đố bờm c&oacute; thể t&iacute;nh được tổng&nbsp;<strong>N&nbsp;</strong>phần tử đầu ti&ecirc;n của d&atilde;y&nbsp;<strong>Tribonacci</strong>&nbsp;n&agrave;y. Tức l&agrave; Bờm cần t&iacute;nh gi&aacute; trị:</p>\n<ul>\n<li>F(N) = T(1) + T(2) + T(3) + ... + T(N-1) + T(N).</li>\n</ul>\n<p>Do gi&aacute; trị N rất lớn n&ecirc;n h&atilde;y gi&uacute;p Bờm t&iacute;nh v&agrave; trả lời kết quả cho c&acirc;u đố của T&egrave;o nh&eacute;. Do gi&aacute; trị rất lớn n&ecirc;n Bờm chỉ cần trả lời phần dư của kết quả sau khi chia cho 10<sup>15</sup>&nbsp;+ 7 (mod 10<sup>15</sup>&nbsp;+ 7)</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số T, l&agrave; số lượng test.</li>\n<li>T d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa số nguy&ecirc;n dương N</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Gồm T d&ograve;ng, mỗi d&ograve;ng l&agrave; kết quả tương ứng cho từng test. Do kết quả rất lớn n&ecirc;n chỉ cần trả về phần dư cho 10<sup>15</sup>&nbsp;+ 7</li>\n</ul>\n<p><strong>Giới hạn</strong></p>\n<ul>\n<li>T &lt;= 100.</li>\n<li>Trong 10% số test c&oacute; N &lt;= 10000.</li>\n<li>Trong to&agrave;n test c&oacute; N &lt;= 10<sup>9</sup></li>\n</ul>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<div id=\"_mcePaste\">5</div>\n<pre>5\n1\n2\n3\n4\n5</pre>\n<div id=\"_mcePaste\">1</div>\n<pre><strong>Output:</strong>\n1\n3\n6\n12\n23</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c6254d64-5f4a-493e-968d-08795ef39bad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VOSTRIBO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9304"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "vratf-nhung-con-duong-quanh-nong-trang",
  "tags": [],
  "level": "BEGINNER",
  "title": "VRATF - Những con đường quanh nông trang",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>VRATF - Những con đường quanh n&ocirc;ng trang</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\">\n<p>&nbsp;</p>\n<p>C&aacute;c con b&ograve; của n&ocirc;ng d&acirc;n John c&oacute; sở th&iacute;ch l&agrave; hay đi kh&aacute;m ph&aacute; những v&ugrave;ng xung quanh n&ocirc;ng trang. Ban đầu, tất cả N (1 &lt;= N &lt;= 1,000,000,000) con b&ograve; tập trung th&agrave;nh 1 nh&oacute;m v&agrave; c&ugrave;ng bắt đầu chuyến đi tr&ecirc;n 1 con đường. Cho tới khi gặp một ng&atilde; ba đường th&igrave; ch&uacute;ng đ&ocirc;i khi chọn c&aacute;ch chia l&agrave;m 2 nh&oacute;m nhỏ hơn ( mỗi nh&oacute;m &iacute;t nhất 1 b&ograve; ) v&agrave; mỗi nh&oacute;m lại tiếp tục h&agrave;nh tr&igrave;nh tr&ecirc;n con đường của nh&oacute;m ch&uacute;ng. Khi một trong những nh&oacute;m n&agrave;y gặp 1 ng&atilde; ba kh&aacute;c th&igrave; nh&oacute;m n&agrave;y lại c&oacute; thể t&aacute;ch ra tiếp, v&agrave; cứ như vậy.</p>\n<p>C&aacute;c con b&ograve; đ&atilde; h&igrave;nh th&agrave;nh n&ecirc;n 1 quy tắc về việc chia nh&oacute;m như sau: nếu ch&uacute;ng c&oacute; thể chia th&agrave;nh 2 nh&oacute;m m&agrave; ch&ecirc;nh lệch số b&ograve; của 2 nh&oacute;m l&agrave; đ&uacute;ng bằng K (1 &lt;= K &lt;= 1000) th&igrave; tại ng&atilde; ba đ&oacute; ch&uacute;ng sẽ chia l&agrave;m 2; nếu kh&ocirc;ng th&igrave; ch&uacute;ng sẽ dừng cuộc h&agrave;nh tr&igrave;nh v&agrave; đứng ở đ&oacute; nhấm nh&aacute;p cỏ non.</p>\n<p>Giả sử rằng lu&ocirc;n c&oacute; những ng&atilde; ba mới tr&ecirc;n c&aacute;c con đường, h&atilde;y t&iacute;nh xem cuối c&ugrave;ng c&oacute; bao nhi&ecirc;u nh&oacute;m b&ograve; tất cả.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng 1: 2 số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; K</li>\n</ul>\n<h3>Kết quả</h3>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n cho biết số lượng nh&oacute;m b&ograve; sau c&ugrave;ng.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n6 2\n\nGiải th&iacute;ch:\nC&oacute; 6 con b&ograve; v&agrave; độ ch&ecirc;nh lệch khi x&eacute;t chia nh&oacute;m l&agrave; 2.\n\n<strong>Kết quả</strong>\n3\n\nGiải th&iacute;ch:\nCuối c&ugrave;ng c&oacute; 3 nh&oacute;m b&ograve; (1 nh&oacute;m c&oacute; 2 b&ograve;, 1 nh&oacute;m c&oacute; 1 v&agrave; 1 nh&oacute;m c&oacute; 3 ).\n\n   6\n  / \\\n 2   4\n    / \\\n   1   3</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/73472e74-e535-4d35-933e-3444388a77fb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VRATF_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9305"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bac-thang",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bậc thang",
  "content": "<h2>Bậc thang</h2>\n<p>Bờm chơi tr&ograve; chơi điện tử Lucky Luke đến m&agrave;n phải điều khiển Lucky leo l&ecirc;n một cầu thang gồm n bậc.</p>\n<p>C&aacute;c bậc thang được đ&aacute;nh số từ 1 đến n từ dưới l&ecirc;n tr&ecirc;n. Lucky c&oacute; thể đi l&ecirc;n một bậc thang, hoặc nhảy một bước l&ecirc;n hai bậc thang. Tuy nhi&ecirc;n một số bậc thang đ&atilde; bị thủng do cũ kỹ v&agrave; Lucky kh&ocirc;ng thể bước ch&acirc;n l&ecirc;n được. Biết ban đầu, Lucky đứng ở bậc thang số 1 (bậc thang số 1 kh&ocirc;ng bao giờ bị thủng).</p>\n<p>Chơi đến đ&acirc;y, Bờm chợt nảy ra c&acirc;u hỏi: c&oacute; bao nhi&ecirc;u c&aacute;ch để Lucky leo hết được cầu thang? (nghĩa l&agrave; leo đến bậc thang thứ n). Bờm muốn nhờ bạn trả lời c&acirc;u hỏi n&agrave;y.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n: gồm 2 số nguy&ecirc;n n v&agrave; k, l&agrave; số bậc của cầu thang v&agrave; số bậc thang bị hỏng (0 &le; k &lt; n &le; 100000).</li>\n<li>D&ograve;ng thứ hai: gồm k số nguy&ecirc;n cho biết chỉ số của c&aacute;c bậc thang bị hỏng theo thứ tự tăng dần.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>In ra phần dư của số c&aacute;ch Lucky leo hết cầu thang khi chia cho 14062008.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n4 2\n2 3\n\n<strong>Kết qủa</strong>\n0\n\n<strong>Dữ liệu</strong>\n90000 1\n49000\n\n<strong>Kết qủa</strong>\n4108266</pre>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/72c0216f-d1f7-4cfd-bd49-b6b2dd92bfd7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VSTEPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9306"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "weather-dieu-kien-thoi-tiet",
  "tags": [],
  "level": "BEGINNER",
  "title": "WEATHER - Điều kiện thời tiết",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>WEATHER - Điều kiện thời tiết</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>H&atilde;ng h&agrave;ng kh&ocirc;ng OlympAirways thực hiện c&aacute;c chuyến bay giữa n s&acirc;n bay được đ&aacute;nh số từ 1 đến n. Hệ thống c&aacute;c chuyến bay được thiết lập sao cho giữa 2 s&acirc;n bay bất kỳ được phục vụ bởi h&atilde;ng lu&ocirc;n c&oacute; một đường bay bao gồm một hoặc nhiều chuyến bay trực tiếp giữa hai s&acirc;n bay. Mỗi chuyến bay thực hiện việc di chuyển giữa hai th&agrave;nh phố theo cả hai chiều.</p>\n<p>Trung t&acirc;m điều khiển của h&atilde;ng đưa ra kh&aacute;i niệm độ d&iacute;nh kết giữa cặp hai s&acirc;n bay A v&agrave; B được x&aacute;c định như l&agrave; số lượng c&aacute;c chuyến bay m&agrave; việc kh&ocirc;ng thực hiện một trong số ch&uacute;ng (c&aacute;c chuyến bay kh&aacute;c vẫn thực hiện b&igrave;nh thường) dẫn đến kh&ocirc;ng thể bay từ s&acirc;n bay A đến s&acirc;n bay B.</p>\n<p>Một nghi&ecirc;n cứu cho biết rằng, trong điều kiện thời tiết xấu, tổng độ d&iacute;nh kết giữa c&aacute;c cặp s&acirc;n bay phải đạt đến một gi&aacute; trị nhất định th&igrave; hệ thống đường bay mới được gọi l&agrave; an to&agrave;n.</p>\n<p>Y&ecirc;u cầu: H&atilde;y gi&uacute;p trung t&acirc;m điều khiển t&iacute;nh tổng độ d&iacute;nh kết giữa mọi cặp s&acirc;n bay.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa số nguy&ecirc;n n (1 &le; n &le; 100)</li>\n<li>D&ograve;ng thứ hai chứa số nguy&ecirc;n m (1 &le; m &le; 5000) - số lượng c&aacute;c chuyến bay</li>\n<li>Mỗi d&ograve;ng trong số m d&ograve;ng tiếp theo chứa th&ocirc;ng tin về một chuyến bay, bao gồm hai số nguy&ecirc;n dương trong khoảng từ 1 đến n: chỉ số của hai s&acirc;n bay được nối bởi chuyến bay.</li>\n</ul>\n<h3>Kết qủa</h3>\n<p>In ra 1 số nguy&ecirc;n duy nhất l&agrave; tổng độ d&iacute;nh kết giữa mọi cặp s&acirc;n bay (A, B) (với A &lt; B).</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu:</strong>\n5\n5\n1 2\n4 2\n4 5\n3 2\n3 1\n\n<strong>Kết qủa</strong>\n10</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/799c5c3a-a1ef-4715-a6ec-ddfab6ed9c72",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "WEATHER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9307"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "xaynha-xay-nha-bang-da-quy",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "XAYNHA - Xây nhà bằng đá quý",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>XAYNHA - X&acirc;y nh&agrave; bằng đ&aacute; qu&yacute;</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p><strong>&nbsp;&nbsp;</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mr.Davion l&agrave; một kiến tr&uacute;c sư trẻ. Anh nhận được lời mời từ Mr.X do anh l&agrave; một cao thủ vũ l&acirc;m trong l&agrave;ng &hellip;. Lego ! Mr.X giao cho anh N vi&ecirc;n đ&aacute; qu&yacute; v&agrave; y&ecirc;u cầu anh x&acirc;y một t&ograve;a nh&agrave; ho&agrave;n chỉnh v&agrave; x&acirc;y c&agrave;ng cao c&agrave;ng tốt nếu c&oacute; thể.Tuy nhi&ecirc;n , c&oacute; thể kh&ocirc;ng đủ số vi&ecirc;n đ&aacute; để x&acirc;y theo y&ecirc;u cầu của Mr.X . H&atilde;y gi&uacute;p Mr.Davion t&iacute;nh to&aacute;n xem số lượng đ&aacute; m&agrave; X giao cho c&oacute; đủ hay kh&ocirc;ng ? Nếu đủ th&igrave; h&atilde;y th&ocirc;ng b&aacute;o l&agrave; đủ , c&ograve;n kh&ocirc;ng th&igrave; phải th&ocirc;ng b&aacute;o cần bỏ đi / th&ecirc;m v&agrave;o bao nhi&ecirc;u vi&ecirc;n đ&aacute; để x&acirc;y được t&ograve;a nh&agrave; ho&agrave;n chỉnh sao cho thỏa m&atilde;n y&ecirc;u cầu của Mr.X v&agrave; số đ&aacute; th&ecirc;m / bớt đi l&agrave; &iacute;t nhất c&oacute; thể do khi bớt / th&ecirc;m v&agrave;o , cần chuyển đ&aacute; qu&yacute; qua lại nơi x&acirc;y dựng v&agrave; kho , rất tốn c&ocirc;ng sức .</p>\n<p>&nbsp;</p>\n<p><em>Quy tắc x&acirc;y v&agrave; một số định nghĩa</em></p>\n<p>- Khối đ&aacute; qu&yacute; l&agrave; một khối lập phương bao gồm những vi&ecirc;n đ&aacute; qu&yacute; nhỏ<em>&nbsp;</em></p>\n<p>- X&acirc;y bằng c&aacute;ch chồng c&aacute;c khối đ&aacute; qu&yacute; c&oacute; độ d&agrave;i c&aacute;c cạnh li&ecirc;n tiếp , khối c&oacute; độ d&agrave;i cạnh lớn hơn th&igrave; nằm ở dưới</p>\n<p>- X&acirc;y một t&ograve;a nh&agrave; ho&agrave;n chỉnh&nbsp; tức l&agrave; t&ograve;a nh&agrave; kh&ocirc;ng bị khuyết bất kỳ g&oacute;c n&agrave;o &ndash; hay n&oacute;i c&aacute;ch kh&aacute;c , c&aacute;c khối x&acirc;y n&ecirc;n kh&ocirc;ng c&oacute; khối n&agrave;o bị &ldquo;r&uacute;t ruột&rdquo;</p>\n<p>- X&acirc;y một t&ograve;a nh&agrave; level H tức l&agrave; sử dụng H khối đ&aacute; qu&yacute; m&agrave; độ d&agrave;i cạnh của c&aacute;c khối lần lượt l&agrave; 1,2,3&hellip;,H. (T&ograve;a nh&agrave; đ&atilde; ho&agrave;n chỉnh)</p>\n<p><strong>Giới hạn</strong></p>\n<p>&nbsp;0 &le; N &le; 10<sup>15</sup></p>\n<p><strong>Input</strong></p>\n<p>D&ograve;ng 1 : Ghi số T &ndash; số bộ test.</p>\n<p>D&ograve;ng 2..T+1 : Mỗi d&ograve;ng ghi duy nhất một số N &ndash; số vi&ecirc;n đ&aacute; m&agrave; Mr.X giao cho Davion</p>\n<p>&nbsp;</p>\n<p><strong>Output</strong></p>\n<p>Ghi ra T d&ograve;ng . Mỗi d&ograve;ng ghi những th&ocirc;ng tin một trong hai dạng th&ocirc;ng tin sau</p>\n<p>1 H : Nếu như đủ số đ&aacute; v&agrave; x&acirc;y được t&ograve;a nh&agrave; level H</p>\n<p>0 K H : Nếu như kh&ocirc;ng đủ số đ&aacute; v&agrave; cần th&ecirc;m/bớt |K| vi&ecirc;n đ&aacute; để đạt được t&ograve;a nh&agrave; ho&agrave;n chỉnh với level H theo y&ecirc;u cầu của Mr.X .( K &gt; 0 khi cần loại bỏ |K| vi&ecirc;n đ&aacute; , ngược lại K &lt; 0 khi cần th&ecirc;m v&agrave;o |K| vi&ecirc;n đ&aacute; )</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p>&nbsp;</p>\n<p><strong><em>Input<br /><br /></em></strong></p>\n<p>3</p>\n<p>9</p>\n<p>8</p>\n<p>442</p>\n<p>&nbsp;</p>\n<p><strong><em>Output<br /><br /></em></strong></p>\n<p>1 2</p>\n<p>0 1 2</p>\n<p>0 -1 6</p>\n<p><em><strong>Giải th&iacute;ch</strong></em></p>\n<p>9 = 1<sup>3</sup>&nbsp;+ 2<sup>3</sup></p>\n<p>8 = 1<sup>3</sup>&nbsp;+ 2<sup>3</sup>&nbsp;- 1</p>\n<p>442 = 1<sup>3</sup>&nbsp;+ 2<sup>3</sup>&nbsp;+ 3<sup>3</sup>&nbsp;+ 4<sup>3</sup>&nbsp;+ 5<sup>3</sup>&nbsp;+ 6<sup>3</sup>&nbsp;+ 1</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1ff00e19-48ec-4b07-8369-885c667d0077",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "XAYNHA_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9308"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "xucxac-xuc-xac",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "XUCXAC - Xúc xắc",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>XUCXAC - X&uacute;c xắc</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>Một mặt b&agrave;n nằm ngang được chia l&agrave;m lưới &ocirc; vu&ocirc;ng, trong mỗi &ocirc; c&oacute; ghi một số tự nhi&ecirc;n.</p>\n<p>Cho 1 con x&uacute;c xắc nằm vừa vặn tr&ecirc;n một &ocirc; của lưới. Mỗi mặt của x&uacute;c xắc l&agrave; một số từ 1 đến 6. Ban đầu, mặt trước l&agrave; số 1, mặt tr&ecirc;n l&agrave; số 2 v&agrave; mặt b&ecirc;n phải l&agrave; số 3, c&aacute;c mặt đối diện c&oacute; tổng số l&agrave; 7. Mỗi lần, con x&uacute;c xắc c&oacute; thể lăn về ph&iacute;a tr&aacute;i, phải, trước, sau. Mỗi lần tiếp x&uacute;c với mặt b&agrave;n, ta mất một chi ph&iacute; bằng số ghi tr&ecirc;n &ocirc; m&agrave; x&uacute;c xắc đang nằm tr&ecirc;n nh&acirc;n với số tr&ecirc;n mặt của x&uacute;c xắc đang tiếp x&uacute;c với mặt b&agrave;n.</p>\n<p>H&atilde;y t&igrave;m c&aacute;ch lăn từ một &ocirc; đến một &ocirc; kh&aacute;c tr&ecirc;n mặt b&agrave;n để đạt chi ph&iacute; nhỏ nhất.</p>\n<h3>Dữ liệu</h3>\n<ul>\n<li>D&ograve;ng đầu ghi 2 số M, N lần lượt l&agrave; số d&ograve;ng v&agrave; số cột của lưới &ocirc; tr&ecirc;n mặt b&agrave;n.</li>\n<li>M d&ograve;ng sau, mỗi d&ograve;ng ghi N số nguy&ecirc;n kh&ocirc;ng qu&aacute; 100 l&agrave; số ghi tr&ecirc;n c&aacute;c &ocirc; lưới của mặt b&agrave;n. C&aacute;c d&ograve;ng được liệt k&ecirc; theo thứ tự từ xa đến gần, c&aacute;c số tr&ecirc;n mỗi d&ograve;ng liệt k&ecirc; từ tr&aacute;i sang phải.</li>\n<li>D&ograve;ng cuối ghi 2 cặp số lần lượt l&agrave; tọa độ (d&ograve;ng, cột) của &ocirc; bắt đầu v&agrave; &ocirc; kết th&uacute;c.</li>\n</ul>\n<h3>Kết quả</h3>\n<p>Ghi ra một số duy nhất l&agrave; chi ph&iacute; nhỏ nhất t&igrave;m được.</p>\n<h3>Giới hạn</h3>\n<p>1 &le; M,N &le; 50.</p>\n<h3>V&iacute; dụ</h3>\n<pre><strong>Dữ liệu</strong>\n3 3\n1 2 3\n4 5 6\n7 8 9\n2 2 3 3\n\n<strong>Kết quả</strong>\n52\n</pre>\n<p><img src=\"https://vn.spoj.com/content/XUCXAC.png\" /></p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ad33f80c-2d01-4d4b-bfc0-c03e575429c0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "XUCXAC_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9309"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ypkth-phan-tu-thu-k",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "YPKTH - Phần tử thứ K",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>YPKTH - Phần tử thứ K</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<p align=\"justify\">&nbsp;</p>\n<div class=\"prob\">\n<p>Cho d&atilde;y số A c&oacute; N phần tử nguy&ecirc;n ph&acirc;n biệt.</p>\n<p>Cho Q truy vấn, mỗi truy vấn c&oacute; dạng: L R K</p>\n<p><strong>Y&ecirc;u cầu:</strong>&nbsp;mỗi truy vấn xuất ra phần tử lớn thứ K sau khi sắp xếp c&aacute;c phần tử A<sub>L</sub>, A<sub>L+1</sub>, &hellip;, A<sub>R</sub>&nbsp;theo thứ tự tăng dần.</p>\n<p>&nbsp;</p>\n<p><strong>Giới hạn:</strong></p>\n<p>1 &le; N, Q &le; 10<sup>5</sup></p>\n<p>|A<sub>i</sub>| &le; 10<sup>9</sup>&nbsp;với 1 &le; i &le; N</p>\n<p>1 &le; L &le; R &le; N</p>\n<p>1 &le; K &le; R-L+1</p>\n<p>&nbsp;</p>\n<p><strong>Input:</strong></p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng đầu ti&ecirc;n chứa số N.</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng tiếp theo chứa N số A<sub>1</sub>, A<sub>2</sub>, &hellip;, A<sub>N</sub>.</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&ograve;ng tiếp theo chứa số Q.</p>\n<p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa 3 số L, R, K.</p>\n<p>&nbsp;</p>\n<p><strong>Output:</strong></p>\n<p>Q d&ograve;ng, mỗi d&ograve;ng chứa c&acirc;u trả lời cho một truy vấn theo thứ tự nhập v&agrave;o.</p>\n<p>&nbsp;</p>\n<p><strong>V&iacute; dụ:</strong></p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"301\">\n<p>Input</p>\n</td>\n<td valign=\"top\" width=\"301\">\n<p>Output</p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"301\">\n<p>7</p>\n<p>2 1 5 4 3 6 8</p>\n<p>4</p>\n<p>1 2 2</p>\n<p>3 7 4</p>\n<p>4 6 2</p>\n<p>5 5 1</p>\n<p><strong>&nbsp;</strong></p>\n</td>\n<td valign=\"top\" width=\"301\">\n<p>2</p>\n<p>6</p>\n<p>4</p>\n<p>3</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/13f05b03-8c27-4e8e-a5b8-3156abeded6c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "YPKTH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "zabava-zabava",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ZABAVA - ZABAVA",
  "content": "<table>\n<tbody>\n<tr>\n<td>\n<h2>ZABAVA - ZABAVA</h2>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"prob\"><br />\n<p>N sinh vi&ecirc;n mới chuẩn bị được nhập v&agrave;o k&iacute; t&uacute;c x&aacute; của trường. Khu k&iacute; t&uacute;c của trường gồm M ph&ograve;ng, mỗi ph&ograve;ng l&uacute;c đầu đều kh&ocirc;ng c&oacute; ai ở. Mỗi ng&agrave;y c&oacute; một sinh vi&ecirc;n mới sẽ được chuyển v&agrave;o một trong M ph&ograve;ng n&agrave;y. Khi một người mới đến, buổi tối h&ocirc;m đ&oacute;, cả ph&ograve;ng sẽ tổ chức một bữa tiệc để mừng th&agrave;nh vi&ecirc;n mới, v&agrave; họ tạo ra những tiếng ồn, c&oacute; độ &ldquo;ồn &agrave;o&rdquo; bằng tổng số người c&oacute; trong ph&ograve;ng. Trưởng khu k&iacute; t&uacute;c x&aacute; kh&ocirc;ng th&iacute;ch điều n&agrave;y, v&agrave; &ocirc;ng quyết định v&agrave;o buổi s&aacute;ng sớm của, ng&agrave;y &ocirc;ng sẽ đuổi hết sinh vi&ecirc;n trong một ph&ograve;ng n&agrave;o đ&oacute; ra ngo&agrave;i để tr&aacute;nh sự ồn &agrave;o g&acirc;y ra phiền phức cho &ocirc;ng. Những sinh vi&ecirc;n n&agrave;y khi đ&atilde; bị đuổi th&igrave; sẽ ra ngo&agrave;i k&iacute; t&uacute;c ở v&agrave; kh&ocirc;ng bao giờ trở lại nữa. Tuy nhi&ecirc;n, trong N ng&agrave;y, &ocirc;ng chỉ được ph&eacute;p l&agrave;m việc n&agrave;y K lần. H&atilde;y gi&uacute;p &ocirc;ng đưa ra những quyết định đ&uacute;ng đắn, để tổng những tiếng &ldquo;ồn&rdquo; &ocirc;ng phải chịu l&agrave; &iacute;t nhất c&oacute; thể.&nbsp;</p>\n<h3>Input</h3>\n<ul>\n<li>D&ograve;ng đầu 3 số N, M, K. (1 &le; N &le; 1.000.000, 1 &le; M &le; 100, 1 &le; K &le; 500)</li>\n<li>N d&ograve;ng sau, mỗi d&ograve;ng l&agrave; một số nguy&ecirc;n trong khoảng [1, M] chỉ ph&ograve;ng m&agrave; ng&agrave;y thứ i sẽ c&oacute; sinh vi&ecirc;n mới v&agrave;o.</li>\n</ul>\n<h3>Output</h3>\n<p>Số nguy&ecirc;n duy nhất l&agrave; số lượng tiếng &ldquo;ồn&rdquo; nhỏ nhất c&oacute; thể.</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong></pre>\n<p>5 1 2</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<pre>1\n\n<strong>Output:</strong>\n7</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7479ca1e-807e-4e8c-9833-ef5a5e3b670c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ZABAVA_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "3sum-closest",
  "tags": [],
  "level": "BEGINNER",
  "title": "3Sum Closest",
  "content": "<p><span style=\"font-size: 24px;\"><strong>3Sum Closest</strong></span></p>\n<p>&nbsp;</p>\n<p>Given an integer array&nbsp;<code>nums</code>&nbsp;of length&nbsp;<code>n</code>&nbsp;and an integer&nbsp;<code>target</code>, find three integers in&nbsp;<code>nums</code>&nbsp;such that the sum is closest to&nbsp;<code>target</code>.</p>\n<p>Return&nbsp;<em>the sum of the three integers</em>.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,2,1,-4], target = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,0], target = 1\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>3 &lt;= nums.length &lt;= 1000</code></li>\n<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1081c831-c6b3-4cc6-8c71-5dfcf7aef257",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "3SumClosest_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "binh-chua-nhieu-nuoc-nhat",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bình chứa nhiều nước nhất",
  "content": "<p><span style=\"font-size: 28px;\"><strong>B&igrave;nh chứa nhiều nước nhất</strong></span></p>\n<p>&nbsp;</p>\n<p>Đ&atilde; cho nc&aacute;c số nguy&ecirc;n kh&ocirc;ng &acirc;m , trong đ&oacute; mỗi số đại diện cho một điểm tại tọa độ.<br />c&aacute;c đường thẳng đứng được vẽ sao cho hai điểm cuối của đoạn thẳng tại v&agrave; .<br />T&igrave;m hai đường thẳng c&ugrave;ng với trục x tạo th&agrave;nh một th&ugrave;ng chứa sao cho th&ugrave;ng chứa nhiều nước nhất.a1, a2, ..., an (i, ai) n i (i, ai) (i, 0)</p>\n<p>Lưu &yacute; rằng bạn kh&ocirc;ng được nghi&ecirc;ng th&ugrave;ng chứa.</p>\n<p>Input:<br />Chuỗi số thể hiện cho độ cao của c&aacute;c đường thẳng đứng</p>\n<p>Output:<br />Diện t&iacute;ch nước tối đa</p>\n<p>V&iacute; dụ:<br />Input:<br />167 &nbsp;234 &nbsp;200 &nbsp;269 &nbsp;224 &nbsp;178 &nbsp;258 &nbsp;262 &nbsp;164 &nbsp;205 &nbsp;245 &nbsp;181 &nbsp;127 &nbsp;261 &nbsp;191 &nbsp;295 &nbsp;242 &nbsp;127 &nbsp;136 &nbsp;291 &nbsp;104 &nbsp;202 &nbsp;253 &nbsp;192 &nbsp;282 &nbsp;121 &nbsp;216 &nbsp;218 &nbsp;195 &nbsp;147 &nbsp;226 &nbsp;271 &nbsp;238 &nbsp;169 &nbsp;212 &nbsp;167 &nbsp;199 &nbsp;135 &nbsp;194 &nbsp;203 &nbsp;111 &nbsp;</p>\n<p>Output:<br />7714</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/163b0dd1-137e-49b5-88e3-c229cf012584",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BinhChuaNuocNhieuNhat__input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "find-the-duplicate-number",
  "tags": [],
  "level": "BEGINNER",
  "title": "Find the Duplicate Number",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Find the Duplicate Number</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array of integers&nbsp;<code>nums</code>&nbsp;containing&nbsp;<code>n + 1</code>&nbsp;integers where each integer is in the range&nbsp;<code>[1, n]</code>&nbsp;inclusive.</p>\n<p>There is only&nbsp;<strong>one repeated number</strong>&nbsp;in&nbsp;<code>nums</code>, return&nbsp;<em>this&nbsp;repeated&nbsp;number</em>.</p>\n<p>You must solve the problem&nbsp;<strong>without</strong>&nbsp;modifying the array&nbsp;<code>nums</code>&nbsp;and uses only constant extra space.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,4,2,2]\n<strong>Output:</strong> 2\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,1,3,4,2]\n<strong>Output:</strong> 3\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1]\n<strong>Output:</strong> 1\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n<li><code>nums.length == n + 1</code></li>\n<li><code>1 &lt;= nums[i] &lt;= n</code></li>\n<li>All the integers in&nbsp;<code>nums</code>&nbsp;appear only&nbsp;<strong>once</strong>&nbsp;except for&nbsp;<strong>precisely one integer</strong>&nbsp;which appears&nbsp;<strong>two or more</strong>&nbsp;times.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n<ul>\n<li>How can we prove that at least one duplicate number must exist in&nbsp;<code>nums</code>?</li>\n<li>Can you solve the problem in linear runtime complexity?</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/385674f1-6ff9-4802-bf10-9c7c77396d73",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FindTheDuplicateNumber_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "max-area-of-island",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Max Area of Island",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Max Area of Island</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given an&nbsp;<code>m x n</code>&nbsp;binary matrix&nbsp;<code>grid</code>. An island is a group of&nbsp;<code>1</code>'s (representing land) connected&nbsp;<strong>4-directionally</strong>&nbsp;(horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.</p>\n<p>The&nbsp;<strong>area</strong>&nbsp;of an island is the number of cells with a value&nbsp;<code>1</code>&nbsp;in the island.</p>\n<p>Return&nbsp;<em>the maximum&nbsp;<strong>area</strong>&nbsp;of an island in&nbsp;</em><code>grid</code>. If there is no island, return&nbsp;<code>0</code>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/05/01/maxarea1-grid.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The answer is not 11, because the island must be connected 4-directionally.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> grid = [[0,0,0,0,0,0,0,0]]\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == grid.length</code></li>\n<li><code>n == grid[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 50</code></li>\n<li><code>grid[i][j]</code>&nbsp;is either&nbsp;<code>0</code>&nbsp;or&nbsp;<code>1</code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/476f7282-00a6-415d-8f25-06dc1c3ed4ae",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MaxAreaOfIsland_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef930f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "multiply-strings",
  "tags": [],
  "level": "BEGINNER",
  "title": "Multiply Strings",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Multiply Strings</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given two non-negative integers&nbsp;<code>num1</code>&nbsp;and&nbsp;<code>num2</code>&nbsp;represented as strings, return the product of&nbsp;<code>num1</code>&nbsp;and&nbsp;<code>num2</code>, also represented as a string.</p>\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n<li><code>num1</code>&nbsp;and&nbsp;<code>num2</code>&nbsp;consist of digits only.</li>\n<li>Both&nbsp;<code>num1</code>&nbsp;and&nbsp;<code>num2</code>&nbsp;do not contain any leading zero, except the number&nbsp;<code>0</code>&nbsp;itself.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3a17299e-03ca-4bac-850f-89d55ad091ee",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MultiplyStrings_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9310"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "next-permutation",
  "tags": [],
  "level": "BEGINNER",
  "title": "Next Permutation",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Next Permutation</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Implement&nbsp;<strong>next permutation</strong>, which rearranges numbers into the lexicographically next greater permutation of numbers.</p>\n<p>If such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).</p>\n<p>The replacement must be&nbsp;<strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in place</a></strong>&nbsp;and use only constant&nbsp;extra memory.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> [1,2,3]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,5]\n<strong>Output:</strong> [1,5,1]\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ff3b7550-6971-4016-870e-48c58c014a02",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NextPermutation_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9311"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "sliding-window-maximum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sliding Window Maximum",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Sliding Window Maximum</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given an array of integers&nbsp;<code>nums</code>, there is a sliding window of size&nbsp;<code>k</code>&nbsp;which is moving from the very left of the array to the very right. You can only see the&nbsp;<code>k</code>&nbsp;numbers in the window. Each time the sliding window moves right by one position.</p>\n<p>Return&nbsp;<em>the max sliding window</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,-1,-3,5,3,6,7], k = 3\n<strong>Output:</strong> [3,3,5,5,6,7]\n<strong>Explanation:</strong> \nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       <strong>3</strong>\n 1 [3  -1  -3] 5  3  6  7       <strong>3</strong>\n 1  3 [-1  -3  5] 3  6  7      <strong> 5</strong>\n 1  3  -1 [-3  5  3] 6  7       <strong>5</strong>\n 1  3  -1  -3 [5  3  6] 7       <strong>6</strong>\n 1  3  -1  -3  5 [3  6  7]      <strong>7</strong>\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1], k = 1\n<strong>Output:</strong> [1]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,-1], k = 1\n<strong>Output:</strong> [1,-1]\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [9,11], k = 2\n<strong>Output:</strong> [11]\n</pre>\n<p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> nums = [4,-2], k = 2\n<strong>Output:</strong> [4]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b58930f7-cda4-4dc6-bacd-3cd885d4e7e0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SlidingWindowMaximum_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9312"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "two-best-non-overlapping-events",
  "tags": [],
  "level": "BEGINNER",
  "title": "Two Best Non-Overlapping Events",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Two Best Non-Overlapping Events</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given a&nbsp;<strong>0-indexed</strong>&nbsp;2D integer array of&nbsp;<code>events</code>&nbsp;where&nbsp;<code>events[i] = [startTime<sub>i</sub>, endTime<sub>i</sub>, value<sub>i</sub>]</code>. The&nbsp;<code>i<sup>th</sup></code>&nbsp;event starts at&nbsp;<code>startTime<sub>i</sub></code><sub>&nbsp;</sub>and ends at&nbsp;<code>endTime<sub>i</sub></code>, and if you attend this event, you will receive a value of&nbsp;<code>value<sub>i</sub></code>. You can choose&nbsp;<strong>at most</strong>&nbsp;<strong>two</strong>&nbsp;<strong>non-overlapping</strong>&nbsp;events to attend such that the sum of their values is&nbsp;<strong>maximized</strong>.</p>\n<p>Return&nbsp;<em>this&nbsp;<strong>maximum</strong>&nbsp;sum.</em></p>\n<p>Note that the start time and end time is&nbsp;<strong>inclusive</strong>: that is, you cannot attend two events where one of them starts and the other ends at the same time. More specifically, if you attend an event with end time&nbsp;<code>t</code>, the next event must start at or after&nbsp;<code>t + 1</code>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/21/picture5.png\" alt=\"\" />\n<pre><strong>Input:</strong> events = [[1,3,2],[4,5,2],[2,4,3]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>Choose the green events, 0 and 1 for a sum of 2 + 2 = 4.\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/21/picture1.png\" alt=\"Example 1 Diagram\" />\n<pre><strong>Input:</strong> events = [[1,3,2],[4,5,2],[1,5,5]]\n<strong>Output:</strong> 5\n<strong>Explanation: </strong>Choose event 2 for a sum of 5.\n</pre>\n<p><strong>Example 3:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/21/picture3.png\" alt=\"\" />\n<pre><strong>Input:</strong> events = [[1,5,3],[1,5,1],[6,6,5]]\n<strong>Output:</strong> 8\n<strong>Explanation: </strong>Choose events 0 and 2 for a sum of 3 + 5 = 8.</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>2 &lt;= events.length &lt;= 10<sup>5</sup></code></li>\n<li><code>events[i].length == 3</code></li>\n<li><code>1 &lt;= startTime<sub>i</sub>&nbsp;&lt;= endTime<sub>i</sub>&nbsp;&lt;= 10<sup>9</sup></code></li>\n<li><code>1 &lt;= value<sub>i</sub>&nbsp;&lt;= 10<sup>6</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b7b051db-dba1-4132-afd1-58538637a199",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Best Non-Overlapping Events_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9313"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "combination-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Combination Sum",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Combination Sum</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array of&nbsp;<strong>distinct</strong>&nbsp;integers&nbsp;<code>candidates</code>&nbsp;and a target integer&nbsp;<code>target</code>, return&nbsp;<em>a list of all&nbsp;<strong>unique combinations</strong>&nbsp;of&nbsp;</em><code>candidates</code><em>&nbsp;where the chosen numbers sum to&nbsp;</em><code>target</code><em>.</em>&nbsp;You may return the combinations in&nbsp;<strong>any order</strong>.</p>\n<p>The&nbsp;<strong>same</strong>&nbsp;number may be chosen from&nbsp;<code>candidates</code>&nbsp;an&nbsp;<strong>unlimited number of times</strong>. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>\n<p>It is&nbsp;<strong>guaranteed</strong>&nbsp;that the number of unique combinations that sum up to&nbsp;<code>target</code>&nbsp;is less than&nbsp;<code>150</code>&nbsp;combinations for the given input.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,3,6,7], target = 7\n<strong>Output:</strong> [[2,2,3],[7]]\n<strong>Explanation:</strong>\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,3,5], target = 8\n<strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> candidates = [2], target = 1\n<strong>Output:</strong> []\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> candidates = [1], target = 1\n<strong>Output:</strong> [[1]]\n</pre>\n<p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> candidates = [1], target = 2\n<strong>Output:</strong> [[1,1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= candidates.length &lt;= 30</code></li>\n<li><code>1 &lt;= candidates[i] &lt;= 200</code></li>\n<li>All elements of&nbsp;<code>candidates</code>&nbsp;are&nbsp;<strong>distinct</strong>.</li>\n<li><code>1 &lt;= target &lt;= 500</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/2438326e-25a7-4e2d-9aa7-7b8ff8964ae7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CombinationSum_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9314"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "combination-sum-ii",
  "tags": [],
  "level": "BEGINNER",
  "title": "Combination Sum II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 28px;\"><strong>Combination Sum II</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in&nbsp;<code>candidates</code>&nbsp;where the candidate numbers sum to&nbsp;<code>target</code>.</p>\n<p>Each number in&nbsp;<code>candidates</code>&nbsp;may only be used&nbsp;<strong>once</strong>&nbsp;in the combination.</p>\n<p><strong>Note:</strong>&nbsp;The solution set must not contain duplicate combinations.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> candidates = [10,1,2,7,6,1,5], target = 8\n<strong>Output:</strong> \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,5,2,1,2], target = 5\n<strong>Output:</strong> \n[\n[1,2,2],\n[5]\n]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;=&nbsp;candidates.length &lt;= 100</code></li>\n<li><code>1 &lt;=&nbsp;candidates[i] &lt;= 50</code></li>\n<li><code>1 &lt;= target &lt;= 30</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7c360fe4-36f7-460c-b165-2f9984cc93e6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CombinationSumII_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9315"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "find-first-and-last-position-of-element-in-sorted-array",
  "tags": [],
  "level": "BEGINNER",
  "title": "Find First and Last Position of Element in Sorted Array",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Find First and Last Position of Element in Sorted Array</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array of integers&nbsp;<code>nums</code>&nbsp;sorted in non-decreasing order, find the starting and ending position of a given&nbsp;<code>target</code>&nbsp;value.</p>\n<p>If&nbsp;<code>target</code>&nbsp;is not found in the array, return&nbsp;<code>[-1, -1]</code>.</p>\n<p>You must&nbsp;write an algorithm with&nbsp;<code>O(log n)</code>&nbsp;runtime complexity.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 8\n<strong>Output:</strong> [3,4]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 6\n<strong>Output:</strong> [-1,-1]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [], target = 0\n<strong>Output:</strong> [-1,-1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>9</sup>&nbsp;&lt;= nums[i]&nbsp;&lt;= 10<sup>9</sup></code></li>\n<li><code>nums</code>&nbsp;is a non-decreasing array.</li>\n<li><code>-10<sup>9</sup>&nbsp;&lt;= target&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f0e72ebe-a6ea-4bd0-93f3-2047a235ca56",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FindFirstAndLastPositionOfElementinSortedArray_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9316"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "first-missing-positive",
  "tags": [],
  "level": "BEGINNER",
  "title": "First Missing Positive",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>First Missing Positive</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an unsorted integer array&nbsp;<code>nums</code>, return the smallest missing positive integer.</p>\n<p>You must implement an algorithm that runs in&nbsp;<code>O(n)</code>&nbsp;time and uses constant extra space.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,0]\n<strong>Output:</strong> 3\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,4,-1,1]\n<strong>Output:</strong> 2\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [7,8,9,11,12]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>5</sup></code></li>\n<li><code>-2<sup>31</sup>&nbsp;&lt;= nums[i] &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/43678ae5-50e6-4429-a9af-f82d3b92b3ec",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FirstMissingPositive_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9317"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "merge-two-sorted-lists",
  "tags": [],
  "level": "BEGINNER",
  "title": "Merge Two Sorted Lists",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Merge Two Sorted Lists</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given the heads of two sorted linked lists&nbsp;<code>list1</code>&nbsp;and&nbsp;<code>list2</code>.</p>\n<p>Merge the two lists in a one&nbsp;<strong>sorted</strong>&nbsp;list. The list should be made by splicing together the nodes of the first two lists.</p>\n<p>Return&nbsp;<em>the head of the merged linked list</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> list1 = [1,2,4], list2 = [1,3,4]\n<strong>Output:</strong> [1,1,2,3,4,4]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> list1 = [], list2 = []\n<strong>Output:</strong> []\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> list1 = [], list2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in both lists is in the range&nbsp;<code>[0, 50]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li>Both&nbsp;<code>list1</code>&nbsp;and&nbsp;<code>list2</code>&nbsp;are sorted in&nbsp;<strong>non-decreasing</strong>&nbsp;order.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb69051b-c45a-44b7-aaeb-4ee41b88a231",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Hop2DSDaSapXep_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9318"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "jump-game-ii",
  "tags": [],
  "level": "BEGINNER",
  "title": "Jump Game II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Jump Game II</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array of non-negative integers&nbsp;<code>nums</code>, you are initially positioned at the first index of the array.</p>\n<p>Each element in the array represents your maximum jump length at that position.</p>\n<p>Your goal is to reach the last index in the minimum number of jumps.</p>\n<p>You can assume that you can always reach the last index.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,0,1,4]\n<strong>Output:</strong> 2\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/596d1554-3cf4-4833-bf2e-790cce1f5737",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "JumpGameII_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9319"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "search-insert-position",
  "tags": [],
  "level": "BEGINNER",
  "title": "Search Insert Position",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Search Insert Position</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You must&nbsp;write an algorithm with&nbsp;<code>O(log n)</code>&nbsp;runtime complexity.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 5\n<strong>Output:</strong> 2\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 2\n<strong>Output:</strong> 1\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 7\n<strong>Output:</strong> 4\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 0\n<strong>Output:</strong> 0\n</pre>\n<p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code>&nbsp;contains&nbsp;<strong>distinct</strong>&nbsp;values sorted in&nbsp;<strong>ascending</strong>&nbsp;order.</li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/815d9d35-35fa-4a66-a35a-10435391e84a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TimKiemViTriChen_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "trapping-rain-water",
  "tags": [],
  "level": "BEGINNER",
  "title": "Trapping Rain Water",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Trapping Rain Water</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given&nbsp;<code>n</code>&nbsp;non-negative integers representing an elevation map where the width of each bar is&nbsp;<code>1</code>, compute how much water it can trap after raining.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\" />\n<pre><strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> height = [4,2,0,3,2,5]\n<strong>Output:</strong> 9\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == height.length</code></li>\n<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n<li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b15aad97-bfd9-431f-bf32-55dfd64ffe13",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TrappingRainWater_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "valid-sudoku",
  "tags": [],
  "level": "BEGINNER",
  "title": "Valid Sudoku",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Valid Sudoku</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Determine if a&nbsp;<code>9 x 9</code>&nbsp;Sudoku board&nbsp;is valid.&nbsp;Only the filled cells need to be validated&nbsp;<strong>according to the following rules</strong>:</p>\n<ol>\n<li>Each row&nbsp;must contain the&nbsp;digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n<li>Each column must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n<li>Each of the nine&nbsp;<code>3 x 3</code>&nbsp;sub-boxes of the grid must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n</ol>\n<p><strong>Note:</strong></p>\n<ul>\n<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>\n<li>Only the filled cells need to be validated according to the mentioned&nbsp;rules.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" />\n<pre><strong>Input:</strong> board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>board.length == 9</code></li>\n<li><code>board[i].length == 9</code></li>\n<li><code>board[i][j]</code>&nbsp;is a digit&nbsp;<code>1-9</code>&nbsp;or&nbsp;<code>'.'</code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/87324793-af80-42a9-b471-e6595e4cdece",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ValidSudoku_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "jump-game",
  "tags": [],
  "level": "BEGINNER",
  "title": "Jump Game",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Jump Game</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given an integer array&nbsp;<code>nums</code>. You are initially positioned at the array's&nbsp;<strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p>\n<p>Return&nbsp;<code>true</code><em>&nbsp;if you can reach the last index, or&nbsp;</em><code>false</code><em>&nbsp;otherwise</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c8885ead-1885-428b-b7ec-a4464d7f5ec3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "jump-game_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "length-of-last-word",
  "tags": [],
  "level": "BEGINNER",
  "title": "Length of Last Word",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Length of Last Word</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a string&nbsp;<code>s</code>&nbsp;consisting&nbsp;of some words separated by some number of spaces, return&nbsp;<em>the length of the&nbsp;<strong>last</strong>&nbsp;word in the string.</em></p>\n<p>A&nbsp;<strong>word</strong>&nbsp;is a maximal substring consisting of non-space characters only.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"Hello World\"\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The last word is \"World\" with length 5.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"   fly me   to   the moon  \"\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The last word is \"moon\" with length 4.\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"luffy is still joyboy\"\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The last word is \"joyboy\" with length 6.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>s</code>&nbsp;consists of only English letters and spaces&nbsp;<code>' '</code>.</li>\n<li>There will be at least one word in&nbsp;<code>s</code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3ca73560-40a0-4722-8939-bdb0cf116a2d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "length-of-last-word_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maximum-subarray",
  "tags": [],
  "level": "BEGINNER",
  "title": "Maximum Subarray",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 20px;\"><strong>Maximum Subarray</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an integer array&nbsp;<code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return&nbsp;<em>its sum</em>.</p>\n<p>A&nbsp;<strong>subarray</strong>&nbsp;is a&nbsp;<strong>contiguous</strong>&nbsp;part of an array.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [5,4,-1,7,8]\n<strong>Output:</strong> 23\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;If you have figured out the&nbsp;<code>O(n)</code>&nbsp;solution, try coding another solution using the&nbsp;<strong>divide and conquer</strong>&nbsp;approach, which is more subtle.</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0d833bec-06da-49d6-9e85-ea550d1fd889",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "maximum-subarray_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef931f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "merge-intervals",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Merge Intervals",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Merge Intervals</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array&nbsp;of&nbsp;<code>intervals</code>&nbsp;where&nbsp;<code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return&nbsp;<em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n<li><code>intervals[i].length == 2</code></li>\n<li><code>0 &lt;= start<sub>i</sub>&nbsp;&lt;= end<sub>i</sub>&nbsp;&lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e3c9f2d-f34f-4c09-9091-37ebcd25c528",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "merge-intervals_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9320"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "minimum-path-sum",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Minimum Path Sum",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Minimum Path Sum</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a&nbsp;<code>m x n</code>&nbsp;<code>grid</code>&nbsp;filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n<p><strong>Note:</strong>&nbsp;You can only move either down or right at any point in time.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1 &rarr; 3 &rarr; 1 &rarr; 1 &rarr; 1 minimizes the sum.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> grid = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> 12\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == grid.length</code></li>\n<li><code>n == grid[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7d87cef1-e5cd-4e3c-a990-cf52816c5e19",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "minimum-path-sum_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9321"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "permutations",
  "tags": [],
  "level": "BEGINNER",
  "title": "Permutations",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Permutations</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array&nbsp;<code>nums</code>&nbsp;of distinct integers, return&nbsp;<em>all the possible permutations</em>. You can return the answer in&nbsp;<strong>any order</strong>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [[0,1],[1,0]]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 6</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n<li>All the integers of&nbsp;<code>nums</code>&nbsp;are&nbsp;<strong>unique</strong>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ed2892b5-670c-4ad5-9487-d867f9d4675f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Permutations_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9322"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "permutation-sequence",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Permutation Sequence",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Permutation Sequence</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>The set&nbsp;<code>[1, 2, 3, ...,&nbsp;n]</code>&nbsp;contains a total of&nbsp;<code>n!</code>&nbsp;unique permutations.</p>\n<p>By listing and labeling all of the permutations in order, we get the following sequence for&nbsp;<code>n = 3</code>:</p>\n<ol>\n<li><code>\"123\"</code></li>\n<li><code>\"132\"</code></li>\n<li><code>\"213\"</code></li>\n<li><code>\"231\"</code></li>\n<li><code>\"312\"</code></li>\n<li><code>\"321\"</code></li>\n</ol>\n<p>Given&nbsp;<code>n</code>&nbsp;and&nbsp;<code>k</code>, return the&nbsp;<code>k<sup>th</sup></code>&nbsp;permutation sequence.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> \"213\"\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> \"2314\"\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"123\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 9</code></li>\n<li><code>1 &lt;= k &lt;= n!</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ea852fc1-12cf-4cd5-b712-e841d29fed62",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "permutation-sequence_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9323"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "permutations-ii",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Permutations II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Permutations II</strong></span></div>\n<div class=\"css-10o4wqw\">\n<div class=\"css-dcmtd5\">&nbsp;</div>\n</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a collection of numbers,&nbsp;<code>nums</code>,&nbsp;that might contain duplicates, return&nbsp;<em>all possible unique permutations&nbsp;<strong>in any order</strong>.</em></p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong>\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 8</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4f9419b6-77a6-40d3-95ef-2372ff387b66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "permutations-ii_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9324"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "rotate-image",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Rotate Image",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Rotate Image</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given an&nbsp;<code>n x n</code>&nbsp;2D&nbsp;<code>matrix</code>&nbsp;representing an image, rotate the image by&nbsp;<strong>90</strong>&nbsp;degrees (clockwise).</p>\n<p>You have to rotate the image&nbsp;<a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly.&nbsp;<strong>DO NOT</strong>&nbsp;allocate another 2D matrix and do the rotation.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [[7,4,1],[8,5,2],[9,6,3]]\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\n<strong>Output:</strong> [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> matrix = [[1]]\n<strong>Output:</strong> [[1]]\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> matrix = [[1,2],[3,4]]\n<strong>Output:</strong> [[3,1],[4,2]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>matrix.length == n</code></li>\n<li><code>matrix[i].length == n</code></li>\n<li><code>1 &lt;= n &lt;= 20</code></li>\n<li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/dfa9c977-9e70-4f56-9917-53d93347fac7",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "rotate-image_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9325"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "unique-paths",
  "tags": [],
  "level": "BEGINNER",
  "title": "Unique Paths",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Unique Paths</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>A robot is located at the top-left corner of a&nbsp;<code>m x n</code>&nbsp;grid (marked 'Start' in the diagram below).</p>\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).</p>\n<p>How many possible unique paths are there?</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\" />\n<pre><strong>Input:</strong> m = 3, n = 7\n<strong>Output:</strong> 28\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> m = 7, n = 3\n<strong>Output:</strong> 28\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> m = 3, n = 3\n<strong>Output:</strong> 6\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= m, n &lt;= 100</code></li>\n<li>It's guaranteed that the answer will be less than or equal to&nbsp;<code>2 * 10<sup>9</sup></code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/67ed5e54-7861-4fa5-8423-b683b2c508fa",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "unique-paths_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9326"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "add-binary",
  "tags": [],
  "level": "BEGINNER",
  "title": "Add Binary",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Add Binary</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given two binary strings&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>, return&nbsp;<em>their sum as a binary string</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> a = \"11\", b = \"1\"\n<strong>Output:</strong> \"100\"\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> a = \"1010\", b = \"1011\"\n<strong>Output:</strong> \"10101\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>4</sup></code></li>\n<li><code>a</code>&nbsp;and&nbsp;<code>b</code>&nbsp;consist&nbsp;only of&nbsp;<code>'0'</code>&nbsp;or&nbsp;<code>'1'</code>&nbsp;characters.</li>\n<li>Each string does not contain leading zeros except for the zero itself.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/714f4139-1428-4634-85d7-891171b0ca53",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "add-binary_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9327"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "climbing-stairs",
  "tags": [],
  "level": "BEGINNER",
  "title": "Climbing Stairs",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Climbing Stairs</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are climbing a staircase. It takes&nbsp;<code>n</code>&nbsp;steps to reach the top.</p>\n<p>Each time you can either climb&nbsp;<code>1</code>&nbsp;or&nbsp;<code>2</code>&nbsp;steps. In how many distinct ways can you climb to the top?</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 45</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c2163c87-9c05-4674-a6e7-5f392a97d6bb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "climbing-stairs_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9328"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "plus-one",
  "tags": [],
  "level": "BEGINNER",
  "title": "Plus One",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Plus One</strong></span></div>\n<div class=\"css-10o4wqw\">\n<div class=\"css-14oi08n\">&nbsp;</div>\n</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given a&nbsp;<strong>large integer</strong>&nbsp;represented as an integer array&nbsp;<code>digits</code>, where each&nbsp;<code>digits[i]</code>&nbsp;is the&nbsp;<code>i<sup>th</sup></code>&nbsp;digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading&nbsp;<code>0</code>'s.</p>\n<p>Increment the large integer by one and return&nbsp;<em>the resulting array of digits</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> digits = [1,2,3]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong> The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> digits = [4,3,2,1]\n<strong>Output:</strong> [4,3,2,2]\n<strong>Explanation:</strong> The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> digits = [0]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The array represents the integer 0.\nIncrementing by one gives 0 + 1 = 1.\nThus, the result should be [1].\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> digits = [9]\n<strong>Output:</strong> [1,0]\n<strong>Explanation:</strong> The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= digits.length &lt;= 100</code></li>\n<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n<li><code>digits</code>&nbsp;does not contain any leading&nbsp;<code>0</code>'s.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0367b9cb-56c5-4f81-9e9f-25974037e6e5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "plus-one_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9329"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "set-matrix-zeroes",
  "tags": [],
  "level": "BEGINNER",
  "title": "Set Matrix Zeroes",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Set Matrix Zeroes</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an&nbsp;<code>m x n</code>&nbsp;integer matrix&nbsp;<code>matrix</code>, if an element is&nbsp;<code>0</code>, set its entire row and column to&nbsp;<code>0</code>'s, and return&nbsp;<em>the matrix</em>.</p>\n<p>You must do it&nbsp;<a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in place</a>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == matrix.length</code></li>\n<li><code>n == matrix[0].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>-2<sup>31</sup>&nbsp;&lt;= matrix[i][j] &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n<ul>\n<li>A straightforward solution using&nbsp;<code>O(mn)</code>&nbsp;space is probably a bad idea.</li>\n<li>A simple improvement uses&nbsp;<code>O(m + n)</code>&nbsp;space, but still not the best solution.</li>\n<li>Could you devise a constant space solution?</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c480c6b4-170b-450d-9b46-aadabc7b49e0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "set-matrix-zeroes_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "3sum",
  "tags": [],
  "level": "BEGINNER",
  "title": "3Sum",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>3Sum</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an integer array nums, return all the triplets&nbsp;<code>[nums[i], nums[j], nums[k]]</code>&nbsp;such that&nbsp;<code>i != j</code>,&nbsp;<code>i != k</code>, and&nbsp;<code>j != k</code>, and&nbsp;<code>nums[i] + nums[j] + nums[k] == 0</code>.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]\n<strong>Output:</strong> [[-1,-1,2],[-1,0,1]]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = []\n<strong>Output:</strong> []\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> []\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 3000</code></li>\n<li><code>-10<sup>5</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8956bc8e-1613-4502-8cf0-54a3b9e5ca70",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "3Sum_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "valid-parentheses",
  "tags": [],
  "level": "BEGINNER",
  "title": "Valid Parentheses",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\"><span style=\"font-size: 24px;\"><strong>Valid Parentheses</strong></span></div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a string&nbsp;<code>s</code>&nbsp;containing just the characters&nbsp;<code>'('</code>,&nbsp;<code>')'</code>,&nbsp;<code>'{'</code>,&nbsp;<code>'}'</code>,&nbsp;<code>'['</code>&nbsp;and&nbsp;<code>']'</code>, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<ol>\n<li>Open brackets must be closed by the same type of brackets.</li>\n<li>Open brackets must be closed in the correct order.</li>\n</ol>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"()\"\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"()[]{}\"\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"(]\"\n<strong>Output:</strong> false\n</pre>\n<p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> s = \"([)]\"\n<strong>Output:</strong> false\n</pre>\n<p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> s = \"{[]}\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>s</code>&nbsp;consists of parentheses only&nbsp;<code>'()[]{}'</code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0ea42889-ff47-47b1-9d97-6d41dffd01b3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DauNgoacDonHopLe_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "cpair2-dem-cac-cap-khac-nhau",
  "tags": [],
  "level": "BEGINNER",
  "title": "CPAIR2 - Đếm các cặp khác nhau",
  "content": "<h2 id=\"problem-name\" class=\"text-center\"><span>CPAIR2 - Đếm c&aacute;c cặp kh&aacute;c nhau</span></h2>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p><span>Bạn được cung cấp d&atilde;y A gồm N số nguy&ecirc;n.&nbsp;Bạn cũng được cung cấp c&aacute;c truy vấn số nguy&ecirc;n K v&agrave; M.&nbsp;Mỗi truy vấn bao gồm hai số nguy&ecirc;n l, r.&nbsp;Đối với mỗi truy vấn xuất ra số cặp i, j sao cho l &lt;= i &lt;j &lt;= r v&agrave; abs (A [i] - A [j])&gt; = K.</span></p>\n<p><span>Lập chỉ mục bắt đầu bằng 1.</span></p>\n<p><span>N &lt;= 50000</span></p>\n<p><span>M &lt;= 50000</span></p>\n<p><span>1 &lt;= A [i] &lt;= 100000</span></p>\n<p>&nbsp;</p>\n<p><span>LƯU &Yacute;: Tất cả c&aacute;c thử nghiệm được tạo ngẫu nhi&ecirc;n.</span></p>\n<h3><span>Đầu v&agrave;o</span></h3>\n<p><span>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa c&aacute;c số nguy&ecirc;n N, M, K theo thứ tự n&agrave;y.</span></p>\n<p><span>D&ograve;ng thứ hai chứa N số nguy&ecirc;n đại diện cho mảng A.</span></p>\n<p><span>M d&ograve;ng tiếp theo m&ocirc; tả c&aacute;c truy vấn.</span></p>\n<h3><span>Đầu ra</span></h3>\n<p><span>Đầu ra c&acirc;u trả lời cho mỗi truy vấn.</span></p>\n<h3><span>Th&iacute; dụ</span></h3>\n<pre><strong><span>Đầu v&agrave;o:</span></strong><span> \n3 1 2 </span><br /><span>1 2 3 </span><br /><span>1 3 </span><br /><strong><span>Đầu ra:</span></strong><span> \n1</span></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b92a72c5-9a00-45a0-8d12-86469af5217b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CPAIR2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "frndam-friendship",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "FRNDAM - Friendship",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">FRNDAM - Friendship</h2>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Mathematician Ramanujan didn&rsquo;t have any close friends. Someone asked him the reason. He replied that although he wanted to have close friends but nobody was up to his expectation. When pressed how he expected his friends to be, he replied like numbers 220 and 284. The person got confused and asked what the connection between friendship and these numbers is !</p>\n<p>Ramanujan asked him to find the divisors of each number! With much difficulty the person derived and listed them.</p>\n<ul>\n<li>220 : 1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110, 220</li>\n<li>284 : 1, 2, 4, 71, 142, 284</li>\n</ul>\n<p>Ramanujan then asked the person to exclude the numbers 220 and 284 and asked the sum of the remaining divisors. The person was astonished to find:</p>\n<ul>\n<li>220 - 1+2+4+5+10+11+20+22+44+55+110 = 284</li>\n<li>284 - 1+2+4+71+142 = 220</li>\n</ul>\n<p>Ramanujan explained that an ideal friendship should be like these numbers to complement each other even when one is absent the other should represent the friend !</p>\n<p>As you&rsquo;re a talented programmer you should be able to find ideal friendship between two numbers.</p>\n<h3>Input</h3>\n<p>The first line of input will contain a positive integer&nbsp;<strong>T</strong>&nbsp;(T &lt;= 50), denoting the number of test cases.</p>\n<p>In each test case, there will be two integer&nbsp;<strong>X</strong>&nbsp;and&nbsp;<strong>Y</strong>&nbsp;(10 &lt; X, Y &lt;= 10^6)</p>\n<h3>Output</h3>\n<p>If ideal friendship exists between two numbers then print \"<tt>Friendship is ideal</tt>\", if not print \"<tt>Friendship is not ideal</tt>\".</p>\n<h3>Example</h3>\n<h4>Input</h4>\n<pre>3\n220 284\n486 594\n1184 1210</pre>\n<h4>Output</h4>\n<pre>Friendship is ideal\nFriendship is not ideal\nFriendship is ideal</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/27436fd4-f14d-4207-8c96-20d8886c1799",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FRNDAM_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "icampseq-ioicamp-sequence",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "ICAMPSEQ - IOICamp Sequence",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">ICAMPSEQ - IOICamp Sequence</h2>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>Let's say we have 4 N-elements sequences of real numbers: A[], B[], C[], D[] .<br />Funtion F(i, j) is defined: F(i, j) = |A<sub>i</sub>&nbsp;- A<sub>j</sub>| + |B<sub>i</sub>&nbsp;- B<sub>j</sub>| + |C<sub>i</sub>&nbsp;- C<sub>j</sub>| + |D<sub>i</sub>&nbsp;- D<sub>j</sub>| (1 &le; i, j &le; N).<br />Your task is very easy: you have to find the maximum of F(i, j).</p>\n<h3>Input</h3>\n<p>The first line: N (N &le; 100000).<br />Following are N lines: the i-th line contains four real numbers A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub>, D<sub>i</sub>. (-10<sup>9</sup>&nbsp;&le; A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub>, D<sub>i</sub>&nbsp;&le; 10<sup>9</sup>)</p>\n<h3>Output</h3>\n<p>Only one line is the maximum of F(i, j).<br />(The result takes exactly 3 decimal places)</p>\n<h3>Example</h3>\n<pre><strong>Input:</strong>\n2\n1.0 1.0 2.0 0.5\n1.0 1.0 0.5 2.0\n\n\n<strong>Output:</strong>\n3.000</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/68e9083f-e18c-4bd9-b934-8813d598c071",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ICAMPSEQ_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef932f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ins17m-fibonacci-and-easy-gcd",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "INS17M - Fibonacci and Easy GCD",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">INS17M - Fibonacci and Easy GCD</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>&nbsp;</p>\n<div id=\"problem-body\">\n<p>The Little Detective and the Kid are tired of fighting with each other, so they try to find the winner by a simple problem.<br /><br />Kid gives the Detective an array&nbsp;<strong>A</strong>&nbsp;of size&nbsp;<strong>N</strong>&nbsp;and challenges him to find the following sum :</p>\n<p><img src=\"https://www.spoj.com/content/rlewon:INS17M\" alt=\"FIBGCD\" border=\"0\" /></p>\n<p>Where<br /><strong>Fib (i)</strong>&nbsp;is the famous Fibonacci sequence such that&nbsp;<strong>Fib (0) =0</strong>&nbsp;,&nbsp;<strong>Fib(1) = 1</strong>&nbsp;and&nbsp;<strong>Fib(i) = Fib(i-1) + Fib(i-2)</strong>&nbsp;for&nbsp;<strong>i&gt;=2</strong>.<br /><strong>GCD (x,y)</strong>&nbsp;represents the greatest common divisor of&nbsp;<strong>x</strong>&nbsp;and&nbsp;<strong>y</strong>.<br />Since the answer can be very large, Kid asks Little Detective to find it modulo 1000000007. Help Detective find the answer and tell Kid who is the real artist.</p>\n<h3>Input :</h3>\n<p>First line of input contains two space separated integers&nbsp;<strong>N</strong>&nbsp;and&nbsp;<strong>K</strong>.<br />Second line of input contains&nbsp;<strong>N</strong>&nbsp;space separated integers&nbsp;<strong>A<sub>i</sub></strong>.</p>\n<h3>Output :</h3>\n<p>Single integer denoting the value of&nbsp;<strong>S</strong>&nbsp;modulo 1000000007.</p>\n<h3>Constraints :</h3>\n<p>0 &lt; N &lt;= 100000<br />0 &lt; K &lt;= 10<sup>15</sup><br />0 &lt; A<sub>i</sub>&nbsp;&lt;= 1000000</p>\n<h3>Example</h3>\n<p>Input:</p>\n<pre>5 1\n2 4 2 1 4\n</pre>\n<p>Output:</p>\n<pre>12</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/541abc24-67b8-4466-8ad6-0e66cb32194c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "INS17M_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9330"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "add-two-numbers",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Add Two Numbers",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Add Two Numbers</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given two&nbsp;<strong>non-empty</strong>&nbsp;linked lists representing two non-negative integers. The digits are stored in&nbsp;<strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum&nbsp;as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [7,0,8]\n<strong>Explanation:</strong> 342 + 465 = 807.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> l1 = [0], l2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n<strong>Output:</strong> [8,9,9,9,0,0,0,1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in each linked list is in the range&nbsp;<code>[1, 100]</code>.</li>\n<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7abcdabb-e70d-4bb4-94b8-37aa69bbe35c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "add-two-numbers_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9331"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "1000-bai-tap-lap-trinh-c",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Decode Ways",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Decode Ways</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>A message containing letters from&nbsp;<code>A-Z</code>&nbsp;can be&nbsp;<strong>encoded</strong>&nbsp;into numbers using the following mapping:</p>\n<pre>'A' -&gt; \"1\"\n'B' -&gt; \"2\"\n...\n'Z' -&gt; \"26\"\n</pre>\n<p>To&nbsp;<strong>decode</strong>&nbsp;an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example,&nbsp;<code>\"11106\"</code>&nbsp;can be mapped into:</p>\n<ul>\n<li><code>\"AAJF\"</code>&nbsp;with the grouping&nbsp;<code>(1 1 10 6)</code></li>\n<li><code>\"KJF\"</code>&nbsp;with the grouping&nbsp;<code>(11 10 6)</code></li>\n</ul>\n<p>Note that the grouping&nbsp;<code>(1 11 06)</code>&nbsp;is invalid because&nbsp;<code>\"06\"</code>&nbsp;cannot be mapped into&nbsp;<code>'F'</code>&nbsp;since&nbsp;<code>\"6\"</code>&nbsp;is different from&nbsp;<code>\"06\"</code>.</p>\n<p>Given a string&nbsp;<code>s</code>&nbsp;containing only digits, return&nbsp;<em>the&nbsp;<strong>number</strong>&nbsp;of ways to&nbsp;<strong>decode</strong>&nbsp;it</em>.</p>\n<p>The test cases are generated so that the answer fits in a&nbsp;<strong>32-bit</strong>&nbsp;integer.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"12\"\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"226\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"06\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\").\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 100</code></li>\n<li><code>s</code>&nbsp;contains only digits and may contain leading zero(s).</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9fbd05b7-3b6e-48b2-b30a-b5b5b876eaf0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "decode-ways_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9332"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "divide-two-integers",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Divide Two Integers",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Divide Two Integers</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given two integers&nbsp;<code>dividend</code>&nbsp;and&nbsp;<code>divisor</code>, divide two integers&nbsp;<strong>without</strong>&nbsp;using multiplication, division, and mod operator.</p>\n<p>The integer division should truncate toward zero, which means losing its fractional part. For example,&nbsp;<code>8.345</code>&nbsp;would be truncated to&nbsp;<code>8</code>, and&nbsp;<code>-2.7335</code>&nbsp;would be truncated to&nbsp;<code>-2</code>.</p>\n<p>Return&nbsp;<em>the&nbsp;<strong>quotient</strong>&nbsp;after dividing&nbsp;</em><code>dividend</code><em>&nbsp;by&nbsp;</em><code>divisor</code>.</p>\n<p><strong>Note:&nbsp;</strong>Assume we are dealing with an environment that could only store integers within the&nbsp;<strong>32-bit</strong>&nbsp;signed integer range:&nbsp;<code>[&minus;2<sup>31</sup>, 2<sup>31</sup>&nbsp;&minus; 1]</code>. For this problem, if the quotient is&nbsp;<strong>strictly greater than</strong>&nbsp;<code>2<sup>31</sup>&nbsp;- 1</code>, then return&nbsp;<code>2<sup>31</sup>&nbsp;- 1</code>, and if the quotient is&nbsp;<strong>strictly less than</strong>&nbsp;<code>-2<sup>31</sup></code>, then return&nbsp;<code>-2<sup>31</sup></code>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> dividend = 10, divisor = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 10/3 = 3.33333.. which is truncated to 3.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> dividend = 7, divisor = -3\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> 7/-3 = -2.33333.. which is truncated to -2.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup>&nbsp;&lt;= dividend, divisor &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n<li><code>divisor != 0</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/375df63c-fae4-4032-8ac5-e9f6d8a83724",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "divide-two-integers_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9333"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "integer-to-roman",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Integer to Roman",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Integer to Roman</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Roman numerals are represented by seven different symbols:&nbsp;<code>I</code>,&nbsp;<code>V</code>,&nbsp;<code>X</code>,&nbsp;<code>L</code>,&nbsp;<code>C</code>,&nbsp;<code>D</code>&nbsp;and&nbsp;<code>M</code>.</p>\n<pre><strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n<p>For example,&nbsp;<code>2</code>&nbsp;is written as&nbsp;<code>II</code>&nbsp;in Roman numeral, just two one's added together.&nbsp;<code>12</code>&nbsp;is written as&nbsp;<code>XII</code>, which is simply&nbsp;<code>X + II</code>. The number&nbsp;<code>27</code>&nbsp;is written as&nbsp;<code>XXVII</code>, which is&nbsp;<code>XX + V + II</code>.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not&nbsp;<code>IIII</code>. Instead, the number four is written as&nbsp;<code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as&nbsp;<code>IX</code>. There are six instances where subtraction is used:</p>\n<ul>\n<li><code>I</code>&nbsp;can be placed before&nbsp;<code>V</code>&nbsp;(5) and&nbsp;<code>X</code>&nbsp;(10) to make 4 and 9.&nbsp;</li>\n<li><code>X</code>&nbsp;can be placed before&nbsp;<code>L</code>&nbsp;(50) and&nbsp;<code>C</code>&nbsp;(100) to make 40 and 90.&nbsp;</li>\n<li><code>C</code>&nbsp;can be placed before&nbsp;<code>D</code>&nbsp;(500) and&nbsp;<code>M</code>&nbsp;(1000) to make 400 and 900.</li>\n</ul>\n<p>Given an integer, convert it to a roman numeral.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> num = 3\n<strong>Output:</strong> \"III\"\n<strong>Explanation:</strong> 3 is represented as 3 ones.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> num = 58\n<strong>Output:</strong> \"LVIII\"\n<strong>Explanation:</strong> L = 50, V = 5, III = 3.\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> num = 1994\n<strong>Output:</strong> \"MCMXCIV\"\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= num &lt;= 3999</code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/345a29b6-45c2-4c10-8632-ac9573fd8127",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "integer-to-roman_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9334"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "largest-rectangle-in-histogram",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Largest Rectangle in Histogram",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Largest Rectangle in Histogram</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an array of integers&nbsp;<code>heights</code>&nbsp;representing the histogram's bar height where the width of each bar is&nbsp;<code>1</code>, return&nbsp;<em>the area of the largest rectangle in the histogram</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> heights = [2,1,5,6,2,3]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The above is a histogram where width of each bar is 1.\nThe largest rectangle is shown in the red area, which has an area = 10 units.\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> heights = [2,4]\n<strong>Output:</strong> 4\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= heights[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/33ff8871-bfa3-4034-a0c8-bca17a952a84",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "largest-rectangle-in-histogram_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9335"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "maximal-rectangle",
  "tags": [
    "C"
  ],
  "level": "INTERMEDIATE",
  "title": "Maximal Rectangle",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Maximal Rectangle</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given a&nbsp;<code>rows x cols</code>&nbsp;binary&nbsp;<code>matrix</code>&nbsp;filled with&nbsp;<code>0</code>'s and&nbsp;<code>1</code>'s, find the largest rectangle containing only&nbsp;<code>1</code>'s and return&nbsp;<em>its area</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The maximal rectangle is shown in the above picture.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> matrix = [[\"0\"]]\n<strong>Output:</strong> 0\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> matrix = [[\"1\"]]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>rows == matrix.length</code></li>\n<li><code>cols == matrix[i].length</code></li>\n<li><code>1 &lt;= row, cols &lt;= 200</code></li>\n<li><code>matrix[i][j]</code>&nbsp;is&nbsp;<code>'0'</code>&nbsp;or&nbsp;<code>'1'</code>.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7ac41d5d-ca8b-433a-8787-648a47310a10",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "maximal-rectangle_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9336"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maximize-distance-to-closest-person",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Maximize Distance to Closest Person",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Maximize Distance to Closest Person</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>You are given an array representing a row of&nbsp;<code>seats</code>&nbsp;where&nbsp;<code>seats[i] = 1</code>&nbsp;represents a person sitting in the&nbsp;<code>i<sup>th</sup></code>&nbsp;seat, and&nbsp;<code>seats[i] = 0</code>&nbsp;represents that the&nbsp;<code>i<sup>th</sup></code>&nbsp;seat is empty&nbsp;<strong>(0-indexed)</strong>.</p>\n<p>There is at least one empty seat, and at least one person sitting.</p>\n<p>Alex wants to sit in the seat such that the distance between him and the closest person to him is maximized.&nbsp;</p>\n<p>Return&nbsp;<em>that maximum distance to the closest person</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/09/10/distance.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> seats = [1,0,0,0,1,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> seats = [1,0,0,0]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>\nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> seats = [0,1]\n<strong>Output:</strong> 1</pre>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0ed1f76d-27fc-4178-8836-7d2135f9d166",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "maximize-distance-to-closest-person_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9337"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "minimum-window-substring",
  "tags": [
    "C"
  ],
  "level": "INTERMEDIATE",
  "title": "Minimum Window Substring",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Minimum Window Substring</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given two strings&nbsp;<code>s</code>&nbsp;and&nbsp;<code>t</code>&nbsp;of lengths&nbsp;<code>m</code>&nbsp;and&nbsp;<code>n</code>&nbsp;respectively, return&nbsp;<em>the&nbsp;<strong>minimum window substring</strong>&nbsp;of&nbsp;</em><code>s</code><em>&nbsp;such that every character in&nbsp;</em><code>t</code><em>&nbsp;(<strong>including duplicates</strong>) is included in the window. If there is no such substring</em><em>, return the empty string&nbsp;</em><code>\"\"</code><em>.</em></p>\n<p>The testcases will be generated such that the answer is&nbsp;<strong>unique</strong>.</p>\n<p>A&nbsp;<strong>substring</strong>&nbsp;is a contiguous sequence of characters within the string.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"ADOBECODEBANC\", t = \"ABC\"\n<strong>Output:</strong> \"BANC\"\n<strong>Explanation:</strong> The minimum window substring \"BANC\" includes 'A', 'B', and 'C' from string t.\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\", t = \"a\"\n<strong>Output:</strong> \"a\"\n<strong>Explanation:</strong> The entire string s is the minimum window.\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"a\", t = \"aa\"\n<strong>Output:</strong> \"\"\n<strong>Explanation:</strong> Both 'a's from t must be included in the window.\nSince the largest window of s only has one 'a', return empty string.\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == s.length</code></li>\n<li><code>n == t.length</code></li>\n<li><code>1 &lt;= m, n&nbsp;&lt;= 10<sup>5</sup></code></li>\n<li><code>s</code>&nbsp;and&nbsp;<code>t</code>&nbsp;consist of uppercase and lowercase English letters.</li>\n</ul>\n<p>&nbsp;</p>\n<strong>Follow up:</strong>&nbsp;Could you find an algorithm that runs in&nbsp;<code>O(m + n)</code>&nbsp;time?</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e5f6df2-706c-4ec6-991c-93d18f4b7e0c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "minimum-window-substring_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9338"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "remove-duplicates-from-sorted-array-ii",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Remove Duplicates from Sorted Array II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Remove Duplicates from Sorted Array II</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an integer array&nbsp;<code>nums</code>&nbsp;sorted in&nbsp;<strong>non-decreasing order</strong>, remove some duplicates&nbsp;<a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a>&nbsp;such that each unique element appears&nbsp;<strong>at most twice</strong>. The&nbsp;<strong>relative order</strong>&nbsp;of the elements should be kept the&nbsp;<strong>same</strong>.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the&nbsp;<strong>first part</strong>&nbsp;of the array&nbsp;<code>nums</code>. More formally, if there are&nbsp;<code>k</code>&nbsp;elements after removing the duplicates, then the first&nbsp;<code>k</code>&nbsp;elements of&nbsp;<code>nums</code>&nbsp;should hold the final result. It does not matter what you leave beyond the first&nbsp;<code>k</code>&nbsp;elements.</p>\n<p>Return&nbsp;<code>k</code><em>&nbsp;after placing the final result in the first&nbsp;</em><code>k</code><em>&nbsp;slots of&nbsp;</em><code>nums</code>.</p>\n<p>Do&nbsp;<strong>not</strong>&nbsp;allocate extra space for another array. You must do this by&nbsp;<strong>modifying the input array&nbsp;<a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in-place</a></strong>&nbsp;with O(1) extra memory.</p>\n<p><strong>Custom Judge:</strong></p>\n<p>The judge will test your solution with the following code:</p>\n<pre>int[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i &lt; k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n<p>If all assertions pass, then your solution will be&nbsp;<strong>accepted</strong>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1,2,2,3]\n<strong>Output:</strong> 5, nums = [1,1,2,2,3,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,1,1,1,1,2,3,3]\n<strong>Output:</strong> 7, nums = [0,0,1,1,2,3,3,_,_]\n<strong>Explanation:</strong> Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code>&nbsp;is sorted in&nbsp;<strong>non-decreasing</strong>&nbsp;order.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ae0afbe2-77bb-415b-af01-4899579ffaf0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "Remove Duplicates from Sorted Array II_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef9339"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "remove-duplicates-from-sorted-list-ii",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Remove Duplicates from Sorted List II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Remove Duplicates from Sorted List II</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given the&nbsp;<code>head</code>&nbsp;of a sorted linked list,&nbsp;<em>delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list</em>. Return&nbsp;<em>the linked list&nbsp;<strong>sorted</strong>&nbsp;as well</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> head = [1,2,3,3,4,4,5]\n<strong>Output:</strong> [1,2,5]\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist2.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> head = [1,1,1,2,3]\n<strong>Output:</strong> [2,3]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range&nbsp;<code>[0, 300]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li>The list is guaranteed to be&nbsp;<strong>sorted</strong>&nbsp;in ascending order.</li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b4584e8f-01cf-4881-866a-a8e4c4175741",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "remove-duplicates-from-sorted-list-ii_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef933a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "reverse-linked-list-ii",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Reverse Linked List II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Reverse Linked List II</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given the&nbsp;<code>head</code>&nbsp;of a singly linked list and two integers&nbsp;<code>left</code>&nbsp;and&nbsp;<code>right</code>&nbsp;where&nbsp;<code>left &lt;= right</code>, reverse the nodes of the list from position&nbsp;<code>left</code>&nbsp;to position&nbsp;<code>right</code>, and return&nbsp;<em>the reversed list</em>.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> head = [1,2,3,4,5], left = 2, right = 4\n<strong>Output:</strong> [1,4,3,2,5]\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> head = [5], left = 1, right = 1\n<strong>Output:</strong> [5]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is&nbsp;<code>n</code>.</li>\n<li><code>1 &lt;= n &lt;= 500</code></li>\n<li><code>-500 &lt;= Node.val &lt;= 500</code></li>\n<li><code>1 &lt;= left &lt;= right &lt;= n</code></li>\n</ul>\n<p>&nbsp;</p>\n<strong>Follow up:</strong>&nbsp;Could you do it in one pass?</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b76797c8-cae0-4185-bbcd-345c1cf83d2d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "reverse-linked-list-ii_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef933b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "search-in-rotated-sorted-array",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Search in Rotated Sorted Array",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Search in Rotated Sorted Array</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>There is an integer array&nbsp;<code>nums</code>&nbsp;sorted in ascending order (with&nbsp;<strong>distinct</strong>&nbsp;values).</p>\n<p>Prior to being passed to your function,&nbsp;<code>nums</code>&nbsp;is&nbsp;<strong>possibly rotated</strong>&nbsp;at an unknown pivot index&nbsp;<code>k</code>&nbsp;(<code>1 &lt;= k &lt; nums.length</code>) such that the resulting array is&nbsp;<code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>&nbsp;(<strong>0-indexed</strong>). For example,&nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;might be rotated at pivot index&nbsp;<code>3</code>&nbsp;and become&nbsp;<code>[4,5,6,7,0,1,2]</code>.</p>\n<p>Given the array&nbsp;<code>nums</code>&nbsp;<strong>after</strong>&nbsp;the possible rotation and an integer&nbsp;<code>target</code>, return&nbsp;<em>the index of&nbsp;</em><code>target</code><em>&nbsp;if it is in&nbsp;</em><code>nums</code><em>, or&nbsp;</em><code>-1</code><em>&nbsp;if it is not in&nbsp;</em><code>nums</code>.</p>\n<p>You must write an algorithm with&nbsp;<code>O(log n)</code>&nbsp;runtime complexity.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0\n<strong>Output:</strong> 4\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3\n<strong>Output:</strong> -1\n</pre>\n<p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li>All values of&nbsp;<code>nums</code>&nbsp;are&nbsp;<strong>unique</strong>.</li>\n<li><code>nums</code>&nbsp;is an ascending array that is possibly rotated.</li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ac1fa917-0360-4020-a19f-dcdfac087b8b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "search-in-rotated-sorted-array_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef933c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "search-in-rotated-sorted-array-ii",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Search in Rotated Sorted Array II",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Search in Rotated Sorted Array II</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>There is an integer array&nbsp;<code>nums</code>&nbsp;sorted in non-decreasing order (not necessarily with&nbsp;<strong>distinct</strong>&nbsp;values).</p>\n<p>Before being passed to your function,&nbsp;<code>nums</code>&nbsp;is&nbsp;<strong>rotated</strong>&nbsp;at an unknown pivot index&nbsp;<code>k</code>&nbsp;(<code>0 &lt;= k &lt; nums.length</code>) such that the resulting array is&nbsp;<code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>&nbsp;(<strong>0-indexed</strong>). For example,&nbsp;<code>[0,1,2,4,4,4,5,6,6,7]</code>&nbsp;might be rotated at pivot index&nbsp;<code>5</code>&nbsp;and become&nbsp;<code>[4,5,6,6,7,0,1,2,4,4]</code>.</p>\n<p>Given the array&nbsp;<code>nums</code>&nbsp;<strong>after</strong>&nbsp;the rotation and an integer&nbsp;<code>target</code>, return&nbsp;<code>true</code><em>&nbsp;if&nbsp;</em><code>target</code><em>&nbsp;is in&nbsp;</em><code>nums</code><em>, or&nbsp;</em><code>false</code><em>&nbsp;if it is not in&nbsp;</em><code>nums</code><em>.</em></p>\n<p>You must decrease the overall operation steps as much as possible.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 0\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 3\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code>&nbsp;is guaranteed to be rotated at some pivot.</li>\n<li><code>-10<sup>4</sup>&nbsp;&lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;This problem is similar to&nbsp;<a href=\"https://leetcode.com/problems/search-in-rotated-sorted-array/description/\" target=\"_blank\" rel=\"noopener\">Search in Rotated Sorted Array</a>, but&nbsp;<code>nums</code>&nbsp;may contain&nbsp;<strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/509f98e1-75ab-468d-ba5f-7bc47327c533",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "search-in-rotated-sorted-array-ii_Input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dba61e9b9821851ef933d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "word-search",
  "tags": [
    "C"
  ],
  "level": "BEGINNER",
  "title": "Word Search",
  "content": "<div class=\"css-101rr4k\">\n<div class=\"css-v3d350\" data-cy=\"question-title\">Word Search</div>\n<div class=\"css-10o4wqw\">&nbsp;</div>\n</div>\n<div class=\"content__u3I1 question-content__JfgR\">\n<div>\n<p>Given an&nbsp;<code>m x n</code>&nbsp;grid of characters&nbsp;<code>board</code>&nbsp;and a string&nbsp;<code>word</code>, return&nbsp;<code>true</code>&nbsp;<em>if</em>&nbsp;<code>word</code>&nbsp;<em>exists in the grid</em>.</p>\n<p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 2:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\n<strong>Output:</strong> true\n</pre>\n<p><strong>Example 3:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg\" alt=\"\" />\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == board.length</code></li>\n<li><code>n = board[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 6</code></li>\n<li><code>1 &lt;= word.length &lt;= 15</code></li>\n<li><code>board</code>&nbsp;and&nbsp;<code>word</code>&nbsp;consists of only lowercase and uppercase English letters.</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Could you use search pruning to make your solution faster with a larger&nbsp;<code>board</code>?</p>\n</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/17b5d11d-be05-4196-8bfa-ba6e9e9e1f66",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "word-search_Input.zip"
    }
  ]
}]