[{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9501"
  },
  "memoryLimit": 2,
  "source": 2,
  "timeLimit": 2,
  "scores": 50,
  "slug": "aba12c-mua-tao",
  "tags": [],
  "level": "EXPERT",
  "title": "Mua táo",
  "content": "<h2 id=\"problem-name\" class=\"text-center\">B&agrave;i to&aacute;n mua t&aacute;o</h2>\n<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<div id=\"problem-body\">\n<p>Harish đ&atilde; đến một si&ecirc;u thị để mua đ&uacute;ng 'k' kg t&aacute;o cho 'n' người bạn của m&igrave;nh.&nbsp;Si&ecirc;u thị thực sự kỳ lạ.&nbsp;Gi&aacute; của c&aacute;c mặt h&agrave;ng rất kh&aacute;c nhau.&nbsp;Anh v&agrave;o mục T&aacute;o v&agrave; hỏi về gi&aacute; cả.&nbsp;Người b&aacute;n h&agrave;ng đưa cho anh một tấm thẻ ghi gi&aacute; t&aacute;o kh&ocirc;ng t&iacute;nh theo kg.&nbsp;T&aacute;o được đ&oacute;ng th&agrave;nh từng b&igrave;a, mỗi b&igrave;a chứa 'x' kg t&aacute;o, x&gt; 0 v&agrave; 'x' l&agrave; một số nguy&ecirc;n.&nbsp;Một g&oacute;i 'x' kg sẽ được định gi&aacute; bằng rupee 'y'.&nbsp;V&igrave; vậy, tấm bảng chứa một bảng c&oacute; mục nhập 'y' biểu thị gi&aacute; của một g&oacute;i 'x' kg.&nbsp;Nếu 'y' l&agrave; -1 c&oacute; nghĩa l&agrave; g&oacute;i tương ứng kh&ocirc;ng c&oacute; sẵn.&nbsp;B&acirc;y giờ v&igrave; t&aacute;o chỉ c&oacute; sẵn trong c&aacute;c g&oacute;i, anh ấy quyết định mua &iacute;t nhất 'n' g&oacute;i cho 'n' bạn của m&igrave;nh, tức l&agrave; anh ấy sẽ kh&ocirc;ng mua nhiều hơn n g&oacute;i t&aacute;o.</p>\n<p>Harish rất th&iacute;ch bạn b&egrave; của m&igrave;nh v&agrave; v&igrave; vậy anh ấy kh&ocirc;ng muốn l&agrave;m bạn b&egrave; thất vọng.&nbsp;V&igrave; vậy, b&acirc;y giờ, anh ấy sẽ cho bạn biết anh ấy c&oacute; bao nhi&ecirc;u người bạn v&agrave; bạn phải cho anh ấy biết số tiền tối thiểu anh ấy phải chi cho bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o sẽ chứa số lượng trường hợp thử nghiệm, C.</li>\n<li>Mỗi trường hợp thử nghiệm sẽ chứa hai d&ograve;ng.</li>\n<li>D&ograve;ng đầu ti&ecirc;n ghi N v&agrave; K, số bạn b&egrave; m&agrave; anh ta c&oacute; v&agrave; số lượng t&aacute;o t&iacute;nh theo ki-l&ocirc;-gam m&agrave; anh ta n&ecirc;n mua.</li>\n<li>D&ograve;ng thứ hai chứa K số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, trong đ&oacute; số nguy&ecirc;n thứ i chỉ định gi&aacute; của g&oacute;i t&aacute;o 'i'kg.&nbsp;Gi&aacute; trị -1 biểu thị rằng g&oacute;i tương ứng kh&ocirc;ng khả dụng.</li>\n</ul>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>Số nguy&ecirc;n N sao cho $0 &lt; N \\leq 100$</li>\n<li>Số nguy&ecirc;n K sao cho $0 &lt; K \\leq 100$</li>\n<li>Gi&aacute; cả M sao cho $0 &lt; M \\leq 1000$</li>\n</ul>\n<p><strong>Đầu ra</strong></p>\n<p>Đầu ra cho mỗi trường hợp thử nghiệm phải l&agrave; một d&ograve;ng duy nhất chứa số tiền tối thiểu m&agrave; anh ta phải chi cho bạn b&egrave; của m&igrave;nh.&nbsp;In -1 nếu anh ta kh&ocirc;ng thể thỏa m&atilde;n bạn b&egrave; của m&igrave;nh.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 5\n-1 -1 4 5 -1\n5 5\n1 2 3 4 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>-1 5</code></pre>\n<p><strong>Giải th&iacute;ch c&aacute;c trường hợp kiểm thử:</strong></p>\n<ol>\n<li>V&igrave; cửa h&agrave;ng chỉ c&oacute; g&oacute;i 3 v&agrave; 4kg n&ecirc;n anh ta sẽ kh&ocirc;ng thể l&agrave;m h&agrave;i l&ograve;ng bạn b&egrave; v&igrave; anh ta sẽ kh&ocirc;ng thể mua đ&uacute;ng 5kg t&aacute;o.</li>\n<li>Anh ta c&oacute; thể mua năm g&oacute;i 1kg v&igrave; anh ta phải mua 5 kg. V&igrave; vậy, số tiền tối thiểu anh ta n&ecirc;n chi l&agrave; 5.</li>\n</ol>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7e278b83-5562-4a82-938a-b7ecfd4847ad",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ABA12C _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9502"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 50,
  "slug": "1ae00-rectangles",
  "tags": [],
  "level": "EXPERT",
  "title": "Tạo ra các hình chữ nhật",
  "content": "<p id=\"đề-b&agrave;i\"><strong>B&agrave;i to&aacute;n</strong></p>\n<p>Th&aacute;i c&oacute; N h&igrave;nh vu&ocirc;ng với k&iacute;ch thước 1. Hỏi c&oacute; bao nhi&ecirc;u dạng h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể&nbsp;tạo ra từ những h&igrave;nh vu&ocirc;ng n&agrave;y?</p>\n<p>Biết rằng, 2 h&igrave;nh chữ nhật được xem l&agrave; kh&aacute;c nhau nếu ch&uacute;ng kh&ocirc;ng thể quay hay dịch chuyển để trở th&agrave;nh h&igrave;nh c&ograve;n lại. Trong qu&aacute; tr&igrave;nh x&acirc;y dựng l&ecirc;n h&igrave;nh chữ nhật, Th&aacute;i kh&ocirc;ng thể l&agrave;m thay đổi h&igrave;nh&nbsp;dạng của c&aacute;c h&igrave;nh vu&ocirc;ng v&agrave; cũng kh&ocirc;ng thể đặt ch&uacute;ng l&ecirc;n tr&ecirc;n những h&igrave;nh c&ograve;n lại.</p>\n<p id=\"đầu-v&agrave;o\"><strong>Định dạng đầu v&agrave;o</strong></p>\n<ul>\n<li>Gồm chỉ một d&ograve;ng chứa một số nguy&ecirc;n N, với $1 \\leq N \\leq 10000$.</li>\n</ul>\n<p id=\"đầu-ra\"><strong>Định dạng đầu ra</strong></p>\n<ul>\n<li>In ra chỉ một d&ograve;ng chứa một số nguy&ecirc;n l&agrave; những h&igrave;nh chữ nhật m&agrave; Th&aacute;i c&oacute; thể tạo ra.</li>\n</ul>\n<p id=\"v&iacute;-dụ\"><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Với N = 6 h&igrave;nh vu&ocirc;ng, ta c&oacute; thể tạo ra h&igrave;nh chữ nhật bằng c&aacute;ch lần lượt x&eacute;t c&aacute;c h&igrave;nh chữ nhật với chiều cao bằng 1 hoặc 2 như h&igrave;nh dưới đ&acirc;y.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://thuattoan.phamvanlam.com/static/b0e61ff7e847af9628e9918575efd81a/ff7a3/spoj-com-thuat-toan-bai-1AE00-Rectangles-thuattoan-phamvanlam-com.png\" alt=\"spoj-com-thuat-toan-bai-1ae00-rectangles-thuattoan-phamvanlam-com\" /></p>\n<p>Do đ&oacute;, kết quả l&agrave; 8 h&igrave;nh chữ nhật.</p>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d292bd31-dae8-4d5d-85e2-7edc7d092c7f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "1AE00_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9503"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "adfruits-advanced-fruits",
  "tags": [],
  "level": "EXPERT",
  "title": "Sáng tạo tên cho các loại trái cây",
  "content": "<p>C&ocirc;ng ty \"Tr&aacute;i c&acirc;y thế kỷ 21\" đ&atilde; chuy&ecirc;n tạo ra c&aacute;c loại tr&aacute;i c&acirc;y mới bằng c&aacute;ch chuyển gen từ tr&aacute;i c&acirc;y n&agrave;y v&agrave;o bộ gen của tr&aacute;i c&acirc;y kh&aacute;c. Hầu hết c&aacute;c phương ph&aacute;p n&agrave;y kh&ocirc;ng hiệu quả, nhưng đ&ocirc;i khi, trong một số trường hợp hiếm hoi, một loại tr&aacute;i c&acirc;y mới xuất hiện c&oacute; vị giống như hỗn hợp giữa cả hai loại tr&aacute;i c&acirc;y.</p>\n<div id=\"problem-body\">\n<p>Một chủ đề thảo luận lớn trong c&ocirc;ng ty l&agrave; \"C&aacute;c c&acirc;y s&aacute;ng tạo mới n&ecirc;n được gọi như thế n&agrave;o?\" Tất nhi&ecirc;n, một hỗn hợp giữa t&aacute;o v&agrave; l&ecirc; c&oacute; thể được gọi l&agrave; apple-pear, nhưng điều n&agrave;y nghe c&oacute; vẻ kh&ocirc;ng th&uacute; vị cho lắm. Cuối c&ugrave;ng, &ocirc;ng chủ quyết định sử dụng chuỗi ngắn nhất chứa cả t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y ban đầu l&agrave;m chuỗi con l&agrave;m t&ecirc;n mới. V&iacute; dụ: \"applear\" chứa \"apple\" v&agrave; \"pear\" (APPLEar v&agrave; apPlEAR) v&agrave; kh&ocirc;ng c&oacute; chuỗi n&agrave;o ngắn hơn c&oacute; c&ugrave;ng thuộc t&iacute;nh. V&iacute; dụ, sự kết hợp giữa cranberry v&agrave; boysenberry sẽ được gọi l&agrave; \"boysecranberry\" or a \"craboysenberry\".</p>\n<p>C&ocirc;ng việc của bạn l&agrave; viết một chương tr&igrave;nh t&iacute;nh to&aacute;n một c&aacute;i t&ecirc;n ngắn nhất cho tổ hợp của hai loại quả đ&atilde; cho. Thuật to&aacute;n của bạn phải hiệu quả, nếu kh&ocirc;ng, n&oacute; kh&ocirc;ng chắc sẽ thực thi trong thời gian quy định đối với t&ecirc;n của c&aacute;c quả d&agrave;i.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Mỗi d&ograve;ng của tệp đầu v&agrave;o chứa hai chuỗi k&yacute; tự biểu thị t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y được kết hợp. Tất cả c&aacute;c t&ecirc;n c&oacute; độ d&agrave;i tối đa l&agrave; 100 v&agrave; chỉ bao gồm c&aacute;c k&yacute; tự chữ c&aacute;i. Đầu v&agrave;o được kết th&uacute;c ở cuối tệp.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra t&ecirc;n ngắn nhất của quả kết quả tr&ecirc;n một d&ograve;ng. Nếu c&oacute; thể c&oacute; nhiều hơn một t&ecirc;n ngắn nhất, bất kỳ t&ecirc;n n&agrave;o cũng được chấp nhận.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>apple peach\nananas banana\npear peach</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>appleach\nbananas\npearch</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/42734f37-4ce9-4dfe-b178-344bc377e9f2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADFRUITS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9504"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "addrev-them-so-dao-nguoc",
  "tags": [],
  "level": "EXPERT",
  "title": "Thêm số đảo ngược",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&aacute;c diễn vi&ecirc;n h&agrave;i cổ của Malidinesia th&iacute;ch phim h&agrave;i hơn bi kịch. Tiếc thay, hầu hết c&aacute;c vở tuồng cổ đều l&agrave; vở bi kịch. Do đ&oacute;, cố vấn kịch t&iacute;nh của ACM đ&atilde; quyết định chuyển một số bi kịch th&agrave;nh phim h&agrave;i. R&otilde; r&agrave;ng, c&ocirc;ng việc n&agrave;y l&agrave; rất kh&oacute; v&igrave; &yacute; thức cơ bản của vở kịch phải được giữ nguy&ecirc;n vẹn, mặc d&ugrave; tất cả mọi thứ đều thay đổi theo hướng đối lập của ch&uacute;ng. V&iacute; dụ c&aacute;c con số: nếu bất kỳ con số n&agrave;o xuất hiện trong bi kịch, n&oacute; phải được chuyển sang dạng đảo ngược của n&oacute; trước khi được chấp nhận v&agrave;o vở h&agrave;i kịch.</p>\n<div id=\"problem-body\">\n<p>Số đảo ngược l&agrave; số được viết bằng chữ số Ả Rập nhưng thứ tự c&aacute;c chữ số bị đảo ngược.&nbsp;Chữ số đầu ti&ecirc;n trở th&agrave;nh chữ số cuối c&ugrave;ng v&agrave; ngược lại.&nbsp;V&iacute; dụ, nếu anh h&ugrave;ng ch&iacute;nh c&oacute; 1245 quả d&acirc;u t&acirc;y trong thảm kịch, anh ta c&oacute; 5421 quả d&acirc;u t&acirc;y trong số đ&oacute; b&acirc;y giờ.&nbsp;Lưu &yacute; rằng tất cả c&aacute;c số 0 ở đầu đều bị bỏ qua.&nbsp;Điều đ&oacute; c&oacute; nghĩa l&agrave; nếu số kết th&uacute;c bằng số 0, số 0 sẽ bị mất bằng c&aacute;ch đảo ngược (v&iacute; dụ: 1200 cho 21).&nbsp;Cũng lưu &yacute; rằng số đảo ngược kh&ocirc;ng bao giờ c&oacute; bất kỳ số kh&ocirc;ng ở cuối.</p>\n<p>ACM cần t&iacute;nh to&aacute;n với c&aacute;c số đảo ngược.&nbsp;Nhiệm vụ của bạn l&agrave; cộng hai số đảo ngược v&agrave; xuất ra tổng đảo ngược của ch&uacute;ng.&nbsp;Tất nhi&ecirc;n, kết quả kh&ocirc;ng phải l&agrave; duy nhất v&igrave; bất kỳ số cụ thể n&agrave;o cũng l&agrave; dạng đảo ngược của một số số (v&iacute; dụ: 21 c&oacute; thể l&agrave; 12, 120 hoặc 1200 trước khi đảo ngược).&nbsp;V&igrave; vậy, ch&uacute;ng ta phải giả định rằng kh&ocirc;ng c&oacute; số 0 n&agrave;o bị mất khi đảo ngược (v&iacute; dụ: giả sử rằng số ban đầu l&agrave; 12).</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o bao gồm&nbsp;<var>N</var>&nbsp;trường hợp (bằng khoảng 10000).&nbsp;D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chỉ chứa dương t&iacute;nh số nguy&ecirc;n&nbsp;<var>N</var>&nbsp;.&nbsp;Sau đ&oacute;, theo d&otilde;i c&aacute;c trường hợp.&nbsp;Mỗi trường hợp bao gồm đ&uacute;ng một d&ograve;ng với hai số nguy&ecirc;n dương c&aacute;ch nhau bởi dấu c&aacute;ch.&nbsp;Đ&acirc;y l&agrave; những số đảo ngược m&agrave; bạn phải th&ecirc;m v&agrave;o.</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi trường hợp, in ch&iacute;nh x&aacute;c một d&ograve;ng chỉ chứa một số nguy&ecirc;n - tổng đảo ngược của hai số đảo ngược.&nbsp;Bỏ qua bất kỳ số kh&ocirc;ng ở đầu trong kết quả đầu ra.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n24 1\n4358 754\n305 794</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>34 1998 1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5e2690fb-e57f-4b51-b8e1-1fef02bd414b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADDREV_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9505"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "benefact-nguoi-co-loi",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Người có lợi",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một chương kh&aacute;c của bi&ecirc;n ni&ecirc;n sử th&agrave;nh phố của một thị trấn lớn kh&oacute; tin nổi tiếng (nếu bạn kh&ocirc;ng biết thị trấn n&agrave;y, bạn c&oacute; thể muốn giải quyết vấn đề CSTREET trước) kể cho ch&uacute;ng ta c&acirc;u chuyện sau:</p>\n<div id=\"problem-body\">\n<p>Ng&agrave;y xửa ng&agrave;y xưa, c&aacute;c c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được đ&atilde; quyết định bầu một thiếu t&aacute;.&nbsp;V&agrave;o thời điểm đ&oacute; đ&acirc;y l&agrave; một &yacute; tưởng rất mới v&agrave; c&aacute;c chiến dịch bầu cử ho&agrave;n to&agrave;n kh&ocirc;ng được biết đến.&nbsp;Nhưng tất nhi&ecirc;n một số c&ocirc;ng d&acirc;n muốn trở th&agrave;nh thiếu t&aacute; v&agrave; họ kh&ocirc;ng mất nhiều thời gian để ph&aacute;t hiện ra rằng những điều tốt đẹp hứa hẹn sẽ kh&ocirc;ng bao giờ trở th&agrave;nh hiện thực c&oacute; xu hướng hữu &iacute;ch trong t&igrave;nh huống như vậy.&nbsp;Một ứng cử vi&ecirc;n được bầu l&agrave;m thiếu t&aacute; l&agrave; Ivo đ&ocirc;i khi được gọi l&agrave; &acirc;n nh&acirc;n v&igrave; những m&oacute;n qu&agrave; gi&aacute; trị của &ocirc;ng cho những c&ocirc;ng d&acirc;n th&agrave;nh phố lớn kh&ocirc;ng thể tin được.</p>\n<p>Một ng&agrave;y trước ng&agrave;y bầu cử, Ivo, nh&agrave; hảo t&acirc;m đ&atilde; thực hiện một lời hứa với c&ocirc;ng d&acirc;n của thị trấn.&nbsp;Trong trường hợp chiến thắng trong cuộc bầu cử, anh ta sẽ đảm bảo rằng tr&ecirc;n một trong những con đường l&aacute;t đ&aacute;, đ&egrave;n đường của thị trấn sẽ được dựng l&ecirc;n v&agrave; anh ta sẽ trả số tiền đ&oacute; bằng tiền của m&igrave;nh.&nbsp;Tiết kiệm như những c&ocirc;ng d&acirc;n của thị trấn lớn kh&ocirc;ng thể tin được, họ bầu anh ta v&agrave; một ng&agrave;y sau cuộc bầu cử, họ tr&igrave;nh b&agrave;y cho anh ta quyết định đường n&agrave;o n&ecirc;n c&oacute; đ&egrave;n đường.&nbsp;Tất nhi&ecirc;n họ kh&ocirc;ng chỉ chọn con phố d&agrave;i nhất trong số tất cả c&aacute;c con phố m&agrave; c&ograve;n đổi t&ecirc;n một số con phố để một con phố rất d&agrave;i trong thị trấn tồn tại.</p>\n<p>Bạn c&oacute; thể t&igrave;m thấy con phố n&agrave;y đ&atilde; c&oacute; bao l&acirc;u?&nbsp;Cụ thể hơn, t&igrave;nh h&igrave;nh như sau.&nbsp;Bạn được giới thiệu một danh s&aacute;ch tất cả c&aacute;c con đường l&aacute;t đ&aacute; trong thị trấn lớn kh&ocirc;ng thể tin được.&nbsp;Như bạn c&oacute; thể nhớ từ vấn đề CSTREET trong thị trấn, c&aacute;c đường phố được l&aacute;t theo c&aacute;ch m&agrave; giữa hai điểm quan t&acirc;m trong thị trấn tồn tại đ&uacute;ng một đường kết nối được l&aacute;t.&nbsp;Nhiệm vụ của bạn l&agrave; t&igrave;m khoảng c&aacute;ch xa nhất tồn tại giữa hai địa điểm tham quan bất kỳ trong th&agrave;nh phố.</p>\n<h3>Đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa số lượng testcase t.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của mỗi testcase chứa số địa điểm (2 &lt;= n &lt;= 50000) trong thị trấn.&nbsp;Mỗi đường phố được cho tại một d&ograve;ng bởi hai địa điểm (1 &lt;= a, b &lt;= n) v&agrave; chiều d&agrave;i của phố (0 &lt;= l &lt;20000).</li>\n</ul>\n<h3>Đầu ra</h3>\n<ul>\n<li>Đối với mỗi testcase, h&atilde;y xuất một d&ograve;ng chứa chiều d&agrave;i tối đa của con phố d&agrave;i nhất trong th&agrave;nh phố.</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 6 1 2 3 2 3 4 2 6 2 6 4 6 6 5 5</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre class=\"language-markup\"><code>12</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/9a2a12ee-cbe1-4986-ac45-6c97a3846160",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BENEFACT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9506"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "bytesm2-philosophers-stone",
  "tags": [],
  "level": "EXPERT",
  "title": "Thu thập các viên đá",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một trong những căn ph&ograve;ng b&iacute; mật ở Hogwarts chứa đầy những vi&ecirc;n đ&aacute; của một triết gia. S&agrave;n của căn ph&ograve;ng được l&aacute;t bằng gạch vu&ocirc;ng c&oacute; k&iacute;ch thước h&times;w, trong đ&oacute;, h l&agrave; h&agrave;ng gạch ở ph&iacute;a trước (h&agrave;ng đầu ti&ecirc;n) đến v&agrave; h&agrave;ng ph&iacute;a sau (h&agrave;ng cuối c&ugrave;ng) v&agrave; w l&agrave; số cột chứa c&aacute;c &ocirc; gạch từ tr&aacute;i sang phải. Mỗi &ocirc; gạch c&oacute; từ 1 đến 100 vi&ecirc;n đ&aacute; tr&ecirc;n đ&oacute;. Harry phải lấy c&agrave;ng nhiều đ&aacute; triết gia c&agrave;ng tốt, với điều kiện sau:</p>\n<div id=\"problem-body\">\n<ul>\n<li>Anh ta bắt đầu bằng c&aacute;ch chọn bất kỳ &ocirc; n&agrave;o trong h&agrave;ng đầu ti&ecirc;n v&agrave; thu thập c&aacute;c vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc; đ&oacute;. Sau đ&oacute;, anh ta di chuyển đến một &ocirc; ở h&agrave;ng tiếp theo, thu thập c&aacute;c vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc;,.... cho đến khi đến h&agrave;ng cuối c&ugrave;ng.</li>\n<li>Khi anh ta di chuyển từ &ocirc; n&agrave;y sang &ocirc; ở h&agrave;ng tiếp theo, anh ta chỉ c&oacute; thể di chuyển đến &ocirc; ngay dưới n&oacute; hoặc theo đường ch&eacute;o tr&aacute;i hoặc phải.</li>\n</ul>\n<p>Cho trước c&aacute;c gi&aacute; trị của h v&agrave; w v&agrave; số lượng đ&aacute; của triết gia tr&ecirc;n mỗi &ocirc;, h&atilde;y viết một chương tr&igrave;nh để t&iacute;nh to&aacute;n số đ&aacute; của triết gia tối đa m&agrave; Harry c&oacute; thể lấy trong một lần đi từ h&agrave;ng đầu ti&ecirc;n đến h&agrave;ng cuối c&ugrave;ng.</p>\n</div>\n<div>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n T duy nhất, số lượng trường hợp thử nghiệm. Trong mỗi trường hợp thử nghiệm, d&ograve;ng đầu ti&ecirc;n c&oacute; hai số nguy&ecirc;n. Số nguy&ecirc;n đầu ti&ecirc;n h ($1 \\leq h \\leq 100$) l&agrave; số h&agrave;ng c&aacute;c &ocirc; gạch tr&ecirc;n s&agrave;n nh&agrave;. Số nguy&ecirc;n thứ hai w ($1 \\leq w \\leq 100$) l&agrave; số cột c&aacute;c &ocirc; gạch tr&ecirc;n s&agrave;n. Tiếp theo, c&oacute; h d&ograve;ng đầu v&agrave;o. D&ograve;ng thứ i trong số n&agrave;y, chỉ định số lượng đ&aacute; của triết gia, trong mỗi &ocirc; gạch của h&agrave;ng thứ i t&iacute;nh từ ph&iacute;a trước. Mỗi d&ograve;ng c&oacute; w số nguy&ecirc;n, trong đ&oacute; mỗi số nguy&ecirc;n m ($0 \\leq m \\leq 100$) l&agrave; số vi&ecirc;n đ&aacute; của triết gia tr&ecirc;n &ocirc; đ&oacute;. C&aacute;c số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng một k&yacute; tự khoảng trắng.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đầu ra phải bao gồm T d&ograve;ng, ($1 \\leq T \\leq 100$), mỗi d&ograve;ng cho mỗi trường hợp thử nghiệm. Mỗi d&ograve;ng bao gồm một số nguy&ecirc;n duy nhất, l&agrave; số lượng đ&aacute; triết gia tối đa m&agrave; Harry c&oacute; thể lấy được, trong một lần di chuyển từ h&agrave;ng đầu ti&ecirc;n đến h&agrave;ng cuối c&ugrave;ng cho trường hợp thử nghiệm tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n6 5\n3 1 7 4 2\n2 1 3 1 1\n1 2 2 1 8\n2 2 1 5 3\n2 1 4 4 4\n5 2 7 5 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>32\n//7+1+8+5+4+7=32</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6145a3c2-328d-4aef-b085-134db992fd5c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BYTESM2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9507"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "buglife-a-bugs-life",
  "tags": [],
  "level": "EXPERT",
  "title": "Thử nghiệm cuộc đời của con bọ",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Gi&aacute;o sư Hopper đang nghi&ecirc;n cứu về h&agrave;nh vi t&igrave;nh dục của một lo&agrave;i bọ hiếm. Gi&aacute;o sư giả định rằng ch&uacute;ng c&oacute; hai giới t&iacute;nh kh&aacute;c nhau v&agrave; ch&uacute;ng chỉ giao tiếp với những con bọ kh&aacute;c giới. Trong thử nghiệm của &ocirc;ng, mỗi con bọ v&agrave; c&aacute;ch giao tiếp của ch&uacute;ng rất dễ x&aacute;c định, bởi v&igrave; c&aacute;c con số được in tr&ecirc;n sau lưng của ch&uacute;ng.</p>\n<div id=\"problem-body\">\n<p>Cho trước một danh s&aacute;ch số lượng giao tiếp của con bọ, h&atilde;y x&aacute;c định xem thử nghiệm c&oacute; chứng minh đ&uacute;ng về giả định của gi&aacute;o sư về 2 con bọ c&oacute; c&ugrave;ng giới t&iacute;nh nhưng kh&ocirc;ng quan hệ hay nếu n&oacute; c&oacute; chứa một số giao tiếp của con bọ m&agrave; l&agrave;m thay đổi điều đ&oacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa số lượng trường hợp. Mỗi trường hợp bắt đầu bằng một d&ograve;ng cho biết số lượng con bọ (&iacute;t nhất l&agrave; một v&agrave; tối đa l&agrave; 2000) v&agrave; số lượng giao tiếp (l&ecirc;n đến 1,000,000) được ph&acirc;n t&aacute;ch bằng một khoảng trắng. Trong c&aacute;c d&ograve;ng tiếp theo, mỗi lần giao tiếp được cho dưới dạng hai gi&aacute; trị số của con bọ ri&ecirc;ng biệt, được ph&acirc;n t&aacute;ch nhau bởi một khoảng trắng. C&aacute;c con bọ được đ&aacute;nh số li&ecirc;n tục bắt đầu từ một.</p>\n<h3>Định dạng đầu ra</h3>\n<p>The output for every scenario is a line containing &ldquo;<tt>Scenario #i:</tt>&rdquo;, where i is the number of the scenario starting at 1, followed by one line saying either &ldquo;<tt>No suspicious bugs found!</tt>&rdquo; if the experiment is consistent with his assumption about the bugs&rsquo; sexual behavior, or &ldquo;<tt>Suspicious bugs found!</tt>&rdquo; if Professor Hopper&rsquo;s assumption is definitely wrong.</p>\n<p>Đầu ra cho mỗi trường hợp l&agrave; một d&ograve;ng c&oacute; chứa &ldquo;Scenario #i:&rdquo;, trong đ&oacute; i l&agrave; số của trường hợp bắt đầu từ 1, theo sau l&agrave; một d&ograve;ng cho biết \"No suspicious bugs found!\" nếu thử nghiệm tr&ugrave;ng khớp với giả định của gi&aacute;o sư về h&agrave;nh vi t&igrave;nh dục của con bọ hoặc \"Suspicious bugs found!\" nếu giả định của gi&aacute;o sư Hopper chắc chắn l&agrave; sai.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 3\n1 2\n2 3\n1 3\n4 2\n1 2\n3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Scenario #1:\nSuspicious bugs found!\nScenario #2:\nNo suspicious bugs found!</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/03018e4e-189b-40ac-91ab-ddb448802d8a",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BUGLIFE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9508"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "broken-broken-keyboard",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bàn phím bị hỏng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>B&agrave;n ph&iacute;m của Bruce Force bị hỏng, chỉ c&ograve;n một số ph&iacute;m hoạt động được. Bruce đ&atilde; ph&aacute;t hiện ra rằng anh ta vẫn c&oacute; thể g&otilde; văn bản bằng c&aacute;ch chuyển sang m&agrave;n h&igrave;nh b&agrave;n ph&iacute;m bất cứ khi n&agrave;o anh ta cần nhập một chữ c&aacute;i n&agrave;o m&agrave; hiện tại kh&ocirc;ng được &aacute;nh xạ tới bất kỳ ph&iacute;m n&agrave;o trong số m ph&iacute;m c&ograve;n hoạt động của b&agrave;n ph&iacute;m.</p>\n<div id=\"problem-body\">\n<p>Bạn được cung cấp một văn bản m&agrave; Bruce muốn nhập v&agrave; anh ấy hỏi bạn liệu bạn c&oacute; thể cho anh ấy biết số k&yacute; tự li&ecirc;n tiếp tối đa trong văn bản c&oacute; thể được nhập m&agrave; kh&ocirc;ng cần phải chuyển sang m&agrave;n h&igrave;nh b&agrave;n ph&iacute;m hay kh&ocirc;ng. Để đơn giản, ch&uacute;ng ta sẽ giả định rằng mỗi ph&iacute;m của b&agrave;n ph&iacute;m sẽ được &aacute;nh xạ tới ch&iacute;nh x&aacute;c một k&yacute; tự v&agrave; kh&ocirc;ng thể nhập c&aacute;c k&yacute; tự kh&aacute;c bằng c&aacute;ch kết hợp c&aacute;c ph&iacute;m kh&aacute;c nhau. Điều n&agrave;y c&oacute; nghĩa l&agrave; Bruce muốn biết độ d&agrave;i của chuỗi con lớn nhất của văn bản bao gồm nhiều nhất m k&yacute; tự kh&aacute;c nhau.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o chứa một số trường hợp thử nghiệm, mỗi trường hợp thử nghiệm bao gồm hai d&ograve;ng. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp chứa số m (1 &le; m &le; 128), số n&agrave;y x&aacute;c định c&oacute; bao nhi&ecirc;u ph&iacute;m tr&ecirc;n b&agrave;n ph&iacute;m vẫn c&ograve;n hoạt động. D&ograve;ng thứ hai của mỗi trường hợp chứa văn bản m&agrave; Bruce muốn nhập. Bạn c&oacute; thể giả sử rằng độ d&agrave;i của văn bản n&agrave;y kh&ocirc;ng vượt qu&aacute; 1 triệu k&yacute; tự. Lưu &yacute; rằng đầu v&agrave;o c&oacute; thể chứa c&aacute;c k&yacute; tự khoảng trắng, c&aacute;c k&yacute; tự n&agrave;y sẽ được xử l&yacute; giống như bất kỳ k&yacute; tự n&agrave;o kh&aacute;c.</li>\n<li>Trường hợp thử nghiệm cuối c&ugrave;ng được theo sau bởi một d&ograve;ng chứa một số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp kiểm tra, in ra một d&ograve;ng c&oacute; độ d&agrave;i bằng chuỗi con lớn nhất của văn bản bao gồm nhiều nhất m k&yacute; tự kh&aacute;c nhau.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\nThis can't be solved by brute force.\n1\nMississippi\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>7\n2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/76740ed5-1cd0-415d-b045-d3739d644b53",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BROKEN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9509"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "books1-copying-books",
  "tags": [],
  "level": "EXPERT",
  "title": "Sao chép sách",
  "content": "<p>Trước khi ph&aacute;t minh ra in s&aacute;ch, rất kh&oacute; để tạo ra một bản sao của một cuốn s&aacute;ch. Tất cả c&aacute;c nội dung phải được viết lại bằng tay bởi những người được gọi l&agrave; người ghi ch&eacute;p. Người ghi ch&eacute;p đ&atilde; được tặng một cuốn s&aacute;ch v&agrave; sau v&agrave;i th&aacute;ng anh ta đ&atilde; ho&agrave;n th&agrave;nh bản sao của n&oacute;. Một trong những người ghi ch&eacute;p nổi tiếng nhất sống ở thế kỷ 15 v&agrave; t&ecirc;n của &ocirc;ng l&agrave; Xaverius Endricus Remius Ontius Xendrianus (Xerox). D&ugrave; sao th&igrave; c&ocirc;ng việc cũng rất kh&oacute; chịu v&agrave; nh&agrave;m ch&aacute;n. V&agrave; c&aacute;ch duy nhất để tăng tốc l&agrave; thu&ecirc; th&ecirc;m người ghi ch&eacute;p.</p>\n<div id=\"problem-body\">\n<p>Ng&agrave;y xửa ng&agrave;y xưa, c&oacute; một đo&agrave;n kịch muốn đ&oacute;ng những vở Antique Tragedies nổi tiếng. Kịch bản của những vở kịch n&agrave;y đ&atilde; được chia th&agrave;nh nhiều cuốn s&aacute;ch v&agrave; tất nhi&ecirc;n c&aacute;c diễn vi&ecirc;n cần th&ecirc;m nhiều bản sao của ch&uacute;ng. V&igrave; vậy, họ đ&atilde; thu&ecirc; nhiều người ghi ch&eacute;p để sao ch&eacute;p những cuốn s&aacute;ch n&agrave;y. H&atilde;y tưởng tượng bạn c&oacute; m cuốn s&aacute;ch (đ&aacute;nh số 1, 2 ... m) c&oacute; thể c&oacute; số trang kh&aacute;c nhau ($p_{1}, p_{2} ... p_{m}$) v&agrave; bạn muốn tạo một bản sao của mỗi cuốn s&aacute;ch đ&oacute;. Nhiệm vụ của bạn l&agrave; chia những cuốn s&aacute;ch n&agrave;y cho k người ghi ch&eacute;p, $k \\leq m$. Mỗi cuốn s&aacute;ch chỉ c&oacute; thể được giao cho một người ghi ch&eacute;p duy nhất v&agrave; mỗi người ghi ch&eacute;p phải nhận được một chuỗi c&aacute;c cuốn s&aacute;ch li&ecirc;n tục. Điều đ&oacute; c&oacute; nghĩa l&agrave;, tồn tại một d&atilde;y số li&ecirc;n tiếp tăng dần $0 = b_{0} &lt;b_{1} &lt;b_{2}, ... &lt;b_{k-1} \\leq b_{k} = m$ sao cho người ghi ch&eacute;p thứ i nhận được một chuỗi c&aacute;c cuốn s&aacute;ch c&oacute; c&aacute;c số từ $b_{i-1}+1 đến b_{i}$. Thời gian cần thiết để sao ch&eacute;p tất cả c&aacute;c cuốn s&aacute;ch được x&aacute;c định bởi người ghi ch&eacute;p được giao nhiều việc nhất. Do đ&oacute;, mục ti&ecirc;u của ch&uacute;ng ta l&agrave; giảm thiểu số trang tối đa được chỉ định cho một người ghi ch&eacute;p. Nhiệm vụ của bạn l&agrave; t&igrave;m ra phương &aacute;n giao việc tối ưu nhất.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bao gồm N trường hợp (khoảng 200). D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chỉ chứa số nguy&ecirc;n dương N. Sau đ&oacute; l&agrave; c&aacute;c trường hợp. Mỗi trường hợp bao gồm đ&uacute;ng hai d&ograve;ng. Ở d&ograve;ng thứ nhất c&oacute; hai số nguy&ecirc;n m v&agrave; k, $1 \\leq k \\leq m \\leq 500$. Ở d&ograve;ng thứ hai gồm c&aacute;c số nguy&ecirc;n $p_{1}, p_{2},...p_{m}$ c&aacute;ch nhau bởi dấu c&aacute;ch. Tất cả c&aacute;c gi&aacute; trị n&agrave;y đều l&agrave; c&aacute;c số dương v&agrave; nhỏ hơn 10000000.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp, in ra ch&iacute;nh x&aacute;c một d&ograve;ng. D&ograve;ng đ&oacute; phải chứa đầu v&agrave;o li&ecirc;n tiếp p1, p2, ... pm được chia th&agrave;nh đ&uacute;ng k phần sao cho tổng lớn nhất của một phần phải nhỏ nhất c&oacute; thể. H&atilde;y sử dụng k&yacute; tự gạch ch&eacute;o ('/') để t&aacute;ch c&aacute;c phần. Phải c&oacute; ch&iacute;nh x&aacute;c một k&yacute; tự khoảng trắng giữa hai số li&ecirc;n tiếp bất kỳ v&agrave; giữa số với dấu gạch ch&eacute;o.</p>\n<p>Nếu c&oacute; nhiều hơn một giải ph&aacute;p, h&atilde;y in ra một giải ph&aacute;p giảm thiểu c&ocirc;ng việc được giao cho người ghi ch&eacute;p đầu ti&ecirc;n, sau đ&oacute; cho người ghi ch&eacute;p thứ hai,... Nhưng mỗi người ghi ch&eacute;p phải được giao &iacute;t nhất một cuốn s&aacute;ch.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n9 3\n100 200 300 400 500 600 700 800 900\n5 4\n100 100 100 100 100</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>100 200 300 400 500 / 600 700 / 800 900\n100 / 100 / 100 / 100 100</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5790e4a3-67f3-4fb3-94d2-a668b6cb6b7e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BOOKS1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "bokam143sou-checking-cubes",
  "tags": [],
  "level": "BEGINNER",
  "title": "Kiểm tra số hình lập phương",
  "content": "<p>Cho một số nguy&ecirc;n N. T&igrave;m số c&aacute;ch c&oacute; thể để biểu diễn N dưới dạng tổng của năm h&igrave;nh lập phương.</p>\n<div id=\"problem-body\">\n<h3>Đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa gi&aacute; trị N.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$1 \\leq N \\leq 125000$</li>\n</ul>\n<h3>Đầu ra</h3>\n<p>In ra kết quả</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>64</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/98447aa7-ec40-4a7b-a4b3-fbea4d2caf40",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "BOKAM143SOU_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "coins-bytelandian-gold-coins",
  "tags": [],
  "level": "EXPERT",
  "title": "Đổi đồng tiền xu Bytelandian",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Ở Byteland, họ c&oacute; một hệ thống tiền tệ rất lạ. Mỗi đồng xu v&agrave;ng Bytelandian c&oacute; một số nguy&ecirc;n được viết tr&ecirc;n đ&oacute;. Một đồng n c&oacute; thể được đổi trong ng&acirc;n h&agrave;ng th&agrave;nh ba đồng: n/2, n/3 v&agrave; n/4. Nhưng những con số n&agrave;y đều được l&agrave;m tr&ograve;n xuống (c&aacute;c ng&acirc;n h&agrave;ng phải c&oacute; l&atilde;i).</p>\n<div id=\"problem-body\">\n<p>Bạn cũng c&oacute; thể b&aacute;n tiền xu Bytelandian để đổi đ&ocirc; la Mỹ. Tỷ gi&aacute; hối đo&aacute;i l&agrave; 1:1. Nhưng bạn kh&ocirc;ng thể mua tiền xu Bytelandian. Bạn c&oacute; một đồng tiền v&agrave;ng. Số lượng đ&ocirc; la Mỹ tối đa bạn c&oacute; thể nhận được cho n&oacute; l&agrave; bao nhi&ecirc;u?</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đầu v&agrave;o sẽ chứa một số trường hợp thử nghiệm (kh&ocirc;ng qu&aacute; 10). Mỗi trường hợp l&agrave; một d&ograve;ng duy nhất với số n, $0 \\leq n \\leq 1,000,000,000$. Đ&oacute; l&agrave; số được viết tr&ecirc;n đồng xu của bạn.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng duy nhất, chứa số đ&ocirc; la Mỹ tối đa m&agrave; bạn c&oacute; thể kiếm được.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>12\n2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>13\n2</code></pre>\n<p>Bạn c&oacute; thể thay đổi 12 th&agrave;nh 6, 4 v&agrave; 3, sau đ&oacute; đổi ch&uacute;ng th&agrave;nh \\$6 + \\$4 + \\$3 = \\$13. Nếu bạn thử đổi đồng xu 2 th&agrave;nh 3 đồng xu nhỏ hơn, bạn sẽ nhận được 1, 0 v&agrave; 0, v&agrave; sau đ&oacute; bạn c&oacute; thể nhận được kh&ocirc;ng qu&aacute; 1 đ&ocirc; la từ ch&uacute;ng. Tốt hơn l&agrave; chỉ cần đổi trực tiếp đồng xu 2 th&agrave;nh 2 đ&ocirc; la.</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1b4007f4-9099-4742-a469-884e25f11f37",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "COINS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "diehard-die-hard",
  "tags": [],
  "level": "EXPERT",
  "title": "Cuộc sinh tử sống còn",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p><strong>B&agrave;i to&aacute;n:</strong></p>\n<div id=\"problem-body\">\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://www.spoj.com/content/min_25:diehard.png\" alt=\"\" width=\"346\" height=\"332\" /></p>\n<p>Ban đầu bạn c&oacute; lượng m&aacute;u 'H' v&agrave; lượng &aacute;o gi&aacute;p 'A'. Ngay lập tức, bạn c&oacute; thể sống ở bất kỳ nơi n&agrave;o trong ba nơi bao gồm lửa, nước v&agrave; kh&ocirc;ng kh&iacute;. Sau mỗi thời gian đơn vị, bạn phải thay đổi nơi ở của m&igrave;nh. V&iacute; dụ, nếu bạn đang sống trong lửa, bạn c&oacute; thể bước v&agrave;o nước hoặc kh&ocirc;ng kh&iacute;. Nếu bạn bước v&agrave;o kh&ocirc;ng kh&iacute;, m&aacute;u của bạn tăng 3 v&agrave; gi&aacute;p của bạn tăng 2. Nếu bạn bước xuống nước, m&aacute;u của bạn giảm 5 v&agrave; gi&aacute;p của bạn giảm 10. Nếu bạn bước v&agrave;o lửa, m&aacute;u của bạn giảm 20 v&agrave; gi&aacute;p của bạn tăng 5</p>\n<p>Nếu m&aacute;u hoặc &aacute;o gi&aacute;p của bạn nhỏ hơn hoặc bằng 0, bạn sẽ chết ngay lập tức T&igrave;m thời gian tối đa bạn c&oacute; thể sống s&oacute;t.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>D&ograve;ng đầu ti&ecirc;n bao gồm một số nguy&ecirc;n t, số lượng c&aacute;c trường hợp thử nghiệm.&nbsp;Đối với mỗi trường hợp thử nghiệm sẽ c&oacute; hai số nguy&ecirc;n dương đại diện cho sức khỏe ban đầu H v&agrave; &aacute;o gi&aacute;p ban đầu A.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y t&igrave;m thời gian tối đa m&agrave; bạn c&oacute; thể tồn tại.</p>\n<p><strong>Lưu &yacute;:</strong>&nbsp;Bạn c&oacute; thể chọn bất kỳ nơi n&agrave;o trong 3 nơi trong lần di chuyển đầu ti&ecirc;n của m&igrave;nh.</p>\n<p><strong>Điều kiện</strong></p>\n<ul>\n<li>$1 \\leq t \\leq 10$</li>\n<li>$1 \\leq H, A \\leq 1000$</li>\n</ul>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2 10\n4 4\n20 8</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1\n5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1d290726-11c6-4694-aaa3-bbd0573ead4b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DIEHARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "dcepc501-save-thy-toys",
  "tags": [],
  "level": "EXPERT",
  "title": "Đồ chơi của Leonard",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Leonard rất th&iacute;ch mua những m&oacute;n đồ chơi khoa học viễn tưởng hiếm v&agrave; đắt tiền. Anh ta giữ bộ sưu tập của m&igrave;nh theo thứ tự tuần tự về ng&agrave;y m&agrave; đồ chơi được mua trong một chiếc tủ đặc biệt để c&ocirc; bạn c&ugrave;ng ph&ograve;ng Sheldon của anh kh&ocirc;ng bao giờ lấy đồ chơi của anh. Nhưng v&igrave; xui xẻo, Leonard một lần thua cược với Sheldon v&agrave; Sheldon y&ecirc;u cầu một phần đồ chơi của Leonard. V&igrave; kh&ocirc;ng muốn mất nhiều tiền n&ecirc;n Leonard quyết định một chiến lược để giảm mức thua xuống mức tối thiểu.</p>\n<div id=\"problem-body\">\n<p>Leonard, bắt đầu từ m&oacute;n đồ chơi đầu ti&ecirc;n trong tủ của m&igrave;nh sẽ chọn một số đồ chơi, giả sử \"x\" đồ chơi theo thứ tự. Sau đ&oacute; Sheldon sẽ chọn c&aacute;c đồ chơi \"x\" tiếp theo (Lưu &yacute; rằng Sheldon chọn c&aacute;c đồ chơi bằng số lượng đồ chơi được chọn bởi Leonard trừ khi c&aacute;c đồ chơi c&ograve;n lại nhỏ hơn \"x\". Trong trường hợp đ&oacute;, anh ta chọn tất cả c&aacute;c đồ chơi c&ograve;n lại). Việc n&agrave;y sẽ tiếp tục diễn ra cho đến khi kh&ocirc;ng c&ograve;n đồ chơi n&agrave;o trong tủ để Leonard chọn. Bạn được cung cấp một chuỗi c&aacute;c m&oacute;n đồ chơi với gi&aacute; cả của ch&uacute;ng. H&atilde;y gi&uacute;p Leonard tối đa h&oacute;a tổng gi&aacute; cả của tất cả m&oacute;n đồ chơi m&agrave; anh ấy chọn.</p>\n<p>Leonard trong mỗi lượt của m&igrave;nh chỉ c&oacute; thể chọn 1 hoặc 2 hoặc 3 đồ chơi (\"x\" được m&ocirc; tả ở tr&ecirc;n c&oacute; thể nhận gi&aacute; trị 1, 2 hoặc 3).</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chỉ định T, số lượng c&aacute;c trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp thử nghiệm chứa N ở d&ograve;ng đầu ti&ecirc;n. D&ograve;ng thứ hai chứa N số nguy&ecirc;n như đ&atilde; m&ocirc; tả ở tr&ecirc;n.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra 1 d&ograve;ng cho mỗi trường hợp thử nghiệm đưa ra gi&aacute; trị lớn nhất c&oacute; thể của tổng tất cả đồ chơi m&agrave; Leonard chọn.</p>\n<h3>Điều kiện</h3>\n<ul>\n<li>$1 \\leq T \\leq 10$</li>\n<li>$1 \\leq N \\leq 100000$</li>\n<li>Gi&aacute; cả của đồ chơi K sao cho $1 \\leq K \\leq 1000000$</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n4\n5 4 3 2\n6\n10 8 7 11 15 20</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>12\n53</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/687c0565-40f1-44cc-92b6-f7d9ea64ce96",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "DCEPC501_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950e"
  },
  "memoryLimit": 0,
  "source": 0,
  "timeLimit": 0,
  "scores": 40,
  "slug": "ctain-containers",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bài toán về các thùng chứa nước",
  "content": "<p>Ch&uacute;ng ta được cho n th&ugrave;ng chứa, trong đ&oacute; $1 \\leq n \\leq 4$. L&uacute;c đầu tất cả c&aacute;c th&ugrave;ng đều chứa đầy nước. Dung t&iacute;ch của th&ugrave;ng thứ i l&agrave; số tự nhi&ecirc;n $o_{i}$ thỏa m&atilde;n bất đẳng thức $1 \\leq o_{i} \\leq 49$. 3 thao t&aacute;c c&oacute; thể thực hiện bao gồm:</p>\n<div id=\"problem-body\">\n<ol type=\"1\">\n<li>Đổ to&agrave;n bộ nước của một th&ugrave;ng chứa n&agrave;y sang th&ugrave;ng chứa kh&aacute;c. Thao t&aacute;c n&agrave;y c&oacute; thể được thực hiện trừ khi c&oacute; qu&aacute; &iacute;t chỗ trống trong th&ugrave;ng thứ hai.</li>\n<li>Đổ đầy nước v&agrave;o một th&ugrave;ng chứa từ th&ugrave;ng kh&aacute;c.</li>\n<li>Đổ to&agrave;n bộ nước của một th&ugrave;ng chứa v&agrave;o cống.</li>\n</ol>\n<h3>Nhiệm vụ</h3>\n<p>H&atilde;y viết 1 chương tr&igrave;nh cho mỗi trường hợp như sau:</p>\n<ul type=\"disc\">\n<li>Đọc v&agrave;o số lượng th&ugrave;ng chứa n, dung t&iacute;ch của mỗi th&ugrave;ng v&agrave; lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong mỗi th&ugrave;ng.</li>\n<li>Kiểm tra xem c&oacute; tồn tại một loạt c&aacute;c thao t&aacute;c dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu hay kh&ocirc;ng v&agrave; nếu c&oacute;, chương tr&igrave;nh sẽ t&iacute;nh to&aacute;n số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống được y&ecirc;u cầu.</li>\n<li>Ghi ra kết quả. Kết quả phải l&agrave; số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu, hoặc một từ \"NO\" nếu kh&ocirc;ng c&oacute; chuỗi c&aacute;c thao t&aacute;c như vậy.</li>\n</ul>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Một số nguy&ecirc;n ở d&ograve;ng đầu ti&ecirc;n, cho biết số lượng trường hợp thử nghiệm, tiếp theo l&agrave; một d&ograve;ng trống. Sẽ c&oacute; kh&ocirc;ng qu&aacute; 20 trường hợp thử nghiệm.</p>\n<p>Đối với mỗi trường hợp thử nghiệm, tại d&ograve;ng đầu ti&ecirc;n, một số nguy&ecirc;n dương n được viết, $n \\leq 4$, đ&acirc;y l&agrave; số lượng th&ugrave;ng chứa. C&oacute; n số nguy&ecirc;n dương được viết ở d&ograve;ng thứ hai. Đ&acirc;y l&agrave; dung t&iacute;ch của c&aacute;c th&ugrave;ng chứa (số nguy&ecirc;n thứ i $o_{i}$ biểu thị dung t&iacute;ch nếu th&ugrave;ng chứa thứ i, $1 \\leq o_{i} \\leq 49$). Trong d&ograve;ng thứ ba c&oacute; n số được viết. Đ&acirc;y l&agrave; thể t&iacute;ch lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong c&aacute;c th&ugrave;ng chứa (số nguy&ecirc;n thứ i biểu thị khối lượng nước cuối c&ugrave;ng được y&ecirc;u cầu trong th&ugrave;ng chứa thứ i, $0 \\leq w_{i} \\leq o_{i}$). Tất cả c&aacute;c số nguy&ecirc;n ở d&ograve;ng thứ hai v&agrave; thứ ba được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</p>\n<p>C&aacute;c trường hợp thử nghiệm sẽ được ph&acirc;n t&aacute;ch bằng một d&ograve;ng trống duy nhất.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm: viết ra một số nguy&ecirc;n - số lượng thao t&aacute;c tối thiểu dẫn đến t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu hoặc chỉ viết ra một từ \"NO\" nếu kh&ocirc;ng thể tới được t&igrave;nh huống cuối c&ugrave;ng được y&ecirc;u cầu, chỉ thực hiện c&aacute;c thao t&aacute;c cho ph&eacute;p.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n\n3\n3 5 5\n0 0 4\n\n2\n20 25\n10 16</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\nNO</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/4cb1aabf-91c1-4d56-bcdc-b1ffd86079a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CTAIN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef950f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 40,
  "slug": "crypto2-the-bytelandian-cryptographer-act-ii",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Nhà mật mã người Bytelandian",
  "content": "<p>Nh&agrave; mật m&atilde; cuồng t&iacute;n người Bytelandian đ&atilde; m&atilde; h&oacute;a một c&aacute;ch ẩn &yacute; một số c&oacute; ba chữ số bằng c&aacute;ch trừ đi 1 từ n&oacute;. Lần n&agrave;y anh ấy đ&atilde; thực sự vượt qu&aacute; mức! Người l&iacute;nh, h&atilde;y đ&aacute;nh bại anh ta, v&igrave; vua Burger v&agrave; đất nước! H&atilde;y sử dụng Brainf ** k (kh&ocirc;ng cho ph&eacute;p sử dụng ng&ocirc;n ngữ kh&aacute;c).</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">Một số nguy&ecirc;n dương c&oacute; 3 chữ số được m&atilde; h&oacute;a.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Gi&aacute; trị được giải m&atilde;</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>699</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>700</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f560bee4-d385-43d3-b916-b2e48eb66f78",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CRYPTO2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9510"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "elevtrbl-elevator-trouble",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán thang máy",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bạn đang tr&ecirc;n đường đến cuộc phỏng vấn xin việc đầu ti&ecirc;n với tư c&aacute;ch l&agrave; người kiểm tra chương tr&igrave;nh, v&agrave; bạn đ&atilde; đến muộn. Cuộc phỏng vấn diễn ra trong một t&ograve;a nh&agrave; chọc trời v&agrave; bạn hiện đang ở tầng s, v&agrave; bạn nh&igrave;n thấy thang m&aacute;y. Khi bước v&agrave;o thang m&aacute;y, bạn biết rằng n&oacute; chỉ c&oacute; hai n&uacute;t, được đ&aacute;nh dấu \"UP u\" v&agrave; \"DOWN d\". Bạn kết luận rằng n&uacute;t UP sẽ đưa l&ecirc;n tầng u (nếu kh&ocirc;ng c&oacute; đủ tầng, nhấn n&uacute;t UP sẽ kh&ocirc;ng l&agrave;m g&igrave; cả), trong khi n&uacute;t DOWN sẽ đưa bạn xuống tầng (hoặc kh&ocirc;ng nếu kh&ocirc;ng đủ tầng). Biết rằng cuộc phỏng vấn ở tầng g v&agrave; chỉ c&oacute; tầng f trong t&ograve;a nh&agrave;, bạn nhanh ch&oacute;ng quyết định viết một chương tr&igrave;nh cung cấp cho bạn số lần nhấn n&uacute;t m&agrave; bạn cần thực hiện. Nếu bạn kh&ocirc;ng thể đến đ&uacute;ng tầng, chương tr&igrave;nh của bạn sẽ tạm dừng với th&ocirc;ng b&aacute;o \"use stair\".</p>\n<p>Với đầu v&agrave;o f, s, g, u v&agrave; d (tầng, điểm xuất ph&aacute;t, tầng cần l&ecirc;n, đi l&ecirc;n, đi xuống), t&igrave;m chuỗi c&aacute;c lần nhấn n&uacute;t ngắn nhất m&agrave; bạn phải nhấn để đi từ s đến g, với một t&ograve;a nh&agrave; gồm c&aacute;c tầng, hoặc in ra \"use stairs\" nếu bạn kh&ocirc;ng thể đi từ s đến g bằng thang m&aacute;y.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm một d&ograve;ng, cụ thể l&agrave; f s g u d, trong đ&oacute; $1 \\leq s, g \\leq f \\leq 1,000,000$ v&agrave; $0 \\leq u, d \\leq 1,000,000$. C&aacute;c tầng được lập chỉ số, nếu c&oacute; 10 tầng, s v&agrave; g sẽ nằm trong khoảng [1:10].</p>\n<h3>Định dạng đầu ra</h3>\n<p>Bạn phải trả lời bằng số lần nhấn tối thiểu m&agrave; bạn phải thực hiện để đi từ s đến g, hoặc in ra \"use stair\" nếu kh&ocirc;ng thể.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 1 10 2 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>100 2 1 1 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>use the stairs</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/16d26274-ff75-4ee6-9a84-3c8aba875acc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ELEVTRBL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9511"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 100,
  "slug": "gcpc11j-time-to-live",
  "tags": [],
  "level": "EXPERT",
  "title": "Thời gian tồn tại của gói tin",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Như bạn c&oacute; thể biết, hầu hết c&aacute;c mạng m&aacute;y t&iacute;nh được tổ chức theo cấu tr&uacute;c c&acirc;y, mỗi m&aacute;y t&iacute;nh đều c&oacute; thể truy cập được bởi c&aacute;c m&aacute;y t&iacute;nh kh&aacute;c nhưng chỉ qua một đường dẫn duy nhất. Thời gian tồn tại (TTL) chỉ định sau bao nhi&ecirc;u bước nhảy m&agrave; một g&oacute;i mạng bị rớt nếu n&oacute; chưa đến đ&iacute;ch. Mục đ&iacute;ch của TTL l&agrave; để tr&aacute;nh c&aacute;c t&igrave;nh huống trong đ&oacute; một g&oacute;i di chuyển lặp lại qua mạng do lỗi trong bảng định tuyến.</p>\n<div id=\"problem-body\">\n<p>Việc bố tr&iacute; một bộ định tuyến kết nối mạng n&agrave;y với mạng kh&aacute;c l&agrave; tối ưu khi TTL cần thiết tối đa cho c&aacute;c g&oacute;i được gửi từ bộ định tuyến n&agrave;y đến bất kỳ m&aacute;y t&iacute;nh n&agrave;o kh&aacute;c trong c&ugrave;ng một mạng l&agrave; tối thiểu. Với một mạng được chỉ định ở tr&ecirc;n, bạn h&atilde;y t&iacute;nh to&aacute;n TTL cần thiết tối đa trong mạng n&agrave;y nếu bạn c&oacute; thể chọn m&aacute;y t&iacute;nh sẽ được sử dụng l&agrave;m bộ định tuyến.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>The first line of the input consists of the number of test cases&nbsp;<em>c</em>&nbsp;that follow (<em>1 &le; c &le; 100</em>). Each test case starts with a line specifying&nbsp;<em>N</em>, the number of computers in this network (<em>1 &lt; N &le; 10<sup>5</sup></em>). Computers are numbered from&nbsp;<em>0</em>&nbsp;to&nbsp;<em>N-1</em>. Then follow&nbsp;<em>N-1</em>&nbsp;lines, each specifying a network connection by two numbers&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;which means that computer&nbsp;<em>a</em>&nbsp;is connected to computer&nbsp;<em>b</em>&nbsp;and vice versa, of course (<em>0 &le; a,b &lt; N</em>).</p>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o bao gồm số lượng trường hợp thử nghiệm c&nbsp; sao cho 1 &le; c &le; 100. Mỗi trường hợp thử nghiệm bắt đầu bằng một d&ograve;ng chỉ định N, số lượng m&aacute;y t&iacute;nh trong mạng (1 &lt;N &le; 105). M&aacute;y t&iacute;nh được đ&aacute;nh số từ 0 đến N-1. Sau N-1 d&ograve;ng, mỗi d&ograve;ng chỉ định một kết nối mạng bằng hai số a v&agrave; b, c&oacute; nghĩa l&agrave; m&aacute;y t&iacute;nh a được kết nối với m&aacute;y t&iacute;nh b v&agrave; ngược lại (0 &le; a, b &lt;N).</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm trong đầu v&agrave;o, in ra một d&ograve;ng chứa TTL tối ưu như đ&atilde; chỉ định ở tr&ecirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n1 0\n5\n3 2\n2 1\n0 2\n2 4\n9\n3 1\n6 5\n3 4\n0 3\n8 1\n1 7\n1 6\n2 3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1\n2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/e3cc317e-6fda-419b-9082-7c990f6ddd74",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11J_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9512"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "gcpc11f-diary",
  "tags": [],
  "level": "EXPERT",
  "title": "Nhật ký mã hóa",
  "content": "<p>Ng&agrave;y nay, những người muốn giao tiếp một c&aacute;ch an to&agrave;n sẽ phải sử dụng c&aacute;c thuật to&aacute;n m&atilde; h&oacute;a bất đối xứng như RSA. Tuy nhi&ecirc;n, anh trai t&ocirc;i sử dụng một phương ph&aacute;p m&atilde; h&oacute;a kh&aacute;c, đơn giản hơn cho c&aacute;c mục nhật k&yacute; của anh ấy. Anh ta sử dụng một hệ mật m&atilde; thay thế, trong đ&oacute; mỗi chữ c&aacute;i trong bản r&otilde; được thay thế bằng một chữ c&aacute;i kh&aacute;c trong bảng chữ c&aacute;i. Khoảng c&aacute;ch giữa k&yacute; tự bản r&otilde; v&agrave; k&yacute; tự m&atilde; h&oacute;a được cố định. Nếu ch&uacute;ng ta x&aacute;c định khoảng c&aacute;ch cố định d l&agrave; 5, A sẽ được thay thế bởi F, B l&agrave; G, C l&agrave; H, ..., Y l&agrave; D, Z l&agrave; E.</p>\n<div id=\"problem-body\">\n<p>Với khoảng c&aacute;ch d cố định v&agrave; đ&atilde; biết, việc giải m&atilde; sẽ đơn giản. Nhưng anh trai t&ocirc;i sử dụng khoảng c&aacute;ch ngẫu nhi&ecirc;n cho mỗi mục nhật k&yacute; của m&igrave;nh. Để giải m&atilde; nhật k&yacute; của anh ấy, t&ocirc;i phải đo&aacute;n khoảng c&aacute;ch d cho mỗi mục. V&igrave; vậy, t&ocirc;i sử dụng một hiện tượng nổi tiếng l&agrave; chữ E được sử dụng thường xuy&ecirc;n hơn trong c&aacute;c từ tiếng Anh hơn c&aacute;c chữ c&aacute;i kh&aacute;c. Bạn h&atilde;y viết một chương tr&igrave;nh t&iacute;nh to&aacute;n khoảng c&aacute;ch d dựa tr&ecirc;n thực tế l&agrave; k&yacute; tự được sử dụng nhiều nhất trong văn bản được m&atilde; h&oacute;a tương ứng với k&yacute; tự E trong bản r&otilde; kh&ocirc;ng?</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o bao gồm một số trường hợp c sao cho 1 &le; c &le; 100. Mỗi trường hợp được đưa ra trong đ&uacute;ng một d&ograve;ng chứa một mục nhật k&yacute;. Mục nhật k&yacute; chỉ sử dụng chữ in hoa (A-Z) v&agrave; dấu c&aacute;ch. Mỗi mục nhật k&yacute; bao gồm nhiều nhất 1000 chữ c&aacute;i được m&atilde; h&oacute;a (bao gồm cả dấu c&aacute;ch).</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp, h&atilde;y in ra một d&ograve;ng chứa khoảng c&aacute;ch nhỏ nhất c&oacute; thể d (0 &le; d &le; 25) v&agrave; văn bản được giải m&atilde;. Nếu kh&ocirc;ng thể giải m&atilde; v&igrave; c&oacute; nhiều khoảng c&aacute;ch tu&acirc;n theo c&aacute;c quy tắc ở tr&ecirc;n, h&atilde;y in ra NOT POSSIBLE. Dấu c&aacute;ch kh&ocirc;ng được m&atilde; h&oacute;a.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4\nRD TQIJW GWTYMJWX INFWD JSYWNJX ZXJ F XNRUQJ JSHWDUYNTS YJHMSNVZJ\nTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK UVTIPGKZFE\nXVIDRE TFCCVXZRKV GIFXIRDDZEX TFEKVJK</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5 MY OLDER BROTHERS DIARY ENTRIES USE A SIMPLE ENCRYPTION TECHNIQUE\n10 JXU GKYSA RHEMD VEN ZKCFI ELUH JXU BQPO TEW\n17 GERMAN COLLEGIATE PROGRAMMING CONTEST DECRYPTION\nNOT POSSIBLE</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ed56011a-6e69-457f-949c-7e7fd738c866",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GCPC11F_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9513"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "fctrl2-small-factorials",
  "tags": [],
  "level": "EXPERT",
  "title": "Tính giai thừa",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Bạn được y&ecirc;u cầu t&iacute;nh giai thừa của một số số nguy&ecirc;n dương nhỏ.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">Một số nguy&ecirc;n t, 1 &lt;= t &lt;= 100, biểu thị số lượng trường hợp thử nghiệm, theo sau l&agrave; t d&ograve;ng, mỗi d&ograve;ng chứa một số nguy&ecirc;n n, 1 &lt;= n &lt;= 100.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Với mỗi số nguy&ecirc;n n đ&atilde; cho ở đầu v&agrave;o, hiển thị một d&ograve;ng c&oacute; gi&aacute; trị l&agrave; n!</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4\n1\n2\n5\n3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2\n120\n6</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/91d57920-1606-4075-9cbb-923dc09b9d50",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FCTRL2_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9514"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "fctrl-factorial",
  "tags": [],
  "level": "EXPERT",
  "title": "Hàm Factorial",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Phần quan trọng nhất của mạng GSM được gọi l&agrave; <em>Base Transceiver Station</em>&nbsp;(<em>BTS</em>). C&aacute;c bộ thu ph&aacute;t n&agrave;y tạo th&agrave;nh c&aacute;c khu vực được gọi l&agrave; cells v&agrave; mỗi điện thoại kết nối với BTS với t&iacute;n hiệu mạnh nhất. C&aacute;c trạm BTS cần một số ch&uacute; &yacute; v&agrave; c&aacute;c kỹ thuật vi&ecirc;n kiểm tra chức năng của ch&uacute;ng theo định kỳ.</p>\n<div id=\"problem-body\">\n<p>C&aacute;c kỹ thuật vi&ecirc;n ACM đ&atilde; phải đối mặt với một vấn đề dạo gần đ&acirc;y. Với một tập hợp c&aacute;c trạm BTS, họ cần t&igrave;m con đường ngắn nhất để kiểm tra tất cả c&aacute;c điểm đ&atilde; cho v&agrave; quay trở lại t&ograve;a nh&agrave; trung t&acirc;m của c&ocirc;ng ty. C&aacute;c lập tr&igrave;nh vi&ecirc;n đ&atilde; d&agrave;nh v&agrave;i th&aacute;ng để nghi&ecirc;n cứu vấn đề n&agrave;y nhưng kh&ocirc;ng c&oacute; kết quả. Họ kh&ocirc;ng thể t&igrave;m ra giải ph&aacute;p đủ nhanh. Sau một thời gian d&agrave;i, một trong những lập tr&igrave;nh vi&ecirc;n đ&atilde; t&igrave;m ra vấn đề n&agrave;y trong một b&agrave;i b&aacute;o hội nghị. Thật kh&ocirc;ng may, anh ấy ph&aacute;t hiện ra rằng vấn đề \"Vấn đề người b&aacute;n h&agrave;ng đi du lịch\" v&agrave; n&oacute; rất kh&oacute; giải quyết. Nếu ch&uacute;ng ta c&oacute; N BTS cần kiểm tra, ch&uacute;ng ta c&oacute; thể kiểm tra ch&uacute;ng theo thứ tự bất kỳ, cho ch&uacute;ng ta N! c&aacute;c khả năng. H&agrave;m thể hiện số đ&oacute; được gọi l&agrave; factorial v&agrave; c&oacute; thể được t&iacute;nh l&agrave; t&iacute;ch của 1.2.3.4 .... N.</p>\n<p>C&aacute;c lập tr&igrave;nh vi&ecirc;n hiểu rằng họ kh&ocirc;ng c&oacute; cơ hội để giải quyết vấn đề. Nhưng v&igrave; họ đ&atilde; nhận được t&agrave;i trợ nghi&ecirc;n cứu từ ch&iacute;nh phủ, họ cần tiếp tục nghi&ecirc;n cứu v&agrave; tạo ra &iacute;t nhất một số kết quả. V&igrave; vậy, họ bắt đầu nghi&ecirc;n cứu h&agrave;nh vi của h&agrave;m factorial.</p>\n<p>V&iacute; dụ, họ định nghĩa h&agrave;m Z. Đối với bất kỳ số nguy&ecirc;n dương N n&agrave;o, Z(N) l&agrave; số lượng c&aacute;c số 0 ở cuối của số N! ở dạng thập ph&acirc;n. Họ nhận thấy rằng h&agrave;m n&agrave;y kh&ocirc;ng bao giờ giảm. Nếu ch&uacute;ng ta c&oacute; hai số $N_{1} &lt;N2$, th&igrave; $Z(N_{1})&nbsp; \\leq Z(N_{2})$. Đ&oacute; l&agrave; bởi v&igrave; ch&uacute;ng ta kh&ocirc;ng bao giờ c&oacute; thể bỏ qua bất kỳ số 0 ở cuối n&agrave;o bằng c&aacute;ch nh&acirc;n với bất kỳ số dương n&agrave;o. Ch&uacute;ng ta chỉ c&oacute; thể nhận được c&aacute;c số 0 mới. H&agrave;m Z rất th&uacute; vị, v&igrave; vậy ch&uacute;ng ta cần một chương tr&igrave;nh m&aacute;y t&iacute;nh c&oacute; thể x&aacute;c định gi&aacute; trị của n&oacute; một c&aacute;ch hiệu quả.</p>\n<h3>Định đạng đầu v&agrave;o</h3>\n<p>C&oacute; một số nguy&ecirc;n dương T tr&ecirc;n d&ograve;ng đầu ti&ecirc;n của dữ liệu đầu v&agrave;o (khoảng 100,000). N&oacute; viết tắt cho số lượng c&aacute;c con số đằng sau. Sau đ&oacute; c&oacute; T d&ograve;ng, mỗi d&ograve;ng chứa đ&uacute;ng một số nguy&ecirc;n dương N, $1 \\leq N \\leq 1000000000$.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Với mỗi số N, h&atilde;y in ra một d&ograve;ng duy nhất chứa số nguy&ecirc;n kh&ocirc;ng &acirc;m Z(N).</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6\n3\n60\n100\n1024\n23456\n8735373</code></pre>\n<p><strong>Đầu ra</strong><tt></tt></p>\n<pre class=\"language-markup\"><code>0\n14\n24\n253\n5861\n2183837</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/70bd9194-a8c2-40eb-bab6-2c5296362a1e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "FCTRL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9515"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "herding-herding",
  "tags": [],
  "level": "EXPERT",
  "title": "Bắt mèo",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Một số con m&egrave;o hoang đ&atilde; được thả r&ocirc;ng trong th&agrave;nh phố, v&agrave; với tư c&aacute;ch l&agrave; người bắt m&egrave;o, bạn đ&atilde; được giao nhiệm vụ quan trọng l&agrave; phải bắt lại tất cả những con m&egrave;o n&agrave;y. Đ&acirc;y l&agrave; cơ hội l&yacute; tưởng để kiểm tra ph&aacute;t minh mới nhất của bạn, một c&aacute;i bẫy m&egrave;o đảm bảo sẽ bắt được mọi con m&egrave;o đi v&agrave;o một v&ugrave;ng nhỏ h&igrave;nh vu&ocirc;ng của th&agrave;nh phố.</p>\n<div id=\"problem-body\">\n<p>May mắn thay, bạn c&oacute; sự hỗ trợ của một trong những nh&agrave; t&acirc;m l&yacute; học về m&egrave;o h&agrave;ng đầu thế giới, người c&oacute; khả năng ti&ecirc;n đo&aacute;n tuyệt vời, cho trước một v&ugrave;ng nhỏ h&igrave;nh vu&ocirc;ng của th&agrave;nh phố. V&agrave; bạn vẫn kh&ocirc;ng biết tất cả những con m&egrave;o hiện đang ở đ&acirc;u.</p>\n<p>Để chứng minh hiệu quả chi ph&iacute; của phương ph&aacute;p của bạn cho th&agrave;nh phố, điều quan trọng l&agrave; phải giảm thiểu số lượng bẫy được sử dụng.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bắt đầu bằng một d&ograve;ng gồm hai số n v&agrave; m, c&aacute;ch nhau bởi dấu c&aacute;ch (1 &le; n, m &le; 1000). Th&agrave;nh phố sẽ l&agrave; một mạng lưới n x m gồm c&aacute;c v&ugrave;ng h&igrave;nh vu&ocirc;ng. N d&ograve;ng tiếp theo, mỗi d&ograve;ng sẽ bao gồm một chuỗi k&yacute; tự c&oacute; độ d&agrave;i m, bao gồm c&aacute;c chữ c&aacute;i 'N', 'E', 'S' hoặc 'W', đại diện cho ph&iacute;a bắc, đ&ocirc;ng, nam v&agrave; t&acirc;y, tương ứng. (K&yacute; tự đầu ti&ecirc;n của d&ograve;ng đầu ti&ecirc;n sẽ l&agrave; điểm cực T&acirc;y Bắc.). Hướng trong v&ugrave;ng h&igrave;nh vu&ocirc;ng l&agrave; hướng con m&egrave;o sẽ đi tới nếu ch&uacute;ng ở trong h&igrave;nh vu&ocirc;ng đ&oacute;. Nh&agrave; t&acirc;m l&yacute; học m&egrave;o đảm bảo với bạn rằng m&egrave;o sẽ kh&ocirc;ng muốn rời khỏi th&agrave;nh phố.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra số lượng bẫy tối thiểu cần thiết.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3 4\nSWWW\nSEWN\nEEEN</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb7b8242-afb1-4e74-a645-94b22c387fcd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "HERDING_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9516"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "girlsnbs-girls-and-boys",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Sắp xếp học sinh nam và học sinh nữ",
  "content": "<p>C&oacute; G số học sinh nữ v&agrave; B số học sinh nam trong một lớp sắp tốt nghiệp. Bạn cần phải sắp xếp số học sinh n&agrave;y v&agrave;o trong một h&agrave;ng duy nhất cho lễ tốt nghiệp. Để tạo ấn tượng tốt hơn về sự đa dạng, bạn n&ecirc;n tr&aacute;nh việc c&oacute; qu&aacute; nhiều b&eacute; g&aacute;i hoặc qu&aacute; nhiều b&eacute; trai ngồi liền nhau. Bạn đ&atilde; quyết định sắp xếp c&aacute;c học sinh để giảm thiểu việc sắp xếp giới t&iacute;nh. Sắp xếp giới t&iacute;nh l&agrave; số lượng tối đa học sinh c&ugrave;ng giới (tất cả c&aacute;c em g&aacute;i hoặc tất cả c&aacute;c em trai) xuất hiện li&ecirc;n tiếp. Cho G v&agrave; B, h&atilde;y t&iacute;nh c&aacute;ch sắp xếp giới t&iacute;nh tối thiểu trong số tất cả c&aacute;c c&aacute;ch sắp xếp c&oacute; thể.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Mỗi trường hợp thử nghiệm được m&ocirc; tả bằng c&aacute;ch sử dụng một d&ograve;ng duy nhất. D&ograve;ng n&agrave;y chứa hai số nguy&ecirc;n G v&agrave; B lần lượt thể hiện số học sinh nam v&agrave; nữ trong lớp (0 &le; G, B &le; 1000). Phần cuối của đầu v&agrave;o được biểu thị bằng một d&ograve;ng chứa số &minus;1 hai lần.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một d&ograve;ng với một số nguy&ecirc;n duy nhất đại diện cho việc sắp xếp giới t&iacute;nh tối thiểu m&agrave; sự sắp xếp G học sinh nữ v&agrave; B học sinh nam c&oacute; thể c&oacute;.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 10\n5 1\n0 1000\n-1 -1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n3\n1000</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/227db052-bf27-4673-94c1-48bcccb0ba5f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "GIRLSNBS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9517"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 100,
  "slug": "trafficn-traffic-network",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán mạng lưới giao thông",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>Mạng lưới giao th&ocirc;ng th&agrave;nh phố bao gồm n n&uacute;t được đ&aacute;nh số từ 1 đến n v&agrave; m đường một chiều nối c&aacute;c cặp n&uacute;t. Để giảm độ d&agrave;i của đường đi ngắn nhất giữa hai n&uacute;t quan trọng kh&aacute;c nhau s v&agrave; t, một danh s&aacute;ch k đường hai chiều được đề xuất để x&acirc;y dựng. Nhiệm vụ của bạn l&agrave; viết một chương tr&igrave;nh để chọn ra một đường hai chiều từ danh s&aacute;ch đề xuất để giảm thiểu đường đi ngắn nhất giữa s v&agrave; t.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Tệp đầu v&agrave;o bao gồm một số tập dữ liệu. D&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o chứa số lượng bộ dữ liệu l&agrave; một số nguy&ecirc;n dương v&agrave; kh&ocirc;ng lớn hơn 20. C&aacute;c d&ograve;ng sau m&ocirc; tả c&aacute;c bộ dữ liệu.</p>\n<p>Đối với mỗi tập dữ liệu, d&ograve;ng đầu ti&ecirc;n chứa năm số nguy&ecirc;n dương n (n &le; 10 000), m (m &le; 100 000), k (k &lt;300), s (1 &le; s &le; n), t (1 &le; t &le; n) ngăn c&aacute;ch nhau bởi dấu c&aacute;ch. D&ograve;ng thứ i trong số m d&ograve;ng tiếp theo chứa ba số nguy&ecirc;n di, ci, li c&aacute;ch nhau bởi dấu c&aacute;ch, thể hiện độ d&agrave;i li (0 &lt;li &le; 1000) của đường một chiều thứ i nối từ n&uacute;t di đến ci. D&ograve;ng thứ j trong số k d&ograve;ng tiếp theo chứa ba số nguy&ecirc;n dương uj, vj v&agrave; qj (qj &le; 1000) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch, đại diện cho đường hai chiều được đề xuất thứ j c&oacute; độ d&agrave;i qj nối n&uacute;t uj với vj.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập dữ liệu, h&atilde;y viết ra tr&ecirc;n một d&ograve;ng độ d&agrave;i nhỏ nhất c&oacute; thể của con đường ngắn nhất sau khi x&acirc;y dựng một con đường hai chiều đ&atilde; chọn từ danh s&aacute;ch đề xuất. Trong trường hợp kh&ocirc;ng tồn tại đường đi từ s đến t, ghi l&agrave; -1.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4 5 3 1 4\n1 2 13\n2 3 19\n3 1 25\n3 4 17\n4 1 18\n1 3 23\n2 3 5\n2 4 25</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>35</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/1c4673d5-622b-4e26-8878-7bde620389e6",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TRAFFICN_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9518"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "vmsubstr-vuon-cay-cua-ba",
  "tags": [],
  "level": "EXPERT",
  "title": "Vườn cây của ba",
  "content": "<p align=\"justify\">Sau một năm học c&agrave;y cuốc vất vả, h&egrave; n&agrave;y Huy quyết định mời c&aacute;c bạn về qu&ecirc; chơi. Huy sẽ dẫn c&aacute;c bạn đi leo n&uacute;i, ngắm cảnh... v&agrave; sẽ mở một buổi chi&ecirc;u đ&atilde;i c&aacute;c bạn t&agrave;i nh&agrave; m&igrave;nh. \"Nh&agrave; rộng v&agrave; đẹp lắm, c&oacute; cả một vườn c&acirc;y ăn tr&aacute;i sum xu&ecirc; !\" - Huy giới thiệu về ng&ocirc;i nh&agrave; của m&igrave;nh.</p>\n<div class=\"prob\">\n<p>Sau khi k&igrave; k&egrave;o với ba, Huy đ&atilde; xin được h&aacute;i tr&aacute;i trong vườn đ&atilde;i c&aacute;c bạn. Nhưng với một điều kiện: Huy chỉ được h&aacute;i tr&aacute;i những LOẠI c&acirc;y m&agrave; ba quy định. Vườn c&acirc;y chia th&agrave;nh L khu đất li&ecirc;n tiếp nằm thẳng h&agrave;ng (được đ&aacute;nh số thứ tự từ 1 đến L từ đầu vườn đến cuối vườn), mỗi khu chỉ trồng duy nhất một c&acirc;y. Nh&agrave; Huy c&oacute; rất nhiều nh&acirc;n c&ocirc;ng, mỗi nh&acirc;n c&ocirc;ng sẽ chấp nhận l&agrave;m việc tr&ecirc;n những khu đất li&ecirc;n tiếp.</p>\n<p>V&igrave; muốn đ&atilde;i c&aacute;c bạn thật nhiều tr&aacute;i c&acirc;y, n&ecirc;n Huy sẽ tận dụng h&aacute;i hết TẤT CẢ những c&acirc;y được ba cho ph&eacute;p. Nhưng mắc nỗi phải dẫn c&aacute;c bạn đi chơi r&ograve;i, n&ecirc;n kh&ocirc;ng c&oacute; thời gian h&aacute;i tr&aacute;i c&acirc;y. N&ecirc;n Huy sẽ nhờ đến c&aacute;c nh&acirc;n c&ocirc;ng. Bạn t&iacute;nh xem Huy sẽ ph&acirc;n c&ocirc;ng &iacute;t nhất bao nhi&ecirc;u nh&acirc;n c&ocirc;ng để thực hiện kế hoạch chi&ecirc;u đ&atilde;i tr&aacute;i c&acirc;y của m&igrave;nh? Biết rằng mỗi nh&acirc;n c&ocirc;ng sẽ h&aacute;i hết tất cả tr&aacute;i c&acirc;y ở c&aacute;c khu đất m&igrave;nh được ph&acirc;n v&agrave;o.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng 1: Gồm 1 số nguy&ecirc;n dương duy nhất: L - số khu đất trong khu vườn.</li>\n<li>D&ograve;ng 2: Chứa x&acirc;u S gồm đ&uacute;ng L chữ c&aacute;i Latin (in thường hoặc hoa), mi&ecirc;u tả khu vườn của Huy. Mỗi chữ c&aacute;i cho biết loại c&acirc;y được trồng ở khu đất tương ứng</li>\n<li>D&ograve;ng 3: Q - số trường hợp m&agrave; bạn phải xứ l&yacute;.</li>\n<li>Q d&ograve;ng tiếp, mỗi d&ograve;ng m&ocirc; tả một trường hợp v&agrave; gồm c&aacute;c chữ c&aacute;i Latin (in thường hoặc hoa). Mỗi chữ đại diện cho một loại c&acirc;y được ph&eacute;p sử dụng.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Với mỗi trường hợp, ghi ra 1 d&ograve;ng duy nhất l&agrave; số nh&acirc;n c&ocirc;ng &iacute;t nhất cần nhờ đến.</li>\n</ul>\n<h3>Chấm điểm</h3>\n<ul>\n<li>B&agrave;i của bạn sẽ được chấm tr&ecirc;n thang điểm 100. Điểm m&agrave; bạn nhận được sẽ tương ứng với % test m&agrave; bạn giải đ&uacute;ng.</li>\n<li>Trong qu&aacute; tr&igrave;nh thi, b&agrave;i của bạn sẽ chỉ được chấm với 1 test v&iacute; dụ c&oacute; trong đề b&agrave;i.</li>\n<li>Khi v&ograve;ng thi kết th&uacute;c, b&agrave;i của bạn sẽ được chấm với bộ test đầy đủ.</li>\n</ul>\n<h3>Điều kiện</h3>\n<ul>\n<li>L &le; 1,000,000;</li>\n<li>Q &le; 100,000;</li>\n<li>Số k&yacute; tự trong mỗi query kh&ocirc;ng qu&aacute; 52. Trong mỗi query, c&aacute;c k&yacute; tự kh&ocirc;ng lặp lại</li>\n<li>Trong 50% số test, L &le; 1000, Q &le; 1000;</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7\nabacaba\n3\nac\nb\nab</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n2 </code></pre>\n<h3>Giải th&iacute;ch</h3>\n<ul>\n<li>Với trường hợp 'ac', Huy chỉ h&aacute;i những c&acirc;y loại 'a' v&agrave; 'c'. N&ecirc;n Huy cần nhờ &iacute;t nhất 3 nh&acirc;n c&ocirc;ng lo 3 phần 'a', 'aca', 'a';</li>\n<li>Với trường hợp 'b', Huy cần nhờ &iacute;t nhất 2 nh&acirc;n c&ocirc;ng lo 2 phần 'b';</li>\n<li>Với trường hợp 'ab', Huy cần nhờ &iacute;t nhất 2 nh&acirc;n c&ocirc;ng lo 2 phần 'aba';</li>\n</ul>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3fc1405d-8e4f-4176-8109-3f8f55fba73b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "VMSUBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9519"
  },
  "memoryLimit": 2,
  "source": 10,
  "timeLimit": 2,
  "scores": 100,
  "slug": "tdprimes-printing-some-primes",
  "tags": [],
  "level": "EXPERT",
  "title": "In ra các số nguyên tố",
  "content": "<p>Bạn phải viết tất cả c&aacute;c số nguy&ecirc;n tố nhỏ hơn $10^{8}.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Kh&ocirc;ng c&oacute;</p>\n<h3>Định dạng đầu ra</h3>\n<p>Chỉ viết ra 1st, 101st, 201st, ... 1st mode 100.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n547\n1229\n...\n99995257\n99996931\n99998953</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b17fad90-19fa-428d-bc60-2dc10f51fa85",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "TDPRIMES.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "que1-queue-rookie",
  "tags": [],
  "level": "EXPERT",
  "title": "Hàng đợi",
  "content": "<p class=\"text-center\">C&oacute; N người đang đứng trong một h&agrave;ng đợi. Bạn được cho biết chiều cao của từng người v&agrave; số lượng người cao hơn v&agrave; đứng trước người đ&oacute;. Bạn phải t&igrave;m ra vị tr&iacute; của từng người.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n T duy nhất, số trường hợp thử nghiệm. Mỗi trường hợp bao gồm 3 d&ograve;ng. D&ograve;ng đầu ti&ecirc;n chứa một số nguy&ecirc;n N. D&ograve;ng thứ hai chứa N số nguy&ecirc;n đại diện cho chiều cao của N người. D&ograve;ng thứ ba chứa N số nguy&ecirc;n biểu thị số người cao hơn đứng trước anh ta.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra một d&ograve;ng cho mỗi trường hợp thử nghiệm chứa chiều cao của N người theo thứ tự họ đang đứng.</p>\n<h3>Điều kiện</h3>\n<ol>\n<li>$0 &lt; T \\leq 100$</li>\n<li>$0 &lt; N \\leq 1000$</li>\n<li>Độ phức tạp về thời gian kỳ vọng l&agrave; $O(N^{2})$</li>\n</ol>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n5\n33 11 22 44 55\n0 2 1 1 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>33 22 11 55 44</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/322302fc-b89f-4493-9b51-c03e40f3e0dd",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "QUE1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "rent-rent-your-airplane-and-make-money",
  "tags": [],
  "level": "EXPERT",
  "title": "Thuê máy bay",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>\"ABEAS Corp.\" l&agrave; một c&ocirc;ng ty rất nhỏ sở hữu một chiếc m&aacute;y bay duy nhất. Kh&aacute;ch h&agrave;ng của ABEAS l&agrave; c&aacute;c c&ocirc;ng ty h&agrave;ng kh&ocirc;ng lớn thu&ecirc; m&aacute;y bay để đ&aacute;p ứng t&igrave;nh trạng vượt qu&aacute; c&ocirc;ng suất thường xuy&ecirc;n. Kh&aacute;ch h&agrave;ng gửi đơn đặt h&agrave;ng thu&ecirc; bao gồm khoảng thời gian v&agrave; gi&aacute; cả m&agrave; kh&aacute;ch h&agrave;ng sẵn s&agrave;ng trả để thu&ecirc; m&aacute;y bay trong khoảng thời gian nhất định. Đơn đặt h&agrave;ng của tất cả c&aacute;c kh&aacute;ch h&agrave;ng đ&atilde; được biết trước. Tất nhi&ecirc;n, kh&ocirc;ng phải tất cả c&aacute;c đơn đặt h&agrave;ng đều c&oacute; thể được đ&aacute;p ứng v&agrave; một số đơn đặt h&agrave;ng phải bị từ chối. Eugene LAWLER, Gi&aacute;m đốc Khoa học của ABEAS Corp mong muốn tối đa h&oacute;a lợi nhuận của c&ocirc;ng ty. Bạn l&agrave; nh&acirc;n vi&ecirc;n của c&ocirc;ng ty n&agrave;y v&agrave; được y&ecirc;u cầu t&iacute;nh to&aacute;n một giải ph&aacute;p tối ưu.</p>\n<div id=\"problem-body\">\n<h4>V&iacute; dụ</h4>\n<p>H&atilde;y xem x&eacute;t v&iacute; dụ trường hợp c&ocirc;ng ty c&oacute; 4 đơn đặt h&agrave;ng:</p>\n<ul>\n<li>Đơn đặt 1 (thời gian bắt đầu 0, khoảng thời gian 5, gi&aacute; cả 10)</li>\n<li>Đơn đặt 2 (thời gian bắt đầu 3, khoảng thời gian 7, gi&aacute; cả 8)</li>\n<li>Đơn đặt 3 (thời gian bắt đầu 5, khoảng thời gian 9, gi&aacute; cả 7)</li>\n<li>Đơn đặt 4 (thời gian bắt đầu 6, khoảng thời gian 9, gi&aacute; cả 8)</li>\n</ul>\n<p>Giải ph&aacute;p tối ưu bao gồm giảm đơn đặt 2 v&agrave; 3 v&agrave; thu được l&agrave; 10 + 8 = 18. Lưu &yacute; rằng giải ph&aacute;p bao gồm đơn đặt h&agrave;ng 1 v&agrave; 3 l&agrave; khả thi (m&aacute;y bay được thu&ecirc; kh&ocirc;ng bị gi&aacute;n đoạn từ thời điểm 0 đến thời điểm 14) nhưng kh&ocirc;ng tối ưu.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số T &le; 30 cho biết số lượng trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp kiểm thử chứa số lượng đơn đặt h&agrave;ng n (n &le; 10000). Trong n d&ograve;ng sau, c&aacute;c đơn đặt h&agrave;ng được đưa ra. Mỗi đơn h&agrave;ng được m&ocirc; tả bởi 3 gi&aacute; trị số nguy&ecirc;n: Thời gian bắt đầu của đơn h&agrave;ng st (0 &le; st &lt;1000000), khoảng thời gian d của đơn h&agrave;ng (0 &lt;d &lt;1000000) v&agrave; gi&aacute; cả p (0 &lt; p &lt;100000) m&agrave; kh&aacute;ch h&agrave;ng sẵn s&agrave;ng thanh to&aacute;n cho đơn đặt h&agrave;ng n&agrave;y.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Bạn được y&ecirc;u cầu t&iacute;nh to&aacute;n một giải ph&aacute;p tối ưu. Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải ghi ra tổng gi&aacute; trị m&agrave; c&aacute;c h&atilde;ng h&agrave;ng kh&ocirc;ng đ&atilde; trả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4\n0 5 10\n3 7 14\n5 9 7\n6 9 8</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>18</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/92871da2-ee94-4c77-bafb-41c4604e5112",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "RENT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "samer08f-feynman",
  "tags": [],
  "level": "EXPERT",
  "title": "Bài toán câu đố của Feynman",
  "content": "<p>Richard Phillips Feynman l&agrave; một nh&agrave; vật l&yacute; người Mỹ nổi tiếng v&agrave; từng nhận giải Nobel về Vật l&yacute;. &Ocirc;ng l&agrave;m việc trong lĩnh vực vật l&yacute; l&yacute; thuyết v&agrave; cũng l&agrave; người đi ti&ecirc;n phong trong lĩnh vực m&aacute;y t&iacute;nh lượng tử. &Ocirc;ng đ&atilde; đến thăm Nam Mỹ trong mười th&aacute;ng, thuyết tr&igrave;nh v&agrave; tận hưởng cuộc sống ở v&ugrave;ng nhiệt đới. &Ocirc;ng cũng được biết đến với cuốn s&aacute;ch \"Surely You're Joking, Mr. Feynman!\", bao gồm một số cuộc phi&ecirc;u lưu b&ecirc;n dưới đường x&iacute;ch đạo.</p>\n<div id=\"problem-body\">\n<p>Đam m&ecirc; cả đời của &ocirc;ng l&agrave; giải v&agrave; l&agrave;m c&aacute;c c&acirc;u đố, kh&oacute;a v&agrave; mật m&atilde;. Gần đ&acirc;y, một l&atilde;o n&ocirc;ng ở Nam Mỹ, người đ&atilde; tiếp đ&oacute;n nh&agrave; vật l&yacute; trẻ n&agrave;y v&agrave;o năm 1949, đ&atilde; t&igrave;m thấy một số giấy tờ v&agrave; ghi ch&uacute; được cho l&agrave; của Feynman. Trong số c&aacute;c ghi ch&uacute; về điện từ học, c&oacute; một tờ giấy ăn nơi &ocirc;ng viết một c&acirc;u đố đơn giản: \"C&oacute; bao nhi&ecirc;u &ocirc; vu&ocirc;ng kh&aacute;c nhau trong một ma trận &ocirc; vu&ocirc;ng N&times;N?\".</p>\n<p>Trong c&ugrave;ng một chiếc khăn ăn, c&oacute; một h&igrave;nh vẽ được m&ocirc; phỏng lại b&ecirc;n dưới, cho thấy rằng, với N = 2, c&acirc;u trả lời l&agrave; 5.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/disatoba:feynman.gif\" alt=\"subir imagenes\" border=\"0\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o chứa một số trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm bao gồm một d&ograve;ng, chỉ chứa một số nguy&ecirc;n N, đại diện cho số &ocirc; vu&ocirc;ng trong mỗi cạnh của ma trận (1 &le; N &le; 100).</li>\n<li>Phần cuối của đầu v&agrave;o được biểu thị bằng một d&ograve;ng chỉ chứa một số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp trong đầu v&agrave;o, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất, chứa số lượng &ocirc; vu&ocirc;ng kh&aacute;c nhau cho đầu v&agrave;o tương ứng.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n1\n8\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>5\n1\n204 </code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8a76e36d-ae88-41b6-a001-d9643b368d6d",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SAMER08F_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 50,
  "slug": "sbank-sorting-bank-accounts",
  "tags": [],
  "level": "EXPERT",
  "title": "Sắp xếp các tài khoản ngân hàng",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>In one of the internet banks thousands of operations are being performed every day. Since certain customers do business more actively than others, some of the bank accounts occur many times in the list of operations. Your task is to sort the bank account numbers in ascending order. If an account appears twice or more in the list, write the number of repetitions just after the account number. The format of accounts is as follows: <strong>2</strong>&nbsp;control digits, an&nbsp;<strong>8</strong>-digit code of the bank,&nbsp;<strong>16</strong>&nbsp;digits identifying the owner (written in groups of four digits), for example (at the end of each line there is exactly one space):</p>\n<p>Tại một trong những ng&acirc;n h&agrave;ng internet, h&agrave;ng ng&agrave;n hoạt động đang được thực hiện mỗi ng&agrave;y. V&igrave; một số kh&aacute;ch h&agrave;ng kinh doanh t&iacute;ch cực hơn những kh&aacute;ch h&agrave;ng kh&aacute;c, một số t&agrave;i khoản ng&acirc;n h&agrave;ng xuất hiện nhiều lần trong danh s&aacute;ch hoạt động. Nhiệm vụ của bạn l&agrave; sắp xếp c&aacute;c số t&agrave;i khoản ng&acirc;n h&agrave;ng theo thứ tự tăng dần. Nếu một t&agrave;i khoản xuất hiện hai lần hoặc nhiều hơn trong danh s&aacute;ch, h&atilde;y ghi số lần lặp lại ngay sau số t&agrave;i khoản. Định dạng của c&aacute;c t&agrave;i khoản như sau: 2 chữ số kiểm so&aacute;t, một m&atilde; gồm 8 chữ số của ng&acirc;n h&agrave;ng, 16 chữ số x&aacute;c định chủ sở hữu (viết theo nh&oacute;m bốn chữ số), v&iacute; dụ (ở cuối mỗi d&ograve;ng c&oacute; đ&uacute;ng một khoảng trắng) :</p>\n<div id=\"problem-body\">\n<table align=\"center\">\n<tbody>\n<tr>\n<td bgcolor=\"navy\"><span style=\"color: yellow;\"><strong>30 10103538 2222 1233 6160 0142&nbsp;</strong></span></td>\n</tr>\n</tbody>\n</table>\n<p>C&aacute;c ng&acirc;n h&agrave;ng l&agrave; c&aacute;c tổ chức thời gian thực v&agrave; họ cần c&aacute;c giải ph&aacute;p NHANH CH&Oacute;NG. Nếu bạn cảm thấy m&igrave;nh c&oacute; thể đ&aacute;p ứng được thử th&aacute;ch trong một thời hạn rất nghi&ecirc;m ngặt, h&atilde;y tiếp tục! Một thuật to&aacute;n sắp xếp được thiết kế tốt c&oacute; khả năng th&agrave;nh c&ocirc;ng.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li><em>Số lượng trường hợp thử nghiệm t</em> &lt;= <strong>5</strong></li>\n<li><em>Số lượng t&agrave;i khoản n</em> &lt;= <strong>100 000</strong></li>\n<li>Danh s&aacute;ch c&aacute;c t&agrave;i khoản</li>\n<li>D&ograve;ng trống rỗng</li>\n<li>C&aacute;c trường hợp thử nghiệm tiếp theo</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Danh s&aacute;ch t&agrave;i khoản được sắp xếp với số lượng t&agrave;i khoản lặp lại</li>\n<li>D&ograve;ng trống rỗng</li>\n<li>C&aacute;c kết quả kh&aacute;c</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n6\n03 10103538 2222 1233 6160 0142 \n03 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0142 \n30 10103538 2222 1233 6160 0141 \n30 10103538 2222 1233 6160 0142 \n\n5\n30 10103538 2222 1233 6160 0144 \n30 10103538 2222 1233 6160 0142 \n30 10103538 2222 1233 6160 0145 \n30 10103538 2222 1233 6160 0146 \n30 10103538 2222 1233 6160 0143  </code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>03 10103538 2222 1233 6160 0141 1\n03 10103538 2222 1233 6160 0142 1\n30 10103538 2222 1233 6160 0141 2\n30 10103538 2222 1233 6160 0142 2\n\n30 10103538 2222 1233 6160 0142 1\n30 10103538 2222 1233 6160 0143 1\n30 10103538 2222 1233 6160 0144 1\n30 10103538 2222 1233 6160 0145 1\n30 10103538 2222 1233 6160 0146 1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/aec842ac-801a-4619-8c8e-db33880f8e93",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "SBANK_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "candy-candy-i-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bài toán chia kẹo",
  "content": "<p>Jennifer l&agrave; gi&aacute;o vi&ecirc;n năm đầu ti&ecirc;n của trường tiểu học. H&ocirc;m nay c&ocirc; ấy đ&atilde; đi du lịch với lớp m&igrave;nh. C&ocirc; đ&atilde; lấy cho mỗi trẻ một g&oacute;i kẹo. Thật kh&ocirc;ng may, k&iacute;ch thước của c&aacute;c g&oacute;i kh&ocirc;ng giống nhau.</p>\n<div id=\"problem-body\">\n<p>Jennifer sợ rằng mỗi đứa trẻ sẽ muốn c&oacute; g&oacute;i kẹo lớn nhất v&agrave; điều n&agrave;y sẽ dẫn đến những cuộc c&atilde;i v&atilde; hoặc thậm ch&iacute; đ&aacute;nh nhau giữa c&aacute;c đứa trẻ. C&ocirc; ấy muốn tr&aacute;nh điều n&agrave;y. V&igrave; vậy, c&ocirc; đ&atilde; quyết định mở tất cả c&aacute;c g&oacute;i, đếm số kẹo trong mỗi g&oacute;i v&agrave; chuyển một số kẹo từ g&oacute;i lớn hơn sang g&oacute;i nhỏ hơn để mỗi g&oacute;i sẽ chứa số kẹo bằng nhau. C&acirc;u hỏi đặt ra l&agrave; c&ocirc; ấy phải chuyển bao nhi&ecirc;u vi&ecirc;n kẹo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Tệp đầu v&agrave;o bao gồm một số khối dữ liệu. Mỗi khối bắt đầu bằng số lượng g&oacute;i kẹo N (1 &lt;= N &lt;= 10000), tiếp theo l&agrave; N số nguy&ecirc;n (mỗi số nhỏ hơn 1000) ở c&aacute;c d&ograve;ng ri&ecirc;ng biệt, cho biết số kẹo trong mỗi g&oacute;i. Sau khối dữ liệu cuối c&ugrave;ng l&agrave; số -1.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Tệp đầu ra phải chứa một d&ograve;ng với số lần chuyển nhỏ nhất cho mỗi khối dữ liệu. Một động t&aacute;c chuyển bao gồm lấy một vi&ecirc;n kẹo từ một g&oacute;i v&agrave; đặt n&oacute; v&agrave;o một c&aacute;i kh&aacute;c. Nếu kh&ocirc;ng thể c&oacute; số kẹo giống nhau trong mỗi g&oacute;i th&igrave; in ra số -1.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n1\n1\n1\n1\n6\n2\n3\n4\n-1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>4\n-1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/7d5b60f9-93cc-44ef-ad1e-1402585b1682",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "CANDY_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef951f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "aps-amazing-prime-sequence-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chuỗi số nguyên tố kỳ diệu",
  "content": "<p>Bablu rất th&iacute;ch tập hợp v&agrave; chuỗi số ... Sau khi nghi&ecirc;n cứu Chuỗi Fibonacci ở lớp IX, anh ấy đ&atilde; rất ấn tượng v&agrave; anh ấy đ&atilde; thiết kế chuỗi của ri&ecirc;ng m&igrave;nh như sau ...</p>\n<div id=\"problem-body\">\n<ul>\n<li>a[0] = a[1] = 0&nbsp;</li>\n<li>Đối với n &gt; 1, a[n] = a[n - 1] + f(n), trong đ&oacute; f(n) l&agrave; số nguy&ecirc;n tố nhỏ nhất của n.</li>\n</ul>\n<p>Anh ấy cũng rất th&iacute;ch lập tr&igrave;nh v&agrave; do đ&oacute; đ&atilde; thực hiện một chương tr&igrave;nh nhỏ để t&igrave;m a[n], nhưng v&igrave; anh ấy kh&ocirc;ng giỏi lập tr&igrave;nh cho lắm. V&igrave; vậy, anh ấy y&ecirc;u cầu bạn gi&uacute;p đỡ. Nhiệm vụ của bạn l&agrave; t&igrave;m một a[n] cho d&atilde;y số tr&ecirc;n&hellip;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>M&atilde; của bạn sẽ được kiểm tra cho nhiều Trường hợp thử nghiệm.</li>\n<li>D&ograve;ng đầu ti&ecirc;n của dữ liệu v&agrave;o chứa T (&lt;= 100), số lượng trường hợp thử nghiệm.</li>\n<li>T d&ograve;ng tiếp theo chứa một số N. ($1 &lt; N &lt;10 ^{7}$).</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Một d&ograve;ng chứa a[n], l&agrave; số thứ n của chuỗi cho mỗi trường hợp thử nghiệm.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n2\n3\n4</code></pre>\n<p>Đầu ra</p>\n<pre class=\"language-markup\"><code>2\n5\n7</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/bfd0c6e7-5871-47dd-8520-e284d9e2d9f4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "APS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9520"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "anarc05b-the-double-helix-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Double HeLiX",
  "content": "<p>Hai d&atilde;y số nguy&ecirc;n, tăng dần, nghi&ecirc;m ngặt được đưa ra. Bất kỳ số nguy&ecirc;n chung n&agrave;o giữa hai d&atilde;y đều tạo th&agrave;nh giao điểm. Lấy v&iacute; dụ về hai d&atilde;y sau m&agrave; c&aacute;c điểm giao nhau được in đậm:</p>\n<div id=\"problem-body\">\n<ul>\n<li>First= 3 5&nbsp;<strong>7</strong>&nbsp;9 20&nbsp;<strong>25</strong>&nbsp;30 40&nbsp;<strong>55</strong>&nbsp;56&nbsp;<strong>57</strong>&nbsp;60 62</li>\n<li>Second= 1 4&nbsp;<strong>7</strong>&nbsp;11 14&nbsp;<strong>25</strong>&nbsp;44 47&nbsp;<strong>55</strong>&nbsp;<strong>57</strong>&nbsp;100</li>\n</ul>\n<p>Bạn c&oacute; thể duyệt qua 2 d&atilde;y theo c&aacute;ch sau:</p>\n<ol>\n<li>Bạn c&oacute; thể bắt đầu ở phần đầu của bất kỳ d&atilde;y n&agrave;o trong hai d&atilde;y. B&acirc;y giờ h&atilde;y bắt đầu tiến về ph&iacute;a trước.</li>\n<li>Tại mỗi điểm giao nhau, bạn c&oacute; thể lựa chọn tiếp tục với c&ugrave;ng một d&atilde;y m&agrave; bạn hiện đang sử dụng hoặc chuyển sang d&atilde;y c&ograve;n lại.</li>\n</ol>\n<p>Mục ti&ecirc;u l&agrave; tạo ra một đường dẫn tạo ra tổng dữ liệu tối đa m&agrave; bạn đ&atilde; duyệt qua. Trong v&iacute; dụ tr&ecirc;n, tổng lớn nhất c&oacute; thể l&agrave; 450, l&agrave; kết quả của việc cộng 3, 5, 7, 9, 20, 25, 44, 47, 55, 56, 57, 60 v&agrave; 62</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một số trường hợp thử nghiệm. Mỗi trường hợp thử nghiệm sẽ được chỉ định tr&ecirc;n hai d&ograve;ng ri&ecirc;ng biệt. Mỗi d&ograve;ng biểu thị một d&atilde;y v&agrave; được chỉ định bằng c&aacute;ch sử dụng định dạng sau:</p>\n<pre class=\"language-markup\"><code>n v1 v2 ... vn</code></pre>\n<p>Trong đ&oacute; n l&agrave; độ d&agrave;i của d&atilde;y v&agrave; vi l&agrave; phần tử thứ i trong d&atilde;y đ&oacute;. Mỗi d&atilde;y sẽ c&oacute; &iacute;t nhất một phần tử nhưng kh&ocirc;ng qu&aacute; 10.000. Tất cả c&aacute;c phần tử nằm trong khoảng -10.000 đến 10.000. D&ograve;ng cuối c&ugrave;ng của đầu v&agrave;o bao gồm một số 0 duy nhất, kh&ocirc;ng phải l&agrave; một phần của c&aacute;c trường hợp thử nghiệm.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y viết tr&ecirc;n một d&ograve;ng ri&ecirc;ng biệt, tổng lớn nhất c&oacute; thể được tạo ra.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>13 3 5 7 9 20 25 30 40 55 56 57 60 62\n11 1 4 7 11 14 25 44 47 55 57 100\n4 -5 100 1000 1005\n3 -12 1000 1001\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>450\n2100</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/44a45100-ebf2-402a-bbd8-145d2d708035",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ANARC05B_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9521"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "adfruits-advanced-fruits-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Trái cây hoa quả",
  "content": "<p>C&ocirc;ng ty \"Tr&aacute;i c&acirc;y thế kỷ 21\" đ&atilde; chuy&ecirc;n tạo ra c&aacute;c loại tr&aacute;i c&acirc;y mới bằng c&aacute;ch chuyển gen từ tr&aacute;i c&acirc;y n&agrave;y v&agrave;o bộ gen của tr&aacute;i c&acirc;y kh&aacute;c. Hầu hết c&aacute;c phương ph&aacute;p n&agrave;y kh&ocirc;ng hiệu quả, nhưng đ&ocirc;i khi, trong một số trường hợp hiếm hoi, một loại tr&aacute;i c&acirc;y mới xuất hiện c&oacute; vị giống như hỗn hợp giữa cả hai loại tr&aacute;i c&acirc;y.</p>\n<div id=\"problem-body\">\n<p>Một chủ đề thảo luận lớn trong c&ocirc;ng ty l&agrave; \"C&aacute;c c&acirc;y s&aacute;ng tạo mới n&ecirc;n được gọi như thế n&agrave;o?\" Tất nhi&ecirc;n, một hỗn hợp giữa t&aacute;o v&agrave; l&ecirc; c&oacute; thể được gọi l&agrave; apple-pear, nhưng điều n&agrave;y nghe c&oacute; vẻ kh&ocirc;ng th&uacute; vị cho lắm. Cuối c&ugrave;ng, &ocirc;ng chủ quyết định sử dụng chuỗi ngắn nhất chứa cả t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y ban đầu l&agrave;m chuỗi con l&agrave;m t&ecirc;n mới. V&iacute; dụ: \"applear\" chứa \"apple\" v&agrave; \"pear\" (APPLEar v&agrave; apPlEAR) v&agrave; kh&ocirc;ng c&oacute; chuỗi n&agrave;o ngắn hơn c&oacute; c&ugrave;ng thuộc t&iacute;nh. V&iacute; dụ, sự kết hợp giữa cranberry v&agrave; boysenberry sẽ được gọi l&agrave; \"boysecranberry\" or a \"craboysenberry\".</p>\n<p>C&ocirc;ng việc của bạn l&agrave; viết một chương tr&igrave;nh t&iacute;nh to&aacute;n một c&aacute;i t&ecirc;n ngắn nhất cho tổ hợp của hai loại quả đ&atilde; cho. Thuật to&aacute;n của bạn phải hiệu quả, nếu kh&ocirc;ng, n&oacute; kh&ocirc;ng chắc sẽ thực thi trong thời gian quy định đối với t&ecirc;n của c&aacute;c quả d&agrave;i.</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>Mỗi d&ograve;ng của tệp đầu v&agrave;o chứa hai chuỗi k&yacute; tự biểu thị t&ecirc;n của c&aacute;c loại tr&aacute;i c&acirc;y được kết hợp. Tất cả c&aacute;c t&ecirc;n c&oacute; độ d&agrave;i tối đa l&agrave; 100 v&agrave; chỉ bao gồm c&aacute;c k&yacute; tự chữ c&aacute;i. Đầu v&agrave;o được kết th&uacute;c ở cuối tệp.</p>\n<p><strong>Định dạng đầu ra</strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra t&ecirc;n ngắn nhất của quả kết quả tr&ecirc;n một d&ograve;ng. Nếu c&oacute; thể c&oacute; nhiều hơn một t&ecirc;n ngắn nhất, bất kỳ t&ecirc;n n&agrave;o cũng được chấp nhận.</p>\n<p><strong>V&iacute; dụ</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>apple peach\nananas banana\npear peach</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>appleach\nbananas\npearch</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/33508314-1a57-4511-a0a9-2cb89881a317",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ADFRUITS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9522"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "acpc10a-whats-next-1",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Dãy số liên tiếp",
  "content": "<p>Theo Wikipedia, một cấp số cộng (AP) l&agrave; một d&atilde;y số sao cho hiệu của hai phần tử li&ecirc;n tiếp bất kỳ của d&atilde;y l&agrave; một hằng số. V&iacute; dụ: d&atilde;y 3, 5, 7, 9, 11, 13 ,. . . l&agrave; một cấp số cộng với hiệu chung l&agrave; 2. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp số cộng c&oacute; hiệu chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<div id=\"problem-body\">\n<p>Mặt kh&aacute;c, một cấp số nh&acirc;n (GP) l&agrave; một d&atilde;y số trong đ&oacute; mỗi số hạng đứng sau số hạng đầu ti&ecirc;n được t&igrave;m thấy bằng c&aacute;ch nh&acirc;n số hạng trước với một số kh&aacute;c 0 cố định được gọi l&agrave; tỷ số chung. V&iacute; dụ, d&atilde;y số 2, 6, 18, 54 ,. . . l&agrave; một cấp số nh&acirc;n với tỉ số chung 3. Đối với b&agrave;i to&aacute;n n&agrave;y, ch&uacute;ng ta sẽ tự giới hạn ở cấp độ h&igrave;nh học c&oacute; tỉ số chung l&agrave; một số nguy&ecirc;n kh&aacute;c 0.</p>\n<p>Với ba phần tử li&ecirc;n tiếp của một d&atilde;y, bạn cần x&aacute;c định kiểu d&atilde;y số v&agrave; phần tử kế tiếp tiếp theo.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Chương tr&igrave;nh của bạn sẽ được thử nghiệm tr&ecirc;n một hoặc nhiều trường hợp thử nghiệm. Mỗi trường hợp được chỉ định tr&ecirc;n một d&ograve;ng với ba số nguy&ecirc;n (&minus;10, 000 &lt; a1, a2, a3 &lt;10, 000) trong đ&oacute; a1, a2 v&agrave; a3 l&agrave; kh&aacute;c nhau.</li>\n<li>Trường hợp cuối c&ugrave;ng được theo sau bởi một d&ograve;ng c&oacute; ba số 0.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<ul>\n<li>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn phải in ra một d&ograve;ng duy nhất c&oacute; dạng: XX v</li>\n<li>Trong đ&oacute; XX l&agrave; AP hoặc GP t&ugrave;y thuộc v&agrave;o d&atilde;y số đ&atilde; cho l&agrave; cấp số cộng hoặc cấp h&igrave;nh nh&acirc;n. v l&agrave; phần tử tiếp theo của d&atilde;y đ&atilde; cho. Tất cả c&aacute;c trường hợp đầu v&agrave;o được đảm bảo l&agrave; một cấp số cộng hoặc nh&acirc;n.</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 7 10\n2 6 18\n0 0 0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>AP 13\nGP 54</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/5c9ba12c-7753-454b-918b-62e1dc0e7666",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACPC10A_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9523"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "acode-alphacode-1",
  "tags": [],
  "level": "BEGINNER",
  "title": "Bảng mã Alpha",
  "content": "<p>Alice v&agrave; Bob cần gửi tin nhắn b&iacute; mật cho nhau v&agrave; đang thảo luận về c&aacute;ch m&atilde; h&oacute;a tin nhắn của họ:</p>\n<div id=\"problem-body\">\n<blockquote>\n<p>Alice: &ldquo;H&atilde;y chỉ sử dụng một m&atilde; rất đơn giản: Ch&uacute;ng ta sẽ g&aacute;n cho&lsquo; A &rsquo; l&agrave; m&atilde; 1,&lsquo; B &rsquo;sẽ l&agrave; 2 v&agrave; cứ tiếp tục cho đến&lsquo; Z &rsquo;được g&aacute;n l&agrave; 26.&rdquo;</p>\n<p>Bob: &ldquo;Đ&oacute; l&agrave; một đoạn m&atilde; sai lầm, Alice. Giả sử t&ocirc;i gửi cho bạn từ &lsquo;BEAN&rsquo; được m&atilde; h&oacute;a l&agrave; 25114. Bạn c&oacute; thể giải m&atilde; từ đ&oacute; theo nhiều c&aacute;ch kh&aacute;c nhau! &rdquo;</p>\n<p>Alice: &ldquo;Chắc chắn l&agrave; bạn c&oacute; thể, nhưng bạn sẽ nhận được những từ n&agrave;o? Ngo&agrave;i &lsquo;BEAN&rsquo;, bạn sẽ nhận được &lsquo;BEAAD&rsquo;, &lsquo;YAAD&rsquo;, &lsquo;YAN&rsquo;, &lsquo;YKD&rsquo; v&agrave; &lsquo;BEKD&rsquo;. T&ocirc;i nghĩ rằng bạn sẽ c&oacute; thể t&igrave;m ra lời giải m&atilde; ch&iacute;nh x&aacute;c. V&agrave; tại sao bạn lại gửi cho t&ocirc;i từ &lsquo;BEAN&rsquo;? &rdquo;</p>\n<p>Bob: &ldquo;Được rồi, c&oacute; thể đ&oacute; l&agrave; một v&iacute; dụ sai, nhưng t&ocirc;i c&aacute; với bạn rằng nếu bạn c&oacute; một chuỗi d&agrave;i 5000 th&igrave; sẽ c&oacute; rất nhiều c&aacute;ch giải m&atilde; kh&aacute;c nhau v&agrave; với nhiều giải m&atilde; đ&oacute;, bạn sẽ t&igrave;m thấy &iacute;t nhất hai giải m&atilde; kh&aacute;c nhau c&oacute; &yacute; nghĩa&rdquo;.</p>\n<p>Alice: \"C&oacute; bao nhi&ecirc;u c&aacute;ch giải m&atilde; kh&aacute;c nhau?\"</p>\n<p>Bob: \"Jillions!\"</p>\n</blockquote>\n<p>V&igrave; một số l&yacute; do, Alice vẫn kh&ocirc;ng cảm thấy thuyết phục bởi lập luận của Bob, v&igrave; vậy c&ocirc; ấy y&ecirc;u cầu một chương tr&igrave;nh sẽ x&aacute;c định số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho một chuỗi k&yacute; tự nhất định bằng c&aacute;ch sử dụng m&atilde; của c&ocirc; ấy.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Đầu v&agrave;o sẽ bao gồm nhiều tập hợp đầu v&agrave;o. Mỗi tập hợp sẽ bao gồm một d&ograve;ng tối đa l&agrave; 5000 chữ số đại diện cho một c&aacute;ch m&atilde; h&oacute;a hợp lệ (v&iacute; dụ: kh&ocirc;ng c&oacute; d&ograve;ng n&agrave;o bắt đầu bằng số 0). Sẽ kh&ocirc;ng c&oacute; khoảng trắng giữa c&aacute;c chữ số. D&ograve;ng đầu v&agrave;o l&agrave; '0' sẽ kết th&uacute;c đầu v&agrave;o v&agrave; kh&ocirc;ng được xử l&yacute;.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi tập hợp đầu v&agrave;o, in ra số lượng c&aacute;ch giải m&atilde; c&oacute; thể c&oacute; cho chuỗi k&yacute; tự đầu v&agrave;o. Tất cả c&aacute;c c&acirc;u trả lời sẽ nằm trong phạm vi của một số nguy&ecirc;n c&oacute; dấu 64 bit.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>25114\n1111111111\n3333333333\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n89\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3768699c-b25c-4b11-ae7e-a65919401f8e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ACODE _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9524"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "iitkwpco-create-collections",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Tạo các tập hợp chữ số",
  "content": "<p>Cậu b&eacute; Feluda rất th&iacute;ch chơi đ&ugrave;a. Như bạn biết, anh ấy chỉ chơi với những con số. V&igrave; vậy, anh ta được cho n số. B&acirc;y giờ cố gắng nh&oacute;m c&aacute;c số th&agrave;nh c&aacute;c tập hợp rời rạc, mỗi tập hợp chứa hai số. Anh ta c&oacute; thể tạo th&agrave;nh tập hợp chứa hai số nếu số nhỏ trong tập hợp đ&oacute; ch&iacute;nh x&aacute;c bằng một nửa số lớn.</p>\n<div id=\"problem-body\">\n<p>Cho n số, t&igrave;m xem c&oacute; bao nhi&ecirc;u số tập hợp lớn nhất m&agrave; anh ta c&oacute; thể tạo?</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Số lượng trường hợp thử nghiệm T (1 &lt;= T &lt;= 100).</p>\n<p>Đối với mỗi trường hợp</p>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n chứa n (1 &lt;= n &lt;= 100)</li>\n<li>Sau đ&oacute;, d&ograve;ng tiếp theo sẽ chứa n số c&aacute;ch nhau một khoảng trắng. Phạm vi của mỗi số sẽ từ 1 đến $10^{6}$.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra số lượng tập hợp tối đa c&oacute; thể được h&igrave;nh th&agrave;nh.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n2\n1 2\n3 \n1 2 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n1</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/66651c9b-4daf-4aab-b2de-5a0d9381b1d4",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "IITKWPCO_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9525"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "invcnt-inversion-count",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đếm số lượng các chữ số nghịch đảo",
  "content": "<p>Cho A [0 ... n - 1] l&agrave; một mảng gồm n số nguy&ecirc;n dương kh&aacute;c nhau. Nếu i &lt;j v&agrave; A[i] &gt; A[j] th&igrave; cặp (i, j) được gọi l&agrave; nghịch đảo của A. Cho n v&agrave; một mảng A, nhiệm vụ của bạn l&agrave; t&igrave;m số lượng c&aacute;c số nghịch đảo của A.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa t, số lượng trường hợp thử nghiệm, theo sau l&agrave; một khoảng trống. Mỗi trường hợp thử t bắt đầu bằng số n (n &lt;= 200000). Sau đ&oacute; n+1 d&ograve;ng tiếp theo. Ở d&ograve;ng thứ i, cho trước số A[i - 1] (A[i - 1] &lt;= 10^7). D&ograve;ng thứ (n + 1) l&agrave; một khoảng trống.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi đầu ra thử nghiệm, h&atilde;y in ra một d&ograve;ng cho số c&aacute;c số nghịch đảo của A.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n\n3\n3\n1\n2\n\n5\n2\n3\n8\n6\n1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2\n5</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ff3b2420-e9c1-4c7c-9a13-4c657df0c79f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "INVCNT_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9526"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "koirep-representatives",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm ra đại diện tham gia cuộc thi",
  "content": "<div class=\"row\">\n<div id=\"problem-tags\" class=\"col-lg-12 text-center\"></div>\n</div>\n<p>C&oacute; N lớp trong một trường học, mỗi lớp học c&oacute; M học sinh. Sẽ c&oacute; một cuộc đua 100m, v&agrave; một đại diện của mỗi lớp sẽ được chọn để tham gia cuộc đua n&agrave;y. Bạn đ&atilde; được giao một nhiệm vụ để chọn những người đại diện n&agrave;y. V&igrave; bạn kh&ocirc;ng muốn cuộc đua diễn ra một chiều, bạn muốn chọn những người đại diện sao cho sự kh&aacute;c biệt giữa khả năng của người đại diện tốt nhất v&agrave; người đại diện k&eacute;m nhất l&agrave; nhỏ nhất.</p>\n<div id=\"problem-body\">\n<p>V&iacute; dụ, nếu N = 3 v&agrave; M = 4, v&agrave; mỗi lớp c&oacute; những học sinh c&oacute; c&aacute;c khả năng sau:</p>\n<ul>\n<li>Lớp 1: {12,16,67,43}</li>\n<li>Lớp 2: {7,17,68,48}</li>\n<li>Lớp 3: {14,15,77,54}</li>\n</ul>\n<p>Tốt nhất l&agrave; chọn học sinh c&oacute; khả năng 16 từ Lớp 1, 17 từ Lớp 2 v&agrave; 15 từ Lớp 3. Như vậy, sự kh&aacute;c biệt trong trường hợp n&agrave;y sẽ l&agrave; 17-15 = 2.</p>\n<p>Nhiệm vụ của bạn l&agrave; t&iacute;nh to&aacute;n mức ch&ecirc;nh lệch tối thiểu c&oacute; thể đạt được bằng c&aacute;ch chọn một đại diện từ mỗi lớp.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o bao gồm hai số nguy&ecirc;n, N v&agrave; M. (1 &lt;= N &lt;= 1000, 1 &lt;= M &lt;= 1000).</li>\n<li>N d&ograve;ng tiếp theo sẽ c&oacute; M số nguy&ecirc;n. Phần tử thứ j của d&ograve;ng thứ i l&agrave; khả năng của học sinh thứ j của lớp thứ i. Con số n&agrave;y nằm trong khoảng từ 0 đến 10^9.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra mức ch&ecirc;nh lệch tối thiểu c&oacute; thể đạt được bằng c&aacute;ch chọn đại diện từ mỗi lớp.</p>\n<h3>V&iacute; dụ 1</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3 4\n12 16 67 43\n7 17 68 48\n14 15 77 54</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>2</code></pre>\n<p><strong>V&iacute; dụ 2</strong></p>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 3\n10 20 30\n40 50 60\n70 80 90\n100 110 120</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>70</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/47c2e147-7057-4408-9c18-7d79836037eb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "KOIREP_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9527"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "labyr1-labyrinth",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Giải mã mê cung",
  "content": "<p>Phần ph&iacute;a bắc của Kim tự th&aacute;p chứa một m&ecirc; cung rất lớn v&agrave; phức tạp. M&ecirc; cung được chia th&agrave;nh c&aacute;c khối vu&ocirc;ng, mỗi khối hoặc được lấp đầy bởi đ&aacute;, hoặc kh&ocirc;ng c&oacute; g&igrave;. Ngo&agrave;i ra c&ograve;n c&oacute; một c&aacute;i m&oacute;c nhỏ tr&ecirc;n s&agrave;n ở trung t&acirc;m của mỗi khối kh&ocirc;ng chứa g&igrave; cả. ACM đ&atilde; ph&aacute;t hiện ra rằng hai trong số c&aacute;c m&oacute;c phải được kết nối bằng một sợi d&acirc;y chạy qua c&aacute;c m&oacute;c trong mỗi khối tr&ecirc;n đường dẫn giữa c&aacute;c m&oacute;c được kết nối. Khi sợi d&acirc;y được thắt chặt, một c&aacute;nh cửa b&iacute; mật sẽ mở ra. Vấn đề l&agrave; ch&uacute;ng ta kh&ocirc;ng biết m&oacute;c n&agrave;o cần kết nối. Điều đ&oacute; cũng c&oacute; nghĩa l&agrave; chiều d&agrave;i cần thiết của sợi d&acirc;y vẫn chưa được biết. Nhiệm vụ của bạn l&agrave; x&aacute;c định chiều d&agrave;i tối đa của sợi d&acirc;y m&agrave; ch&uacute;ng ta c&oacute; thể cần cho một m&ecirc; cung nhất định.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">Đầu v&agrave;o bao gồm T trường hợp thử nghiệm. Số lượng T được cho tr&ecirc;n d&ograve;ng đầu ti&ecirc;n của tệp đầu v&agrave;o. Mỗi trường hợp thử nghiệm bắt đầu bằng một d&ograve;ng chứa hai số nguy&ecirc;n C v&agrave; R (3 &lt;= C, R &lt;= 1000) cho biết số cột v&agrave; h&agrave;ng. Sau đ&oacute; ch&iacute;nh x&aacute;c R d&ograve;ng tiếp theo, mỗi d&ograve;ng chứa C k&yacute; tự. C&aacute;c k&yacute; tự n&agrave;y chỉ định m&ecirc; cung. Mỗi dấu trong số ch&uacute;ng l&agrave; một dấu thăng (#) hoặc một dấu chấm (.). Dấu thăng tượng trưng cho đ&aacute;, dấu chấm l&agrave; c&aacute;c khối trống rỗng. Chỉ c&oacute; thể đi bộ giữa c&aacute;c khối l&acirc;n cận, nơi c&aacute;c khối l&acirc;n cận l&agrave; c&aacute;c khối c&oacute; c&ugrave;ng một cạnh. Ch&uacute;ng ta kh&ocirc;ng thể đi theo đường ch&eacute;o v&agrave; ch&uacute;ng ta kh&ocirc;ng thể bước ra khỏi m&ecirc; cung.</p>\n<p align=\"justify\">M&ecirc; cung được thiết kế theo c&aacute;ch c&oacute; ch&iacute;nh x&aacute;c một đường đi giữa hai khối trống rỗng bất kỳ. Do đ&oacute;, nếu ch&uacute;ng ta t&igrave;m thấy c&aacute;c m&oacute;c th&iacute;ch hợp để kết nối, ch&uacute;ng ta sẽ dễ d&agrave;ng t&igrave;m thấy đ&uacute;ng đường kết nối ch&uacute;ng.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Chương tr&igrave;nh của bạn phải in ra ch&iacute;nh x&aacute;c một d&ograve;ng đầu ra cho mỗi trường hợp thử nghiệm. D&ograve;ng phải chứa chuỗi \"Maximum rope length is X.\", trong đ&oacute;, X l&agrave; độ d&agrave;i của đường đi d&agrave;i nhất giữa hai khối trống rỗng bất kỳ, được đo bằng số khối.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 3\n###\n#.#\n###\n7 6\n#######\n#.#.###\n#.#.###\n#.#.#.#\n#.....#\n#######</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Maximum rope length is 0.\nMaximum rope length is 8.</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8fcea2ca-8edf-40a0-a02e-9834755841fc",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LABYR1_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9528"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lastdig-the-last-digit",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm chữ số cuối cùng",
  "content": "<p>Nestor đang l&agrave;m b&agrave;i tập trong lớp to&aacute;n của m&igrave;nh khoảng ba ng&agrave;y nhưng anh ấy cảm thấy mệt mỏi v&igrave; phải thực hiện nhiều ph&eacute;p to&aacute;n v&agrave; anh ấy sẽ giao nhiệm vụ v&agrave;o ng&agrave;y mai. Gi&aacute;o vi&ecirc;n to&aacute;n của anh ấy cho anh ấy hai số a v&agrave; b. B&agrave;i to&aacute;n bao gồm t&igrave;m chữ số cuối c&ugrave;ng của cơ số a v&agrave; chỉ số b. H&atilde;y gi&uacute;p Nestor giải quyết vấn đề của anh ấy. Bạn được cho hai số nguy&ecirc;n: cơ số a (0 &lt;= a &lt;= 20) v&agrave; chỉ số b (0 &lt;= b &lt;= 2.147.483.000), a v&agrave; b đều kh&aacute;c 0. Bạn phải t&igrave;m chữ số cuối c&ugrave;ng của $a^{b}$ .</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o chứa một số nguy&ecirc;n t, số lượng trường hợp thử nghiệm (t &lt;= 30). Tiếp theo l&agrave; t c&aacute;c trường hợp thử nghiệm. Đối với mỗi trường hợp thử nghiệm sẽ in ra a v&agrave; b c&aacute;ch nhau bởi dấu c&aacute;ch.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, h&atilde;y in ra một số nguy&ecirc;n tr&ecirc;n mỗi d&ograve;ng đại diện cho kết quả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n3 10\n6 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>9\n6</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/33afcb57-94c7-4049-a049-502d4d3a6190",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LASTDIG_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9529"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "lks-large-knapsack",
  "tags": [],
  "level": "BEGINNER",
  "title": "Túi ba lô",
  "content": "<p>B&agrave;i to&aacute;n ba l&ocirc; hoặc b&agrave;i to&aacute;n ba l&ocirc; l&agrave; một b&agrave;i to&aacute;n trong tối ưu h&oacute;a tổ hợp: Cho một tập hợp c&aacute;c phần tử, mỗi phần tử c&oacute; trọng số v&agrave; gi&aacute; trị, h&atilde;y x&aacute;c định gi&aacute; trị số của mỗi phần tử để th&ecirc;m v&agrave;o một tập hợp sao cho tổng trọng số nhỏ hơn hoặc bằng một giới hạn đ&atilde; cho v&agrave; tổng gi&aacute; trị c&agrave;ng lớn c&agrave;ng tốt. T&ecirc;n gọi của n&oacute; bắt nguồn từ b&agrave;i to&aacute;n m&agrave; ai đ&oacute; phải giải quyết l&agrave; người bị r&agrave;ng buộc bởi một chiếc t&uacute;i c&oacute; k&iacute;ch thước cố định v&agrave; phải lấp đầy n&oacute; với những m&oacute;n đồ c&oacute; gi&aacute; trị nhất.</p>\n<div id=\"problem-body\">\n<p>Chỉ cần thực hiện Knapsack 0/1.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n chứa hai số nguy&ecirc;n K v&agrave; N, trong đ&oacute; K l&agrave; k&iacute;ch thước ba l&ocirc; lớn nhất v&agrave; N l&agrave; số phần tử. N d&ograve;ng tiếp theo, trong đ&oacute; d&ograve;ng thứ i m&ocirc; tả phần tử thứ i ở dạng $v_{i}$ v&agrave; $w_{i}$ trong đ&oacute; $v_{i}$ l&agrave; gi&aacute; trị v&agrave; $w_{i} l&agrave; trọng số của phần tử thứ i.</p>\n<h3>Định dạng đầu ra</h3>\n<p>In ra một số duy nhất - gi&aacute; trị lớn nhất của ba l&ocirc;. (Tất cả c&aacute;c ph&eacute;p to&aacute;n v&agrave; c&acirc;u trả lời được đảm bảo ph&ugrave; hợp với số nguy&ecirc;n 32 bit c&oacute; dấu.)</p>\n<p><em>Giới hạn thời gian thay đổi từ 2s v&agrave;o 02.07.11.</em></p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>10 3\n7 3\n8 8\n4 6</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ab1e16e3-9d82-4953-9725-076f383ca8b2",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "LKS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952a"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "maxxor-find-the-max-xor-value",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tìm giá trị XOR lớn nhất",
  "content": "<p>Bạn c&oacute; hai số nguy&ecirc;n L v&agrave; R, v&agrave; bạn được y&ecirc;u cầu t&igrave;m gi&aacute; trị xor lớn nhất của a v&agrave; b trong đ&oacute; L &lt;= a &lt;= R v&agrave; L &lt;= b &lt;= R</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Hai số nguy&ecirc;n tr&ecirc;n một d&ograve;ng. $L, R &lt;= 1e^{9}$</p>\n<h3>Định dạng đầu ra</h3>\n<p>1 số nguy&ecirc;n</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1 10</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>15</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/b7f85178-1e22-4bcf-a257-d7c6e75e501c",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MAXXOR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952b"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "micemaze-mice-and-maze",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Chuột trong mê cung",
  "content": "<p>Một nh&oacute;m chuột trong ph&ograve;ng th&iacute; nghiệm đang được huấn luyện để tho&aacute;t khỏi một m&ecirc; cung. M&ecirc; cung được tạo th&agrave;nh từ c&aacute;c &ocirc;, v&agrave; mỗi &ocirc; được kết nối với một số &ocirc; kh&aacute;c. Tuy nhi&ecirc;n, c&oacute; những chướng ngại vật trong việc đi lại giữa c&aacute;c &ocirc; v&agrave; do đ&oacute; c&oacute; một h&igrave;nh phạt về thời gian để vượt qua lối đi. Ngo&agrave;i ra, một số đoạn cho ph&eacute;p chuột đi một chiều, nhưng kh&ocirc;ng phải theo chiều ngược lại.</p>\n<div id=\"problem-body\">\n<p align=\"justify\">Giả sử rằng tất cả c&aacute;c con chuột hiện đ&atilde; được huấn luyện v&agrave; khi được đặt v&agrave;o một &ocirc; t&ugrave;y &yacute; trong m&ecirc; cung, h&atilde;y đi theo con đường dẫn ch&uacute;ng đến &ocirc; tho&aacute;t trong thời gian tối thiểu. Ch&uacute;ng ta sẽ tiến h&agrave;nh th&iacute; nghiệm sau: một con chuột được đặt trong mỗi &ocirc; của m&ecirc; cung v&agrave; đồng hồ đếm ngược được bắt đầu. Khi bộ đếm thời gian dừng, ch&uacute;ng ta sẽ đếm số lượng chuột ra khỏi m&ecirc; cung.</p>\n<p align=\"justify\">Viết một chương tr&igrave;nh, với m&ocirc; tả về m&ecirc; cung v&agrave; giới hạn về thời gian, dự đo&aacute;n số lượng chuột sẽ tho&aacute;t ra khỏi m&ecirc; cung. Giả sử rằng kh&ocirc;ng c&oacute; n&uacute;t thắt cổ chai l&agrave; m&ecirc; cung, tức l&agrave; tất cả c&aacute;c &ocirc; đều c&oacute; chỗ trống cho một số lượng chuột t&ugrave;y &yacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p align=\"justify\">C&aacute;c &ocirc; m&ecirc; cung được đ&aacute;nh số $ 1, 2, \\ ldots, N $, trong đ&oacute; $ N $ l&agrave; tổng số &ocirc;. Bạn c&oacute; thể giả định rằng $ N \\ le 100 $.</p>\n<p align=\"justify\">Ba d&ograve;ng đầu v&agrave;o đầu ti&ecirc;n chứa $ N $, số &ocirc; trong m&ecirc; cung, $ E $, số &ocirc; tho&aacute;t v&agrave; gi&aacute; trị bắt đầu $ T $ cho đồng hồ đếm ngược (trong một số đơn vị thời gian t&ugrave;y &yacute;).</p>\n<p align=\"justify\">D&ograve;ng thứ tư chứa số $ M $ c&aacute;c kết nối trong m&ecirc; cung v&agrave; theo sau l&agrave; c&aacute;c d&ograve;ng $ M $, mỗi d&ograve;ng chỉ định một kết nối với ba số nguy&ecirc;n: hai số &ocirc; $ a $ v&agrave; $ b $ (trong phạm vi $ 1, \\ ldots, N $) v&agrave; số đơn vị thời gian cần thiết để đi từ $ a $ đến $ b $.</p>\n<p align=\"justify\">Lưu &yacute; rằng mỗi kết nối l&agrave; một chiều, tức l&agrave; chuột kh&ocirc;ng thể di chuyển từ $ b $ đến $ a $ trừ khi c&oacute; một d&ograve;ng kh&aacute;c chỉ định đoạn đường đ&oacute;. Cũng lưu &yacute; rằng thời gian cần thiết để di chuyển theo mỗi hướng c&oacute; thể kh&aacute;c nhau.</p>\n<h3>Định dạng đầu ra</h3>\n<p align=\"justify\">Đầu ra bao gồm một d&ograve;ng duy nhất với số lượng chuột đ&atilde; đến &ocirc; tho&aacute;t $ E $ với nhiều nhất l&agrave; $ T $ đơn vị thời gian.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>4 \n2 \n1\n8\n1 2 1\n1 3 1\n2 1 1\n2 4 1\n3 1 1\n3 4 1\n4 2 1\n4 3 1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/eb8aea1f-a777-4c70-811e-26fc0a700898",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MICEMAZE_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952c"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mkequal-make-them-equal",
  "tags": [],
  "level": "BEGINNER",
  "title": "Thêm bớt",
  "content": "<p>Bạn c&oacute; một mảng chứa N phần tử. Tại bất kỳ bước di chuyển n&agrave;o, bạn chọn hai chỉ số i v&agrave; j (0 &lt;= i, j &lt;N v&agrave; i! = J) v&agrave; tăng gi&aacute; trị ở một chỉ số v&agrave; giảm gi&aacute; trị ở chỉ số kh&aacute;c. Bạn c&oacute; thể thực hiện thao t&aacute;c n&agrave;y với bất kỳ số lần n&agrave;o. Số phần tử lớn nhất c&oacute; thể c&oacute; c&ugrave;ng gi&aacute; trị (sau bất kỳ số lần di chuyển n&agrave;o) l&agrave; bao nhi&ecirc;u?</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ti&ecirc;n bao gồm T, số lượng trường hợp thử nghiệm. (1 &lt;= T &lt;= 100)</li>\n<li>Tiếp theo l&agrave; T tập hợp. Mỗi tập hợp chứa N, số phần tử trong mảng, ở d&ograve;ng đầu ti&ecirc;n. (1 &lt;= N &lt;= 100000)</li>\n<li>D&ograve;ng tiếp theo của mỗi tập hợp bao gồm N số nguy&ecirc;n được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch (0 &lt;= Gi&aacute; trị &lt;= 100000)</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra T d&ograve;ng, mỗi d&ograve;ng chứa c&acirc;u trả lời được y&ecirc;u cầu.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>1\n4\n1 2 3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/29419844-db25-404e-9a9e-1df55ad8a1a3",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKEQUAL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952d"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mkjumps-making-jumps",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Thực hiện bước nhảy",
  "content": "<p>Một qu&acirc;n m&atilde; l&agrave; một qu&acirc;n cờ được sử dụng trong tr&ograve; chơi cờ vua. Bản th&acirc;n b&agrave;n cờ l&agrave; một mảng &ocirc; vu&ocirc;ng. Mỗi khi một qu&acirc;n m&atilde; di chuyển, vị tr&iacute; kết quả của n&oacute; l&agrave; hai h&agrave;ng v&agrave; một cột, hoặc hai cột v&agrave; một h&agrave;ng so với vị tr&iacute; xuất ph&aacute;t của n&oacute;. Do đ&oacute;, một qu&acirc;n m&atilde; bắt đầu từ h&agrave;ng r, cột c - m&agrave; ch&uacute;ng ta sẽ k&yacute; hiệu l&agrave; (r, c) - c&oacute; thể di chuyển đến bất kỳ &ocirc; vu&ocirc;ng n&agrave;o (r-2, c-1), (r-2, c + 1), (r-1, c-2), (r-1, c + 2), (r + 1, c-2), (r + 1, c + 2), (r + 2, c-1), hoặc (r + 2, c + 1). Tất nhi&ecirc;n, qu&acirc;n m&atilde; kh&ocirc;ng được di chuyển đến bất kỳ &ocirc; vu&ocirc;ng n&agrave;o kh&ocirc;ng c&oacute; tr&ecirc;n b&agrave;n cờ.</p>\n<div id=\"problem-body\">\n<p>Giả sử b&agrave;n cờ kh&ocirc;ng phải l&agrave; h&igrave;nh vu&ocirc;ng, m&agrave; thay v&agrave;o đ&oacute; l&agrave; c&aacute;c h&agrave;ng c&oacute; số cột thay đổi v&agrave; với khoảng c&aacute;ch mỗi h&agrave;ng l&agrave; 0 hoặc nhiều cột ở b&ecirc;n phải của h&agrave;ng ph&iacute;a tr&ecirc;n n&oacute;. H&igrave;nh b&ecirc;n tr&aacute;i minh họa một c&aacute;ch sắp xếp khả thi. C&oacute; bao nhi&ecirc;u &ocirc; trong một b&agrave;n cờ đ&atilde; sửa đổi như vậy m&agrave; một qu&acirc;n m&atilde; c&oacute; thể, bắt đầu ở &ocirc; ph&iacute;a tr&ecirc;n b&ecirc;n tr&aacute;i (được đ&aacute;nh dấu bằng dấu hoa thị), kh&ocirc;ng tiếp cận được với bất kỳ số nước đi n&agrave;o m&agrave; kh&ocirc;ng dừng lại ở bất kỳ &ocirc; n&agrave;o nhiều hơn một lần?</p>\n<center><img src=\"https://www.spoj.com/content/steinersp:jumps.png\" alt=\"subir imagenes\" border=\"0\" /></center>\n<p>Nếu cần, qu&acirc;n m&atilde; được ph&eacute;p đi qua c&aacute;c v&ugrave;ng nằm ngo&agrave;i bi&ecirc;n giới của b&agrave;n cờ đ&atilde; sửa đổi, nhưng như thường lệ, n&oacute; chỉ c&oacute; thể di chuyển đến c&aacute;c &ocirc; nằm trong bi&ecirc;n giới của b&agrave;n cờ.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Sẽ c&oacute; nhiều trường hợp cần xem x&eacute;t. Đầu v&agrave;o cho mỗi trường hợp bắt đầu bằng số nguy&ecirc;n n, từ 1 đến 10, chỉ định số h&agrave;ng trong b&agrave;n cờ đ&atilde; sửa đổi. Theo sau n sẽ c&oacute; n cặp số nguy&ecirc;n, với cặp thứ i tương ứng với h&agrave;ng thứ i của b&agrave;n cờ. Số nguy&ecirc;n đầu ti&ecirc;n của mỗi cặp cho biết số &ocirc; vu&ocirc;ng bị bỏ qua ở đầu h&agrave;ng. Số nguy&ecirc;n thứ hai cho biết số &ocirc; vu&ocirc;ng trong h&agrave;ng (sẽ lu&ocirc;n lu&ocirc;n &iacute;t nhất l&agrave; 1). Trường hợp cuối c&ugrave;ng sẽ được theo sau bởi số nguy&ecirc;n 0.</p>\n<p>V&iacute; dụ, đầu v&agrave;o cho trường hợp được minh họa bằng b&agrave;n cờ hiển thị ở tr&ecirc;n sẽ l&agrave;:</p>\n<pre class=\"language-markup\"><code>7 0 3 0 3 0 4 0 4 1 3 1 7 4 4</code></pre>\n</div>\n<div id=\"problem-body\">\n<p>K&iacute;ch thước tối đa của bảng sẽ l&agrave; 10 h&agrave;ng v&agrave; 10 cột. C&oacute; nghĩa l&agrave;, bất kỳ b&agrave;n cờ đ&atilde; sửa đổi n&agrave;o được chỉ định bởi đầu v&agrave;o sẽ ho&agrave;n to&agrave;n nằm vừa tr&ecirc;n một b&agrave;n cờ 10 h&agrave;ng, 10 cột.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp đầu v&agrave;o, hiển thị gi&aacute; trị số của trường hợp (1, 2,&hellip;) v&agrave; số &ocirc; vu&ocirc;ng m&agrave; qu&acirc;n m&atilde; kh&ocirc;ng thể tiếp cận. Hiển thị kết quả theo định dạng được hiển thị trong c&aacute;c v&iacute; dụ b&ecirc;n dưới.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>7 0 3 0 3 0 4 0 4 1 3 1 7 4 4\n3 0 3 0 3 0 3\n2 0 1 2 1\n0</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>Case 1, 4 squares can not be reached.\nCase 2, 1 square can not be reached.\nCase 3, 0 squares can not be reached.</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/f94352a0-82df-48de-b85c-9de914579d4f",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MKJUMPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952e"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "mmatrix-shift-operator-on-matrix",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Toán tử SHIFT trên ma trận",
  "content": "<p>Cho một ma trận A c&oacute; k&iacute;ch thước l&agrave; n&times;n, c&oacute; c&aacute;c phần tử Ai, j l&agrave; c&aacute;c số nguy&ecirc;n (0 &le; i &lt;n, 0 &le; j &lt;n). Thao t&aacute;c SHIFT tại h&agrave;ng i (0 &le; i &lt;n) sẽ di chuyển c&aacute;c số nguy&ecirc;n trong h&agrave;ng sang phải một vị tr&iacute; v&agrave; số nguy&ecirc;n ngo&agrave;i c&ugrave;ng b&ecirc;n phải sẽ xuống d&ograve;ng so với cột ngo&agrave;i c&ugrave;ng b&ecirc;n tr&aacute;i.</p>\n<p id=\"problem-body\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/simes:MMATRIX.png\" border=\"0\" /><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Bạn c&oacute; thể thực hiện thao t&aacute;c SHIFT ở h&agrave;ng t&ugrave;y &yacute; v&agrave; bao nhi&ecirc;u lần t&ugrave;y th&iacute;ch. X&aacute;c định Cj = A0, j + A1, j + .. + A (n-1), j v&agrave; M = max {Cj | 0 &lt;= j &lt;n}. Cj l&agrave; tổng của tất cả c&aacute;c số trong cột thứ i. Việc của bạn l&agrave; giảm thiểu M. </span></p>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Định dạng đầu v&agrave;o</span></strong></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o bao gồm một số trường hợp thử nghiệm. D&ograve;ng đầu ti&ecirc;n của mỗi trường hợp chứa một số nguy&ecirc;n n. Mỗi d&ograve;ng trong số n d&ograve;ng sau chứa n số nguy&ecirc;n cho biết ma trận A. Đầu v&agrave;o được kết th&uacute;c bằng một d&ograve;ng duy nhất với số nguy&ecirc;n &minus;1. Bạn c&oacute; thể giả định rằng 1 &le; n &le; 7 v&agrave; | Ai, j | &lt;10 ^ 4.</span></p>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Định dạng đầu ra</span></strong></p>\n<p>Đối với mỗi trường hợp thử nghiệm, in ra một d&ograve;ng chứa gi&aacute; trị nhỏ nhất của gi&aacute; trị lớn nhất của tổng c&aacute;c cột.</p>\n<h2><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> V&iacute; dụ</span></strong></h2>\n<p><strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Đầu v&agrave;o</span></strong></p>\n<pre class=\"language-markup\"><code>2\n4 6\n3 7\n3\n1 2 3\n4 5 6\n7 8 9\n-1</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11\n15</code></pre>\n<div>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/82f92522-54d2-45f1-aec6-67dab2a50282",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MMATRIX_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef952f"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "msubstr-mirror-strings",
  "tags": [],
  "level": "BEGINNER",
  "title": "Chuỗi ký tự phản chiếu",
  "content": "<p>Như ch&uacute;ng ta đ&atilde; biết Utkarsh rất giỏi trong việc giải c&aacute;c b&agrave;i to&aacute;n số, lần n&agrave;y Arpit đ&atilde; suy nghĩ th&ocirc;ng minh v&agrave; đưa cho Utkarsh giải một b&agrave;i to&aacute;n tr&ecirc;n c&aacute;c chuỗi k&yacute; tự. Arpit đưa cho Utkarsh một chuỗi k&yacute; tự v&agrave; th&aacute;ch anh ta t&igrave;m độ d&agrave;i của chuỗi con lớn nhất c&oacute; chuỗi k&yacute; tự phản chiếu giống với chuỗi ban đầu v&agrave; số lượng c&aacute;c chuỗi con như vậy. B&acirc;y giờ Utkarsh đang bận rộn với việc chuẩn bị c&aacute;c giấy tờ cho Avishkar v&igrave; vậy anh ấy y&ecirc;u cầu bạn gi&uacute;p anh ấy l&agrave;m nhiệm vụ n&agrave;y.</p>\n<p>V&iacute; dụ: Chuỗi k&yacute; tự \"lalit\" c&oacute; chuỗi k&yacute; tự phản chiếu l&agrave; \"tilal\".</p>\n<p><strong>Định dạng đầu v&agrave;o</strong></p>\n<p>C&oacute; t số trường hợp thử nghiệm (t &lt;= 100), tiếp theo l&agrave; t d&ograve;ng, trong đ&oacute;, mỗi d&ograve;ng chứa một chuỗi k&yacute; tự gồm c&aacute;c k&yacute; tự viết thường (a-z) c&oacute; độ d&agrave;i l (1&gt; = l &lt;= 3000).</p>\n<p><strong>ĐỊnh dạng đầu ra</strong></p>\n<p>Sẽ c&oacute; hai số nguy&ecirc;n tr&ecirc;n mỗi d&ograve;ng được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch cho biết độ d&agrave;i của chuỗi con lớn nhất c&oacute; chuỗi phản chiếu giống nhau v&agrave; số lượng c&aacute;c chuỗi con c&oacute; t&iacute;nh chất như vậy.</p>\n<h2><strong>V&iacute; dụ</strong></h2>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\nlalit\nabedcdetr\nabcde</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3 1\n5 1\n1 5</code></pre>\n<div id=\"problem-body\">\n<div id=\"_mcePaste\">Giới hạn về thời gian: 1 gi&acirc;y</div>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/6813763e-3e61-4b7a-94c9-554a8509f4b5",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MSUBSTR_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9530"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "mul-fast-multiplication",
  "tags": [],
  "level": "BEGINNER",
  "title": "Tính phép nhân",
  "content": "<p>H&atilde;y nh&acirc;n c&aacute;c số đ&atilde; cho.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>n [số ph&eacute;p nh&acirc;n &lt;= 1000]</li>\n<li>l1 l2 [c&aacute;c số cần nh&acirc;n (nhiều nhất 10000 chữ số thập ph&acirc;n cho mỗi số)]</li>\n<li>Văn bản được nh&oacute;m trong [] kh&ocirc;ng xuất hiện trong tệp đầu v&agrave;o.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>C&aacute;c kết quả của c&aacute;c ph&eacute;p nh&acirc;n.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>5\n4 2\n123 43\n324 342\n0 12\n9999 12345</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>8\n5289\n110808\n0\n123437655</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/0383c38c-fd6f-4c67-98f9-076eb6495db0",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "MUL_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9531"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nabilhacker-hack-the-password",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Hack mật khẩu",
  "content": "<header class=\"border-bottom border-color-light-grey\">\n<div class=\"container\">\n<p class=\"margin-none padding-top-2 padding-bottom-2\">Rất nhiều người hỏi m&igrave;nh về vấn đề &aacute;p dụng lập tr&igrave;nh ở cuộc thi v&agrave;o c&aacute;c project trong đời sống thực chất l&agrave; g&igrave;? Điều n&agrave;y c&oacute; vẻ kh&ocirc;ng mấy th&uacute; vị. C&aacute;i m&agrave; m&igrave;nh thấy thực sự th&uacute; vị đ&oacute; l&agrave;, v&agrave;o một ng&agrave;y nọ, một người bạn - l&agrave; hacker đ&atilde; đến gặp m&igrave;nh. Anh ta y&ecirc;u cầu m&igrave;nh giải quyết một b&agrave;i to&aacute;n về hacking của anh ấy. Khi bạn muốn lấy cắp mật khẩu của ai đ&oacute;, bạn c&oacute; thể c&agrave;i đặt chương tr&igrave;nh KeyLogger tr&ecirc;n m&aacute;y t&iacute;nh của người đ&oacute;. KeyLogger sẽ đưa cho bạn một string đ&oacute;ng vai tr&ograve; l&agrave; password. Nhưng c&oacute; một vấn đề, đ&oacute; l&agrave; n&oacute; sẽ đưa cho bạn tất cả mọi thứ m&agrave; nạn nh&acirc;n đ&atilde; g&otilde;, bao gồm cả ph&iacute;m dịch tr&aacute;i, dịch phải, backspace. Giả sử nạn nh&acirc;n g&otilde; password \"generio312\", nhưng dựa tr&ecirc;n kịch bản l&agrave;:</p>\n</div>\n</header>\n<section class=\"main-container container\">\n<div class=\"content-wrapper padding-top-half padding-bottom-2\">\n<div class=\"post-container\">\n<div class=\"padding-top padding-bottom\">\n<ol>\n<li>Anh ta g&otilde; \"generio1\"</li>\n<li>Sau đ&oacute;, anh ta nhấn n&uacute;t dịch tr&aacute;i, v&agrave; nhấn 3. L&uacute;c n&agrave;y password sẽ l&agrave; \"generio31\"</li>\n<li>Rồi anh ta nhấn dịch phải, v&agrave; nhấn 2. L&uacute;c n&agrave;y password l&agrave; \"generio312\"</li>\n<li>Cuối c&ugrave;ng anh ta nhấn \"ghj\" v&agrave; nhấn backspace 3 lần để xo&aacute; 3 k&iacute; tự n&agrave;y đi. V&igrave; vậy, password cuối c&ugrave;ng sẽ l&agrave; \"generio312\".</li>\n</ol>\n<p>Tuy nhi&ecirc;n, như m&igrave;nh đ&atilde; n&oacute;i, KeyLogger sẽ đưa cho bạn tất cả những g&igrave; m&agrave; anh ta g&otilde;. Do đ&oacute;, bạn sẽ nhận được string l&agrave; \"generio1&lt;3&gt;2ghj---\". Trong đ&oacute;, &lt; l&agrave; dịch tr&aacute;i, &gt; l&agrave; dịch phải v&agrave; - l&agrave; backspace.</p>\n<h3 id=\"đầu-v&agrave;o\">Định dạng đầu v&agrave;o</h3>\n<p>Tại vị tr&iacute; đầu ti&ecirc;n của input l&agrave; số T, số lượng của testcase. Sau đ&oacute;, c&oacute; T string s, với độ d&agrave;i 1 &lt;= |s| &lt;= 10^6. Mỗi string sẽ bao gồm chữ c&aacute;i in hoa, chữ c&aacute;i in thường, dấu &lt;, dấu &amp;gt, dấu - v&agrave; c&aacute;c số [0, 9]</p>\n<h3 id=\"đầu-ra\">Định dạng đầu ra</h3>\n<p>Đầu ra sẽ l&agrave; một string ở mỗi d&ograve;ng - tương ứng với password.</p>\n<h3 id=\"v&iacute;-dụ\">V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n&lt;&lt;BP&lt;A&gt;&gt;Cd-\nThisIsS3Cr3t</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>BAPC\nThisIsS3Cr3t</code></pre>\n</div>\n</div>\n</div>\n</section>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/8441c6fd-adba-4f9a-8556-7c8630485804",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NABILHACKER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9532"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nakanj-minimum-knight-moves",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Số nước đi quân mã nhỏ nhất",
  "content": "<p>Anjali v&agrave; Nakul l&agrave; bạn tốt của nhau. Cả hai đ&atilde; c&atilde;i nhau gần đ&acirc;y khi đang chơi cờ. Nakul muốn biết số nước đi tối thiểu của một qu&acirc;n m&atilde; c&oacute; thể c&oacute; sao cho đến được từ &ocirc; vu&ocirc;ng n&agrave;y sang &ocirc; vu&ocirc;ng kh&aacute;c của b&agrave;n cờ (8X8). Nakul rất th&ocirc;ng minh v&agrave; anh ấy đ&atilde; viết một chương tr&igrave;nh để giải quyết vấn đề n&agrave;y. Nakul muốn biết liệu Anjali c&oacute; l&agrave;m được kh&ocirc;ng. Anjali rất yếu về lập tr&igrave;nh. H&atilde;y gi&uacute;p c&ocirc; ấy để giải quyết vấn đề.</p>\n<div id=\"problem-body\">\n<p>Một qu&acirc;n m&atilde; c&oacute; thể di chuyển theo h&igrave;nh chữ \"L\" trong b&agrave;n cờ - hai h&igrave;nh vu&ocirc;ng tiến, l&ugrave;i, tr&aacute;i hoặc phải v&agrave; sau đ&oacute; l&agrave; một h&igrave;nh vu&ocirc;ng ở b&ecirc;n tr&aacute;i hoặc b&ecirc;n phải của n&oacute;. Nước đi của qu&acirc;n m&atilde; l&agrave; hợp lệ nếu n&oacute; đi như đ&atilde; đề cập ở tr&ecirc;n v&agrave; n&oacute; nằm trong ranh giới của b&agrave;n cờ (8 X 8).</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"knight\" src=\"https://www.spoj.com/content/francky:knight\" alt=\"knight\" width=\"50%\" /></p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Tổng cộng c&oacute; T trường hợp thử nghiệm. T d&ograve;ng tiếp theo chứa hai chuỗi k&yacute; tự (điểm bắt đầu v&agrave; điểm đến) được ph&acirc;n t&aacute;ch bằng dấu c&aacute;ch.</li>\n<li>C&aacute;c chuỗi bắt đầu v&agrave; đ&iacute;ch sẽ chỉ chứa hai k&yacute; tự - K&yacute; tự đầu ti&ecirc;n l&agrave; chữ c&aacute;i nằm giữa 'a' v&agrave; 'h', k&yacute; tự thứ hai l&agrave; một chữ số từ '1' đến '8'.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>In ra số nước đi tối thiểu m&agrave; qu&acirc;n m&atilde; phải đi từ đầu đến đ&iacute;ch trong một d&ograve;ng ri&ecirc;ng.</p>\n<h3>Điều kiện</h3>\n<ul>\n<li>1 &lt;= T &lt;= 4096</li>\n</ul>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\na1 h8\na1 c2\nh8 c3</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n1\n4</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/265a9025-34eb-4400-ac84-f5a0e2e1b30e",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NAKANJ _input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9533"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "ndccard-cac-la-bai-blackjack",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Các lá bài Blackjack",
  "content": "<div id=\"problem-body\">\n<p>Blackjack l&agrave; tr&ograve; chơi đ&aacute;nh b&agrave;i kh&aacute; phổ biến, mục ti&ecirc;u l&agrave; c&oacute; được những l&aacute; b&agrave;i m&agrave; tổng của n&oacute; l&agrave; lớn nhất nhưng kh&ocirc;ng vượt qu&aacute; 21. Lấy &yacute; tưởng từ tr&ograve; chơi n&agrave;y, c&aacute;c bạn khaihanhdk, huytion156, thanhdat01234 đ&atilde; s&aacute;ng tạo ra một phi&ecirc;n bản mới của tr&ograve; chơi cho ri&ecirc;ng m&igrave;nh.</p>\n<p>Trong phi&ecirc;n bản tr&ograve; chơi mới n&agrave;y c&aacute;c bạn đ&atilde; viết l&ecirc;n mỗi l&aacute; b&agrave;i một số nguy&ecirc;n dương. Người tham gia tr&ograve; chơi được cung cấp một tập gồm N l&aacute; b&agrave;i v&agrave; một số nguy&ecirc;n dương M. Nhiệm vụ của người chơi l&agrave; phải chọn ra 3 l&aacute; b&agrave;i từ tập l&aacute; b&agrave;i đ&atilde; cho sao cho tổng c&aacute;c số tr&ecirc;n 3 l&aacute; b&agrave;i đ&atilde; chọn l&agrave; lớn nhất v&agrave; kh&ocirc;ng vượt qu&aacute; M. Bạn h&atilde;y t&igrave;m kết quả tốt nhất c&oacute; thể c&oacute; của tr&ograve; chơi tr&ecirc;n.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>D&ograve;ng đầu ghi số nguy&ecirc;n dương N,M (N&lt;=10000 , M&lt;=500000).</li>\n<li>N d&ograve;ng sau ghi N số nguy&ecirc;n dương đ&ocirc;i một kh&aacute;c nhau l&agrave; c&aacute;c số được ghi tr&ecirc;n N l&aacute; b&agrave;i&nbsp;( 1 &le; a[i] &le; 10000).</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Ghi tr&ecirc;n một d&ograve;ng duy nhất l&agrave; kết quả b&agrave;i to&aacute;n. Trường hợp thử nghiệm lu&ocirc;n đảm bảo c&oacute; kết quả.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>6 20\n7 9\n6 2\n1 5</code></pre>\n<p><strong>Kết quả:</strong></p>\n<pre class=\"language-markup\"><code>20</code></pre>\n<p><strong>Giải th&iacute;ch</strong></p>\n<p>Chọn c&aacute;c l&aacute; b&agrave;i mang số 9 , 6 , 5 ta c&oacute; 9+6+5 = 20 &lt;= M</p>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/d0ce4d9d-8ecf-4417-a803-65cf9a0b48af",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NDCCARD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9534"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nkgaurd-bao-ve-nong-trang",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Bảo vệ nông trang",
  "content": "<header class=\"border-bottom border-color-light-grey\">\n<div class=\"container\">\n<p class=\"margin-none padding-top-2 padding-bottom-2\">N&ocirc;ng trang c&oacute; rất nhiều ngọn đồi n&uacute;i, để bảo vệ n&ocirc;ng trang n&ocirc;ng d&acirc;n Th&aacute;i muốn đặt người canh g&aacute;c tr&ecirc;n c&aacute;c ngọn đồi n&agrave;y. Anh ta băn khoăn kh&ocirc;ng biết sẽ cần bao nhi&ecirc;u người canh g&aacute;c nếu như anh ta muốn đặt 1 người canh g&aacute;c tr&ecirc;n đỉnh của mỗi đồi. Anh ta c&oacute; bản đồ của n&ocirc;ng trang l&agrave; một ma trận gồm N (1 &lt; N &lt;= 700) h&agrave;ng v&agrave; M (1 &lt; M &lt;= 700) cột. Mỗi phần tử của ma trận l&agrave; độ cao H_ij so với mặt nước biển (0 &lt;= H_ij &lt;= 10,000) của &ocirc; (i, j). H&atilde;y gi&uacute;p anh ta x&aacute;c định số lượng đỉnh đồi tr&ecirc;n bản đồ.</p>\n</div>\n</header>\n<section class=\"main-container container\">\n<div class=\"content-wrapper padding-top-half padding-bottom-2\">\n<div class=\"post-container\">\n<div class=\"padding-top padding-bottom\">\n<p>Đỉnh đồi l&agrave; 1 hoặc nhiều &ocirc; nằm kề nhau của ma trận c&oacute; c&ugrave;ng độ cao được bao quanh bởi cạnh của bản đồ hoặc bởi c&aacute;c &ocirc; c&oacute; độ cao nhỏ hơn. Hai &ocirc; gọi l&agrave; kề nhau nếu độ ch&ecirc;nh lệch giữa tọa độ X kh&ocirc;ng qu&aacute; 1 v&agrave; ch&ecirc;nh lệch tọa độ Y kh&ocirc;ng qu&aacute; 1.</p>\n<h3 id=\"đầu-v&agrave;o\">Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>\n<p>D&ograve;ng 1: Hai số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: N v&agrave; M</p>\n</li>\n<li>\n<p>D&ograve;ng 2..N+1: D&ograve;ng i+1 m&ocirc; tả h&agrave;ng i của ma trận với M số nguy&ecirc;n c&aacute;ch nhau bởi dấu c&aacute;ch: H_ij</p>\n</li>\n</ul>\n<h4 id=\"đầu-ra\">Định dạng đầu ra</h4>\n<ul>\n<li>D&ograve;ng 1: Một số nguy&ecirc;n duy nhất l&agrave; số lượng đỉnh đồi.</li>\n</ul>\n<h3 id=\"v&iacute;-dụ\">V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>8 7 \n4 3 2 2 1 0 1 \n3 3 3 2 1 0 1 \n2 2 2 2 1 0 0 \n2 1 1 1 1 0 0 \n1 1 0 0 0 1 0 \n0 0 0 1 1 1 0 \n0 1 2 2 1 1 0 \n0 1 1 1 2 1 0  </code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>3</code></pre>\n</div>\n</div>\n</div>\n</section>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/78ae3bfc-ab84-49cb-8f9d-8022b473c01b",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKGAURD_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9535"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "nkletter-gui-thu",
  "tags": [],
  "level": "BEGINNER",
  "title": "Gửi thư",
  "content": "<div class=\"prob\">\n<p>Vị Giám đ&ocirc;́c c&ocirc;ng ty XYZ c&acirc;̀n gửi m&ocirc;̣t văn bản quan trọng tới m&ocirc;̣t đ&ocirc;́i tác của mình. Văn bản là m&ocirc;̣t x&acirc;u S các chữ cái la tinh in thường. Đ&ecirc;̉ bảo mật n&ocirc;̣i dung văn bản, &ocirc;ng Giám đ&ocirc;́c gửi 2 bức thư. Bức thư thứ nh&acirc;́t là ph&acirc;̀n đ&acirc;̀u Sb của x&acirc;u S, bức thư thứ 2 là ph&acirc;̀n cu&ocirc;́i Se của S. Hai bức thư Sb và Se đảm bảo đ&acirc;̀y đủ n&ocirc;̣i dung của S, tuy nhi&ecirc;n có th&ecirc;̉ m&ocirc;̣t ph&acirc;̀n cu&ocirc;́i của Sb c&oacute; thể được vi&ecirc;́t lặp lại trong ph&acirc;̀n đ&acirc;̀u của Se, song s&ocirc;́ k&iacute; tự được vi&ecirc;́t lặp lại kh&ocirc;ng bi&ecirc;́t trước. V&iacute; dụ: với văn bản S=&rsquo;truongnguyenduquannhat&rsquo; tạo ra hai bức thư:</p>\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Sb=&rsquo;truongnguyendu&rsquo; v&agrave; Se=&rsquo;nguyenduquannhat&rsquo;</span></pre>\n<p>Y&ecirc;u c&acirc;̀u: Cho hai x&acirc;u Sb và Se, hãy xác định m&ocirc;̣t x&acirc;u S có th&ecirc;̉ là n&ocirc;̣i dung của bức thư sao cho đ&ocirc;̣ dài của x&acirc;u S là ngắn nh&acirc;́t.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Dòng đ&acirc;̀u chứa x&acirc;u Sb, dòng thứ hai chứa x&acirc;u Se. M&ocirc;̃i x&acirc;u có đ&ocirc;̣ dài kh&ocirc;ng quá 250.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Ghi ra đ&ocirc;̣ dài của x&acirc;u S tìm được.</p>\n<h3>Ví dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>truongnguyendu\nnguyenduquannhat</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>22</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/3b82f511-4b63-4d59-9248-255d73f81af8",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NKLETTER_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9536"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "nsteps-number-steps",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Số lượng bước đi",
  "content": "<p>Bắt đầu từ điểm (0,0) tr&ecirc;n một mặt phẳng, ch&uacute;ng ta đ&atilde; viết tất cả c&aacute;c số nguy&ecirc;n kh&ocirc;ng &acirc;m 0, 1, 2, ... như trong h&igrave;nh b&ecirc;n dưới. V&iacute; dụ, 1, 2 v&agrave; 3 đ&atilde; được viết lần lượt tại c&aacute;c điểm (1,1), (2,0) v&agrave; (3, 1) v&agrave; mẫu n&agrave;y vẫn tiếp tục.</p>\n<div id=\"problem-body\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.spoj.com/content/steinersp:nsteps.gif\" alt=\"Illustration\" border=\"0\" />\n<p>Bạn h&atilde;y viết một chương tr&igrave;nh đọc tọa độ của một điểm (x, y) v&agrave; ghi ra số (nếu c&oacute;) đ&atilde; được viết tại điểm đ&oacute;. Tọa độ (x, y) trong đầu v&agrave;o nằm trong khoảng 0 ... 10000.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>D&ograve;ng đầu ti&ecirc;n của đầu v&agrave;o l&agrave; N, số lượng trường hợp thử nghiệm cho vấn đề n&agrave;y. Trong mỗi d&ograve;ng trong số N d&ograve;ng sau, c&oacute; x v&agrave; y biểu diễn tọa độ (x, y) của một điểm.</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi điểm trong đầu v&agrave;o, h&atilde;y ghi số được viết tại điểm đ&oacute; hoặc ghi \"No Number\" nếu kh&ocirc;ng c&oacute;.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n4 2\n6 6\n3 4</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>6\n12\nNo Number</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/ac7845a9-84bf-4862-b398-33ed57e51467",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NSTEPS_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9537"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 10,
  "slug": "numpath-gutibazi",
  "tags": [],
  "level": "BEGINNER",
  "title": "Đem lại công lý",
  "content": "<p>Xunayed rất tức giận. Anh ph&aacute;t hiện ra rằng người bạn của m&igrave;nh, Nurulla, người cũng giống như anh trai của anh, đ&atilde; g&acirc;y ra tội lỗi với anh ta. Xunayed c&oacute; thể tha thứ cho bất cứ điều g&igrave;, nhưng tội lỗi n&agrave;y l&agrave; thứ anh kh&ocirc;ng bao giờ c&oacute; thể tha thứ. Nhưng để cho Nurulla một b&agrave;i học, Xunayed trước ti&ecirc;n phải đến Nurulla bằng một con đường n&agrave;o đ&oacute;. Sau đ&oacute;, sự cố xảy ra. Những con đường thuộc về một c&aacute; nh&acirc;n rất quyền lực t&ecirc;n l&agrave; Rizvi v&agrave; mọi người phải xin ph&eacute;p anh ta để đi qua những con đường đ&oacute;. Rizvi sẽ cho ph&eacute;p Xunayed chỉ khi Xunayed giải được một c&acirc;u đố.</p>\n<div id=\"problem-body\">\n<p>Đường dẫn l&agrave; một ma trận 2 chiều. Xunayed hiện nằm ở &ocirc; ph&iacute;a tr&ecirc;n b&ecirc;n tr&aacute;i (&ocirc; (1,1) trong h&igrave;nh b&ecirc;n dưới). Nurulla b&acirc;y giờ nằm ở &ocirc; ph&iacute;a dưới b&ecirc;n phải (&ocirc; (3,3) trong h&igrave;nh b&ecirc;n dưới) l&agrave; điểm đ&iacute;ch. Xunayed chỉ c&oacute; thể đi xuống hoặc sang phải từ &ocirc; hiện tại của anh ta. C&oacute; bao nhi&ecirc;u con đường m&agrave; Xunayed c&oacute; thể đến được Nurulla.</p>\n<p><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"example grid\" src=\"https://2.bp.blogspot.com/-DdOeWcMdcHM/VvP2X-ERMQI/AAAAAAAABDI/VFp5Y5MKmso-s7EgwFIjwVStq0RVotaZA/s1600/img.jpg\" alt=\"grid\" width=\"163\" height=\"154\" /></strong></p>\n<p>H&atilde;y giải c&acirc;u đố n&agrave;y để gi&uacute;p Xunayed v&ocirc; tội v&agrave; mang lại c&ocirc;ng l&yacute;.</p>\n<h3>Định dạng đầu v&agrave;o</h3>\n<ul>\n<li>Đầu v&agrave;o bắt đầu bằng số nguy&ecirc;n T (&lt;= 50), biểu thị số lượng trường hợp thử nghiệm.</li>\n<li>Mỗi trường hợp bắt đầu bằng một d&ograve;ng chứa hai số nguy&ecirc;n R v&agrave; C (1 &lt;= R, C &lt;= 7), trong đ&oacute; R biểu thị số h&agrave;ng v&agrave; C biểu thị số cột tương ứng của ma trận.</li>\n</ul>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mọi trường hợp thử nghiệm, h&atilde;y in ra một số nguy&ecirc;n đại diện cho số c&aacute;ch Xunayed c&oacute; thể đến Nurulla.</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>2\n1 1\n2 2</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>1\n2</code></pre>\n<pre>&nbsp;</pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/c861dcb5-6ebe-4a19-bfc4-ba94bd0c29a1",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "NUMPATH_input.zip"
    }
  ]
},{
  "_id": {
    "$oid": "634dbc4fe9b9821851ef9538"
  },
  "memoryLimit": 1,
  "source": 1,
  "timeLimit": 1,
  "scores": 30,
  "slug": "onezero-ones-and-zeros",
  "tags": [],
  "level": "INTERMEDIATE",
  "title": "Các số có 1 và 0",
  "content": "<p class=\"text-center\">Một số số nguy&ecirc;n dương nhất định c&oacute; dạng biểu diễn thập ph&acirc;n chỉ bao gồm số 1 v&agrave; 0, v&agrave; c&oacute; &iacute;t nhất một chữ số 1, v&iacute; dụ: 101. Nếu một số nguy&ecirc;n dương kh&ocirc;ng c&oacute; t&iacute;nh chất như vậy, người ta c&oacute; thể thử nh&acirc;n n&oacute; với một số nguy&ecirc;n dương n&agrave;o đ&oacute; để t&igrave;m xem t&iacute;ch c&oacute; t&iacute;nh chất n&agrave;y hay kh&ocirc;ng.</p>\n<div id=\"problem-body\">\n<h3>Định dạng đầu v&agrave;o</h3>\n<p>Số K c&aacute;c trường hợp thử nghiệm (K xấp xỉ 1000); trong mỗi d&ograve;ng trong số K d&ograve;ng tiếp theo c&oacute; một số nguy&ecirc;n n (1 &lt;= n &lt;= 20000)</p>\n<h3>Định dạng đầu ra</h3>\n<p>Đối với mỗi trường hợp thử nghiệm, chương tr&igrave;nh của bạn sẽ t&iacute;nh bội số nhỏ nhất của số n chỉ gồm c&aacute;c chữ số 1 v&agrave; 0 (bắt đầu bằng 1).</p>\n<h3>V&iacute; dụ</h3>\n<p><strong>Đầu v&agrave;o</strong></p>\n<pre class=\"language-markup\"><code>3\n17\n11011\n17</code></pre>\n<p><strong>Đầu ra</strong></p>\n<pre class=\"language-markup\"><code>11101\n11011\n11101</code></pre>\n</div>",
  "status": "PUBLISH",
  "fileTestCase": [
    {
      "downloadUrl": "https://dev.tek4vn.2soft.top/public_files/470e9782-5d04-498f-a5e4-4039611eeffb",
      "thumbnailUrl": "https://dev.tek4vn.2soft.top/public_files/archive-png",
      "name": "ONEZERO_input.zip"
    }
  ]
}]